cset: moving following pidspec: 11446
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.643494434 seconds)
loading group "shootout"... done (took 1.116269458 seconds)
loading group "string"... done (took 0.416259316 seconds)
loading group "linalg"... done (took 7.736184866 seconds)
loading group "parallel"... done (took 0.159321312 seconds)
loading group "find"... done (took 1.284691339 seconds)
loading group "tuple"... done (took 1.893419046 seconds)
loading group "union"... done (took 12.404561599 seconds)
loading group "dates"... done (took 1.308930245 seconds)
loading group "micro"... done (took 0.202318093 seconds)
loading group "simd"... done (took 4.322533088 seconds)
loading group "io"... done (took 1.006797122 seconds)
loading group "random"... done (took 8.628851383 seconds)
loading group "problem"... done (took 1.459864423 seconds)
loading group "array"... done (took 19.310454462 seconds)
loading group "misc"... done (took 1.470377323 seconds)
loading group "scalar"... done (took 39.194423464 seconds)
loading group "sort"... done (took 3.085491424 seconds)
loading group "sparse"... done (took 11.660978471 seconds)
loading group "collection"... done (took 17.007754148 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.494063506 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118923541 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.122227886 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115671757 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.196165857 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116322587 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121374967 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08183344 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.816367124 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.132574591 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.109205073 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.417989884 seconds)
done (took 5.182880528 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.160025739 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084156367 seconds)
    (2/2) benchmarking "String"...
    done (took 0.076823264 seconds)
  done (took 1.278762939 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061669093 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128598643 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063569964 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.062951084 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063020468 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062853213 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062409776 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062583483 seconds)
  done (took 1.624239669 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067849147 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064203771 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.061666296 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064162747 seconds)
  done (took 1.380189999 seconds)
done (took 5.642338854 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.233336598 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.097515534 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.280020817 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.378827868 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.465669118 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091798921 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.071425074 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066779694 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.127215331 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.336466544 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.097021383 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.174993656 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.086793235 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.172063756 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.984150537 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.11623538 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082703556 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.119557598 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090813105 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129203817 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.375951207 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075548903 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.070849618 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.066792957 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.064659132 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.645584111 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658158875 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127707658 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080758904 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.094824564 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113672328 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.637106737 seconds)
  done (took 10.365895013 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.0869572 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.087115046 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065622182 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.120821497 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.089867883 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066326056 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071380915 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06442734 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.084621947 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.11997902 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088969021 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09396565 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063943994 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065692297 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.070943381 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.1925587 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07515076 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077031561 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.064365537 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077068747 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.102785304 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.075000814 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.074858326 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.074910336 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12593377 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167172427 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.093884624 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096015136 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063288134 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.075063902 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111882553 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.122707254 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064223441 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062054637 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.11579767 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096834652 seconds)
  done (took 4.41898742 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.94445534 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089247135 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.09648882 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.59572181 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.063380766 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.145095997 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.228313415 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069454754 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.373204633 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.144148709 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.135038144 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.141326753 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.111891544 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068915521 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.164471174 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.114202863 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.459241162 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065477208 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.06403763 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.0628825 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065102867 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064515304 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.060716496 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066462675 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.091474493 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.084085238 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.150171678 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.003781681 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.065447522 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.27622549 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064848915 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.081580733 seconds)
    (32/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082169898 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.066265642 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.350343756 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.068339701 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078856093 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.404842129 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.120095002 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063325257 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16272142 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.113619081 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.062319419 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.116025698 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.075159463 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.066290236 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.065981729 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.065295343 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068008111 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078756983 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098619965 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.06392652 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.061855236 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164326014 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062352198 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063190875 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064129667 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.146332203 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.0607039 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.13654303 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061224095 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065933515 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.09759969 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065707898 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.08430706 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.092248616 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061355309 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061070084 seconds)
    (68/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.335282583 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.061947786 seconds)
    (70/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063707512 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.237148463 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073875965 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063641646 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067886328 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063357977 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.064473917 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064402928 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.069639546 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067096055 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066093549 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105113294 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064256665 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066861833 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06418417 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068730889 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.094563221 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062806917 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.46933874 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.094517346 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062447875 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.072850981 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.102088595 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06269619 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.068851621 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064239719 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064137304 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063224027 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064326892 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066313229 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.092344409 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067327109 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.110359429 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.162399744 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066030094 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063861792 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068833905 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066723786 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066511568 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064503109 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066462153 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065625857 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061970728 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.10479317 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064565097 seconds)
  done (took 21.469698467 seconds)
done (took 38.320049322 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242986138 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078862487 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075377043 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075701473 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075381365 seconds)
  done (took 1.7696901 seconds)
done (took 2.983194033 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.104281096 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.060559555 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.095890722 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.094966794 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.061100566 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060792849 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.096663632 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060712168 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.094092546 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.095531138 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.096985724 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.096837771 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.061187111 seconds)
  done (took 2.298629552 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065634166 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.0775304 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079391453 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059131234 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068236314 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077964493 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058812095 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077771493 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083555039 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077926219 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077960718 seconds)
  done (took 2.012316427 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064970258 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077640158 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.0796747 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058897352 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069554642 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.07811533 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.05866224 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077278473 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.080223346 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078028345 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078101748 seconds)
  done (took 2.000171287 seconds)
done (took 7.51418013 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.061388107 seconds)
  done (took 1.24460928 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.4891384 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.062145441 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.064720643 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.082786955 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.180792168 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.088845462 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.19492194 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.067817932 seconds)
  done (took 7.582062747 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09586089 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.064253639 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.064283953 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.066063351 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066098271 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.064231464 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.065492874 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.064478561 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064253836 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066152373 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.065480149 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.064625398 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06566013 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06505323 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.066059148 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065137795 seconds)
  done (took 2.358843814 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093700721 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092967512 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.068622536 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.069386891 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.067708406 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.067369422 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070200679 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.069247527 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.06656244 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.067639227 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.069379412 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.068320671 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068047374 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.059405679 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069564881 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.069838 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.06673919 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.069516078 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.069673425 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07128107 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.069570282 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.059082805 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.067590777 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.068437574 seconds)
  done (took 2.987553999 seconds)
done (took 15.374228377 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168842193 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071684238 seconds)
  done (took 1.430369521 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.063022396 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.06518946 seconds)
  done (took 1.337912407 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.068867923 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057850469 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.074710252 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.067039489 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.05859608 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058139498 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.073351503 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058149543 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.057961098 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058279036 seconds)
  done (took 1.842349371 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.058797822 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.065973416 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.063575207 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.065163106 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.063637162 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.059074593 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.061649043 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.059642674 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.065953108 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058730812 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.062388146 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.077577991 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.061633271 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.078756698 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.062345349 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.062596899 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.064222954 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.061691061 seconds)
  done (took 2.367026515 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057482893 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.058762389 seconds)
  done (took 1.334165139 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.060476441 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059529538 seconds)
    (3/7) benchmarking "month"...
    done (took 0.061714852 seconds)
    (4/7) benchmarking "year"...
    done (took 0.060848235 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.058847689 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.05823665 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.058922586 seconds)
  done (took 1.628964221 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390403212 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117111382 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.323672491 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.065142195 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.073076406 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.243309765 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060535746 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.064954965 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065221026 seconds)
  done (took 2.656507813 seconds)
done (took 13.816948746 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076237317 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.171529592 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.085063994 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.397918842 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.087946146 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.063681843 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109413191 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.161706144 seconds)
done (took 2.387062836 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.22332691 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.259461151 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.874087722 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.066793393 seconds)
  done (took 3.421001905 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.307164101 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.07549677 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07496549 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064961036 seconds)
  done (took 1.75408101 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.061214872 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067988683 seconds)
  done (took 1.352193591 seconds)
done (took 7.98368545 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060227611 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08808198 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060026956 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.060690523 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06057093 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.061005179 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060915882 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060229302 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060275486 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060173456 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.059932178 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.060435302 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059971317 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.060444534 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060715049 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060448753 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060119284 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06023354 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060317813 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060247094 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060282258 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060173298 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060459582 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060232762 seconds)
  done (took 2.730601727 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.073792042 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062436064 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063383397 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063638157 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064204956 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.06430256 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.063684597 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06249256 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.063410069 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.061842573 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064117042 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.063977862 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.061870955 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064073483 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062173068 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064040576 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.063844039 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062713317 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061682752 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.063498137 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.063131698 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061910257 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.063601544 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062852335 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.063843064 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063553156 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062077566 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.062149755 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06342326 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.063790256 seconds)
  done (took 3.142545669 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060399289 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056972234 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057480845 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.065711607 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057011783 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057793807 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057937075 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056724753 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057356572 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058115693 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.057607608 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.056928122 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.057604809 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.056681309 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057265674 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.05729997 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.060854041 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074506908 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057311255 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.056848998 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061230832 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.056803266 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.056909087 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.056947219 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057303572 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.056901843 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057363797 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057416107 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.056919802 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.057858574 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.056739764 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.060843995 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061732262 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057505667 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066616742 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071157523 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.05710626 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061260946 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.057936152 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.056828331 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.056514316 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.056839334 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.056607535 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.056779492 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066166656 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.056909545 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.05794295 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057315271 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057253209 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056807395 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.056902507 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.058326518 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062188182 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058036962 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057005071 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.057796788 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.056802916 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.05752865 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.056756737 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.056755855 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.056807207 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060058996 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.058402167 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.057134088 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074580942 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.05817233 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066053878 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059565518 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.057853378 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060026047 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.057571927 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073080342 seconds)
  done (took 5.493650979 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076497209 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081617338 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062004435 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062120656 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058246227 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.057387308 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.064997998 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057368602 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061605645 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076364472 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057545804 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061229198 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061856272 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061184716 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057564035 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061825368 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.064792615 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057833518 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057581216 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.060997243 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057737506 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064123613 seconds)
  done (took 2.631524776 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.130421425 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063349543 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.099649171 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071300598 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065216688 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07116117 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062820515 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063062133 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062467861 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063102585 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063386016 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062237639 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064744695 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062989095 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063032233 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063129579 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06247118 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063119545 seconds)
  done (took 2.49768774 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.070862099 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062371963 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.081541348 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062395141 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062804019 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063345424 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065953017 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066676187 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062482624 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.062967286 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.066369777 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061865936 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062229579 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063064303 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061837357 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062550372 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.061857428 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062202366 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06569004 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06582687 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065682598 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066005357 seconds)
  done (took 2.668055342 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07113032 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061362402 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075712106 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06321769 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057754519 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057514991 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.062345428 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.061772396 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.062307547 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06101345 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061793005 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057575355 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.063589501 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.061431646 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.063238543 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061597766 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061187542 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.061838427 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061330298 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057014928 seconds)
  done (took 2.488896557 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080285536 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059461322 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059380282 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078705863 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.05977444 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.059245734 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077440903 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.059652045 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.059695997 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080470562 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059795642 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.059371877 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078389841 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077693018 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.059557602 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078497542 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078077615 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078172536 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.059704245 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059653562 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080051186 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.059482346 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078290758 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.05985588 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059928958 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.059667237 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059712547 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078277974 seconds)
  done (took 3.143804466 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059732864 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.060458402 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06025525 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060473972 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060749526 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06045072 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060206294 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060427105 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059978365 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060431576 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.059843421 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060167338 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060587199 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060331764 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060361354 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060444996 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060160714 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06023626 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060383548 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060629329 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060379754 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060476665 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060163748 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060532284 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060897842 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060061832 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060071678 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060158417 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059874779 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060048461 seconds)
  done (took 3.059919317 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.068582397 seconds)
    (2/2) benchmarking "in"...
    done (took 0.068109349 seconds)
  done (took 1.386305487 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.057854002 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073479885 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057741479 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068467945 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065219358 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.060505711 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066069892 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065337003 seconds)
  done (took 1.760697433 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.062241588 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086163621 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059642854 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.059196147 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.061848791 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115582714 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.070913276 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072362651 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071404657 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060907634 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.05918588 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.070014055 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.058834992 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071004028 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060154441 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067307349 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065549937 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070276089 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070743522 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057137648 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070250936 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059451692 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.057539196 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.059969338 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.058564583 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064971678 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073577402 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069976613 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066675157 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056818632 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076580444 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058386367 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.058391955 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066609756 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.061753585 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.057308788 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092070099 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.05790858 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.06281427 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057432508 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.068794072 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077083509 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070990486 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.074814593 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059376519 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.05967688 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057157086 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.059629317 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061566523 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066501248 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.057644218 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064487414 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057013121 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.058962275 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06730509 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.057808089 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.062742841 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06677486 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070580392 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06774009 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065551911 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07211132 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066142526 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.065085058 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.058420703 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075640243 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.059086296 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069878834 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071201251 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.058624596 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070366966 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057345625 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056347947 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057346306 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089062556 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.059240743 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.058778466 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.057664381 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.05766997 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.059115141 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06693466 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062560114 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064607276 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060863262 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072332565 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.066427533 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057340443 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.063935995 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.074412059 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060927132 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.057804358 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.072782371 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060701586 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.057334635 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074302832 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066377736 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.058973621 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.058235869 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060726423 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070498679 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.058303343 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056226713 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065361236 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.058915019 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.060046631 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.061339617 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065349869 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.05725478 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067194625 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.062010767 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.058486635 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.055946504 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061034311 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.057639949 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.055826807 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065318947 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.056563102 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070099838 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062903061 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.069844614 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070491629 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.066934322 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071453256 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.056590853 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.05549413 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.073200799 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.065598253 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.057830969 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073550691 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.056135698 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.066115262 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.190027333 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060041911 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.068035891 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058150867 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060658529 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058883598 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.063345708 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059695983 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060204537 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062354421 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066290482 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069791955 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059191105 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066723096 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058273825 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072838162 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067318106 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062324074 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061452436 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.058993768 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069408357 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064648038 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066408968 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.057878805 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058359443 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.057817031 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068028283 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066922325 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.059618039 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.065317069 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06240653 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058875475 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058158007 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059052837 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061267787 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061285587 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058152433 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065412743 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066666844 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.07424412 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065232928 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066086639 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.056781096 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057401589 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.058873308 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057599851 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062202484 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066205782 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07217571 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068454152 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077448244 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058040357 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066977606 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.059313841 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07340519 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069830188 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.058594739 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062168972 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.056824916 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059813227 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06682023 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068518691 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.070833777 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071458979 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062189316 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062166011 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057394614 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071423277 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058638024 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065706742 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066386967 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06266623 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.057995496 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.059314795 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06643342 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062329845 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.058278501 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.072917079 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.064029961 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058032785 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071227219 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058314654 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068090724 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.057699882 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06150004 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062950536 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060004139 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066969051 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071886194 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056914624 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058498102 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072646474 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.059856314 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059523049 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065823323 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.071906718 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062446467 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065164238 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067425312 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067437127 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061911752 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066695535 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.058302714 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.06598014 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.060716303 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068142587 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057467086 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074354357 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056922633 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.07144969 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.05816154 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068173544 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058112585 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066394444 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.058390807 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073613324 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.058902274 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058039815 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.067827503 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056066127 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065420682 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.056287767 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061243651 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.062974442 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.065485261 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.058955394 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065338396 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.058451686 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.064763121 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06109342 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06427234 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.065274137 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061017955 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.056262979 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06505447 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067211134 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.203312166 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060554123 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061001814 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059553966 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.0682855 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060957581 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059686331 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066222064 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06276268 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063692929 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.05990186 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.059958141 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.059871387 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066364495 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067455863 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074901513 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066368281 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065769004 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066759812 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.05779503 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073153058 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.057635077 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064970747 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057075652 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.063876132 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06711403 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058037446 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075921146 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.05983875 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06553478 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069845529 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066201973 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061489211 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075728603 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.061361272 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06617384 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066250486 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06235335 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064390035 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060030944 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066169611 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067358031 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068253602 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059211834 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06504058 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066645502 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059439543 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.066203427 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.059901718 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066028799 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.059606607 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057152401 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06215521 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.068622568 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062315565 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062995532 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.058573143 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056913669 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058263944 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.06442253 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062268104 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066062038 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072406424 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057190231 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.058969115 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057640545 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064564565 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075116839 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067466994 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06582786 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062396926 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057438078 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059126849 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060322097 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058077875 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061514521 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057655767 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057764389 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068111744 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059628458 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062360363 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058441914 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.058920448 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067017674 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062629943 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058573096 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06400235 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058313636 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063166994 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057270236 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059078777 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.061994443 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057430968 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.0613755 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.067541256 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.073524856 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064604606 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06652908 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.058809896 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065327039 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072686981 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065390175 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059363643 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067390793 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057525535 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075241212 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066565611 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066030168 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067126465 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.058396786 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073525 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062280938 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067316119 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07201842 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058589621 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.064040537 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057454329 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072760018 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.062939133 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.057253754 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.064858237 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065206457 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.062736835 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.068585387 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.057851325 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.064586717 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061708138 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.060704522 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.058484812 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.058156851 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065004764 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.071965249 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.05781892 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.060548076 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.064272525 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06449088 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.204615595 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071869583 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068048958 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060972591 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061064377 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062730173 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.059628475 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070250335 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058944836 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063038623 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062517643 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058702618 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064823315 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074783238 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068128779 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067660874 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058350569 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.057441764 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.074825595 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061666965 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.061369096 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065834995 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067340875 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069881967 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067513287 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074134117 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059120242 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063241134 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069728478 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.059044882 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058428691 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062067264 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060172019 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06711822 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067777327 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065429682 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059932463 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064269312 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070960038 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060004697 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063526116 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.0627133 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059235479 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067687321 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065861875 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066397889 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.059568061 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057875329 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061522841 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066167201 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06553792 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066238112 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058563113 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.064374222 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.071045389 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065263198 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061106533 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057699631 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061393092 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066922245 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.062282922 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057771209 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062273968 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061614866 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064472813 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066704194 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062483025 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057656134 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073718436 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06575452 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.06670069 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.06004217 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.059879626 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058194181 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058262943 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.0691071 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057872573 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059587994 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062885665 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.059656785 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.075116646 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066141363 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073562824 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059152906 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063079151 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057772503 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068198912 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062520054 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058674396 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068169226 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.057602735 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073557965 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069823971 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066096214 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058134302 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063325312 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.066419716 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07217428 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067464536 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066373301 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.061719188 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067391078 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.059744451 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.068467627 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058003252 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057369434 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067608861 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06607664 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.069460482 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057630778 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.067307431 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.059832074 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065545413 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.065314241 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.059113931 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059025995 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.058811577 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066382075 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.061921559 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066166616 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062358698 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073131558 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.058285782 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.067807561 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065592822 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.067022468 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069630121 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06829084 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.064912071 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.057790597 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064462393 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.064633999 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.058289333 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.061956078 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.060343273 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077475478 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.200224183 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061497683 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073172246 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.065882119 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059430391 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067347447 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063601162 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.067782612 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.059520078 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.068556121 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.062116258 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.059481903 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062987576 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062832397 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057296359 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058040675 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.058461369 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067686358 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062730621 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058441913 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075635225 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.059702511 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066402657 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068930468 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064839922 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.059636415 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057270447 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059602952 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070045104 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072616357 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061921487 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066768651 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060408993 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06745737 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057284946 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066448523 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066157424 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066427269 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.05799523 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.05856464 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090258194 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072637574 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062904717 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06682426 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067052074 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059927096 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079400217 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066309286 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058989642 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.06803027 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060127449 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057551406 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057417183 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059533512 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068687784 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057981583 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.059946936 seconds)
  done (took 39.918420808 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09242492 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.05904839 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057646449 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058193835 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068712949 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.05881363 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058186333 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.058713353 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.058775998 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060497712 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058025464 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057944313 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068543143 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.070771975 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068171331 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061708994 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057825615 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058735725 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058164514 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058487718 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067191314 seconds)
  done (took 2.68368987 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.063503753 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072244092 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06915261 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073233465 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065585786 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061838802 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068756105 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061604748 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069113242 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067012254 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068915874 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061904315 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066764237 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066914249 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066903473 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061983976 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068849315 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065647744 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06162256 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06831752 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06195738 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068502255 seconds)
  done (took 2.805761305 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.058372992 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058476254 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06640351 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057460571 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057845957 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060572037 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057285782 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061843174 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061290313 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061863782 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065799785 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058276508 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057394164 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062780393 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057150946 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.058336462 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.097584276 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.058314328 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.05873496 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057677409 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.06299559 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066388996 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057457987 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.057931644 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061714229 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.060581037 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.05772767 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.060407406 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.057985543 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061558486 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058230226 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057459491 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065865235 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065431446 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061826916 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061814985 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.059040057 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.058635053 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057332916 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057796415 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065498149 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059337125 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058067224 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.05903071 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065965631 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.05769026 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.05752527 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066192417 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057346001 seconds)
  done (took 4.338626651 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.06585376 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106453721 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063025238 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087532246 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.069908206 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.063580668 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.062831163 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088918362 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059004177 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059360603 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.070864507 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.071455552 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060516334 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.061954912 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.063342637 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060320696 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061032887 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059336346 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.062879361 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060337703 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.062959346 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064092777 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.069511167 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.070208067 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06182928 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059315769 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.059640751 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.061254151 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.070047571 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.063455487 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.061892542 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062167548 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.070652881 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.063484229 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.059869474 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.059926797 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.070830824 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06070416 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.060104286 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.058586461 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.060048547 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.061278183 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.064341713 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.071044788 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060471685 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.065257751 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060802662 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058349036 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.070363529 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.060200259 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.06431658 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.071737032 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061551108 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.061195167 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061645515 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.070904483 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.061055494 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.059641273 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.060646618 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.069958604 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.058891703 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061275095 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.071459846 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06004488 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.063986107 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.071572949 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.064905169 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061759945 seconds)
  done (took 5.883032931 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066740374 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090350879 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068050844 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069203527 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067868263 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.067714148 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068482145 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.067553102 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.067933502 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.06863373 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067637482 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10510682 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064560989 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072029014 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.067836277 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06781229 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.068037415 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067763802 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068068508 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067555698 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.067954351 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068035327 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06757194 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069070231 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07019093 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06456067 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067593476 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.067374951 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068683762 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.067361881 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.070161399 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.06778839 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.067850404 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068617784 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.070580287 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.067983992 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.05859499 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067963817 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.067937929 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067650048 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064118546 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068407676 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067693651 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064564594 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067759122 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.067710898 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068611012 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.070415541 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074753178 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068367734 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.067749865 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068707194 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06791424 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068408669 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068888906 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.074760524 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06886612 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068748163 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068140848 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0684508 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068727041 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.074728712 seconds)
  done (took 5.676223496 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070218069 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064799833 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076365887 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060947276 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.05758746 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067016233 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058039321 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.05773422 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064566785 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.064400218 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06646837 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067053392 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069062686 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06599905 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066596247 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068791764 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066706088 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066417521 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064550939 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066663948 seconds)
  done (took 2.690617667 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071662919 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075899148 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063523152 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066690841 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06284384 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066772047 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063001966 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062985788 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063427132 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062989457 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067853047 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067862811 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063627475 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066991117 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067693306 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066614462 seconds)
  done (took 2.429575031 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.063376837 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.064848123 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.064778449 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.059223654 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062528026 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058445982 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.058686839 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.057670564 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.05781738 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.071342768 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059089298 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069876026 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059277213 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.057721288 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058437067 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.064643677 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.05819885 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059008075 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.05875243 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063670257 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.065060695 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.059723662 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062280637 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.058541326 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063797887 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.065340119 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.060082309 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062500889 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.058388658 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.059237338 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064059761 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.064882837 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.058407058 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059205535 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.05797327 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.058708214 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.058698573 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.059091927 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.063943 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.05854256 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.057550611 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.062968444 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.058816811 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.059448775 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.057873054 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.059500602 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058001185 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06415148 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059008539 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.063781751 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.058672265 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.060393905 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.059379697 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.065642042 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.060969353 seconds)
  done (took 4.723423193 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072239216 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062719803 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057600193 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058216032 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.062831226 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063443194 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063161377 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.062899105 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063116423 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057282539 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062934365 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06229089 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062874347 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063128718 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063248581 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062838258 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057134017 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.062725551 seconds)
  done (took 2.504824828 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068070895 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062921698 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.066883244 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062594401 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062107975 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061850371 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057935591 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.057854156 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.05785931 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062146287 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062563633 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.061737615 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.05790779 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.061651114 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062554208 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06229688 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062086353 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058003672 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062451694 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058120195 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061931519 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057788511 seconds)
  done (took 2.724255734 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.083711377 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080207351 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.120444245 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076416405 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084383184 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068593731 seconds)
  done (took 1.887872938 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088048139 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098451377 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062795844 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062753712 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070707845 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065551058 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06614797 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065703268 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070674223 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069127308 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065863473 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070887903 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070894585 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067353445 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070569622 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073497395 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065775564 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065433061 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062174499 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073261382 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065675521 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071140646 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065399629 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065179498 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065717177 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067135523 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073605596 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069567528 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067827964 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071192558 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0734781 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065485118 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070830989 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06972814 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06245407 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070801421 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065616591 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073150237 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071122983 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067873271 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062526406 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07079257 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071178838 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068120915 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073427336 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065967823 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067867119 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065810226 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06642288 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075825662 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071594969 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067964509 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073305555 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074006759 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07381605 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075449744 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070142532 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067405894 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071076317 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069816315 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067563619 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071590392 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067952532 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070311314 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073807104 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067888301 seconds)
  done (took 5.981833815 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094436124 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063226799 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066714887 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070202274 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067261289 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066121697 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065716841 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065811586 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066205451 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063114844 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099646692 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066486598 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067357314 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068022879 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066044676 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065541393 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066581269 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067210733 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063213526 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075962165 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066073196 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067836877 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067362962 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067705781 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069915061 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073401104 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065912726 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065735755 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065725966 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065795565 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06742715 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066289075 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067506911 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063050508 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067476805 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065701564 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065728514 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067430445 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065646736 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071142834 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06812344 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073814399 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066259768 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065913718 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069645607 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065784691 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066075716 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063377441 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065673844 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.062997233 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070262655 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070011851 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07019955 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067694163 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066260396 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06618547 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066461487 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066046565 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065994578 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073949419 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067841075 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065726739 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075545086 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065993439 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065809939 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067570267 seconds)
  done (took 5.901751547 seconds)
done (took 122.386949094 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206395224 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181754146 seconds)
  done (took 1.753204828 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069621973 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.092709716 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.072917603 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131830369 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067330712 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103154276 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099909162 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070578817 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068133226 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068540995 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068448793 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070636694 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134632257 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06747382 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068423226 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070815865 seconds)
  done (took 2.708418378 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101441242 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.176711252 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108382679 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066787188 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102450264 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07327741 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067130996 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077247338 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070263018 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06814712 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073183338 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072009159 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068068892 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071646657 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070295068 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072774668 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06836852 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073049441 seconds)
  done (took 2.871318815 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.089027895 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.083448058 seconds)
  done (took 1.563074099 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.148252375 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.100259778 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.1378442 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.306890953 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.124040083 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.120624747 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126107892 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.123559768 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.108794707 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.1168799 seconds)
  done (took 2.796791732 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100008168 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170670643 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299546148 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115903192 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073209608 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095657865 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118035178 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079275207 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076719505 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076229706 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078800451 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.073707767 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097088951 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073099695 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072224152 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073149799 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10055465 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07113949 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.071764512 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07324203 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101582271 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067485853 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073021293 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071812178 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074607302 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074223349 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068659139 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067119839 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07244525 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071729548 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.074967831 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092389601 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074724267 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.095847518 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071091858 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.096396684 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072308206 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071019208 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.071627225 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070693779 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.073374735 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.073700578 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075935135 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073428941 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068569888 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071393061 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068629343 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066798418 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.075517229 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068313606 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.075333563 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.074667877 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.095252028 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06811978 seconds)
  done (took 5.955901342 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102165527 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101700416 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067659415 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108832626 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101369495 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067076896 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100172744 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095787784 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105037876 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06740589 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066362876 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06642187 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074014165 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.0776083 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111223673 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101013778 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068339633 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066691438 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103203005 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103402489 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066240685 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096807359 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095579716 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103275825 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.065557548 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06697655 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065409836 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066431724 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071139722 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.0724323 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065827981 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074124142 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.079722434 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.0706144 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065329674 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065303302 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0657548 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.072951824 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073940561 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073725298 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.072364249 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065035351 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065407116 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066063908 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066633081 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064986424 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071816466 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07354344 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.072147225 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066177717 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065915628 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.065395334 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065785419 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072370295 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.071748056 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.073783031 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073622582 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065960214 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065761128 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06710579 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074883452 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074037596 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073422393 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066226089 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074227297 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06566724 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07551785 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07750502 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065530291 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065734332 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065518949 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065559182 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066013657 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071269293 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.072174547 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066917722 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065962774 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065401388 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074361189 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071693847 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065676322 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.070912676 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064787711 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065395182 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066106168 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0662986 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.071300508 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.073474561 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066694573 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065792859 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066133306 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066031115 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065004419 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.071710017 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072597855 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.072437228 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.071702514 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065909974 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.071818118 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.071376481 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065537499 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.070851142 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065188257 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065170326 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065127659 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.070371517 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.070032771 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.072052772 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064822294 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064489384 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.070724418 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.072793595 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065124095 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.070398411 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073150567 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.206246137 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067209108 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080340975 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067855294 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076433857 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067419801 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075277942 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067199491 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073088284 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066667419 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065874603 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066169808 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.072830812 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066738188 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066351121 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067018486 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066031273 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.072872502 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076313912 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067104479 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073305161 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.073404972 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066950807 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072173644 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067126212 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073369334 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066545661 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066242541 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065691342 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075164929 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066710864 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066047523 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066413061 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075349049 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066521703 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073883787 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072234682 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065337723 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078501664 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074608731 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07194673 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07535191 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067585194 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066289275 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065882931 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06645635 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071628198 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072788873 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06694152 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065997559 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.071820675 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075879539 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065687518 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07208624 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072204401 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.072640838 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066363454 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06645495 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075939412 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074925894 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07226086 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.072171894 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072920865 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065852851 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071750746 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072396645 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066014773 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079661755 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066284758 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.076429897 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073078539 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.071576645 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072767172 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.074046697 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075411792 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.074384169 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.076446823 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066287974 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065703377 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.071875872 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065601073 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065852984 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.071425912 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066294401 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06616371 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.077464551 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064223642 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.074578507 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065670814 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.073439061 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065785572 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066466992 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077738746 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066668336 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066328991 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072169539 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0658449 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.071306509 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075781155 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.072233445 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065894694 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066106603 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073049656 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.072802124 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066042521 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065054089 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065312105 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.070319715 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.069726437 seconds)
  done (took 17.615585583 seconds)
done (took 36.671543357 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.19608982 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157568732 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.193048971 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113302028 seconds)
  done (took 2.150543251 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.08657995 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09641449 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.073866318 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062940502 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.078031629 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062635216 seconds)
  done (took 1.900126793 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.248651642 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.180094041 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.16772271 seconds)
  done (took 2.029368422 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208142536 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186132805 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464929427 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.285779579 seconds)
  done (took 2.676676567 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.124460929 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.075083569 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06071466 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.070660797 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.10058425 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.128768843 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.082834116 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.104045731 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.071845611 seconds)
  done (took 2.314674605 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.125848677 seconds)
done (took 12.65786797 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.199825027 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.142963342 seconds)
    (3/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.224882402 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.095103562 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065765125 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073420681 seconds)
    (7/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.091409461 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.116269613 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088358089 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073395271 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073586298 seconds)
    (12/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09685738 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.183896982 seconds)
    (14/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.231165194 seconds)
    (15/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.22821011 seconds)
    (16/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.213884925 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071674667 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.15216566 seconds)
    (19/309) benchmarking ("sort", BigInt, false)...
    done (took 0.477171538 seconds)
    (20/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.076151706 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071142889 seconds)
    (22/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.17097128 seconds)
    (23/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.172057241 seconds)
    (24/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.091808613 seconds)
    (25/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071815471 seconds)
    (26/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06789335 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073702894 seconds)
    (28/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.189392552 seconds)
    (29/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.2288348 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.140493974 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.084555774 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.062549332 seconds)
    (33/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078028822 seconds)
    (34/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071524109 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070687245 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07973478 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061782983 seconds)
    (38/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.169634535 seconds)
    (39/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.175185366 seconds)
    (40/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072971309 seconds)
    (41/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.177251143 seconds)
    (42/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.074194189 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 0.144239388 seconds)
    (44/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068285613 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089206671 seconds)
    (46/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105633133 seconds)
    (47/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.073754423 seconds)
    (48/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.215955604 seconds)
    (49/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.191242262 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 0.064573298 seconds)
    (51/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.155341405 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122373697 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.079607682 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091198145 seconds)
    (55/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.136460342 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112471918 seconds)
    (57/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070382032 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.062481697 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071813312 seconds)
    (60/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089536217 seconds)
    (61/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069841727 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084407939 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061295849 seconds)
    (64/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.064414255 seconds)
    (65/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.177218346 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070294683 seconds)
    (67/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.189823495 seconds)
    (68/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.062149522 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.073516969 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198128098 seconds)
    (71/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070368187 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.114457082 seconds)
    (73/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122224818 seconds)
    (74/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.179367649 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146772083 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069911241 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.06359637 seconds)
    (78/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065613136 seconds)
    (79/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.149717415 seconds)
    (80/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.062135511 seconds)
    (81/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.06660824 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.086236389 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.204514053 seconds)
    (84/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.062406384 seconds)
    (85/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.137381069 seconds)
    (86/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.357301971 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.148878732 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087781826 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085326099 seconds)
    (90/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.179438646 seconds)
    (91/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.204738355 seconds)
    (92/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.188321727 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088786767 seconds)
    (94/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073963043 seconds)
    (95/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.192457162 seconds)
    (96/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066033392 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.144606193 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071574865 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125133068 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070698954 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087276972 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.063719983 seconds)
    (103/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.063175414 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160303928 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113966785 seconds)
    (106/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072194302 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130161393 seconds)
    (108/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.064040969 seconds)
    (109/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071623529 seconds)
    (110/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.062176196 seconds)
    (111/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.070727037 seconds)
    (112/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.144179322 seconds)
    (113/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.074236057 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.063181611 seconds)
    (115/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.063928386 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.062426772 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.080973046 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.083663801 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062267991 seconds)
    (120/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.073967212 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.20374755 seconds)
    (122/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072502828 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.08024075 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071073946 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.088053475 seconds)
    (126/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.06219755 seconds)
    (127/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.141285144 seconds)
    (128/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.084921972 seconds)
    (129/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072713358 seconds)
    (130/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.194619177 seconds)
    (131/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163759263 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.086933048 seconds)
    (133/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062743 seconds)
    (134/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.213769448 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07018507 seconds)
    (136/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.075753889 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.0728747 seconds)
    (138/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.14333182 seconds)
    (139/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.065830914 seconds)
    (140/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.070406392 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072845685 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.081154558 seconds)
    (143/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.215365343 seconds)
    (144/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.170993523 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072990378 seconds)
    (146/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063699525 seconds)
    (147/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.067401684 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118712685 seconds)
    (149/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.192230718 seconds)
    (150/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073255442 seconds)
    (151/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.063898238 seconds)
    (152/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.064049437 seconds)
    (153/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062740474 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070425433 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.074772543 seconds)
    (156/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.064158398 seconds)
    (157/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063986344 seconds)
    (158/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.079809654 seconds)
    (159/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.137360726 seconds)
    (160/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.065325843 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062448118 seconds)
    (162/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065105495 seconds)
    (163/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07020769 seconds)
    (164/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.063495858 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.084863226 seconds)
    (166/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.062450307 seconds)
    (167/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061386215 seconds)
    (168/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080060933 seconds)
    (169/309) benchmarking ("sort", Int8, false)...
    done (took 0.160708512 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.164714962 seconds)
    (171/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.062986789 seconds)
    (172/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063467271 seconds)
    (173/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.062476615 seconds)
    (174/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.071122878 seconds)
    (175/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06580014 seconds)
    (176/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.069462916 seconds)
    (177/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072236061 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143847122 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127867929 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.062075879 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.061561761 seconds)
    (182/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065168056 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.062220488 seconds)
    (184/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.153806749 seconds)
    (185/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.141964103 seconds)
    (186/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.070840298 seconds)
    (187/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063081055 seconds)
    (188/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.063257035 seconds)
    (189/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.13816342 seconds)
    (190/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088092915 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.061822329 seconds)
    (192/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.06964635 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.062341683 seconds)
    (194/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068316381 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.062216897 seconds)
    (196/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.063011135 seconds)
    (197/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.226095067 seconds)
    (198/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075930512 seconds)
    (199/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.06566704 seconds)
    (200/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.064273735 seconds)
    (201/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067884094 seconds)
    (202/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.063495787 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064005765 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.064351583 seconds)
    (205/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090290837 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063405164 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12376494 seconds)
    (208/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.06305378 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.063975188 seconds)
    (210/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.070691674 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.13306887 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.11736138 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.08711775 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157182723 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070399066 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.063828696 seconds)
    (217/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.14389409 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17568106 seconds)
    (219/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.062986645 seconds)
    (220/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.062348593 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.076411926 seconds)
    (222/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.062877568 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071359679 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085519163 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07037333 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06326883 seconds)
    (227/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.158816896 seconds)
    (228/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.063439306 seconds)
    (229/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.22225351 seconds)
    (230/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074894288 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07374216 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.063614873 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139619792 seconds)
    (234/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064255743 seconds)
    (235/309) benchmarking ("sort", Float32, false)...
    done (took 0.132646355 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071659635 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179952231 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071102711 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064548871 seconds)
    (240/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.063867145 seconds)
    (241/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07392863 seconds)
    (242/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.138636383 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.142938521 seconds)
    (244/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.062523733 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.062543546 seconds)
    (246/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.062109093 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.062443009 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.082896608 seconds)
    (249/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.063899861 seconds)
    (250/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.159160513 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.063651608 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.090057232 seconds)
    (253/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.064230833 seconds)
    (254/309) benchmarking ("sort", Float64, false)...
    done (took 0.130528092 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070302391 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06425108 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062870498 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06151059 seconds)
    (259/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.06430708 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139130088 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.063603664 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063327615 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.063645486 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16396358 seconds)
    (265/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.064588917 seconds)
    (266/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064327999 seconds)
    (267/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070063236 seconds)
    (268/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.142941413 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.084174949 seconds)
    (270/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071391603 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.062941689 seconds)
    (272/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061942173 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.061569082 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.062392117 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.064222205 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065215317 seconds)
    (277/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070236703 seconds)
    (278/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.062437903 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069931426 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.063459037 seconds)
    (281/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.061896569 seconds)
    (282/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067030111 seconds)
    (283/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.061886619 seconds)
    (284/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.061336828 seconds)
    (285/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.064211602 seconds)
    (286/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06200215 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118280896 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.065079899 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.082669831 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145365082 seconds)
    (291/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.065755373 seconds)
    (292/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065910247 seconds)
    (293/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06475452 seconds)
    (294/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.063598686 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.062870578 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074368286 seconds)
    (297/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.064584155 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.062078286 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.086058946 seconds)
    (300/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.06397698 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.070148234 seconds)
    (302/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.063809111 seconds)
    (303/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063568555 seconds)
    (304/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.064497618 seconds)
    (305/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.062106827 seconds)
    (306/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.063896148 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063072289 seconds)
    (308/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.063468091 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.062456498 seconds)
  done (took 32.106765641 seconds)
done (took 33.561621502 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083471354 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087700099 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071686205 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.08295459 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079352696 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095313599 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072055108 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076343736 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078653101 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077353665 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077018285 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071461163 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073672265 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073524067 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070979546 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085814168 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078806552 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071962737 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071939645 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062508115 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.0717759 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063722867 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062425116 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069885066 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074872797 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070168536 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072214053 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072301014 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063576061 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063731866 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067787295 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07200813 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065908572 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07415206 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070999085 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071662527 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07319886 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076132279 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.0627447 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063775251 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073927826 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063917882 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071233254 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069283379 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068766375 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070209451 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071377423 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075082442 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085767261 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068124473 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074756303 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074454376 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07446842 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068712908 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06846248 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071392801 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069682748 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084986381 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07198435 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068032902 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073428532 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072652051 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070061724 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071523388 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071620892 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074854212 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074479352 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070101284 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073854611 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070814814 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.063047381 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071427296 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068327187 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063583452 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074213529 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077192667 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061879103 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067583496 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071104107 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07143361 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062786757 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067344774 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062136402 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.068652331 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067369968 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070016672 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068712189 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070668482 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062132414 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071549575 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070903639 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071055645 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062334123 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074856325 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06334433 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069824268 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.063621876 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.063645896 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062281715 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068337588 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062591276 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067638049 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071104719 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061741258 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067635871 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076074753 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062872011 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070625397 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062185609 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062143889 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.073180922 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074077363 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06297835 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067753955 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062267932 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068488887 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062596 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063364783 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063093284 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063449865 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067550572 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063654793 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067959511 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068675659 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.074540629 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063106733 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067928778 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067449543 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06323188 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069331274 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063209858 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06304008 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062341064 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076175773 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06722777 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062981442 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067914493 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066783936 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070345081 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060891862 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.070641431 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068071284 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.06648747 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068812894 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061256708 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073393911 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066503487 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067219588 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.204317354 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063947773 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06297596 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063957112 seconds)
done (took 12.331044231 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063106288 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.101822805 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.071314748 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.079689144 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.075660641 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064738455 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.067018384 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.079514965 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066822613 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.082379892 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087505765 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083955273 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.089385244 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062857398 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06327579 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064242495 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062046396 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.070654206 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078022729 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085551318 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.091135027 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06367423 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.072492826 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.079539663 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074929405 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.079246738 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065368746 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064682749 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.066007959 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.080026616 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087565599 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06346026 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064945776 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.077452513 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.077073784 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.070696647 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065049973 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.067591608 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064364525 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063854267 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065247439 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.077113357 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.070656737 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.067992057 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064889392 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064510605 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064107968 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.066832749 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.076577716 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067137315 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.071132628 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.075020561 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065509575 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06379003 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062040279 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068360271 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063257261 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064110465 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.064008698 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063575676 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064158981 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.066458847 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064582633 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.064228344 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067060033 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.066209005 seconds)
  done (took 6.190435595 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079031338 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09062892 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.079922503 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.080025329 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06368174 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.064480067 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064226973 seconds)
  done (took 2.082164413 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063509849 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07582657 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079022933 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079158034 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.071960788 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08158818 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.064504647 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093731284 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063230649 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075846802 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.107474355 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079808616 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066975272 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07543309 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064901562 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.071181257 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.064627023 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07249697 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071386011 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079688992 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067729977 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.091283568 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077496088 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.064175149 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.08303754 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.068878416 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063289393 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06460332 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06508622 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065341006 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064706332 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.101753387 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.067936406 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07572379 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065358739 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063824864 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.069278722 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067109383 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.066462087 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072500733 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.068798553 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065051186 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062822521 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065400323 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066463575 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.067779869 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062935885 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065427672 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064553832 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075119899 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.063640426 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.067741037 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066955496 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068632353 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07056543 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068445445 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072681977 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065596997 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074935988 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071580542 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065136237 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.072049081 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072085481 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.069074194 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.071551876 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.102757537 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.067954201 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.068663375 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064693703 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.066244495 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065499201 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07160711 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.06382369 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.066071774 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067089208 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065772728 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068150301 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.080306214 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08038523 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076983709 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066381113 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065051085 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067892703 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.080062002 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068939505 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064775868 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067148825 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063527638 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068270019 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065005112 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069903873 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065229693 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071898467 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.066896807 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068059453 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072254692 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064427229 seconds)
  done (took 8.412436394 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.064687632 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06547893 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066299341 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06559553 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064760927 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065274965 seconds)
  done (took 1.982829709 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.083743108 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.064453678 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078879889 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065130535 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.098747858 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.070783319 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.071147919 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072435189 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.077184371 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07697498 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.071041068 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.072949322 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071303385 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066267125 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.070491123 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.065954175 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.070838116 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.067737019 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076230339 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06651988 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.077073148 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066501917 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066289463 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.075613199 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.066781174 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065150834 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065121628 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.076574972 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078806357 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.071964441 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.065670601 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067214909 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072164533 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.071990514 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.070508045 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072176852 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064223517 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.069581083 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066574602 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.066711733 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.072519487 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.06647511 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.066767736 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.069646631 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.072038829 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072148153 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.06989374 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068013009 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.070254255 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.069432323 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.06935648 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065138805 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067042058 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.069381781 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072045498 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072187468 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.069741719 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.070909361 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.065820418 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072655281 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.064376618 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067346574 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071550543 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067252671 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.068904457 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.069895216 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072308124 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.066265881 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066596469 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.064349847 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.069806932 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064497335 seconds)
  done (took 6.619383052 seconds)
done (took 26.833309492 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.892639388 seconds)
  done (took 2.430559938 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.552094898 seconds)
  done (took 2.127141623 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.707202046 seconds)
  done (took 8.280064876 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.28453715 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.298375675 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.700281967 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.124805967 seconds)
  done (took 3.016739276 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.716060622 seconds)
  done (took 2.300258068 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.22653566 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221502596 seconds)
  done (took 2.042483757 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.334659166 seconds)
  done (took 1.913462469 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.081633032 seconds)
  done (took 2.655475417 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.215018627 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.151746896 seconds)
  done (took 1.952702293 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.46109468 seconds)
  done (took 2.04168759 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.099666151 seconds)
  done (took 5.686376458 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226583088 seconds)
  done (took 1.847644203 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.226209046 seconds)
  done (took 1.813499322 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.772469982 seconds)
  done (took 3.352725586 seconds)
done (took 43.050522318 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078505028 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.0815958 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083956448 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079597314 seconds)
  done (took 1.878760776 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.069026789 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.067139106 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071189742 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.070825316 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069706878 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069789951 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.069975117 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067681328 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069160704 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.066975551 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066233946 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067467411 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.07007714 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067036657 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069935734 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.07137249 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067200694 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067507682 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070143759 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067678383 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.069736335 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067473099 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.066061147 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067566803 seconds)
  done (took 3.226049426 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073626261 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069899649 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073234404 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068910212 seconds)
  done (took 1.872631659 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.071419913 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.081539108 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.082953919 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.087669291 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074204087 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.073798599 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.079857179 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081213046 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063275887 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.082876196 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065713724 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064342795 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064242889 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.082664124 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080296951 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060553933 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.0616966 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.073368765 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.072952783 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.075491829 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065977709 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063379421 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074188252 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.073098294 seconds)
  done (took 3.345323292 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.0744926 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.063231043 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076241843 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088221397 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090105918 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063639753 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07673224 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.08971189 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.119379383 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063687116 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069478648 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063414309 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100658458 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063797512 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077961951 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.102089584 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.105274819 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067293885 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094505856 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062936334 seconds)
  done (took 3.211821093 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07168859 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067861332 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.068504216 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064053218 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074188952 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071230167 seconds)
  done (took 2.020674651 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064829921 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065971132 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065341755 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064803093 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070233768 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.065365593 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063689382 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066284267 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065849924 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064664558 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064105807 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06395188 seconds)
  done (took 2.38259174 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.152850857 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067840712 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068619528 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066948611 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069045932 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064255505 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078263945 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066439558 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.082221222 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064334691 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064521672 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066518693 seconds)
  done (took 2.509174438 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092818479 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096980558 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.140065215 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112280484 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09108288 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.088016219 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.154150407 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.13177377 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11256369 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067098041 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083953639 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097302935 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096802468 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.12933068 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108276973 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070665645 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.108072276 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078896696 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110901237 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119048517 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111831436 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118249216 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.090597015 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095957746 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103176314 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113633219 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069047417 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068498599 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143721495 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.097366005 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.089635282 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096217591 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107796022 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.066956083 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.08417038 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.102846359 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080481973 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.117254285 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.084492763 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096036681 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077992685 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.127040385 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102033367 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100255093 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127488741 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08957493 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106413479 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102506273 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080348169 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.114349633 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095105193 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088023639 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077702917 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.154094122 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086507022 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.106742902 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108069962 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.078826284 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085152617 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097716875 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.124362478 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.09995394 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108138607 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.255639855 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.089789023 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089968945 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.12927496 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083426943 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098609982 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125990544 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.089763815 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073600884 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.093154734 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067592199 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.093414978 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10343599 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08912409 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10775413 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07535687 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122435561 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.105476805 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070571165 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.11357226 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096077706 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149635329 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0921945 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098662765 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08864358 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.144806394 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082758065 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077563853 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094778872 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124640557 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090882127 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092878318 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124892982 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093331576 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084807596 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072941319 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.085875277 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097991657 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104598291 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098461013 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086889681 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084349285 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092769312 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.072772981 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078132304 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.097889259 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085200791 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.120118432 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105883001 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.120160943 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076805681 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102420286 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.093910024 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124811088 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.114028101 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.081757711 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104442833 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136219117 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.109850339 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082640994 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097938547 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107323165 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103853929 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092843495 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132296983 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112636471 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086147393 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090003976 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.245904286 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.109918726 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150791966 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088920119 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.10184182 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.134992238 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.110523997 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090272284 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081790813 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.0927193 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103357511 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.135919785 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.092584935 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068457994 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089225252 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127418057 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074028844 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09586345 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.089996026 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.081140151 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078760748 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066011938 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101480989 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133109451 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.110122252 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096214936 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.100523627 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067036156 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097781867 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101766363 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136926665 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114157228 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095549701 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.095814297 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100974515 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076910999 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.12937047 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.129199504 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088992695 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088447676 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120177871 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.092829896 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.101583799 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111414503 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100946981 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.09811784 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.137939876 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115930791 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.1206376 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101782068 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119902954 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078939531 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1125971 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.072426971 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10101594 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.074431613 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102410268 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.076578467 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.106781444 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076005223 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097070861 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.066633512 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.070917842 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.264334505 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087492412 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083936401 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.130773636 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.126824948 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080002716 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098938151 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097275025 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0984147 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.10650738 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.087688048 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088759985 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07680306 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078472793 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095377469 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0912079 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105572208 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07644592 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073207434 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134494486 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100784335 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088387561 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091986877 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.115330385 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.085831844 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084587448 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100625562 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.134394826 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.115014135 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077602725 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089130041 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.067492732 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.082098692 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.073442356 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105746385 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072414512 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108132755 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.06674807 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.12538195 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084441084 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.098241045 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09422438 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124101325 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08789948 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12460543 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085387553 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105228495 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090807815 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.092633204 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.106211103 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.092577162 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102520877 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107981377 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090732022 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087352399 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116901393 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102594941 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113132459 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103451028 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.131518684 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107389544 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073102588 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101254077 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096764768 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149231178 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09662453 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086461055 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.092412214 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099819524 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078947596 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.293174625 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08516183 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.084127988 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110519037 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.087840314 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09450769 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074795632 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.098824777 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09192255 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110370585 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.095143144 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.090647121 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106531384 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107012427 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08453345 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084823306 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121058823 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.125434987 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.100577943 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091167511 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086148841 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097069174 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091241148 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.106757677 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078231042 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.073439835 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.066514011 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070418952 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.114480293 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104866838 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095649175 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095487526 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099362554 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070092496 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085143773 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088169513 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.080930582 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087742201 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.111697179 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100966201 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.125673041 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.099830667 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090156369 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137858122 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125426076 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087693999 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089541383 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098341682 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075222195 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143125801 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115708324 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.075534096 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080612136 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.075145978 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083216618 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.069268125 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100666142 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100916179 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07363951 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100052441 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095092938 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.120821909 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093789217 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074255742 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.076901098 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.072543753 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.073067266 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.099609652 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.074928522 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074056866 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124519692 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099428976 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102860961 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080149824 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.229378091 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128626156 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068041806 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129216942 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080185227 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107391012 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.078109066 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077398827 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087203696 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103429274 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10268512 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109617378 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069629966 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101166493 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150022158 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074124305 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073422596 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.072678662 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107890688 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085199588 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138122482 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087627667 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090494092 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075178979 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123474721 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.10013894 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080651615 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123791761 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077187102 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.069613772 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08418141 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.108264751 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.070886691 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.073189515 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110865865 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.629278004 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088222682 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073384149 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086303755 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12439124 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080966168 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105659678 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.114850917 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103733407 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.178961633 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072217358 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088607802 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.100604861 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094947443 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089740527 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077318153 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086014927 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085050856 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.082482585 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103112223 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.078593348 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.088565479 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.077312751 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.100809183 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.125526444 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084149149 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099553975 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085011555 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087594253 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095747948 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107992302 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.102303722 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.084885204 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085303372 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.104558233 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.238193032 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076943686 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098278461 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.075510162 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076464543 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114153371 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.08214432 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091433371 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100955168 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.087245855 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111448822 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114065402 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10825832 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094847223 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077488243 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084517714 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.085765683 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072268857 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076444889 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072808397 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.068770526 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105062178 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082980661 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079184599 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.097368256 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.105728649 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097764552 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104201878 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088247554 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094953656 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097779647 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.12308461 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149871424 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097069814 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.119672314 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.128304003 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074614512 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.073997617 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.07855274 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12746741 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.079273964 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090108981 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.230568014 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075908167 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.079373776 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08959345 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104791527 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081184787 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078362735 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095621884 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10802259 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08272747 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079037626 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090668872 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.103970939 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.125897403 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08675256 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073735963 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106420051 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099511429 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119924379 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.071955082 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079170192 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.124932568 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085543203 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101869355 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077759244 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122129801 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.127383387 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071824938 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085825571 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068364691 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084254525 seconds)
  done (took 49.886035624 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.143863254 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.142867132 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.07801756 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.096574822 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.182220928 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.190879063 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.113705591 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.090501443 seconds)
  done (took 2.796649001 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064464667 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.078027938 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.097329794 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080477375 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065395128 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066114441 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.19502558 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079153548 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063549116 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.103684409 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.073678397 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067407933 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.351502908 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064266022 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065325901 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073695218 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066110702 seconds)
  done (took 3.362584961 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.3530885 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.604359401 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.311454304 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073505962 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.715798531 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087885214 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.10087288 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.135978694 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.077344249 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.517848809 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.364496881 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127451083 seconds)
  done (took 18.187038716 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071529101 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072978342 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.076342353 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076169162 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072541436 seconds)
  done (took 2.081641651 seconds)
done (took 98.364391494 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078293581 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.165933064 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066241604 seconds)
  done (took 1.974742352 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.078272616 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.078595647 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.079087691 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.077165878 seconds)
  done (took 2.035372155 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.070323681 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073958646 seconds)
  done (took 1.859549141 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228397288 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.160760094 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08920376 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078316423 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077729813 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078344091 seconds)
  done (took 1.962976422 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.067357723 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.06771501 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070264608 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070131724 seconds)
  done (took 1.991472615 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.064484557 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.064181017 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.066509546 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069650282 seconds)
  done (took 1.982787673 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.078309964 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081332777 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.075543464 seconds)
  done (took 1.952788501 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103558542 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094269808 seconds)
  done (took 1.914406771 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.07516392 seconds)
  done (took 1.796114302 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.084678714 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.09365024 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.138497837 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10469309 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138415519 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.123562484 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.074847755 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075860912 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071525512 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070567264 seconds)
  done (took 2.693459522 seconds)
done (took 22.433423037 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074814679 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365986386 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358509738 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084853154 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668999759 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359440246 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994838097 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088998354 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.096422302 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066709491 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082833664 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647279912 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.98321977 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32562605 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.9714522 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328401094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649376269 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06736858 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066385861 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0671142 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979416571 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066581464 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067110108 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067162381 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.646790058 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371466791 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067765294 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.329414087 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067337967 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068831914 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354693412 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067835092 seconds)
  done (took 16.199640709 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.06649696 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118086451 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071160314 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082262709 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068944632 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0681876 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.06995318 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067123169 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.10654835 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067223719 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083176663 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06647491 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070947177 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068764054 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086796852 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067885735 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069225481 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068480567 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070495401 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068560324 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085669053 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067366968 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067910008 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068339836 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06822386 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080573096 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068813702 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067490442 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068183982 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070175443 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070808216 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06916126 seconds)
  done (took 4.095997107 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115337495 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123758038 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072204401 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106007873 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115452203 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06862035 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146935504 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089370757 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110515136 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067422877 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08417809 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067690128 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102093362 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068800285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087731553 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067964822 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069418887 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068372345 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067847142 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068777937 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086463614 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067763847 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068804247 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06846922 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068630533 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082254681 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068814889 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06779733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067831429 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069960959 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071728164 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069348155 seconds)
  done (took 4.367121433 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.065574392 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070118846 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.07762875 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.078792688 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065448563 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.066761593 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068307617 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065194135 seconds)
  done (took 2.297829575 seconds)
done (took 28.69794182 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.074614159 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.066688391 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070257003 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085184281 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072039224 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.069064714 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.063398024 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.072404368 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069561636 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069640064 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071153603 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.065505252 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068325609 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063724053 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070185655 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065384865 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.071488431 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069105876 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069713833 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.070968903 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066855917 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070298037 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073572408 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069567871 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070039469 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.06949875 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074228832 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.070822239 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065289986 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067532039 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.06797295 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.076030647 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071446979 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071620003 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065196366 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065732206 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069307352 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06765138 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071576886 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073526835 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.067509672 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073634182 seconds)
  done (took 4.645279739 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.080915762 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.0880502 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.081235313 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080377279 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099640431 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080577003 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085090736 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078223429 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076314918 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084000316 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072382088 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077644928 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078175687 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071525876 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076814436 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073340999 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078842476 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072731282 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077194666 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077600491 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086293914 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070685866 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077284528 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078574379 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073389615 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.078646068 seconds)
  done (took 3.805066546 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.068417961 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085287455 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089349463 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137254832 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107014017 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080261695 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080435674 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094297132 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098564237 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066846912 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069990254 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092684233 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09310299 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073226036 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.103724121 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083765966 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.07841509 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067998335 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07303614 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099400857 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088908208 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084631655 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097855639 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085623193 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065962254 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075015246 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072560454 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080501252 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073333223 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077721495 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070093985 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069527879 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066431767 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077431449 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069717849 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.063741326 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086744137 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077643857 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079997196 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106399468 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074943679 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067158677 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095048013 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127077993 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065411272 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068626572 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.069555507 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077324456 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067270128 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094276909 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083698469 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065448963 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.083729029 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06698319 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067554756 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081287724 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06747831 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.067538221 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080710016 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07220293 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08587106 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070650031 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085189241 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065816895 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076690378 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067111202 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067320797 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06507125 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099897023 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072917761 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115408849 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.0668544 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064077584 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077494984 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076571333 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071969365 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.065697507 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083737921 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077007719 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069494578 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07709489 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.06828235 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069259114 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099791605 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065104617 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064334269 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064381132 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068389129 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.06946597 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.066594726 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080003846 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.065862934 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069368214 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080355581 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066330936 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067161623 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.067950172 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067085933 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065151102 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076464194 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069409955 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067351055 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077898481 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06678646 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069166779 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080108358 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07480164 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065331704 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.067267539 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.068627649 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068042178 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070185811 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069006376 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067726841 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071930073 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073238779 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071261479 seconds)
  done (took 10.750424012 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.152571768 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.1468648 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067447337 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142017297 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075168083 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.070934579 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14287476 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.085551203 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066410523 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067545036 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065824714 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.093416956 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.088825427 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.102205491 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071660724 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067239511 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091629752 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.098685494 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.143993782 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.139808604 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088919159 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073952362 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069228591 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067850616 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067860178 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.075821872 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085083025 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07498324 seconds)
  done (took 4.368592649 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.071362046 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107899857 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070452115 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089910038 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.084305535 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067155767 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068823448 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067943471 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083127987 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.073534943 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066493859 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071060041 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070249576 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068550683 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067139684 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07246383 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073070157 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066082283 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07003244 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070998673 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076128426 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09067673 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070517504 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066128115 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068448799 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066056705 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.072728291 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.075911885 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065972658 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095591687 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063918357 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.070272104 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079713694 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067025879 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06639798 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066983815 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066788282 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066479747 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066860182 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064676159 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064789798 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071181957 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06542046 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.072237186 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079832198 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07341976 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067612787 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068507595 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.068405266 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06352416 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069354701 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.06960116 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.068751068 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074389292 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069820823 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.068353329 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070023484 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091592019 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071803737 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066054883 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065426888 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.0647213 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068050469 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074600437 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082434611 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.067562279 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064894154 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066354361 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071164365 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079730039 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066016654 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071091892 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063377194 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.0661603 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068119419 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069329273 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067677709 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065030129 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06593323 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066031898 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.066478293 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066143268 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066170242 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069087423 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064313934 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06453525 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067020559 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067284239 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.072667853 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065091678 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.068988028 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067608985 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065403116 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069222357 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.071608144 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069173258 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084908468 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.074807902 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066626266 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064350665 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.079989704 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.06776994 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065837181 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072470883 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07041613 seconds)
  done (took 9.205676735 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08610862 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068101814 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085555988 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09127542 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.076472574 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071905015 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079454081 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067752977 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081148433 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.066395541 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074920912 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065384601 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078339386 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074177134 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068219512 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075909204 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.069113865 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085845622 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080428705 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065024105 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07446135 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078423013 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.078505409 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083285048 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082563086 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083541487 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.078326608 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068783484 seconds)
  done (took 3.932457222 seconds)
done (took 38.444505184 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.815374177 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.986013398 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.810580076 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.020123745 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.002667796 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.965671556 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.858363443 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.814652868 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.823405808 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.868960366 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.14468746 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.219823613 seconds)
done (took 66.138092198 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.861502289 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.965711592 seconds)
    (2/2) benchmarking "String"...
    done (took 2.030978241 seconds)
  done (took 5.744810411 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.034554276 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.460966481 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.071311661 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.811888413 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.813641212 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.219213214 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.585367792 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.249135092 seconds)
  done (took 30.96088361 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.9399761 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.03796604 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.489078615 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.516468235 seconds)
  done (took 15.774339027 seconds)
done (took 64.219311855 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.854389735 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.831654538 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.830462581 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.84880644 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.820722828 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.812815713 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.811698079 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.814449103 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.8593627 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.852943952 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.811466024 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.821125209 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.814028274 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.849161734 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.349699429 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.860968475 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.829557925 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.815770791 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.832665252 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.839084033 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.817125733 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.956244899 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.302412286 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.00997356 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.424900989 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.122688111 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.396890201 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.228715086 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.822102728 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.810506026 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.865660611 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.136811777 seconds)
  done (took 205.804050734 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.81400694 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.861676749 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.950542138 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.844287778 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.311602611 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.988310184 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.911996167 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.348125858 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.818491637 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.830990305 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.047819139 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.817431833 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.076014147 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.762936916 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.848984366 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.818132237 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.061738459 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.076721109 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.857042309 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.961758546 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.828033851 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.996862616 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.949483209 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.024126294 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.85713701 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.910035094 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.83109418 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.819110528 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.002980899 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.026372011 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.832580878 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.817478919 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.987235679 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.685055005 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.836484384 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.83492067 seconds)
  done (took 172.001863683 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.012237134 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.820741494 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.8170776 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.868387304 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.936342577 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.817723404 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.476473894 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.823449284 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.579025144 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.8197207 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.81383367 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.816149577 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.815418905 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.828775412 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.892295986 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.816319758 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.830898088 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.81481957 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.838800851 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.818496504 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.813084275 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.816451128 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.814121471 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.816016558 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.818903525 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.817545842 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.158605853 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.336583484 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.055997065 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.815309141 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.817066879 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.827203979 seconds)
    (32/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.814683914 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.818664445 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.013829793 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.819287272 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.910732198 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.870878623 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.939705264 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.815026814 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.036113503 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.889878764 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.815428679 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.819429093 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.882326671 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.825561727 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.81553718 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.81941512 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.822737125 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.885190064 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.05206422 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.815337484 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.938214933 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.302731283 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.815620089 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.819178855 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.819721546 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.412849339 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.81682039 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.81895644 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.823836006 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.826388779 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.820607728 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.819059812 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.203132934 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.886792675 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.8196335 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.82073923 seconds)
    (68/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.94629499 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.270504557 seconds)
    (70/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.82121351 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.315698562 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.008749111 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.818642427 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.817979766 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.817857671 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.820721668 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.820035196 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.823605755 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.938423461 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.8287618 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.94484073 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.897808758 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.940616071 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.821673172 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.829505231 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.637696538 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.892526066 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.854264676 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.647602601 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.818610351 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.192623795 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.580764929 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.818808641 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.819395404 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.834170239 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.817346811 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.821937762 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.820360617 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.899185595 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.819000463 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.944790996 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.547362043 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.304172375 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.824311917 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.820062323 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.826539792 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.90180102 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.938151114 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.824093976 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.89019099 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.825564962 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.825823477 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.9016241 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.818251616 seconds)
  done (took 406.119931799 seconds)
done (took 787.748131109 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.395706972 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.373039689 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.46411886 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.389300723 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.361189883 seconds)
  done (took 13.741588774 seconds)
done (took 15.499473071 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.836045921 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.830402569 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.880716964 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.907394229 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.837263462 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.839126001 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.904021328 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.839571261 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.871828934 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.874881032 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.904821765 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.90443448 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.845481 seconds)
  done (took 26.034796417 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.830251882 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.965734851 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.039717382 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.86842338 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.834456187 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.04992026 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.888952503 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.958557594 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.967682776 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.046495336 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.059503702 seconds)
  done (took 23.269870501 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.831872562 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.965567205 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.053676586 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.867377946 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.831438348 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.041083613 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.896464701 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.960479362 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.972699373 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.048064777 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.052047262 seconds)
  done (took 23.288421826 seconds)
done (took 74.352602654 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.82667335 seconds)
  done (took 3.585075638 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.844461811 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.970012152 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.825956966 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.82582059 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.824396532 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.826278378 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.825884702 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.825202086 seconds)
  done (took 16.528161591 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.827134565 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.825639063 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.827564176 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.824976115 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.826883067 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.82568288 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.825433262 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.826448175 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.826778423 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.826004961 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.828551333 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.825939249 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.826684365 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.827699283 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.82885714 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.828131469 seconds)
  done (took 30.991089512 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.830493804 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.826163264 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.82748852 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.828549231 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.825688342 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.827788044 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.827122325 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.827345766 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.827119407 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.826535284 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.827583857 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.827025462 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.827926333 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.82736876 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.82751376 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.829198396 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.826982761 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.827045787 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.831741093 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.82846628 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.827269924 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.826526538 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.827661556 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.826665122 seconds)
  done (took 45.626395055 seconds)
done (took 98.500118619 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.53821216 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.832792166 seconds)
  done (took 10.132659696 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.829386861 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.827391658 seconds)
  done (took 5.422343543 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.828749146 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.830348345 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.829676783 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.831214937 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.828689645 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.829923618 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.828718435 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.8286174 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.8285294 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.828148251 seconds)
  done (took 20.055627984 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.829324182 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.82825029 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.830278515 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.828873516 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.828541412 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.830047783 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.829364436 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.829450682 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.831687474 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.828400204 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.829652189 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.830100939 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.830101765 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.828489544 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.829746416 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.829421441 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.829124757 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.829897183 seconds)
  done (took 34.694702731 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.830938675 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.83081609 seconds)
  done (took 5.425205346 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.829968945 seconds)
    (2/7) benchmarking "second"...
    done (took 1.828580489 seconds)
    (3/7) benchmarking "month"...
    done (took 1.830912786 seconds)
    (4/7) benchmarking "year"...
    done (took 1.829937544 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.830887663 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.830856643 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.830650237 seconds)
  done (took 14.574849617 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.832174236 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.977767925 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.028004164 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.421839958 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.829623267 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.832586077 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.682431187 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.834282167 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.833169965 seconds)
  done (took 20.036387972 seconds)
done (took 112.103810257 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.64245554 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.834277468 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.090483814 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.911909812 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.850430971 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.126785636 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.843993071 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.479430093 seconds)
done (took 42.545802443 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.862446417 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.829566439 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.879580108 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.880801244 seconds)
  done (took 22.354952155 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.835884997 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.144904158 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.855984563 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.710354748 seconds)
  done (took 22.3287008 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.209353744 seconds)
    (2/2) benchmarking "read"...
    done (took 2.178800918 seconds)
  done (took 6.15746323 seconds)
done (took 59.469910326 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.832236405 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.831458083 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.832958868 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.833563011 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.83304934 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.830837197 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.831794389 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.833197533 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.831974159 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.833007593 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.831938212 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.83204888 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831262033 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.831994832 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.833096168 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832438488 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.831930709 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831635297 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.833228211 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830734057 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.836972577 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832657655 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.832395801 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.831421386 seconds)
  done (took 45.745533175 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.833454043 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.83261561 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.833251224 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.831581608 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.831816247 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.833161807 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.83185141 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.833423873 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.831846703 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.831579913 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.832066165 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.836087123 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.834130407 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.833053306 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833641619 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.834511279 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.833709501 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832776718 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832106105 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.833462987 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.833707628 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833375153 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.834814492 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833993772 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.834595391 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.833692164 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.833627734 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.834504884 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.836044764 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.833339649 seconds)
  done (took 56.770065622 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.835860291 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.834822209 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.833907903 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.834226468 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.834621357 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.835012071 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.834491469 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.833418144 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.835237408 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.835549798 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.833438016 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.833255089 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.83472066 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.836030387 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.834781465 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.834426188 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.83448394 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.835199175 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.833955985 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.834943095 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.835572625 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.834076527 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.83501951 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.835606997 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.83369728 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.835687219 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.834424093 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.836800758 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.83676882 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.837002281 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.838042301 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.836021181 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.837375226 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.837982014 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.83720501 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.8368664 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.836199658 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.836314967 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.836514712 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.837017769 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.835403797 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.83550076 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.837250055 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.836861952 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.836605396 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.837572853 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.837800111 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.836358264 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.836414587 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.836222032 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.837874151 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.837650147 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.838192109 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.83704168 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.836931611 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.838891667 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.838926895 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.838012773 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.83994815 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.841386647 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.840120361 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.838714912 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.839957298 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.838073626 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.837762943 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.839431537 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.839842906 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.837709575 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.83938433 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.839224438 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.839032628 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.837692108 seconds)
  done (took 134.006403568 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.838589027 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.841026094 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.838156474 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.838236804 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.838900727 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.839347372 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.841013487 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838398858 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839814886 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.839957436 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839600168 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.840818164 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841691378 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.841730012 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.83833436 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.840293349 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.839676854 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.840101635 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.842141587 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.84012964 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.838672398 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.841346505 seconds)
  done (took 42.250939191 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.839445796 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.841420022 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.838699539 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.838704044 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.840801942 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.839902419 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.840002254 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.840562518 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838945515 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.840817546 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841189974 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841713581 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.841883689 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840030129 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.841250518 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.843172356 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841147551 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.843851429 seconds)
  done (took 34.909258903 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.841600459 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.843162955 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.840089147 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.839632641 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.84352655 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.845354484 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842472907 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.843004203 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.839930738 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.842238156 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.841449019 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842186104 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.844811082 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842386474 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842275393 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.843592778 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.843262411 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841377986 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841953788 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.840342048 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.842019835 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.841548765 seconds)
  done (took 42.304525116 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840541897 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.840784377 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.841158437 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.84228716 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.844441538 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.841199148 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.841767504 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.842022008 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.843524835 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.842834294 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.844418645 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.842551428 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.842511609 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.843359967 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.842648316 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.845158755 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.844852011 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.844867234 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.844081427 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.843433228 seconds)
  done (took 38.636730217 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.844229225 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.844048852 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.844930204 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843057161 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84496471 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.843859581 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.844846774 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.84519904 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845285616 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.845448524 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.844802133 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.846399431 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845088927 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.846782292 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.845425319 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845328883 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844934678 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844925809 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.845717747 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846888455 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.84718841 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.846187339 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.846566219 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.84383213 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.843298545 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.843480786 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.847406595 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.843309888 seconds)
  done (took 53.440724336 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843220966 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.846745844 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.846010295 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.849627253 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.84687768 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.846365127 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.846412919 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.848088761 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.846879923 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.847735372 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.849008767 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.849232516 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.847723592 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.848586001 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.848660968 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.846748351 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849393279 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.848235505 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.848407082 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849703092 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.848066339 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848789803 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.849052719 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.8482377 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849062154 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.849093289 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849775094 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.847990206 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849995169 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.849622583 seconds)
  done (took 57.223697212 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.868868226 seconds)
    (2/2) benchmarking "in"...
    done (took 1.870483276 seconds)
  done (took 5.521263447 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.849808793 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848571561 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.849669035 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.849498626 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.852746519 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.849820874 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.850365088 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.85098806 seconds)
  done (took 16.582791765 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.851116122 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.85540703 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.850390116 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.850836201 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.851886911 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.856917758 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.850147161 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.849201144 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.85102009 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.851407831 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.857140516 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.856738922 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.857950107 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.855660402 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.851444822 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.85095778 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.852828364 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.850750239 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.851093457 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.852926036 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.85382104 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.847572409 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.848072374 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.850010632 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.852988033 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.852116336 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.861892548 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.855457733 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.852720946 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.852164054 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.859331128 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.852031877 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.853504327 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.853380643 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.851979701 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.852703318 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.859579497 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.852614075 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.852723732 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.853352714 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.855553672 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.852330954 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.856236704 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.862266759 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.84979634 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.853667236 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.853638739 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.851437183 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.851196449 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.857042022 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.862034585 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.851729035 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.853694346 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.855169867 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.856447933 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.853613685 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.853420497 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.856048589 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.861878551 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.864386411 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.856788848 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.877636151 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.861058641 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.852879644 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.854728033 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.86276755 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.881085094 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.857588973 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.855840678 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.854125845 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.863338108 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.854196671 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.85607855 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.854442215 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.867502866 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.861012036 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.854605146 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.854029521 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.854702959 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.855012956 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.857931742 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.853626171 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.856273796 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.854456518 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.864818381 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.88211713 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.85375885 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.854997215 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.857089451 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.854475932 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.859235325 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.855612223 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.855628865 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.856320106 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.856395185 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.856156515 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.853077733 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.852976756 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.85693392 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.864825177 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.851947161 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.856426499 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.860620288 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.864992163 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.855777679 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.856159057 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.856864324 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.852843286 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.866748454 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.85606245 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.856205931 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.857024916 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.856624527 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.860988412 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.854886846 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.859453029 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.866472443 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.865620117 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.857653314 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.857599673 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.860341139 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.859979058 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.866316661 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.883377966 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.860807685 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.860564953 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.861137958 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.870801767 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.862465885 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.857764006 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.859986736 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.858173066 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.858333836 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.861991318 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.859265895 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.855887261 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.85769241 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.857947484 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.857035106 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.858182263 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.862584413 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.860368695 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.860022615 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.857525465 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.862207508 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.856706732 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.862021356 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.867764973 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.858540871 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.85609875 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.856414351 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.861628343 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.862572193 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.86133797 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.858711571 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.860785032 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.861006576 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.86063705 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.86118717 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.860186371 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.860417138 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.860063058 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.863013402 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.860031444 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.858488257 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.860190562 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.859130718 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.859380095 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.859768462 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.860125529 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.860575582 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.859744719 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.862920386 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.859735729 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.857999369 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.85821734 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.858641817 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.857408088 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.863866389 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.870429484 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.865035922 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.868757311 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.858928553 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.869567604 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.859676181 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.861249665 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.85850097 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.858145633 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.858123101 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.861142795 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.85743339 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.861626694 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.8817302 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.8681648 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.865038122 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.859367623 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.865209223 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.86515059 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.8670569 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.859657133 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.8612094 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.863879068 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.858818423 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.85963593 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.859810352 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.865325037 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.859120362 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.860163227 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.867537939 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.860061218 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.861265539 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.865039932 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.862834047 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.864522375 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.863461115 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.860969924 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.862038098 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.862072986 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.872798864 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.862577192 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.861536376 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.866047062 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.865941764 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.861910638 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.863288405 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.864314269 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.867534157 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.863321853 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.865715568 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.870765577 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.864572113 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.862828244 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.864663821 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.861251688 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.864458364 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.863298979 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.867620786 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.874617895 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.865044315 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.86490835 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.86783255 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.86026925 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.866696809 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.863226035 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.865113938 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.863964473 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.862846849 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.861622552 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.863053133 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.871478213 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.860090255 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.863840332 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.862718668 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.870080082 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.866592842 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.865367969 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.863678541 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.866315915 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.870052876 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.869087444 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.864050799 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.867745116 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.865106687 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.863820749 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.867732183 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.86705881 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.877680971 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.8759537 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.864165062 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.868590824 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.862693701 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.868697074 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.86653148 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.866932769 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.873246016 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.866736489 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.866014426 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.868504273 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.863012693 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.86434543 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.872064434 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.864775318 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.869588534 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.86746499 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.866522257 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.866828782 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.867544668 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.86659501 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.866522038 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.867753467 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.869432205 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.866109972 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.865163677 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.866528182 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.874776678 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.864835655 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.866799064 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.872146294 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.866233618 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.866460124 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.864803736 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.867857479 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.868385652 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.867327924 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.862380626 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.866629807 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.866579669 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.869274344 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.877368901 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.870151412 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.87612545 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.867814908 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.8780672 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.865636831 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.867345627 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.866046518 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.870480541 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.874500965 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.873273629 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.867228737 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.876803926 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.866431872 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.868611807 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.870114952 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.868655223 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.867015282 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.86701126 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.868024861 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.873706686 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.872302219 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.868979465 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.867031083 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.867077651 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.866901325 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.874243224 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.86904429 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.870266805 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.868192106 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.868372875 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.866188213 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.868960888 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.868710298 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.869362345 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.867576867 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.868779472 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.877698082 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.866978476 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.871077233 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.872016846 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.869228986 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.879773257 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.865988713 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.869272944 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.869360359 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.867412552 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.870812277 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.869443413 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.868646483 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.869452354 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.869558052 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.869611718 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.880796493 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.875908043 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.870884633 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.872283531 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.869052931 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.872177775 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.879481317 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.89895403 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.871476644 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.87242948 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.875997544 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.877905902 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.871127454 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.878396296 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.87601182 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.876769617 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.873650726 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.872606447 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.874814913 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.883804034 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.872552006 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.874720095 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.870916404 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.876487672 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.87308443 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.871001098 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.870352831 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.872074581 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.86913507 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.881175929 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.868598531 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.869831206 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.870162287 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.868839527 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.870098405 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.872349736 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.872317 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.87419719 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.869570396 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.869229969 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.874824386 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.875075152 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.869904511 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.874983758 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.881400576 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.872377592 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.871948785 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.874808749 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.872817155 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.872981005 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.871405392 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.871995496 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.872348529 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.873266677 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.873070859 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.876612821 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.880548651 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.875364665 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.87249909 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.87203536 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.873917028 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.8725577 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.870900614 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.871485463 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.880326266 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.875566601 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.883083634 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.882547783 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.870682032 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.875129942 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.881781726 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.883259277 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.872462452 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.872621923 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.873401419 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.87509859 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.873702909 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.872186484 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.874156958 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.873697676 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.879247515 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.87300764 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.872791557 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.873180778 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.873912535 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.877587195 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.874597988 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.877135342 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.874010161 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.874485887 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.870034301 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.872683094 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.875256402 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.875393205 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.871366389 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.873373792 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.874954159 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.876412411 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.877990171 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.872442123 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.873511181 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.875568025 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.874367916 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.874298245 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.876146039 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.876319313 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.874635115 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.878834851 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.88456033 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.874815448 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.87704965 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.874918467 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.881955748 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.876094092 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.876090184 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.876812352 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.875666343 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.885452492 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.875162034 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.876462065 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.877725639 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.876952241 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.883358561 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.880562941 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.883498121 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.87919136 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.877681099 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.87839126 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.882349357 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.888505317 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.883339659 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.88225551 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.888854019 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.883980294 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.87732842 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.878314376 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.878342492 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.878551132 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.87847181 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.880488939 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.880372774 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.881322513 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.878700914 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.879671272 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.877941099 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.879131197 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.879685097 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.880114165 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.882188773 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.890234503 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.888285749 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.878065082 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.879227755 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.879227243 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.883882175 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.890387586 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.876792357 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.878716054 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.877294816 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.878760475 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.879064456 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.888355577 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.887863812 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.882821334 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.876160609 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.885584238 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.898745262 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.880942657 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.888464165 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.91270707 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.879012675 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.878897606 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.876316344 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.877513069 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.879110878 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.882689082 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.876842093 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.8843817 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.878321692 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.878448465 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.887670672 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.879110426 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.881003787 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.878479408 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.880224393 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.884981532 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.876154524 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.886118022 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.88001486 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.880451143 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.879884973 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.881877591 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.880799643 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.879508023 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.879690765 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.883891025 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.881181679 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.884104983 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.889671934 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.879801264 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.882821648 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.895073857 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.89117815 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.881253639 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.879643619 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.879613296 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.887389396 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.88470894 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.88279135 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.887123562 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.891670732 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.886562476 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.889623982 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.886886018 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.882561076 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.884865658 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.881139359 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.882216264 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.896439154 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.895115014 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.883876775 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.883258263 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.890267318 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.884458404 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.890391231 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.886554262 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.882628964 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.884712872 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.882276585 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.885205639 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.884865874 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.883963837 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.889316979 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.890738408 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.882844569 seconds)
  done (took 1115.63049576 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.882797243 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.884982048 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.884552693 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.882411634 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.884389392 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.88337888 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.885497186 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.885082798 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.884090646 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.888129897 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.884764494 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.883129473 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.882229546 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.883582736 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.883772904 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.882009692 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.880924142 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.88346862 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.884398669 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.883229215 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.879341536 seconds)
  done (took 41.368936137 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.877676834 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.877375555 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.875893458 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.878485501 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.876496615 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.87678046 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.877505621 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.875654006 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.875898579 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.877125908 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.875191432 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.876848648 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.876894521 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.876727234 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.877437525 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.875786543 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.876369094 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.877383248 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.877142531 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.879955148 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.87697697 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.877841947 seconds)
  done (took 43.101929696 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.875928511 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.87675444 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.875423701 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.875131972 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.875520335 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.875442173 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.875625151 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.875713888 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.869752198 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.870242542 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.877956307 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.878598457 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.870501909 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.872269718 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.869187139 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.867852255 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.019721861 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.869520592 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.868552218 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.869299531 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.86976553 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.876198741 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.869299108 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.870811286 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.869783275 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.86989243 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.870244729 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.870494864 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.870965193 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.870867779 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.873503038 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.869941129 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.870772767 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.874835892 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.86907155 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.87035871 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.873859554 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.869973974 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.869931385 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.870053983 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.880674558 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.894502004 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.871005811 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.870563426 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.879404374 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.869578558 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.86982461 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.87411981 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.878179629 seconds)
  done (took 93.728922514 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.868920191 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.868907547 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.870397753 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.86885744 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.868813864 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.868656499 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.867881247 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.867397497 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.868090903 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.868407022 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.868490978 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.866753525 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.867400372 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.867682723 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.867007302 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.86760759 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.866429538 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.86752532 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.867585807 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.8672418 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.86663362 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.866690168 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.866699243 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.86726612 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.867991147 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.8665636 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.867738802 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.867755705 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.86726891 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.86726644 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.867216365 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.867363658 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.867245302 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.867845839 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.867286346 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.868001898 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.867209885 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.868175616 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.86690445 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.867211185 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.867148772 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.867695539 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.870316931 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.868546017 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.867742137 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.868067428 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.867905669 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.867753907 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.868350812 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.868418891 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.868323276 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.868380414 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.869461043 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.870398175 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.867936263 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.868730315 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.868013135 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.868428155 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.872171598 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.868771539 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.867860937 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.867690585 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.867939714 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.868263404 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.869024386 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.867076947 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.868279915 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.867958319 seconds)
  done (took 128.831470383 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.868433001 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.868368577 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.867938066 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.868144188 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.867986147 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.871528573 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.870279475 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.866857884 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.868623319 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.867908712 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.868313419 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.868827894 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.867545069 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.868128334 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.868462852 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.868706807 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.870106995 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.868047076 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.869341683 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.86867982 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.868287899 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.869980425 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.86965424 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.868093464 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.868779767 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.868307741 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.868877615 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.866578792 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.861276884 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.861591742 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.86206732 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.861602344 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.862630251 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.861748941 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.860911208 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.864210137 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.861817256 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.861321296 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.863220112 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.860933784 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.860516267 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.86186271 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.860793098 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.862369575 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.860694141 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.860062109 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.860789255 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.860922296 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.861321261 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.859392179 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.86084406 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.860894473 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.860324301 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.860225304 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.865268589 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.860387495 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.860302269 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.859397007 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.860077634 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.85989214 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.859015581 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.85775571 seconds)
  done (took 117.401961771 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.858056376 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.859715756 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.857679606 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.858864118 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.858505373 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.858203429 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.857275149 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.861490115 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.857496242 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.857666169 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.857897055 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.857871814 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861402427 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857871404 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.857049491 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859384887 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.858864911 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.858693744 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.858140824 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.858180025 seconds)
  done (took 38.961813513 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.858296571 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.858492126 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.861554606 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.857904795 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.858671966 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.858344722 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.85838991 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859005632 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.858271128 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85806147 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.858280697 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.858547156 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.858244122 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.859198055 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.857773564 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.857765734 seconds)
  done (took 31.529136095 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.85883564 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.861192736 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.858849941 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.857762217 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.858636747 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.858578213 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.858248444 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.857339709 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.856289805 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.857605132 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.85759576 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.857538031 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.85788942 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.857416318 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.856969081 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.856860786 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.856807418 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.85914773 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.859253364 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.856957583 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.859366746 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.857393306 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.857618044 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.857909378 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.857608479 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.858298422 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.857804247 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.858242331 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.859233149 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.857700217 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.857745312 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.85778461 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.856694987 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.857523799 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.858877312 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.857274507 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.856910378 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.856980383 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.857057225 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.856651085 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.856826041 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.857407061 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.859078316 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.857300403 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.857234886 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.857553641 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.857675938 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.85744955 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.857838368 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.85764336 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.86023438 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.856817336 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.857595835 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.85768023 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.857049989 seconds)
  done (took 103.974388041 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.856942124 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.857345874 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.857996571 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.857371432 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.858426667 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.856709482 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.855580873 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.855796973 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.856545403 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.856522036 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.858748679 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.855746227 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.85568998 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.856366222 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.857197992 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.856658792 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.856679121 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.856230459 seconds)
  done (took 35.214433042 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.856954962 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.857905688 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.858185072 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.856037828 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.856744604 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.856412024 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.856558172 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.859022311 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856708783 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.856580424 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855556288 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.856331627 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857527282 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.856563723 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.856687756 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855575528 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.856098019 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.856643 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.857365682 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.856732801 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.856609119 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.855852355 seconds)
  done (took 42.639600047 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.858305527 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.858077259 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.869654583 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.873141606 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.874414163 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.887625799 seconds)
  done (took 13.010816644 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856635037 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856096699 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.856632396 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856358354 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857519592 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855807803 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856285939 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856264034 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857260465 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85780172 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859019329 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85666382 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859839696 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856654183 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856851946 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857312275 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856015325 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857124998 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856260969 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856949818 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857020584 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8555379 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855611375 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856735706 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856547387 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857127068 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856847605 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855569596 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85683579 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857133169 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855816834 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857599843 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856207468 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856753901 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855697118 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856302662 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856797593 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855917435 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855314425 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856001801 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.855998702 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856697432 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858397107 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855988179 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856398974 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856602363 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857167093 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857987721 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857408678 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857610643 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856751439 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857193201 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857582752 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857688474 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856868556 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857248029 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857348142 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85761923 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860022719 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858570905 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857257141 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85746264 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857405998 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858847943 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857529387 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857755981 seconds)
  done (took 124.353869471 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857738481 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.857481626 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858780341 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857600778 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857357541 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857564475 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857424728 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858894203 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858650315 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858275235 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857835076 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857325586 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85930411 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857792709 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857630002 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858277329 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858277971 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858105305 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859488984 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858239499 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858881399 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858861865 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859834995 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858479797 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860709271 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858624175 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858098453 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859237408 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860421291 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858950247 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858820513 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860342163 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859688765 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.859609552 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860495344 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859993099 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856071841 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856454036 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855982314 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857720915 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857828559 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857075725 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855568315 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855532473 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855748941 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856490256 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854702382 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856282863 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855817899 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855978961 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859161896 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85658294 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856225841 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856458665 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85595353 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857663094 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858822576 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856478619 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856470655 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856997105 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856391458 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856887897 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856948756 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857376733 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85688634 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856237764 seconds)
  done (took 124.406560349 seconds)
done (took 2583.320097639 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.922914341 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.931614891 seconds)
  done (took 15.643643968 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.019559844 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.973374473 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.858577828 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.902098087 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.858837585 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.883968712 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.879164584 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.8590855 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.860169067 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.858627122 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.859590923 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.043482396 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.861294491 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.858812001 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.859342855 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.953129481 seconds)
  done (took 52.183683758 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.865589794 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.863871983 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.874560628 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.864480521 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.863799316 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.877407401 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.89329413 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.867705819 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.90027158 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.876482202 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.936860353 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.874793331 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.864472741 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.915606399 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.880761436 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.879246897 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.960190805 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.93992292 seconds)
  done (took 35.792196368 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.940943491 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.875201847 seconds)
  done (took 10.614284207 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.890345126 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.860554331 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.868970822 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.856509285 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.865004138 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.875502489 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.893687607 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.879119615 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.860291766 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.860770968 seconds)
  done (took 70.505841309 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.86824179 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.867725791 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.86618137 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.860871692 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.859329006 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.863206283 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.86316259 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.860953779 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.548816587 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.902413469 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.873614871 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.871619927 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.862414794 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.863332351 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.862249904 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.890029691 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.976360719 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.860001437 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.861143754 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.870356857 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.863304056 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.910680818 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.875345349 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.862716479 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.894524898 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.547135763 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.87418088 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.867675472 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.968488898 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.860126115 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.863789663 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.073925018 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.86753414 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.32334612 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.15264795 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.868574169 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.873438518 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.872307594 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.862008395 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.970299181 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.864196095 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.869078448 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.8085352 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.12798535 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.957863949 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.910499218 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.213032158 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.865904974 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.864167827 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.897632882 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.867792142 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.868275463 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.880138211 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.380337399 seconds)
  done (took 132.575057575 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.864116721 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.213259276 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.029838871 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.862431732 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.147388516 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070193616 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.863266925 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.909286525 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.863191482 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.094649508 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.112777044 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.965272542 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.86378207 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.866893852 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.865800634 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.861117182 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.008261078 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.930394077 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.862884759 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.861861136 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.891740903 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099889599 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.981564906 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.864075799 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.888529612 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.066389114 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.982408209 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.965313439 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.586773465 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.862038106 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.923903203 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.864888695 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.862569044 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.862595433 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.034279289 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.956784317 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94576877 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.863660272 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.861702488 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.862470662 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.519431091 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059664297 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.956514959 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.985691794 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.115994827 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.065408482 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.641458148 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.861888083 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.594038062 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.02478573 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.089256714 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.096658678 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.984860888 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.866009404 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.119010775 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.862303301 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.862506092 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.111111396 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085870813 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.959819744 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.865175535 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.864646738 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.864207533 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.098651889 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.869032775 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.957623005 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.869066492 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.865336211 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.958876133 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.961307678 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.090676004 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077588786 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.893875437 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.187402989 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.366637565 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.108566473 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.927252931 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112279102 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.86667499 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.864870491 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.9459213 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.704228995 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.116618511 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.109595161 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.111128867 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898046021 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.579770262 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.865687317 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.089690051 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.086066551 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.115007335 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.109232698 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.102926606 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.178953797 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.866953594 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.865464288 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.10703317 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.983860502 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.871463391 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.206424329 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.096438494 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.413126743 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.891292511 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.168307562 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998524507 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.871924026 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.490452751 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.867320647 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.087076849 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.905703094 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.868008323 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.866174651 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.082992757 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.841066225 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.868376079 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.518114544 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.926421965 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.869129633 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.097798696 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.868872889 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.128719647 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872980359 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.095818897 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.269739371 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.896610239 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.036678629 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.109670244 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.873372264 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.109988116 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.10457966 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.979795395 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.08822415 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.580290949 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.867742655 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.151449155 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.870325076 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.867081215 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.035779544 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.869428145 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.009493991 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.874973312 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.149468748 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888157728 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.116044258 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875619694 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.122161689 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.897928195 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.916104211 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.873404738 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.992094807 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.869529706 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.710078272 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.025341706 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.870769779 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.870034799 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.416530735 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.870490649 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.018307961 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.091585549 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.889312656 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.938708012 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.534338815 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.869243081 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.948432411 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.892172622 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.253650577 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.870183037 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.120527124 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.876137609 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.869599951 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.868741698 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.101449716 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.05018438 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.87045459 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.870770781 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.774136601 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.869279115 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.869091053 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.050163391 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.814080545 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.868793434 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068124703 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.874538466 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.996066457 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.87360644 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.939423335 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.201651174 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.870789825 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.871435256 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.870772965 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.872596713 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.871450842 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.076824341 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.893301648 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.384265471 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.007513874 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.13443556 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.177999733 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.108247518 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.913357973 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.873780281 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.122534418 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.874024656 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.931983174 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.872970937 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.891800523 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.099100228 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.875220181 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.0778345 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.139446867 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.728758349 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917030534 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.874109559 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.870839763 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.871701603 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.016008102 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.952398851 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.875527885 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.872485862 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.984378303 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.990944262 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.081975986 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.874686127 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.953834986 seconds)
  done (took 902.164968917 seconds)
done (took 1221.271451694 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.8731098 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.872486748 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.879018364 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.872609287 seconds)
  done (took 29.302427589 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.874281343 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.873837793 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.873020303 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.874704749 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.874794987 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.874414173 seconds)
  done (took 13.051042662 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.956971051 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.874017793 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.879095163 seconds)
  done (took 21.516538863 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.948612833 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.28093399 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.018406096 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.298004097 seconds)
  done (took 10.352433189 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.874227692 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.875339254 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.874625826 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.878735649 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.875701084 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.875386483 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.877026417 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.875753226 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.876162946 seconds)
  done (took 18.690013748 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.984089764 seconds)
done (took 98.704776884 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.028530201 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.002675963 seconds)
    (3/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.175834235 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.945494899 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.008538936 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.11505994 seconds)
    (7/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.568252051 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.730409045 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.280624428 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.893703921 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.417345587 seconds)
    (12/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.996730358 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.169033797 seconds)
    (14/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.650083424 seconds)
    (15/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.966531355 seconds)
    (16/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.105953864 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.021840727 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.901509751 seconds)
    (19/309) benchmarking ("sort", BigInt, false)...
    done (took 6.875676661 seconds)
    (20/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.038248607 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.897349929 seconds)
    (22/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.028196783 seconds)
    (23/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.337561661 seconds)
    (24/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.912584635 seconds)
    (25/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.956281471 seconds)
    (26/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.968050382 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.961283053 seconds)
    (28/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.058217775 seconds)
    (29/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.261896863 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.009071809 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.133450281 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.255232431 seconds)
    (33/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.875995395 seconds)
    (34/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.994856266 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.021178793 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.878664066 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.968098255 seconds)
    (38/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.030361383 seconds)
    (39/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.089770166 seconds)
    (40/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.880505009 seconds)
    (41/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.112371114 seconds)
    (42/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.703031061 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 2.092003782 seconds)
    (44/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.981698083 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.995653006 seconds)
    (46/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.640169489 seconds)
    (47/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.015265211 seconds)
    (48/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.169399482 seconds)
    (49/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.277341026 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 5.528879278 seconds)
    (51/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.975058293 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.013665203 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.122540726 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.876399482 seconds)
    (55/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.959496309 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.013065251 seconds)
    (57/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.105096125 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.030340199 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.89780197 seconds)
    (60/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.902854937 seconds)
    (61/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.004558691 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.705808082 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.965429152 seconds)
    (64/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.254691449 seconds)
    (65/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.055225126 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.90646237 seconds)
    (67/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.059681328 seconds)
    (68/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.307495554 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.89698861 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.87773633 seconds)
    (71/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.904016842 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.880168682 seconds)
    (73/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.949270712 seconds)
    (74/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.342248978 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.878286874 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.183491511 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.880342705 seconds)
    (78/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.632913647 seconds)
    (79/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.013170929 seconds)
    (80/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.013531824 seconds)
    (81/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.955937425 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.468770395 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.136692258 seconds)
    (84/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.178388831 seconds)
    (85/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.304203812 seconds)
    (86/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.635971398 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.879291897 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.266963794 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.00834945 seconds)
    (90/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.881402493 seconds)
    (91/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.675308646 seconds)
    (92/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.702813315 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.627757698 seconds)
    (94/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.884048711 seconds)
    (95/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.16652038 seconds)
    (96/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.9643433 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.879704913 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.990556226 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.002950565 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.897182847 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.879621599 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 3.930161305 seconds)
    (103/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.011433222 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.060632954 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.017432609 seconds)
    (106/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.426346638 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.088053694 seconds)
    (108/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.167520869 seconds)
    (109/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.964805216 seconds)
    (110/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.882884102 seconds)
    (111/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.026887266 seconds)
    (112/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.162927524 seconds)
    (113/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.513318789 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.280465938 seconds)
    (115/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.980787907 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.986499688 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.143454007 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.80381475 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.204504456 seconds)
    (120/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.358654754 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.017223164 seconds)
    (122/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.999977253 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.169593093 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.903902221 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.188579066 seconds)
    (126/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.993275379 seconds)
    (127/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.130074578 seconds)
    (128/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.893726085 seconds)
    (129/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.885723244 seconds)
    (130/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.187527471 seconds)
    (131/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.885084995 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.619364698 seconds)
    (133/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.279598802 seconds)
    (134/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.881922588 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.050365166 seconds)
    (136/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.425783384 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.925585474 seconds)
    (138/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.983227278 seconds)
    (139/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.965926587 seconds)
    (140/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.884680948 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.136740307 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.223636841 seconds)
    (143/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.195903932 seconds)
    (144/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.089216292 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.177395233 seconds)
    (146/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.292400534 seconds)
    (147/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.970191593 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.58220508 seconds)
    (149/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.327846688 seconds)
    (150/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.888438334 seconds)
    (151/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.954998697 seconds)
    (152/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.280211136 seconds)
    (153/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.585967326 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.906904207 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.537174391 seconds)
    (156/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.202673247 seconds)
    (157/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.106862102 seconds)
    (158/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.75169593 seconds)
    (159/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.886401619 seconds)
    (160/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 8.927742653 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.056490153 seconds)
    (162/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.05047514 seconds)
    (163/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.9932919 seconds)
    (164/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.993678643 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.76328595 seconds)
    (166/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.031712038 seconds)
    (167/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.903890687 seconds)
    (168/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.349487518 seconds)
    (169/309) benchmarking ("sort", Int8, false)...
    done (took 4.836335302 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.884683534 seconds)
    (171/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.517389373 seconds)
    (172/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.128777021 seconds)
    (173/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.041178373 seconds)
    (174/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.998207583 seconds)
    (175/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.944271202 seconds)
    (176/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.894450064 seconds)
    (177/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.902611248 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.883369234 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.024197286 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.183763858 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.983232966 seconds)
    (182/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.944630395 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.18063032 seconds)
    (184/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.148629926 seconds)
    (185/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.374755719 seconds)
    (186/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.909215015 seconds)
    (187/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.077637645 seconds)
    (188/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.888148542 seconds)
    (189/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.958224585 seconds)
    (190/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.777547323 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.259566825 seconds)
    (192/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.913743136 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.172610896 seconds)
    (194/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.987009304 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.219216095 seconds)
    (196/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.150860826 seconds)
    (197/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.111237595 seconds)
    (198/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.888309743 seconds)
    (199/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.946674387 seconds)
    (200/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 4.220123702 seconds)
    (201/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.80454182 seconds)
    (202/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.264621991 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.196690291 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.886423505 seconds)
    (205/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 8.465203012 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.242633737 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.015227144 seconds)
    (208/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.25199741 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.452309488 seconds)
    (210/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.376813338 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.012425434 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.888533409 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.6041819 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.082156453 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.960605457 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.827741326 seconds)
    (217/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.14552764 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.891434461 seconds)
    (219/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.272145928 seconds)
    (220/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.145257746 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.664573739 seconds)
    (222/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.992070607 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.91795921 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.900411653 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.120038814 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.240704741 seconds)
    (227/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.00019843 seconds)
    (228/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.632603845 seconds)
    (229/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.886359448 seconds)
    (230/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.549299309 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.192812467 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.1970665 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.889667561 seconds)
    (234/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.892232078 seconds)
    (235/309) benchmarking ("sort", Float32, false)...
    done (took 5.607818617 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.918249636 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.887850861 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.913142547 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.887621948 seconds)
    (240/309) benchmarking ("map", identity, Float64, false)...
    done (took 3.671938271 seconds)
    (241/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.485276174 seconds)
    (242/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.209712875 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.931719981 seconds)
    (244/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.269285576 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.064605329 seconds)
    (246/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.029958529 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.147025668 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.79814022 seconds)
    (249/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.976307264 seconds)
    (250/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.991558027 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.892556263 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.870923277 seconds)
    (253/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.98088822 seconds)
    (254/309) benchmarking ("sort", Float64, false)...
    done (took 5.579359544 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.026257901 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.974285393 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.920942044 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.992694125 seconds)
    (259/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.356652679 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.891853601 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.894810362 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.252484933 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.475420475 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.323422845 seconds)
    (265/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.301761704 seconds)
    (266/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.212421162 seconds)
    (267/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.91545694 seconds)
    (268/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.167319894 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.940859265 seconds)
    (270/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.601752084 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.371935513 seconds)
    (272/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.157194207 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.969612581 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.096836037 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.929031543 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.954872442 seconds)
    (277/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.913399048 seconds)
    (278/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.277735038 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.907133163 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.889855519 seconds)
    (281/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.137143818 seconds)
    (282/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.913971913 seconds)
    (283/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.256433374 seconds)
    (284/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.97020722 seconds)
    (285/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.131662677 seconds)
    (286/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.967779842 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.757489158 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.998912682 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.90590168 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.899470398 seconds)
    (291/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.628958801 seconds)
    (292/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.031032556 seconds)
    (293/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 3.723033048 seconds)
    (294/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.581230082 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.41155791 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.794214019 seconds)
    (297/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.660468886 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.971728054 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.482932027 seconds)
    (300/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.999256234 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.925710897 seconds)
    (302/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.01661006 seconds)
    (303/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.051922455 seconds)
    (304/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.975418635 seconds)
    (305/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.993375907 seconds)
    (306/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.091862643 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.107345849 seconds)
    (308/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.897532147 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.124685366 seconds)
  done (took 1014.761759169 seconds)
done (took 1016.649274113 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.922321478 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.913289632 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.89635685 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.918153914 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.011253021 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.941456534 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.909933112 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.901945778 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.948398766 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.949113746 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.900175911 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.939986169 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.903490734 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.901163454 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.897403897 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.912984532 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.202479599 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.926132429 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.918931665 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.909762153 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.918125627 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.898268639 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.948490282 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.939154956 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.901353698 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.906076976 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.902798067 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.92220803 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.013583083 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.904822836 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.904091756 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.913263885 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.201643059 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.920335671 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.896320249 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.920791768 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.914231174 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.911774359 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.902677046 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.933674267 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.336037796 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.905376387 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.902585982 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.899455615 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.899353114 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.906104611 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.902083317 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.908051668 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.914221359 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.913642578 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.332465787 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.924376679 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.905228755 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.901669326 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.913488475 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.903456755 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.906564568 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914659801 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.923997078 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.915560016 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.192429512 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.931248537 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.903860524 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.922155744 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.911405303 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.370020074 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.904401705 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.909536815 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.337687191 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.913528801 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.369533882 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.920539775 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.903835104 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.918654591 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.93735055 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.204263201 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.922396985 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.900736763 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.913734127 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.90170649 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.913918655 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914511289 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.905694535 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.905225091 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.915800038 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.945630301 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.915890981 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.904740624 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.915199281 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.923306451 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.91243138 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.917544113 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.905553734 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.900594216 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.914120597 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.905924839 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.908171689 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.907274285 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.907347111 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.915627265 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.335230637 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.922765351 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.901376197 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.899012477 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.902669375 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.920189362 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.334551517 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.910620149 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.926222164 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.952725367 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.904819836 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.193675326 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.93208859 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.919121805 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.914834564 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.905686591 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.901783406 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.196799487 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.359579884 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.92773013 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.903798079 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.904676549 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.91852715 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.906248418 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.901042299 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.20772349 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.929354633 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.919056815 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.029055229 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.917502378 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.938552749 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.904766173 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.909124853 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.950244108 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.920168184 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.93905589 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.906213118 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918887459 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.923624436 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.90260095 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.918030693 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.918207532 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.904178606 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.913405 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.903586129 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.950869669 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.918462993 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.917997649 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.927162934 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.030913089 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.904021668 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.195601921 seconds)
done (took 299.021603508 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.979037399 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.902278761 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.991471357 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.902654439 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.988568268 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.972399834 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.903624684 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.904201627 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.903335483 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.400212956 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.900961408 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.90798404 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.90048719 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.902295024 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.969874265 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.902428529 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.902369205 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.185759376 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.903273704 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.982398001 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.900308924 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.903540562 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.902411096 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.404253803 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.903188617 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.902010364 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.981569603 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.903424915 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.191431762 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.902825011 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.901471459 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.191989301 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.982682458 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.915885785 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.913601107 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.909864017 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.990268912 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.912954884 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.969803918 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.971755597 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.994706512 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.935196343 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.903276964 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.902627539 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.909373873 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.904286565 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.904705511 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.935406996 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.902585278 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.911307584 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.187671823 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.909535024 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.911729481 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.904719737 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.905356531 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.91605949 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.905211101 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.905679097 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.984283617 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.904239635 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.972134109 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.406531988 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.415279542 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.904777803 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.902930949 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.904252458 seconds)
  done (took 186.840140948 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.968455992 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.980829173 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.968178046 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.908542847 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.953627288 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.970741091 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.91023535 seconds)
  done (took 15.496474732 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.911801236 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.906150441 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.956290112 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.955500306 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.905287138 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.083270449 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.91676459 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.910756332 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.931954503 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.906488534 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.568611073 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.957100926 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.911202861 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.90766827 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.917181066 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.963984514 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.906812153 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.905829523 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.015345417 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.054048182 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.911398533 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.914073457 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.933324052 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.918626408 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.907891842 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.906582358 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.909351002 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.913440925 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.907017877 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.906738385 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.907546215 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.958048061 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.90743744 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.906764321 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.907440752 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.909195129 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.906566887 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.907231833 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.908044982 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.907295957 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.906760888 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.906707742 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.9074432 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.908496932 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.907559314 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.930398339 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.90848662 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.908186212 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.907550652 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.908725456 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.933140767 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.90892856 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.910717542 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.913406239 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.950799521 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.915299059 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.90795051 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.908946761 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.908823949 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.909153002 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.908402752 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.056375826 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.960408213 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.909952363 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.959711599 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.062318493 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.909660633 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.908768131 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.909591724 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.002061397 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.908442102 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.959565501 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.908524809 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.024458058 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.909549862 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.086550319 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.931616508 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.911877243 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.912556458 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.909946223 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.916324408 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.910149587 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.910900011 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.916181922 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.9145662 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.910085376 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.909815867 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.910867264 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.916495274 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.909751421 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.960707932 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.910009378 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.91042062 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.04930052 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.910129036 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.018857538 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.937299057 seconds)
  done (took 209.727978536 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.917215805 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.917282074 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.9116347 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.924799064 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.911825744 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.909732681 seconds)
  done (took 13.332854662 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.912929333 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.914880255 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.911464861 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.911197354 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.910742671 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.910579422 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.912063933 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.913001317 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.914117649 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.911667919 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.911007456 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.9118163 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.911587722 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.910474469 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.912818019 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.911547838 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.912192138 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.910838813 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.911366781 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.910910227 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.045427412 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.911103219 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.912755464 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.91399253 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.913757925 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.912154817 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.92271899 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.912346209 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.912087204 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.918700671 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.914265282 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.911068167 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.914361043 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.917144102 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.915013371 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.914376825 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.916598298 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.911803717 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.914759252 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.912951543 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.911768712 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.912526603 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.91182597 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.912951886 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.914598164 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.918695996 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.917283112 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.925669529 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.913896751 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.914318432 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.913661743 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.911914532 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.912125077 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.912796245 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.916098485 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.91835561 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.916836545 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.915128546 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.913390027 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.916409851 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.917362798 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.913772304 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.915099334 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.916939972 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.918878829 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.914506279 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.917400953 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.916476044 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.913925572 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.917993626 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.916061664 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.91506716 seconds)
  done (took 140.793868732 seconds)
done (took 568.036213661 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.212494744 seconds)
  done (took 9.056751865 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.012992746 seconds)
  done (took 8.862062798 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.481115005 seconds)
  done (took 10.325851795 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.963565674 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.91962097 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.918257958 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.91416571 seconds)
  done (took 29.567901775 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.184639156 seconds)
  done (took 9.029535094 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.923755668 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.926713668 seconds)
  done (took 15.772185611 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.94936121 seconds)
  done (took 8.797207351 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.271902051 seconds)
  done (took 9.130292826 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.935691786 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.931511503 seconds)
  done (took 15.733142589 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.916515228 seconds)
  done (took 8.761450446 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.632438155 seconds)
  done (took 9.580593005 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.929911165 seconds)
  done (took 8.793360847 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.943365713 seconds)
  done (took 8.791771986 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.137169231 seconds)
  done (took 9.983507117 seconds)
done (took 164.030815772 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.918224896 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.916900292 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.91522028 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.914847019 seconds)
  done (took 29.510628683 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.952146509 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.952529408 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.960661263 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.951631471 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.946198 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.941800466 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.952348068 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.952783022 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.941714537 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.94997103 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.95215346 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.950246617 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.95136121 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.961205981 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.960520949 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.950265035 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.953054275 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.952927219 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.943384301 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.962152984 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.951396987 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.951280714 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.917285587 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.919367274 seconds)
  done (took 48.625394432 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.108983225 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.983311472 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.069985495 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.962463359 seconds)
  done (took 9.972240542 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.916345437 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.982427069 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.968704875 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.963437824 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.04006877 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.023643856 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.970871126 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.155540259 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.033642422 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.045693413 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.925888443 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.938887144 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.943409057 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.967561898 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.020800888 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.918163095 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.91897679 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.066833562 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.98019428 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.128406725 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.920674159 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.973190469 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.003782034 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.970589802 seconds)
  done (took 49.62587609 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.918862724 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.927244892 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.92636802 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.920270475 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.920067354 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.919975424 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.926024419 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.921293628 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.940915547 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.921335618 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.922194347 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.920043553 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.926394194 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.920322476 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.92044888 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.934311915 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.93439833 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.920659894 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.923829441 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.927116281 seconds)
  done (took 40.341423579 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.917278467 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.765094778 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.263783319 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.16898483 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.918926519 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.918474659 seconds)
  done (took 31.80164722 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.930589092 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.924272987 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.919419742 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.975590096 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.055740298 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.925750017 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.919765577 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.929031448 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.962450314 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.98555951 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.936478686 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.945056929 seconds)
  done (took 25.260431065 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.919153146 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.921731038 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.923298712 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.935166505 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.928239782 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.926167992 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.926937414 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.918497277 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.934419622 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.936802231 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.926840147 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.930225505 seconds)
  done (took 44.980382516 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.135796881 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.146908076 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.143340237 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.277037288 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.904709783 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.818321885 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.699813909 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.727733037 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.221446746 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.904875111 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.888462824 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.80305722 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.161975928 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.922027878 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.183465761 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.854618434 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.92231983 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192620007 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.925145069 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.927152651 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.223504256 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.983190364 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.13545163 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.968702975 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.134946842 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.188193519 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.166309973 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.180381242 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.266381677 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.128800683 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 4.859926263 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.965115635 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.931798204 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.933400404 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.923803957 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.935348943 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193896284 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.924586249 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.067260223 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.940122599 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.849265896 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.349778789 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.048140295 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.332882378 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.054218361 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.164386145 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.927791007 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.853855187 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.979616681 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.264090732 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.039478064 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.137043143 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.84944114 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.357997557 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.059061993 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.925150675 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.928226218 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.622697039 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.164528449 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.004308514 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.338368445 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.046971899 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.926340127 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.01197486 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.925064242 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.037463188 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.111943282 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.929434968 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.921587784 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.93026455 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.021038386 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.139145571 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.92594838 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926161228 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.941724509 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.927705049 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.276439883 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.240817509 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.914847349 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.484430305 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.199588893 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.889274683 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.201045856 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.967253412 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.216441388 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.144885352 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.003359425 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.168441799 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.812576948 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.929423429 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.732405874 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.005377266 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.988446132 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.924621837 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.862771506 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.328473381 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.054252317 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.924918734 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.852224232 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.936938973 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.127810291 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.199079651 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.97871468 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.926096523 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.933015863 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.928091896 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.928993164 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.940454052 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.936534284 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.842882884 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.227134478 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.034543127 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.190853314 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.922116367 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.609359359 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.198361535 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.054851649 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.550425747 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.057341786 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.761155697 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.061029913 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.936178757 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.931562375 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.113322823 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.331430979 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.861168697 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.163480323 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.029551563 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.956935409 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.93033848 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.009227212 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.151951635 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.925059238 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.185710064 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.171570658 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.597886669 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.019970317 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.998563751 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.934758354 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.139633204 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.008262768 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.447311024 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.155640185 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.255454031 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.904074798 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.426734246 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.261678649 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.317975214 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.941188524 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 4.857864757 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.952357653 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.628025203 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.85227325 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.932702314 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.275396116 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.969781091 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.014942164 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.928674882 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.928300372 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.935670119 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.009409268 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.996746602 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.000985014 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.853961106 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.929972136 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929715527 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.926813581 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.45870755 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.655100829 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.215774357 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.927280721 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.000497722 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.928850767 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.513080778 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.931123098 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.055006723 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.059321085 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.73831771 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.956293019 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.261711789 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.347898471 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.05182708 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.928946166 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.930671222 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.629569236 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.937085383 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.629257929 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.227430966 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.93487883 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.392512862 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.000540888 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.009108226 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.943297654 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.930470827 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.93211087 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.931718466 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.133105209 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.460114901 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.338443848 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.289224694 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.016888608 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.204317418 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.125520821 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.205071186 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.616956459 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.459542466 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.156360118 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.931653567 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.935302353 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.589018135 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.939977081 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.147015107 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.134419537 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.209318043 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.23512384 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.345563144 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.937051786 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.949475499 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.172481379 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.931350849 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.360904232 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.028973069 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.366226707 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.752638009 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.202597086 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.00390276 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.943606026 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.588042057 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075619936 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.884045326 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.059934837 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.857328588 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.712306509 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224269228 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.209777853 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.919281471 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.291704953 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.226821525 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.274605945 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.569574468 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.788233994 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.98050962 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.013502012 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.936999085 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.243422052 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.967204688 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.981083856 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.938009197 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.933315079 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.934381059 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.608360045 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.009952662 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.066177006 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.71584962 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.228862941 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.836169829 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.220187 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.993019995 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.390076563 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.976321905 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.147412602 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.938268437 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.26462481 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.975417469 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.226224465 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.891795767 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.147447574 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.142995937 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.951903727 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.938221766 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.859875002 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.798003518 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.937727997 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.872209502 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.818689042 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.936844465 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.245384635 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.311847941 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.963529849 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.936294814 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.362635584 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.431896427 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.122898205 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.941915932 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.147845645 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.054807082 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.853976118 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.417981891 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.51659871 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.634821804 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.946480786 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.13808366 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.354353315 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.990837006 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.965669451 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.013173507 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.211167857 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.918078577 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.936517225 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.455043814 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.033289543 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.177206178 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.256780651 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.280093183 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.39787181 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.186207397 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.925258358 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.155578571 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.318525958 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.183236515 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.942929209 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.027670858 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.151104035 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.221405602 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.814002483 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.646222383 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.178540846 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.941090397 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.862819072 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.14494473 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.435404498 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.302932765 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.471535589 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.87683766 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.959553751 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.420691698 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.952814843 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.87152552 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.941031773 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.885843846 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.151877364 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.875099032 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.970027801 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.494237444 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.289081728 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.358306409 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.933233794 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.969790568 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.863989813 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.708892161 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.886768913 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.035217759 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.977529586 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.009835874 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.940724701 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.141424618 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.378510969 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.984976483 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.469380297 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.157030453 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241698882 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.213508777 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.256119172 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.897406975 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210729498 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.895640672 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.367829098 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.019028669 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.0327167 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.938834738 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.942245779 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211167889 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.366404189 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.339961009 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.969496495 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.370124605 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.049963636 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.94224287 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.94589823 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.217440394 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.170539143 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.154706647 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.017765262 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.141827405 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.012841112 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.453818972 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.944602503 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.942989922 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.077159781 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.788273179 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.739445574 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.242928924 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.68867327 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.143452705 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.46011968 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.795491378 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.882111711 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.981425462 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.941098145 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.945201347 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.059584646 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.181697533 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.220346375 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.710402951 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.951802215 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.943741715 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.799744139 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.710799312 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.179336536 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.960002016 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.991133144 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.947777335 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.061107801 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.95271006 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.216778281 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.0032206 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.944557009 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.946254921 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.158692902 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.458754943 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.962311953 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.644036198 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.147987596 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.953772212 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.428601424 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.412007995 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.965288257 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.98238957 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.887773937 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.198882668 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.46601162 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.89230881 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.935563447 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.171958461 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.947210243 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217804675 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220178801 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.946292 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.1620269 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.215854978 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22930751 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.956063145 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.811516867 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.949004039 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.222467736 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.001451773 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.946200423 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.954811121 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.484208114 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.722612075 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.445755456 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.097640723 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.362552669 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.834473014 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.704211748 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.948970158 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.949959726 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.662875089 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.668467212 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.161036298 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.231617158 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.899090197 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.150078624 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.650555391 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.810643893 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.212832667 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.873895694 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.950673301 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.381226814 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.216172683 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.884992806 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.951822848 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.56059847 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.945988854 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.031006389 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.949024999 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.074708431 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.224648499 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.429083744 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.071036971 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.587525979 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.681283937 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.88916816 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.991973167 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.754972961 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.511182324 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.684870863 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.971054302 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.964752137 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.875416943 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.951682093 seconds)
  done (took 1665.26910668 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.973192492 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.033010523 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.999464381 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.01835201 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.996377249 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.980831263 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.998811784 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.004994044 seconds)
  done (took 57.883011101 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.948282245 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.962908188 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.953337755 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.94951665 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.979371614 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.948991106 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.104061906 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.957518382 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.953202714 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.954408098 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.951245427 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.94914257 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.220731687 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.964780907 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.950159931 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.951839655 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.976889713 seconds)
  done (took 75.584358339 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.952935621 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.083776654 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.00275166 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.949990869 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.428657332 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.951559395 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.797833562 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.998372374 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.952768212 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.172925092 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.244564441 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.998240368 seconds)
  done (took 90.414179635 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.95535655 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.951820953 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.950991139 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.950326636 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.950331916 seconds)
  done (took 11.641795288 seconds)
done (took 2182.789151238 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.213595201 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.007523306 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.045263268 seconds)
  done (took 5.932000936 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.09688915 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.143099354 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.255048843 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.021406214 seconds)
  done (took 10.401821302 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.207907008 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.316505012 seconds)
  done (took 6.405272383 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.298168861 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.961240625 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.315829337 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.955036158 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.958252433 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.958605808 seconds)
  done (took 22.757687745 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.953557888 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.954422953 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.9547455 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.953337372 seconds)
  done (took 9.696326287 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.952065726 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.733919713 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.958385047 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.967536863 seconds)
  done (took 21.493094788 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.092380579 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.101887934 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.090579312 seconds)
  done (took 8.165742274 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.100707789 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.159428165 seconds)
  done (took 7.140840636 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.095824019 seconds)
  done (took 3.97688965 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.983791282 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.223639346 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.425827122 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.879947244 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.623623158 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.039929399 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.33878583 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.221626852 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.375100456 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.419120521 seconds)
  done (took 26.413734198 seconds)
done (took 138.053103345 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.481705702 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.978368116 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.178152988 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.340992866 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.197267155 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.173848896 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.18115837 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.343127832 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.028659854 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.997239673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.33143424 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.201174266 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.125357174 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.970829618 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.1333075 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.988026685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.198275949 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.344352143 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.013015338 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.234171341 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.190910069 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.980690818 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.186959431 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.997642257 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.200348349 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.125103012 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.529165337 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.989492578 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.169893609 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.542358148 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.127649366 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.376601859 seconds)
  done (took 171.753997701 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.9670896 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.967141778 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.968600492 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.968529495 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.24990675 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.969079461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.971070451 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.968238882 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.174528649 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.157780264 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.967518176 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.231120986 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.969430633 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.967835041 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.969734906 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.96783138 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.342497179 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.968165734 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.970224222 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.968248381 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.970538398 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.081193289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.96992101 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.093207156 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.312029977 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.97142358 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.969712892 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.968070858 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.96929155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.968956073 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.969788557 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.968976631 seconds)
  done (took 210.79464872 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.967970419 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.969173874 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.969892205 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.969143704 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.969685102 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.973177233 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.971031477 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.968572991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.662683614 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.638450462 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.970389462 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.97094711 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.9699693 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.969290371 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.968084436 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.970232514 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.968780949 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.970126911 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.97006642 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.973115779 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.968961242 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.608075815 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.984575865 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.612600549 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.974476218 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.967530975 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.967738267 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.969007477 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.970504786 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.971185895 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.9708876 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.963590827 seconds)
  done (took 223.588391641 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.199349156 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.96386069 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.958965591 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.962623966 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.95299354 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.95092469 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.957471795 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.200833011 seconds)
  done (took 20.047797702 seconds)
done (took 628.098188927 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.313004871 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.677424843 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.085386412 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.969175309 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.184470875 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.012222426 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.962426122 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.028736607 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.816607053 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.04345888 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.375197934 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.970702302 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.736866423 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.997400295 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.090525327 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.022895645 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.324472555 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.664354296 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.110409596 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.597717658 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.127072713 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.894934201 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.040590798 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.845515656 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.394599166 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.926743467 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.988991059 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.332490016 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.968488735 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.125461985 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.57481894 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.24587663 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.983315313 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.968944653 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.019894432 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.999478479 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.18915568 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.983726749 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.092208665 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.682351324 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.600000679 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.685822816 seconds)
  done (took 103.531393876 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.949535313 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.945570432 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.946341546 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.945637613 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.954874227 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.946769469 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.944977895 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.945628885 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.947267575 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.945942393 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.946105418 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.957851328 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.94678549 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.955469137 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.945938206 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.946861751 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.947092521 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.954961953 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.946726751 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.947549748 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.947202419 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.947368282 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.941856511 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.947138953 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.947342001 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.947785782 seconds)
  done (took 52.534305558 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.943071185 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.132195634 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.187938742 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.963114642 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.943321384 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.946376611 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.971568774 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.954435699 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.943007551 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.942374703 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.061084899 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.946250264 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.955666694 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.183718457 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.958315579 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.939252548 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.938687979 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.941729609 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.133296787 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.952132832 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.966669522 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.943187237 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.968849873 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.9525824 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.935566529 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.933914661 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.935223142 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.40805367 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.943084953 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.052363993 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.00760147 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.962589087 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.279607489 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.183234814 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.986570356 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.935542347 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.929687825 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.057660177 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.933522414 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.927733202 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.955218118 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.934697327 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.177385778 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.456078118 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.940755601 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.924210929 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.392689051 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.062812573 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.967712732 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.934449299 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.177521367 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.941432102 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.924393708 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.920946128 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.958159279 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.933700399 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.92201846 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.215751231 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.934788147 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.950083096 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.929082795 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.920245884 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.128595115 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.926863571 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.109387902 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.927376095 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.923498566 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.925904516 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.162519009 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.9337494 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.453189515 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.931169124 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.917742223 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.031655707 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.111051962 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.409014124 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.926792885 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.12239671 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.268167853 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.947658981 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.925706938 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.367281432 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.949002022 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.918330876 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.90816491 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.908172724 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.912878605 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.96009222 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.932310759 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.368578821 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.444032465 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.216454501 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.947190879 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.918342014 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.906626305 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.19456039 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.920228813 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.903109778 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.142988259 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.45620449 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.921062026 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.912079262 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.417428343 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.921655482 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.931567788 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.914646027 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.163601899 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.918422505 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.956039482 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.902160816 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.907509058 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.908579167 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.929677854 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.910942199 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.899937453 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.406605288 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.043188337 seconds)
  done (took 238.856511812 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.902096642 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.899811734 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.900539261 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.899329723 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.897859322 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.899194511 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.898221159 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.898647755 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.900724941 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.899185161 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.89789946 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.899762345 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.900115019 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.898701942 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.950739045 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.902336379 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.390775773 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.899895147 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.900856097 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.902087678 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.464266531 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.907937737 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.901232002 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.903186496 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.900209945 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.901556811 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.905779687 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.9403312 seconds)
  done (took 168.199207383 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.902139929 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.957777897 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.91424287 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.949955269 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.916041545 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.902449541 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.001695235 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.922137124 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.913289858 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.904108802 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.902633543 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.93441875 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.911696656 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.000316053 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.937330209 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.013693177 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.008918732 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.914170782 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.902768976 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.902506162 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.949418485 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.917822922 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.935823326 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.967097984 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.915804186 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.959000715 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.91822503 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.904116412 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.902364773 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.016173888 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.925868561 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.934774649 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.939322272 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.923960865 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.023790864 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.022586016 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.009664091 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.011160339 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.91266745 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.904665633 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.904510328 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.905183792 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.959921192 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.921826583 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.906007456 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.019684612 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.921945067 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.904285593 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.904994304 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.905118834 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.917598984 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.925314395 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.945698196 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.028545118 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.954872394 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.931370928 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.001276272 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.027272251 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.905867438 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.00094837 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.915343532 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.018615952 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.929064052 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.906255753 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.906080961 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.908753465 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.955308633 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.016043781 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.012849366 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.916249994 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.002855502 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.964384378 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.919590339 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.906585412 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.907904087 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.960784685 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.015107232 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.96423574 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.971447184 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.941931732 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.920596823 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.906097691 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.907870765 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.934356693 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.915954422 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.018426806 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.025946459 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.917372581 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.906961614 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.90774272 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.907032961 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.935066602 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.974105444 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.947686049 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.013371457 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.947097928 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.945803534 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.916001214 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.920114367 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.91742103 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.940735973 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.915081888 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.919730394 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.191801848 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.939208505 seconds)
  done (took 206.170472423 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.27678317 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.9551213 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.984637675 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.182578616 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.287465658 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.824045806 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.949091384 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.963449148 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.970392063 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.089653837 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.017711241 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.996010593 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.950979782 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.9335786 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.955149125 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.971350602 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.004061195 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.264562185 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.149275786 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.473458276 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.951834258 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.216930338 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.287811012 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.328553312 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.010205959 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.326472944 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.536386116 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.052878825 seconds)
  done (took 63.753397219 seconds)
done (took 834.923306345 seconds)
SAVING RESULT...
DONE!
