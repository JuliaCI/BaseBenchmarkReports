cset: moving following pidspec: 14723
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.499101088 seconds)
loading group "string"... done (took 0.524380706 seconds)
loading group "linalg"... done (took 8.927894554 seconds)
loading group "parallel"... done (took 0.174669148 seconds)
loading group "find"... done (took 1.287169626 seconds)
loading group "tuple"... done (took 1.922829135 seconds)
loading group "dates"... done (took 1.355471404 seconds)
loading group "micro"... done (took 0.195177157 seconds)
loading group "io"... done (took 0.509880864 seconds)
loading group "scalar"... done (took 50.996398973 seconds)
loading group "sparse"... done (took 14.095025349 seconds)
loading group "broadcast"... done (took 1.329699025 seconds)
loading group "union"... done (took 10.274671952 seconds)
loading group "simd"... done (took 3.065898868 seconds)
loading group "random"... done (took 11.612152192 seconds)
loading group "problem"... done (took 2.23607039 seconds)
loading group "array"... done (took 24.512071856 seconds)
loading group "misc"... done (took 1.15381048 seconds)
loading group "sort"... done (took 3.825022615 seconds)
loading group "collection"... done (took 19.466139609 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.616202923 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.182430726 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.202444199 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.284926246 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.237580555 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.153986988 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.13687877 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.258934191 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.701183919 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208608443 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.12715586 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.507628603 seconds)
done (took 6.446651697 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253947633 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.179215425 seconds)
    (2/2) benchmarking "String"...
    done (took 0.166763555 seconds)
  done (took 1.116919634 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072060646 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.151556256 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.103799526 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.090506845 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.089113275 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.104831807 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.089099841 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.104565956 seconds)
  done (took 1.507804537 seconds)
done (took 3.726529649 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.497077407 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.874771456 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.523516657 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.159889158 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.294547766 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.293316351 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.328863008 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.201083196 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.087421796 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086829513 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172319164 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.429730533 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.430608674 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.016374118 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.086564782 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.110965741 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.114936047 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.807739243 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.075424535 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110980399 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.509209379 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.190960628 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11027127 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.108259076 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18110196 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129609233 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.158276543 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100615244 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.668167195 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.129211033 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.184734162 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.094905865 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.156577981 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.190295692 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.203122973 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.088456849 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.715210158 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198636418 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.090564455 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.095903531 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677928415 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.115852237 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.182838859 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10016848 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088303526 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.190603578 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.09342667 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.074067776 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.112425462 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.081632507 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16267914 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.439796794 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.102822578 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.167893613 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.088833595 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.726822251 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097039661 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273741751 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122381011 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.088498357 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.087655802 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.084031866 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158514444 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.091664268 seconds)
  done (took 20.230088577 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.146353847 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.163764199 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07483883 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153040231 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120754255 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076237755 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09790354 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075074064 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.105706874 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.237796912 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133263626 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.150431753 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.087937463 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085608361 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.122661086 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244140643 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.101841578 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.117056331 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085394301 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086572131 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.135949881 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.092487524 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087052746 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107239253 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165751212 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20238135 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106635492 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11990541 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.084468841 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.092290853 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138431565 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.1430822 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091015074 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082562175 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.167900318 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118969437 seconds)
  done (took 5.193494172 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.197199944 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120171163 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.211999749 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.159339612 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.101756518 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.122354901 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167858896 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.143632791 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.2803042 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.258357967 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.174599388 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110154004 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.117932174 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07717071 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076317851 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074619137 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.482689656 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.133242611 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.170669423 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.128531587 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105961854 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.09406029 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369399567 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095282001 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078782942 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082804929 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065522978 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.19506622 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101058652 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.055770447 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.103757803 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084851974 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130079812 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191831166 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113108941 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135137305 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083222818 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07555065 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.212638349 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107650711 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076007367 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103789777 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131312621 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.10973606 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098750426 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.10640109 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.216598998 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080026748 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100713809 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.090147104 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.192617115 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.121378581 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.076319447 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.280438328 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114920829 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083939289 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077906215 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.277420953 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.111275189 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.077179935 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.093178935 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084571466 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073887782 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.434027627 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104420765 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.188025859 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078182003 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156796642 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081679577 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102389221 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083667275 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081833414 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116470395 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078974899 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075964469 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09205995 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078300995 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.075838529 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.096813236 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094803341 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081199928 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094609136 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144885988 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096465898 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114174802 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106519079 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099110484 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077530661 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124698962 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079553275 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080728895 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.1689989 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084213115 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.157141897 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078152318 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110728399 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083452387 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142143631 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079974854 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.236399381 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079475938 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103793478 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098301349 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124733801 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098451145 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076594233 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098005544 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075904892 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077068064 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157353424 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080473661 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079543663 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.079598444 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108452036 seconds)
  done (took 23.11373371 seconds)
done (took 49.30677355 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.441918945 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085163974 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084282762 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106747972 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085453999 seconds)
  done (took 1.653211712 seconds)
done (took 2.47793531 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.319071358 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196788845 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09755585 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.192771046 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083357396 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.199031837 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.185308697 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.091813283 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.211659403 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082118239 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.190685899 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081796256 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102042335 seconds)
  done (took 2.881643907 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101869528 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104635381 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.115389894 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097949496 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080243231 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095703621 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113605587 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10721943 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095257499 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107468893 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080294652 seconds)
  done (took 1.926405405 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098775764 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102839711 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086417332 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113011182 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079682645 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093461996 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110913148 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103919094 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092708621 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108859135 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080218875 seconds)
  done (took 1.901079185 seconds)
done (took 7.528408556 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.142432293 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 27.726571964 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.169699776 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.286327527 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.342993221 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.249100113 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.667327868 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.152527525 seconds)
  done (took 32.716044711 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.110781072 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.153130165 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088900918 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086103062 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089158834 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.109337656 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.090685283 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084052482 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.106340309 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093065034 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.090139415 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.105976011 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088159236 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085594301 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087421402 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102911619 seconds)
  done (took 2.462913279 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.137118358 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110320814 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110322158 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.092518381 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087515219 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.11180978 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09437036 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088990723 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.108386962 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088228587 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095190351 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109150068 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090853835 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.085747109 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108861285 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117673805 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08676902 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108129743 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116996798 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090952681 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110245625 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.090300343 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090285564 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.110008652 seconds)
  done (took 3.347802798 seconds)
done (took 39.356282366 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150507054 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098946501 seconds)
  done (took 1.076302964 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.140642362 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156316255 seconds)
  done (took 1.134787793 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109381292 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082562736 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133436357 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09814306 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083891836 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.102082717 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.111658096 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.100939093 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084812811 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08385595 seconds)
  done (took 1.827690566 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089794703 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088305032 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.117089946 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.136083467 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110752834 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.089355322 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088303189 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087004051 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108665329 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.084550138 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093356061 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.121918951 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089915867 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121008451 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090138429 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.090114832 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.111736998 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.090372738 seconds)
  done (took 2.64957824 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.086500132 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.085767023 seconds)
  done (took 1.014627093 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089245058 seconds)
    (2/7) benchmarking "second"...
    done (took 0.083836308 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085332613 seconds)
    (4/7) benchmarking "year"...
    done (took 0.105265423 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083927668 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083505142 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.101345591 seconds)
  done (took 1.474894179 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.493707709 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.265087027 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.367965348 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.100911346 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.139739869 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.336938159 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.140525181 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.097641769 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.095553073 seconds)
  done (took 2.914617235 seconds)
done (took 12.922320758 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092409459 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.215144042 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.628167898 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.226775869 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.082850095 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162828898 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.288590252 seconds)
done (took 2.540742619 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354218149 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.149240576 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085995361 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08533392 seconds)
  done (took 1.51470156 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08069986 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09209598 seconds)
  done (took 1.022808635 seconds)
done (took 3.383937272 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085603132 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.105891522 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.101784416 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.083423326 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083225826 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.08070521 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.102021428 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082560172 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083553185 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.08180027 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.104282112 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.084551981 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.082475974 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09973408 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083107966 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0812 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081922179 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.099846114 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083475512 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079895426 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079829074 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101352097 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081384053 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080737205 seconds)
  done (took 2.996824977 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109494769 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083957651 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104196244 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088759085 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.086779852 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104598649 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088457755 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.083441626 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086046684 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.104215409 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087110686 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085792266 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102700908 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087533963 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084775715 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.105235003 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087206669 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083358635 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102159189 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087883278 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086149422 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101853065 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087334729 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086178624 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.103627576 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087349771 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084427637 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101291387 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088863866 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085932898 seconds)
  done (took 3.620106475 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096069248 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.082600193 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085943274 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113047888 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.083451789 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085564442 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.099385307 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083513378 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.087375593 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.085169404 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.105210098 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086801132 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.081863936 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.105213143 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.088269997 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.088984512 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094191999 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.101718708 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083672797 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.086563935 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.107061967 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084444466 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.085651632 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085506022 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.105252189 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084726917 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.085499011 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.103862849 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.088280137 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.085102149 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.088945464 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.107617152 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.086692311 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096751524 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.10772202 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.086942851 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092179824 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082238315 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.107306288 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.083532307 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082947138 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.104237799 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.084367484 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.09283779 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.085731381 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.106860587 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084539901 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.086887848 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.104438247 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09046766 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082941379 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083391396 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.107292208 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.087700546 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.087852828 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.100468122 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.087945867 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08238354 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.086772129 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.10390452 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.083307736 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082475599 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.109811968 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.087708366 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.100948738 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.109301794 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08514394 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.088494393 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.08716282 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.10927315 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.089506802 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095727722 seconds)
  done (took 7.499679405 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100423642 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091039608 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083219225 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102611584 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083359313 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083669581 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10628871 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085435546 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084326436 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.107855552 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08606077 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083181222 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083316778 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103203466 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085210773 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083961711 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108660665 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084303642 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.083473472 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103120163 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085576729 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088032082 seconds)
  done (took 2.864752862 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.228445644 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090907629 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.132468889 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115984594 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10076084 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.115954087 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089469594 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089793507 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105972384 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093892255 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091275709 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106522794 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102118118 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090900665 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112092735 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093966148 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08721319 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.1151228 seconds)
  done (took 2.82045219 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101450809 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.085414253 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125781326 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.08595739 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085975894 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085992524 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109803367 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107365995 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086186312 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.104623658 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093464344 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086104827 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.105657937 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085527435 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086611078 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10706194 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.088862267 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084992202 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111251765 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091400974 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090837947 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11172623 seconds)
  done (took 2.979448834 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104077367 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.086385488 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.121731862 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089197454 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084802008 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085021925 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.110781582 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.085730775 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091040611 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.104778705 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086140678 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085073036 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.118641557 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085643271 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.089783477 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104078986 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087118917 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085266483 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103407572 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086550729 seconds)
  done (took 2.756734232 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.172890571 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122914474 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105380606 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111316105 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124153664 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106155377 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111284863 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125821568 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10453501 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133697145 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105709624 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106180883 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132310982 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110022042 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103174508 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132780196 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113435135 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132752799 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106507606 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10532322 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135744281 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104269387 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132606249 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106287618 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104890462 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124489704 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106165353 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109323068 seconds)
  done (took 4.152790735 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088863317 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085553289 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083275089 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.103062755 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.08436018 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08386191 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08418019 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.10357575 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085471058 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083521289 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.103993609 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08793479 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084887442 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.0859491 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104005967 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.086618795 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084550578 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083169967 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104034304 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084379127 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.085289211 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103807194 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085557523 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083329012 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083742859 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.10419991 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083796085 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082768859 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102964079 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08530433 seconds)
  done (took 3.56129851 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.098674969 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093586273 seconds)
  done (took 1.060537841 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.097369733 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10016825 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084375153 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10474066 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091515322 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084665686 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.1124555 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092169228 seconds)
  done (took 1.634517282 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.144919409 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.161133765 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091116733 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097825847 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.161935455 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.153593456 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132747673 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090319025 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106689089 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082239927 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.155247117 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081742617 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08993104 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085108974 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109443991 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093755997 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085169437 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.115574408 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.093682455 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.087954329 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110802042 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095362814 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09028084 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.115518687 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083366423 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089602445 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112161461 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100823172 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08586417 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111577559 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088820988 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.084781183 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.109443722 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.092981892 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.086842936 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.161520379 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096550115 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10392316 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091165181 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09152058 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118682549 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.107123394 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090134301 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.086070949 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113622959 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.091199247 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090756515 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.105307746 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082711376 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085202868 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.104775226 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086181827 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.085174862 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107784267 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091023014 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096015969 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.10693073 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086859908 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084654215 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.083211325 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.10782202 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085875499 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091124107 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.110348029 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091024895 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089150193 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.1073166 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.086047414 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.08720555 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.105101754 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.089847332 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103580982 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109536556 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.092360661 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090538905 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.105309042 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087667933 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091581479 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105818775 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092165455 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.090923432 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114618046 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111302974 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08402277 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084276672 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.113207667 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.089754435 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089424881 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.101669947 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099013236 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.088818242 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.107973278 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082839342 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088085377 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103872646 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.091020074 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083023683 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089428881 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.104546565 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.091924051 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091481958 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106937865 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091661423 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092360162 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112171264 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089727326 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.153037721 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088301814 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085230959 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.088324579 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112408086 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084016305 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088867748 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.105974157 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087846935 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085385753 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.110407954 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091464801 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08995175 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.091604116 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112003513 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091988357 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.088441174 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.106526 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086182378 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.090855147 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113250433 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092074377 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.088057285 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.106103415 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.088381729 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088861507 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.111155311 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088440666 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091815117 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104701724 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.087846496 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.088579113 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.091297578 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109103028 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08548022 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088293725 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109500236 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.089419336 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09008613 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109383294 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08568613 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08174548 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.110494481 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08665126 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.086941484 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114756505 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087801888 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.090237306 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085436065 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114935373 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086206361 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.09123982 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109649199 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.093633681 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091157538 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101529589 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088081767 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.088866075 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110278011 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087322885 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.086436226 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.08670284 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.113913675 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083519284 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.090549897 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.10159641 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088022532 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.091971021 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.107297195 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.091289598 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085730116 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.145602483 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101649541 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092598598 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108680592 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091579631 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.09122968 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087969157 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.110715018 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093967924 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091993007 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109912217 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089565641 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091918882 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10616505 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.089445911 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088421604 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111096312 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083233675 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.089053823 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081233976 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.111473045 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092469552 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091928584 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.113023767 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091000631 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088865973 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114638873 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087197682 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.09105475 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100727109 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.094219235 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.096908647 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092666652 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11280158 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092331687 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086971504 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.108348176 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098497859 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089153828 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109753259 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.088847709 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08294199 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.10178425 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.094895898 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.091248087 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085648922 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.106663928 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092350776 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093214782 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.108386949 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084090717 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.091334051 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113690275 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087009886 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090415951 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106073772 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089635764 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098383906 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101333132 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089388513 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092316385 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.111466678 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.088240175 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089444872 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.090077396 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.115382908 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.091365043 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.088741283 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108629212 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097501551 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087689216 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.105049831 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088430983 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.090645062 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082525137 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.109134286 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09042973 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087136533 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105557761 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095969345 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093733327 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.113137727 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08939079 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.091312203 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.111957297 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.094904195 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08842791 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.092812828 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106035294 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083353301 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086615402 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103569831 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.090322183 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08559447 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.112451979 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090113811 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088452893 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.110825653 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094335664 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087875987 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.111786509 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101966926 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084293782 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102219806 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089922659 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09004248 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105142333 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.09851148 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.087916974 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091811515 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.112182043 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094637174 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085762721 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.107556613 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.094858525 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09568262 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.11395067 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.095068619 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.094018619 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105920513 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.093200511 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.0879076 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09414714 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10529848 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090422541 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088876357 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110658414 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087749332 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088851095 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107335162 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084548107 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087297669 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.114291054 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091130252 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.093087191 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108821788 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090052824 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087272821 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085433909 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.116622598 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090037879 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.094179625 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.108598733 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085170143 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083804937 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.113174331 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092866752 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.093102457 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104666991 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.095048633 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095447111 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.091746498 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.108959683 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.099091275 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095852512 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.11424003 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098511186 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083399899 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107152141 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0972355 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.087006988 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.110828438 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.091316065 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085001557 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093241224 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.114869796 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093402186 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.089219 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.10495849 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.089623821 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.095570814 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.111107891 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.091832324 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.089431777 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091035623 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105891217 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092319123 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.093790639 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.111149427 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096327214 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090913987 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.113972183 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088763559 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.09356848 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.107634859 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086566039 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084340296 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088050918 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.115439539 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085161013 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.094869727 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.113659498 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088360737 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088726992 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.112704835 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088925557 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094708389 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09373375 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.111181985 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098646626 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.088109343 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109592734 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09459482 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.093162455 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104748588 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091475563 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090256385 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114914664 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090765589 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.093849906 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110014928 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095832142 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.090319962 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.092204599 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.114964422 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.095786366 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084994912 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.11508802 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098037809 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09092185 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106981944 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092028049 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086187577 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089860881 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.116054213 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088972804 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097256955 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.115175661 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090609151 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.088309489 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.114856474 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092150631 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095778406 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107406967 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094785529 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085511381 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113037592 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091638592 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.095461911 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087608237 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10722147 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095110734 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.0935431 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114885515 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095361455 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.094405578 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10565757 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08703223 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09145871 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087218471 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120828883 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09621278 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088870691 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111104222 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.090450727 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.08895394 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115978768 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087837037 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088358166 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.112075845 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094350006 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089563583 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106509568 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.095518205 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090681111 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112335021 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092688372 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086701237 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089967115 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.116763024 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090339431 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087539472 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.109323874 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097353266 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090362673 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.109166355 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088021423 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098146343 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.114697081 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097547464 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088146159 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.111913142 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090557957 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.090133896 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.09527336 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.110561468 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093089793 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.090269741 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116438887 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098309489 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084762844 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10933229 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100411873 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094656582 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115616658 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.09204191 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089800027 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11588617 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097663343 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.090731109 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08549536 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.107779037 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090930721 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085248866 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.111378448 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099049404 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.089859567 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.1091668 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095468957 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093528441 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.089955863 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.11240401 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086368478 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096248375 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109708247 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096693515 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085122987 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.105244214 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.092259385 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095382749 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09039782 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.114072214 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.09093035 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.090165347 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.107382237 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090147877 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.095121059 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115903563 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.096716998 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091096369 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.110195955 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.094314845 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099853946 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.089634052 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112945485 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100967699 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.096171375 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114658461 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092091775 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096126411 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.117484759 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.091888801 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.096016957 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110563754 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.092338602 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.096189112 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.117291332 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103571173 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090647913 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.106611852 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.096004497 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090498801 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085774201 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118596362 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097223795 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.095632831 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.114129584 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089893377 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099631055 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11844403 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092560471 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089354338 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.110793137 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.096418034 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089514397 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.114149637 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091325552 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.096663973 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.095920146 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117950867 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.099985462 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085905271 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120648127 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096355692 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.100453627 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.111521946 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087913751 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08648672 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.111717931 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.099067106 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.097865524 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.092973975 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.114535182 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.095619038 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.093310399 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112957446 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091127268 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.097408596 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.11549973 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.092002169 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.094278897 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090920236 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115420006 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.091125363 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.09604412 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.118016263 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093928621 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099828074 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.118075133 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092926976 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089174087 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113986022 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.094619796 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093767728 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114817805 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09123788 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087324425 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09542795 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.118955361 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093202711 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097460704 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118761591 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092970849 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094924972 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119726545 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.094847544 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.090956276 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113301398 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.095110828 seconds)
  done (took 59.26470599 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148482295 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097777908 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112680827 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093012473 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109693851 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114626858 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092429126 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091439219 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11354866 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105009915 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090888917 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111221394 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109429049 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114117396 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130782128 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101930151 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110889412 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095110274 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092276234 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091466284 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128780583 seconds)
  done (took 3.175771965 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116423015 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.106450814 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123287836 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107342142 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097637572 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.125603443 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102573626 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1252356 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108015144 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099632024 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.127347321 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103755507 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.11971134 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.101050165 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100748093 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122083854 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107214504 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098618538 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.125351194 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104033515 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121601352 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104701883 seconds)
  done (took 3.365649345 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.106040561 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.095878967 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098111524 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.112818657 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.096829958 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.092305682 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120578578 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.09454483 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10094151 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.1133895 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.089967815 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09382399 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097907591 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.113206198 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.090228885 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.092582758 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.121954228 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.096674882 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.098000997 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.111425415 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107779276 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.09198799 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.111991256 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.090409124 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104173883 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.097277742 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.114511846 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.097739399 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.087551877 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.11697332 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.094977027 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093273311 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.113430196 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090841986 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.088105665 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.095545969 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.117618356 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.093780163 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.091981106 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.115475977 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.094397545 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.097152618 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.118425573 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.094319032 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.093702163 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092832528 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.119364511 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.093448534 seconds)
  done (took 5.779425201 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129073224 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.152726096 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09630801 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123117247 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.130455901 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.104103836 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.095642569 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126078484 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.094664528 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.117981478 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.109561124 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106722993 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119654731 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.101793413 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.097559284 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120571229 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098807158 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095713041 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.121952663 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.096630273 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.09975704 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.120606869 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.106283512 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.125902633 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.099986958 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09525118 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.116383574 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.100700599 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.104501607 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.12250174 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.101747142 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.100515119 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.371683709 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.096107233 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096040043 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.1199701 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.110062898 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.097209632 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.121193659 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.095754498 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.098624569 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.121159172 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.100475675 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.108278716 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.11935451 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.098357366 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.09576157 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.115384645 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.105161592 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.118509272 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.104811824 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.107305198 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.119917638 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.09805436 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.099069479 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127756312 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.097898996 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.094737565 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.119557826 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.105907078 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09363513 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120755605 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.106659727 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.097766772 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.124207519 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.107271866 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.118197275 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.100014972 seconds)
  done (took 8.72833003 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136996637 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100483783 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129686064 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109406328 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100864517 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.122801959 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101228599 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.099784051 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122149563 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108000799 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121168475 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.199370284 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.119217944 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.10581129 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100390549 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.123581792 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.101568179 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100277034 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.122764614 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101690842 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.10040729 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130631682 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101458937 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129869173 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113991175 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.096840037 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121389918 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102658697 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108170995 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122604424 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112513328 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.121165115 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103137655 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109571838 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.134089314 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.102219481 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.095468623 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122480496 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10238005 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100660293 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.120306769 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109909274 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100758011 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.120246191 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10282385 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.100736269 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132358626 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.112519684 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12708621 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107961601 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.100680148 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131308303 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101889911 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102291651 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133258026 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.11596095 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131741556 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110605261 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122499587 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111594575 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109170006 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138106969 seconds)
  done (took 8.037842645 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100145913 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094709083 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.092757085 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.115021834 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096779771 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092994748 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09349592 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.116496592 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096569241 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093006852 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115191069 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095214105 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093454283 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094039902 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114945487 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094844286 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093422227 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09252569 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117255588 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093981876 seconds)
  done (took 2.931981972 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109550088 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.112859206 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.115480255 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104370334 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.096436508 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.122095376 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.098889619 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096825072 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095441333 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119687115 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105277534 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104082923 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118701776 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103217288 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125748337 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103651216 seconds)
  done (took 2.673153115 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120898613 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.113082552 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.190072321 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.100300903 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.119035317 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.105099052 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.097020703 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.09744407 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.11908044 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.103719266 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.099996716 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.123051318 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.097467217 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.097807322 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.118415095 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.101299579 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.094837467 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.121473479 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.099190192 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.164119599 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.124366893 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.098639904 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.097801232 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.123974082 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.098432295 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.099723655 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.12644047 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.096892683 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098361163 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.120400582 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.100092245 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.103663876 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.116589636 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.102063753 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098544674 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.118327653 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.0991991 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.097762667 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.099133174 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.120808707 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.100538311 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.097678963 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.119074715 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100859219 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.094692424 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.120104688 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.096489546 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.101965651 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.118750318 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.099863912 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.097478856 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.104515462 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.125128798 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.106055675 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.103786606 seconds)
  done (took 6.955287829 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115367845 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098368471 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.129525853 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098233385 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.099209735 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.09701015 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12103195 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.099319232 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097106734 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.118215969 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099662881 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098476298 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11843791 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099832567 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097419718 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097568776 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.116801863 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.099022008 seconds)
  done (took 2.847596523 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109431792 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096210808 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101567655 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.119005854 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.097141726 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096846116 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116110073 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.098294928 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09623462 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096269774 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118806633 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.097715989 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095212303 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.11856828 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097809093 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097178179 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.118311123 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097905993 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097308822 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095462515 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120759758 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097304974 seconds)
  done (took 3.226743645 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.116217505 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.182512746 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106473553 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.192880096 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.096521977 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095025347 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127938924 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097325834 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.111871817 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118002377 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096278184 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095064113 seconds)
  done (took 2.385682836 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131528387 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135100041 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119264149 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100106879 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105788594 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122976878 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102138873 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100595936 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131935344 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113470357 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122833056 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111712181 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110232391 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131269667 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106503911 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105478781 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124049615 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101331256 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096462501 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139309183 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100963831 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131906082 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10249842 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101165766 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123471567 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111470547 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129902556 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114430407 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100799497 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132943214 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107777423 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100176323 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131850528 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112729771 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119225439 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112072894 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101057512 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13994382 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106991844 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131046346 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099622207 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10619364 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132036085 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107514408 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109725764 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124121347 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107847141 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101139217 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124611158 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123930229 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129342944 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110367614 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106293206 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133832329 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110146931 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144559934 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112723315 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13217187 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107683709 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134373227 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112333539 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105841229 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131676723 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113225645 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127687643 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11088977 seconds)
  done (took 8.636691288 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143410144 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097256782 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122902743 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112915474 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109364915 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124608068 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101400632 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122829539 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103534429 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098600451 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169145188 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102779574 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112316999 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131937471 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101530995 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122689075 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103514712 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108900094 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119362945 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125716302 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101555078 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132379178 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110365255 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131022258 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11463362 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128457344 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104239678 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101961548 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123206137 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103741227 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107525435 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123629274 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111421683 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097989736 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132452181 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102791501 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101997004 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129708568 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103496062 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12868019 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112166256 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116945165 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123950002 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102998697 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133436903 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105240413 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102410692 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09826392 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125701547 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099968805 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134386172 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115787261 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11226287 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132777057 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103242778 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124187114 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105000606 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101736323 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123909433 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10939368 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110028865 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125693333 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124711054 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124259317 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104060919 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110109517 seconds)
  done (took 8.566946296 seconds)
done (took 163.370771925 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.151726327 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.188800795 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.143933518 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.178215124 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093636008 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.126422932 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146623347 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147262672 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.090979156 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115826473 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093695102 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094622117 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.180972355 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093770561 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092114623 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.09472953 seconds)
  done (took 2.983427312 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.194140886 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.307442043 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108000663 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118566208 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10153183 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099016805 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119412213 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099206757 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096803492 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127293671 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100365381 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095007064 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126699632 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09613521 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096974399 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120866634 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106198879 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099346881 seconds)
  done (took 3.176720694 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.124402134 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142480898 seconds)
  done (took 1.230165074 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134557481 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.196086247 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27393684 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170696224 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12078355 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136252975 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15112925 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131649255 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.18001512 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131620425 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112128756 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097123691 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145734328 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102998138 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.109335151 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121082768 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125140754 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109141003 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.131769575 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100518136 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117990573 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.125679929 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103693532 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.130387206 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.16858904 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131618775 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103861531 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101643623 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121223207 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109978319 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104669419 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136827027 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111315778 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173119789 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102818849 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.168409432 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.107387236 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119981671 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110887694 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099494218 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125956789 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105591248 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.116623216 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.122581631 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105047526 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.109144378 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.126422974 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102533624 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.127411927 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109929047 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106262113 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127363603 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.144996334 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.132826695 seconds)
  done (took 7.855904823 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.855972317 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140568398 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098288682 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.999062117 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148892958 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11409995 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.839301067 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143237918 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249954526 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.875413869 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11438339 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110712291 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.25948764 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.248692778 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.179770936 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.368119519 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.677720944 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135507235 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126842364 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164054132 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105676968 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147077393 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120001537 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428195871 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099316731 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097839797 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129243591 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111119247 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174646628 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.097970906 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123715186 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173049331 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.284368814 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205589192 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120027536 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098469812 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096948972 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183399882 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271128166 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215552524 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180794503 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095727667 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096675672 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128235587 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118234858 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093976595 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179193097 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190100982 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188119999 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10268032 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10897264 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132242204 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105617038 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176565533 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095757414 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.350471595 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.37381572 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098144793 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104578074 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137285515 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267519847 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097478959 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231571717 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147769579 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212521446 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097434023 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806294238 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.183625115 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097119591 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132640788 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107359935 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103367346 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128496658 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.155985309 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.403893859 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109217458 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126441657 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098666903 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232981064 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.097992834 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119911234 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157597076 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122450345 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107439156 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133004332 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111613534 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187216095 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.243503984 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134034214 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105632488 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126411984 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110332501 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098836386 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23001879 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225896157 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174450207 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229885635 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10670499 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180213199 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.181730638 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105358774 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186650327 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105199867 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136615831 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106463999 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220544046 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154718525 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098913204 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102494512 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130422005 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.135041445 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125976539 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107365716 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.185470439 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.464108313 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.159475683 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.119102064 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102548968 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106910449 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179350332 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126856725 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262357497 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109057293 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183332216 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106717686 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095045716 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129983163 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179378873 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110162881 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105854456 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129331507 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110305313 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.271453404 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220440622 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111134595 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237453204 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.194606993 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106003409 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191157759 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128280531 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163139669 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131510686 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107705388 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098546394 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796216264 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136459281 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106310632 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12556791 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184535482 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097676218 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125042377 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098232757 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094904225 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798506667 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124213623 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097984075 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099989776 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129692426 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107450562 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10539886 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126963654 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.154473566 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266102995 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111462882 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127238316 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100004449 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.17693765 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101759205 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.098287334 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.120309699 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100847621 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107989983 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125140792 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102732558 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189115882 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.151871634 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.247712525 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.527998623 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100334185 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.097800807 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23728588 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12176718 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.317312014 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106508631 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.231841536 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182916429 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096075413 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.368358314 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163272554 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.202273818 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.101261401 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190391373 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095290573 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131044212 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.155787719 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121589261 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106222284 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17624696 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113531502 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134958913 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.191357155 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09914377 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247277973 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09551413 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186161801 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100749629 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131203284 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.324661412 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099774333 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139739404 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.156073399 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126656245 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100033662 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.707879506 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.098880804 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132982479 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107555733 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23212832 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183129826 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107729762 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132325609 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112178429 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178919377 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232066588 seconds)
  done (took 45.675151483 seconds)
done (took 61.882526972 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.286472463 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.25323133 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.304956242 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.212575487 seconds)
  done (took 2.116883055 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.292005635 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163097153 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.233624957 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097648612 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.249390592 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096482087 seconds)
  done (took 2.119834676 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.496878937 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.383616263 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.344051845 seconds)
  done (took 2.21783986 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.245447483 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.234490659 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.347192017 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.406088437 seconds)
  done (took 2.337699884 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.299327593 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131896043 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125485414 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.214663934 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.279699514 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.255532078 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.151440153 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202796169 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.152358508 seconds)
  done (took 2.85368479 seconds)
done (took 12.633379028 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.246573978 seconds)
    (2/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.220740954 seconds)
    (3/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.315853225 seconds)
    (4/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.275295409 seconds)
    (5/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.226710163 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.195151612 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.27463335 seconds)
    (8/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.310372575 seconds)
    (9/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.106625696 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.108990919 seconds)
    (11/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.226267202 seconds)
    (12/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.162258139 seconds)
    (13/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.335144643 seconds)
    (14/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.129990752 seconds)
    (15/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.104880384 seconds)
    (16/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.115693439 seconds)
    (17/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.255997223 seconds)
    (18/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.25927301 seconds)
    (19/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.184637613 seconds)
    (20/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.131256155 seconds)
    (21/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.19128499 seconds)
    (22/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.251859334 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.12321971 seconds)
    (24/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.26943047 seconds)
    (25/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.100243478 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.228509315 seconds)
    (27/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09740797 seconds)
    (28/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.224997269 seconds)
    (29/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.083194843 seconds)
    (30/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.18683815 seconds)
    (31/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.124356203 seconds)
    (32/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.201597179 seconds)
    (33/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.286061847 seconds)
    (34/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.137259866 seconds)
    (35/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.260155923 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.123945457 seconds)
    (37/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.140793426 seconds)
    (38/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.104050364 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.106540373 seconds)
    (40/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.170797099 seconds)
    (41/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.231310695 seconds)
    (42/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.107722 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.108877188 seconds)
    (44/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.176987398 seconds)
    (45/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.231712186 seconds)
    (46/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.124478922 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.104928168 seconds)
    (48/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.183490257 seconds)
    (49/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.295839521 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.162991975 seconds)
    (51/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.105075337 seconds)
    (52/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.08338016 seconds)
    (53/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.109559258 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.134738398 seconds)
    (55/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.215537104 seconds)
    (56/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.184302265 seconds)
    (57/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.093649353 seconds)
    (58/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.131398168 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106246228 seconds)
    (60/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.105566571 seconds)
    (61/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.263241312 seconds)
    (62/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.190342987 seconds)
    (63/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.179241595 seconds)
    (64/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.082949229 seconds)
    (65/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.22723792 seconds)
    (66/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084583945 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104469672 seconds)
    (68/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083115341 seconds)
    (69/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.137092634 seconds)
    (70/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.199439375 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.1691342 seconds)
    (72/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083558527 seconds)
    (73/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.182448364 seconds)
    (74/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.202375308 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.106028574 seconds)
    (76/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.088617563 seconds)
    (77/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.125463396 seconds)
    (78/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.183033557 seconds)
    (79/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.240599891 seconds)
    (80/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.19487998 seconds)
    (81/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.155156303 seconds)
    (82/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.113853943 seconds)
    (83/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.090828642 seconds)
    (84/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.149826514 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121552411 seconds)
    (86/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.108958343 seconds)
    (87/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.083872206 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.104464102 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.168508856 seconds)
    (90/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.107396424 seconds)
    (91/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.104347325 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.141224862 seconds)
    (93/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.151729488 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.136366626 seconds)
    (95/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.129588032 seconds)
    (96/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.08484941 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098231369 seconds)
    (98/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082827677 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.131323382 seconds)
    (100/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.167254897 seconds)
    (101/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082717184 seconds)
    (102/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.123177736 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.106732804 seconds)
    (104/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.105281985 seconds)
    (105/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082212611 seconds)
    (106/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.202021026 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122174927 seconds)
    (108/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.211776977 seconds)
    (109/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.085759308 seconds)
    (110/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.083738004 seconds)
    (111/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.144595816 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.141035318 seconds)
    (113/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.085109353 seconds)
    (114/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.154304515 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.131079192 seconds)
    (116/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.083787027 seconds)
    (117/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.08339274 seconds)
    (118/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.153850588 seconds)
    (119/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.08305067 seconds)
    (120/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.114546669 seconds)
    (121/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.084039729 seconds)
    (122/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.089010375 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.104861277 seconds)
    (124/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.108054101 seconds)
    (125/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.08366645 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106670388 seconds)
    (127/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.08423993 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.130576564 seconds)
    (129/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.107079804 seconds)
    (130/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.181631082 seconds)
    (131/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.109207263 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.108046841 seconds)
    (133/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.174049119 seconds)
    (134/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.107202092 seconds)
    (135/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.084319524 seconds)
    (136/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.084987018 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105639438 seconds)
    (138/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.203528043 seconds)
    (139/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.084812119 seconds)
    (140/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.104495651 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.150027528 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125886675 seconds)
    (143/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.153838842 seconds)
    (144/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.082166718 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.132179535 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.106634056 seconds)
    (147/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084422305 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.13144757 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10673989 seconds)
    (150/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.106142151 seconds)
    (151/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.082259262 seconds)
    (152/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.107742591 seconds)
    (153/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108579688 seconds)
    (154/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.083529772 seconds)
    (155/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098766504 seconds)
    (156/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.109250766 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107067135 seconds)
    (158/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.151038516 seconds)
    (159/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.083007401 seconds)
    (160/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.110179359 seconds)
    (161/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085221412 seconds)
    (162/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.108540473 seconds)
    (163/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098210333 seconds)
    (164/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.115241202 seconds)
    (165/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.084033249 seconds)
    (166/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.087220688 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105088535 seconds)
    (168/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.132191343 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100084398 seconds)
    (170/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.084475876 seconds)
    (171/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084401067 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.130861791 seconds)
    (173/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.0863743 seconds)
    (174/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084764799 seconds)
    (175/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.201400761 seconds)
    (176/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.107221758 seconds)
    (177/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.105891964 seconds)
    (178/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.083798216 seconds)
    (179/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.110048924 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100999467 seconds)
    (181/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127090349 seconds)
    (182/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084628208 seconds)
    (183/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.134537911 seconds)
    (184/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.085997406 seconds)
    (185/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.082713715 seconds)
    (186/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084579871 seconds)
    (187/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.129440289 seconds)
    (188/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124009248 seconds)
    (189/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089680106 seconds)
    (190/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.083458359 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.124325496 seconds)
    (192/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.084845096 seconds)
  done (took 27.553186103 seconds)
done (took 28.555652568 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.221590399 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130814546 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108855113 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108652956 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.204215658 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115297764 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.142447897 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112067593 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.113331284 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.131046583 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100257993 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.115716032 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10599389 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.202406661 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110450006 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127112621 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.09993372 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114608899 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.143015782 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119446064 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.205565959 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103296265 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.113380174 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125699032 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.179941516 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126866385 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108645996 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.107862798 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.138465435 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.108102793 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.10707662 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099364711 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.144061673 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.117151545 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099006352 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.133090739 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100843371 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090016597 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.130074529 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109794827 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.114684569 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.106379981 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.135168737 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.100863856 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.107468314 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.13195248 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101021321 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111445046 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.123496052 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.10963789 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10295198 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.143564322 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.107376657 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098800858 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.123516942 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103774765 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11408482 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099541645 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.144942165 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10093424 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.100971794 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125407229 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.109714182 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099871108 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.131318793 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101808311 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.108116627 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.133013071 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.107728948 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103362917 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099618301 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.132248725 seconds)
done (took 9.750959914 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.114444492 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.156966233 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.201740413 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.212518029 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130040992 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140758224 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12138799 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12851864 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144320996 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125890981 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.15890764 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130142258 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.211784714 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.112884912 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115203254 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.136147873 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115267535 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112608637 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.215927743 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.122215307 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156702104 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.112056765 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.15918853 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.124019966 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106778026 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.163897798 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.108542235 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.133792227 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.109397448 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115400602 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.149250137 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108844361 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.106525826 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.152334981 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121659854 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.113578853 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.142286051 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111143975 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.105871953 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.131994169 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114995104 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123857724 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.131909871 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.120010808 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.135256448 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116196083 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114479279 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.13944959 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.112348913 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110454839 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.13419784 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136207911 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.113550124 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.139719507 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.114749402 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114462442 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.140262914 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116399045 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.107107601 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.140580875 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107374738 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107547985 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.135775749 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.13064144 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.106287406 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.140663965 seconds)
  done (took 9.680213584 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.133482602 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13528969 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140835376 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116130012 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109117636 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124330517 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099614782 seconds)
  done (took 1.90639946 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.108131351 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186874837 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.21010434 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209423385 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.204329954 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.192741881 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146441836 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100289468 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131967839 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136632144 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186071388 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.238776026 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.106079107 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.14232117 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184994116 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126225381 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.187529576 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.127411982 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.111932584 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.212318653 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113614854 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.153658354 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.113578091 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101050707 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.209606346 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.100490145 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.264027085 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115463711 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.133867865 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116119107 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111121624 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204666334 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.207222718 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115215803 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.104722087 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.211050353 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.205110504 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111741907 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.222928193 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106278947 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.209173534 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113233836 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115736689 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.137006608 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11702342 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.195623863 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121365553 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113124237 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.13692771 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.193649299 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.135189639 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.184061628 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.107225397 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.13813869 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.110991034 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113337786 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.14796172 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113345757 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.220879775 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113784747 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.210617029 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.208492641 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.185732452 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.211266744 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122643119 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212717969 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.203636224 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.112633986 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109066208 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.137791118 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187179104 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.135874372 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113727237 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.197886523 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118322446 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.210330507 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.186165282 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109223413 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.141216049 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104284973 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.109327863 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.128716089 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.174357862 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.139002937 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109688029 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118119159 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.140733773 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112518088 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.104729975 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.150937276 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.111052033 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.136906223 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119214366 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.112131161 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142802023 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189735965 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.137480143 seconds)
  done (took 15.621893609 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.112488249 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102863456 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.105937839 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129870078 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10364378 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10258601 seconds)
  done (took 1.723963524 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.148336194 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.113306794 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.147779425 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.115774497 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.164965431 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.222249808 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.225577725 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10914949 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156929515 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12580243 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.222128417 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.200145344 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.230819117 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.142447654 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.19834368 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.144260577 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.200738431 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.137686141 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.124528184 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110329914 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142509759 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.118672438 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110692115 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.211748529 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119511118 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.145631155 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112032172 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125004298 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.149321895 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111389969 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.115924881 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143861413 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110195237 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109799221 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.229151902 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108107762 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136752337 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123690477 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114926165 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.148632195 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.225860667 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112262937 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12278681 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.147241097 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11189965 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.108483427 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.150684477 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112077228 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.226078345 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122560432 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122369085 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.14144005 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118611039 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122502004 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.135839482 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11169394 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121329432 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.228958728 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.116561078 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.13645351 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.113561437 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.145085313 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112587386 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12161486 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.139203802 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.124703349 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108911457 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.139874008 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11383273 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.114489364 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.148854751 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.115817601 seconds)
  done (took 11.293989132 seconds)
done (took 41.266264765 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.603612849 seconds)
  done (took 2.665807287 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.911743364 seconds)
  done (took 1.976277728 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.098669973 seconds)
  done (took 20.197713255 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.541754674 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.610843893 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.045589524 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.152703145 seconds)
  done (took 3.419350762 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.028056484 seconds)
  done (took 2.111919927 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.301131665 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.266382215 seconds)
  done (took 1.63616979 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.75889182 seconds)
  done (took 1.843592749 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.543400343 seconds)
  done (took 2.613567461 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.367698809 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174182385 seconds)
  done (took 1.630039353 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.628340291 seconds)
  done (took 1.720629222 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.746027384 seconds)
  done (took 20.840589558 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25445805 seconds)
  done (took 1.349584893 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291678833 seconds)
  done (took 1.386551522 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.823976583 seconds)
  done (took 4.920042785 seconds)
done (took 69.388372044 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.120334787 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116371719 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115164733 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139884526 seconds)
  done (took 1.571143333 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.129888336 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117215508 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.119001209 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.142903542 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123042766 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116185156 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143987384 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119823794 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115681995 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145432397 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117821295 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115370033 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145683159 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116949236 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114644993 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144359406 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121736325 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116938953 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.142632379 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120234841 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116787839 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.117876547 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.147362579 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119657452 seconds)
  done (took 4.123963698 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.119658674 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10736627 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.10730741 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132105838 seconds)
  done (took 1.564998359 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.132761574 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130210507 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153097197 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124974978 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129321569 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.15466554 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117534143 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113050959 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141494552 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127039434 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131896809 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156245965 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128841485 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117596442 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153073278 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110819978 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116281781 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15482232 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124260055 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124940661 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144168991 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12383511 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.120927875 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152327926 seconds)
  done (took 4.278078029 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.196345272 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.124854835 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.165710809 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.157621721 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.168347318 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.111442759 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.135280447 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.145905784 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.118986083 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.11421783 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.143115682 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159593283 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.144824323 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.116010082 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113323994 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.144226892 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.125446407 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.117812088 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.183808603 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.11806408 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.146083189 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.127516821 seconds)
  done (took 4.174165843 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.125770297 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106767732 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102691444 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.137286885 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118860249 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109061592 seconds)
  done (took 1.804493795 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.11417082 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101222711 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101351603 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127324709 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106579777 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101438702 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099149253 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128639126 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102426187 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100957706 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12708326 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10183042 seconds)
  done (took 2.417105776 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.349617326 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106904355 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134362459 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108730402 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111951094 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104393048 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.148494072 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106343454 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.266251789 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.105947627 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.146602585 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.192722549 seconds)
  done (took 2.989003803 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208994943 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142324662 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293814097 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366367329 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161236937 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184008044 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270010388 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188015154 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202676359 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134171193 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240839265 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149425942 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176936238 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169279651 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160934857 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.159791405 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193174937 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185152533 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171190685 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219027245 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153466027 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188496475 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174927083 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1739224 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130796307 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185562263 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.114573969 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121897095 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191258272 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185735561 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166219952 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168997227 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136187086 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215364797 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254309841 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167508805 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283763725 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156111143 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199615575 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.179092468 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252006463 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13309461 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209478633 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175038278 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124814983 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199605254 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149572223 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.196863137 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.126662099 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137042234 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202080193 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194390309 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171876792 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159529222 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310393954 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16023769 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.162891946 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170165821 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20510727 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18229393 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189549315 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.117820641 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206638178 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20491779 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174232165 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.164133965 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.158193498 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147473603 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161031598 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216738144 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19991137 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153087071 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.221396801 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125007516 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181464681 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165474894 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201999363 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196645138 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154099406 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.113641643 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171751237 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129526106 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149087385 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197352134 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115688739 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22059048 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12607471 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.339058654 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21105427 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176781557 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15585548 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180806003 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154466376 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167021512 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111107088 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140450161 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.185141014 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149910303 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155899383 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150108694 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16096049 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123551572 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144313989 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.14576744 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152883094 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.160165518 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159909963 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180952056 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125247732 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186830899 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143702881 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.174776103 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164057898 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205592353 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126213106 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153365911 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183934018 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180991217 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.127368648 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199919116 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177756694 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174517046 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132412702 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187381938 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181333648 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166733167 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181103397 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160309923 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129213685 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.172502492 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155443737 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181769539 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15118046 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150438197 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.147033589 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218956311 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.122177291 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13050503 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189775822 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126611416 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149176475 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134143518 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156715725 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.13731468 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.138870605 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.157077349 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148148328 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181157559 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149474612 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178752369 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12834287 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200992088 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127411915 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.181848534 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141170546 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.138649663 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168752964 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207283118 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123743034 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224197309 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156636064 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216331579 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182542343 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126131315 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201350179 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122444854 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.114226444 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186171736 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148305328 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18670316 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.201752773 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184100505 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187681123 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.171677581 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144591602 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190301809 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.17042171 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176506763 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139009541 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17970667 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159262094 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.115551979 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.148621774 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.122672544 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159904787 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126986632 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128998265 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199390074 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185438562 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180828809 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181114012 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133098693 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206036563 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12035215 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184242372 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.157567773 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163816256 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.173847108 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204071206 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186743361 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136129646 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182146341 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.117009707 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120461783 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.154751938 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15942993 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156709082 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132353967 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135064651 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205397282 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195283047 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144449492 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221153684 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190325585 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187753487 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.143341476 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.163044091 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19267527 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153847326 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.178956626 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160164847 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152256391 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202086359 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134646484 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211426661 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179698665 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157370186 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212043763 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151141021 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153323718 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144193971 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180298867 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134099108 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15850546 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170390702 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124251698 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176498053 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132314203 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118424747 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20686427 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167203838 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164623389 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.184314978 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16247557 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150396975 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136698801 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183950991 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139716663 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113609887 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193817513 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206089036 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142814648 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177796127 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17067271 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152538681 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.31766374 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214420122 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171162329 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160739557 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134717468 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18477406 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157278883 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186351119 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174304465 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166503057 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172122499 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182584115 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138163182 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15340984 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144411452 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173301237 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.146820042 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.126386903 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.180162331 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.136473821 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208330076 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133053419 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183989662 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152187466 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.175000731 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146900997 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16404475 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190466879 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180835104 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168184237 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.179888052 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.160737339 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214964484 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118664057 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15336578 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.126451844 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205151828 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125550692 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18399434 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.176332211 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217552552 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18852515 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155894135 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16532242 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121853397 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179863132 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145935767 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215179646 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130637139 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.162155415 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187369616 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.164095811 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126958938 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184184986 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277771533 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17045927 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168751676 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.147759219 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268940093 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153667364 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127951788 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186106765 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166469452 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.156547608 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180064907 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156857155 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166404488 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157487703 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161515794 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209045901 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188039575 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190903085 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194945469 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141037118 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154155289 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18509309 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200767685 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138059234 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139572078 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186534318 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203064259 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177189552 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.154913612 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155757184 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151047823 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182345343 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193964632 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133118885 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21504315 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124533455 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184941212 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134088805 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117689517 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183870791 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.202358418 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127902325 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201780553 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155721212 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1261562 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151987746 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13983586 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180537662 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133748324 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.152138892 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180258074 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.152550742 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159221049 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202344592 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127257971 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150454204 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171943299 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125526685 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165837955 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137264965 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124758214 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.195085262 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178970961 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.154687316 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173664878 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188150515 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15919959 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183030485 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136310552 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.689835291 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.122183841 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206554209 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142379919 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21147339 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14492934 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18683017 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153516763 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174619775 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158372771 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172505866 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.236776911 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188089568 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.151032404 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156168521 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137868695 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162493349 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128936732 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146337411 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183291813 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134822526 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.160007091 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.152319198 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165216229 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.142142534 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134127672 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206982068 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142981686 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208057002 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206344382 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132498529 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185710848 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167117477 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154296016 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158799636 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197364841 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13632112 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171338231 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.128881355 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.130600761 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206727014 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.118997523 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182664122 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157219708 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183242629 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154715082 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.155716174 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161778651 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135083645 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185029214 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120809151 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.176136895 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154915131 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157357005 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.123435952 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152942276 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183624612 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150002287 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151230432 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168990612 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207995716 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.120692642 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128258337 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303842061 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184263681 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184900163 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.172103689 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131284753 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138701395 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179601154 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149694046 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186383232 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.124765745 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12479465 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.156454133 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.170998132 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.183215148 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154707091 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203475562 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15462159 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219107406 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.130739594 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.315010098 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134008996 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183126829 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.125200165 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.122375224 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168344828 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129175261 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165265817 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212426838 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17658272 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.17728331 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.142571301 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129040189 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.151463837 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127885837 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159272804 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178546105 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154073985 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170019559 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.112193503 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166858636 seconds)
  done (took 82.340281263 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174516231 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152561401 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.169245339 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222746378 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197368561 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.29079084 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231055949 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25654575 seconds)
  done (took 2.878868019 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.126506177 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15768091 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.1395277 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144461565 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.116764626 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.449897855 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.156748742 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118565576 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162853486 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.157632536 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.142671126 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.611486875 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.11225636 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144437718 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.130619199 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.116959244 seconds)
  done (took 4.169557692 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.502691584 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.600259895 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.386612265 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.2830793 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.233205161 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.18043745 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.821323507 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.19145815 seconds)
  done (took 13.392622726 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.154363872 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.133424277 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.825981002 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.261382865 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150251109 seconds)
  done (took 2.723245049 seconds)
done (took 129.507389818 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.127432111 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.119746595 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119663623 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151498356 seconds)
  done (took 1.699245477 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.191925743 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096721354 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.097915674 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.1241267 seconds)
  done (took 1.701956578 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.442588486 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.095459429 seconds)
  done (took 1.75689245 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.153499796 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143611651 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.168032061 seconds)
  done (took 1.67143793 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.146899411 seconds)
  done (took 1.341713424 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.134371919 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119839532 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.240953085 seconds)
  done (took 1.694086772 seconds)
done (took 11.067577665 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.127310558 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.413211669 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.452071747 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132516732 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.707969135 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426815451 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.060675524 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173494943 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173101684 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137651011 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130933997 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.704301984 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.077866383 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.363997708 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.032629885 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.392060246 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694598636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11151123 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145239959 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111360061 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.038498248 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136588564 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112102394 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110794599 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.719422757 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421864251 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108800585 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.402608906 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109771603 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112941634 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.426154912 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110887648 seconds)
  done (took 17.564328707 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125670275 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17412734 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146823596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111875843 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11263189 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138725198 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12120251 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12238109 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204866518 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108333607 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159137469 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109293083 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11371371 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.137171358 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135686475 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108310636 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111321366 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144103082 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117150948 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110835765 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160805336 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108069922 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110202578 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141615721 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109747199 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131411121 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140430244 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121203796 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107950619 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143849072 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115143581 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109708204 seconds)
  done (took 5.318557218 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.164633918 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180178727 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148687375 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145082806 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186540672 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112264781 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222260718 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147856595 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205047039 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110641339 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130849157 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137662444 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151357607 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110504885 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164026452 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110360866 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112551684 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141658239 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118733241 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11169523 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160886659 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109104385 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111205057 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141095966 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110320591 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132047252 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138794779 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122606894 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108990125 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14265868 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115187877 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109785837 seconds)
  done (took 5.624649136 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.133055588 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125376342 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133026762 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164774047 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.11977367 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12336466 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154599424 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120951348 seconds)
  done (took 2.284134673 seconds)
done (took 31.991128667 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.142081741 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127887096 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129407948 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153560822 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.193180713 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.146124877 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126540287 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116001586 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.156181206 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13247119 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.10961301 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115452335 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.159928067 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118907101 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.225972216 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.1248114 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.230153875 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.194785673 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.148073433 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124168201 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117218078 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.230190917 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.1200733 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.14636409 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.203838816 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112271021 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.216324593 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118573307 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.150005072 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112265815 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.226031502 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122168944 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115702808 seconds)
  done (took 6.160270939 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.217138404 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.116312756 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.152042278 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119573225 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.115930728 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.148516253 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.213487213 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147792135 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119542585 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118370453 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.11756896 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.224580848 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.120626834 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.141826571 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119524607 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.117208684 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.244720655 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.117030653 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109351539 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.127672351 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.112650479 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118660623 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.256851573 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.110635206 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117914422 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.149870791 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.119015139 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.120668674 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.147001379 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.119947522 seconds)
  done (took 5.499008404 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.133826153 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132534637 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.135687083 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.217160139 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.14644599 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162478999 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140253506 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132771649 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172360043 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111943961 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12683919 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.179350611 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129162409 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122148027 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14746789 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131939914 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134682881 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143342462 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120870173 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129502376 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162417726 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131259219 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138781924 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150631012 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111518211 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1192966 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.15218485 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.129111066 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120269522 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126049232 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.144799862 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115746596 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.113856828 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.177773403 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113247111 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.124837527 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.169483559 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124479652 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126166634 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.174144779 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115613485 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.113680062 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.170186522 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167526786 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.112605172 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.157665263 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123593805 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.125254223 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.14196162 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1310167 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.15482464 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.143578083 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132520629 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112481479 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.141708597 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121154512 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.112437565 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.145990524 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128622422 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116728083 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.165571579 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121799215 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122172531 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.113296198 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.153718482 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111621484 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.111092154 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.146710798 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140153198 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118663232 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.178980376 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11359648 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123858734 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.153951605 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123925813 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124095253 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.111109369 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.154375623 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123095858 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.118095903 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.15541581 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.115748856 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.11479862 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.160278407 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134580123 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125710841 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.155111059 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127729554 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.115519076 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.143999229 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13029486 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.113308917 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.147498327 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.127277375 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.112801694 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.114901141 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.156974504 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12513198 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.110021095 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.168426641 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.117131801 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112134988 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.166884119 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120268365 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.117491525 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.151640119 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.157114753 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.111747533 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.15309801 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127979471 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112608225 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119903095 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.148631915 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11289173 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129563682 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.160013171 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119583283 seconds)
  done (took 16.99484328 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.333901753 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.314212182 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.181933924 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.312968116 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.158315802 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.210506807 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.309379227 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.309170171 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111612 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181895261 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164383952 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.279374675 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.146242413 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140948359 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.314761086 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.365083048 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17453671 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151064614 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181654067 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126321432 seconds)
  done (took 5.702818258 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.140971135 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148151955 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167243636 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142876385 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.11970635 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158799024 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112848603 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132335473 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152302404 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124385399 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115281331 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159902291 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123287781 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.125573082 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159977397 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.154086517 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120611894 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148228 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136895807 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117781743 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.136702241 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141336347 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122346745 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167158848 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.129092981 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124499821 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142049231 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119648513 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116088029 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.118200464 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.149384157 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131664611 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.119045423 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.141292486 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12682256 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129412016 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.146097984 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116883496 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117493094 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.116868592 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.159241412 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12300349 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12064693 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.134471468 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132322772 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117259173 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122986 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.15848525 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.113481494 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.128712972 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.15667467 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125735519 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.119918986 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.161089727 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119289296 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130758558 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.153268526 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126960363 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118820615 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.111115589 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.143403033 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118260348 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.118436135 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.154177544 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127370123 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.132663801 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.159898397 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113312414 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117793986 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.14862541 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119175605 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127868411 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.166361074 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.119815786 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.117082919 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.154900033 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120683849 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.100169837 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.122708784 seconds)
  done (took 11.734040637 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.147536531 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121065983 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131954679 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180344214 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125480309 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119006684 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.153020681 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134298425 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124497625 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.161907289 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126575653 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126465727 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167999054 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123441972 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.120637682 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162184934 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125603252 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152200868 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.164306267 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141715254 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125558595 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.151640814 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127440988 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125725646 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.175170314 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125553572 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.14094172 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.158358431 seconds)
  done (took 5.184946905 seconds)
done (took 52.484821199 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.364054321 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.56974269 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.332775751 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.332560967 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.386728644 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.350623289 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.331236506 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.332736533 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.882354279 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.308551695 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.336116851 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.347072597 seconds)
done (took 30.105472284 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.350548658 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.865318438 seconds)
    (2/2) benchmarking "String"...
    done (took 1.642543837 seconds)
  done (took 4.735113028 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.326938881 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.326810719 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.55279137 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.325958927 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.322363015 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.329874137 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.326274508 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.327773394 seconds)
  done (took 16.737756745 seconds)
done (took 27.377317162 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.396619713 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.514306534 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.576194929 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.327477859 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.328954133 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.337211869 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.329250037 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.354789219 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.332500941 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.335518613 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.764183153 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.599137001 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.329630459 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.721045035 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.344269297 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.330385494 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.343133448 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.590458348 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.333287072 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.362586478 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.308465729 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.310660379 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.340307605 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.337589239 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.337042593 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.334090477 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.401818274 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.325604805 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.525442062 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.340773744 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.362424288 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.331434483 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.375398017 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.343889815 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.33529162 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.34308945 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.533367157 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.337926956 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.314074417 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.337119369 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.529140499 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.336070239 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.328826577 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.354163222 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.32806958 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.403818255 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.319609179 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.441205897 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.359017346 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.337364076 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.35714649 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.702316431 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.341981525 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.339302113 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.336727011 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.566838842 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.352388886 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.408049267 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.351628426 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.337549083 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.330669076 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.346000929 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.357002039 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.334157622 seconds)
  done (took 152.149151104 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.334770837 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.335596484 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.332672391 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.337599794 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.336374129 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.331810096 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.331381988 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.332997899 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.334603058 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.366824374 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.33221119 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.334601888 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.334827343 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.359651913 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.342327506 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.355797337 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.335244075 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.329921182 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.357249342 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.335131694 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.343886472 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.335426116 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.334764784 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.334946199 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.345027771 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.418995506 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.347545075 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.341361281 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.342017186 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.335238514 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.336276455 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.342744249 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.993349731 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.198869865 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.339949855 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.365344398 seconds)
  done (took 85.081539408 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.333949172 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.33554153 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.335870615 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.371243202 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.33738158 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.335907416 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.957714288 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.955392892 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.056323017 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.634651026 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.828179315 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.678995224 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.335723786 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.429826115 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.340763345 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.334269608 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.350998136 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.358165233 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.334069412 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.333609344 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.93911772 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.346369138 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.569899449 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.510679666 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.346994154 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.367955662 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.73187087 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.329809214 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.368715758 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.671603351 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.380486716 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.3289733 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.765750959 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.695965122 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.446205205 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.32645967 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363811663 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.329395019 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.617905687 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.326515167 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.334217448 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.331007302 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.055220172 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.331599118 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.93512224 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.330466439 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.34622582 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.328672765 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.327119259 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.636609807 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.102301598 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.322614669 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.32557952 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.32702139 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.324756805 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.322899263 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.359227333 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.644463034 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.426057086 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.327565782 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.331916923 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362858784 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.324501404 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.371120035 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.323523819 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.443642939 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.390930718 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.556395273 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.910871348 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.322895159 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.423176298 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.447748892 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.320472632 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.32624533 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.327737873 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.325551111 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.326755995 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.438811439 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.326714621 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.752935484 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.503030396 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.340531673 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.745210592 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.426752636 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.324355616 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.721673909 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.33161758 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.326590748 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.083557429 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.423719019 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.326702406 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.326645961 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.327356463 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.328365581 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.328649238 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.755518032 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.919551687 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.59684202 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.330926499 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.956826762 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.328625188 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.767414743 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.897504162 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.045351196 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.329860101 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.444543995 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.507924009 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.342983128 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.327244092 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.753818269 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.328626955 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.388453495 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.327342762 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.732453222 seconds)
  done (took 381.718975442 seconds)
done (took 620.175035877 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.211671202 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.149544166 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.298267775 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.154206038 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.137390221 seconds)
  done (took 12.177450753 seconds)
done (took 13.401520183 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.527398776 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.528422447 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.393540202 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528038052 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.361531697 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.541499253 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.511718018 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.34904128 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.444812229 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.411716619 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441344843 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.382914342 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.361403757 seconds)
  done (took 20.00834319 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.610493024 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.332281357 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.394656008 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.594356142 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.370418746 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.604790428 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.634557362 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.334706909 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.468454186 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.346501443 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.346640765 seconds)
  done (took 19.267029409 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.622467395 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.331582625 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.388757453 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.591835734 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.369622912 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.621135778 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.670133868 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.334151621 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.478751271 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.346505823 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.346314086 seconds)
  done (took 19.326962582 seconds)
done (took 59.827456964 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.381495902 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 17.3312398 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.357628684 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.421493215 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.343257167 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.357388576 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.424688104 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.347636958 seconds)
  done (took 29.188139516 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.34187294 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.342980384 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.340173843 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.340502173 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.338821013 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.342893534 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.34335506 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.341059006 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.342892814 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.343861745 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.341277614 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.342299845 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.342973235 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.343875295 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.340840729 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.340949725 seconds)
  done (took 22.696305025 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.34604252 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.339266702 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.341086719 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.340099024 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.341286304 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.340813036 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.343010845 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.34172868 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.341567571 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.340571134 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.343968819 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.344175982 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.340841013 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.341076397 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.34158761 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.344180111 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.34339855 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.341006219 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.347172589 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.342049114 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.341157839 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.339806107 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.341632376 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.343863961 seconds)
  done (took 33.436802926 seconds)
done (took 86.546726013 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.341306244 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.33314627 seconds)
  done (took 5.90207153 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.402075947 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.401306749 seconds)
  done (took 4.029430862 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.344875234 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.341135438 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.341085481 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.342482764 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.341931345 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.341386563 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.342955405 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.340110731 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.34336432 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.341133188 seconds)
  done (took 14.646444428 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.344819512 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.342686948 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.340980167 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.344805903 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.343551466 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.340412006 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.343491369 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.340645947 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.343709028 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.340884105 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.344384385 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.344003706 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.344917588 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.340821534 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.340260552 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.344040703 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.341393858 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.340608737 seconds)
  done (took 25.39148993 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.357083516 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.362883943 seconds)
  done (took 3.945872579 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.484217247 seconds)
    (2/7) benchmarking "second"...
    done (took 1.386653893 seconds)
    (3/7) benchmarking "month"...
    done (took 1.456834576 seconds)
    (4/7) benchmarking "year"...
    done (took 1.449021175 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.382847859 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.360135552 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.382738886 seconds)
  done (took 11.127585863 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.34495221 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.556747128 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.682574792 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.913526843 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.343985965 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.348032104 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.159081649 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.349250614 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.347221013 seconds)
  done (took 15.269169775 seconds)
done (took 81.53976557 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.333206542 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.374860917 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.346835657 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.349314406 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.636298171 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.343943032 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.333936946 seconds)
done (took 16.945797886 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.321370493 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.318067778 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.312626278 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.345081445 seconds)
  done (took 10.521423697 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.335184446 seconds)
    (2/2) benchmarking "read"...
    done (took 1.619726161 seconds)
  done (took 5.180903939 seconds)
done (took 16.929532218 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.345566118 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.343065671 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.343288405 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.342281527 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.345177443 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.342164045 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.343216023 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.343306767 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.34523261 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.343828772 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.344644559 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.34325215 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.343643535 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346115554 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.343435164 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343419241 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346210111 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.343584444 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.347205344 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344525194 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.344668188 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.346482104 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.343744382 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.345270499 seconds)
  done (took 33.488015052 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.345707904 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.346195965 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.346397966 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.344419557 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.345146131 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.346036574 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.347322437 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.345087565 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.344924874 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.343475876 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.345880915 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.343949267 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.344218911 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.34578585 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34559484 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.343596552 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.347253081 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343969964 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345483529 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.348093561 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.348728719 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347955641 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.345085198 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.348315844 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.346779561 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.347128841 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.348314274 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.345525511 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.346174191 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.346073035 seconds)
  done (took 41.606972255 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.351730977 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.35576953 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.348760336 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.351725358 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.348586429 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.350625297 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.350002899 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.350523148 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.349565614 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.349012067 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.347525493 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.351523615 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.347364334 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.34592808 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.349730241 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.350084786 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.350096398 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.348632856 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.349666541 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.349386922 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.34893957 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.351362073 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.349731008 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.352238105 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.350783958 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.351091442 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.35086607 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.350991619 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.3501116 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.351534328 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.350920576 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.348471939 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.352032407 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.351365575 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.353844829 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.351861358 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.355806192 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.356253642 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.349684224 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.349606326 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.352021063 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.351244071 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.351426054 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.349361153 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.351092087 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.350695435 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.351610935 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.351838874 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.351472623 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.351906725 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.354054082 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.35147256 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.351577512 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.35180371 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.351290888 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.351340955 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.353113764 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.352433629 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.35070258 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.356043685 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.351247554 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.350796647 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.350563197 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.351029989 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.353209138 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.354082775 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.351395021 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.346115154 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.353856971 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.349773466 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.349084122 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.351499246 seconds)
  done (took 98.506733709 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.349924075 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.35300649 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.349269817 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.349756877 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.349898677 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.349894817 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.349776527 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351405386 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349461272 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.348204773 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351455768 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.349532532 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351023847 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.352625223 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.351561658 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.348763936 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.354216224 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.348788126 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.348215352 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.350990987 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.350481306 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.347575003 seconds)
  done (took 30.936826561 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.354931044 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.351821629 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.3474264 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.350218217 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.351280834 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.350359217 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.349087617 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.350188685 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348445543 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.350445042 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349205252 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350314383 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.351097115 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3474269 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.349252194 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.352675217 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.348299637 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.350894744 seconds)
  done (took 25.536446709 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.349386197 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.350182881 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.347980324 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.349007767 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.353919762 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.351210639 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.348785486 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.351249177 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.351262853 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.349892843 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.350228161 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356100345 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.349549995 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350546596 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351878355 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.352004999 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.351638192 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.350416856 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.354187283 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.349790146 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.351655979 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.352080663 seconds)
  done (took 30.956093755 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.352655835 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.349788234 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.353865012 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.353214836 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.350920707 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.350851685 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.352297223 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.353042015 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.354482908 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.350629309 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.355948361 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.352558591 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.352875272 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.351887597 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.355844077 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.352063775 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.354278369 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.350613572 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.357280034 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.354098842 seconds)
  done (took 28.294733122 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.355606221 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.352688053 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.355656023 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.355666808 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.355211028 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.355573235 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.355259502 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.354930257 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.353804171 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.353912301 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.35181223 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.359987079 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354269005 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.352679693 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.352530428 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.354684595 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.355720474 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.356594058 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.35418742 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.357186992 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.356408119 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.35546207 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.355581293 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.353694809 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.353624973 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.356443523 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.358895922 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.356637493 seconds)
  done (took 39.178453264 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.355536761 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.354627205 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.353326718 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.351011788 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.352480035 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.352909019 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.354411349 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.353566297 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.35230536 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.351316493 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.356768001 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.356302465 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.357751593 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.354963731 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.354260871 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.355894758 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353362577 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.353302894 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351498163 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352166774 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.354705504 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354532571 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.354224483 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.35240079 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354250072 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.353265725 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355609365 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.353867807 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.354932301 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.352631595 seconds)
  done (took 41.852357755 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.377943461 seconds)
    (2/2) benchmarking "in"...
    done (took 1.376287814 seconds)
  done (took 3.988826829 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.357392867 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.35384034 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.35718151 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.354418054 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.35557251 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.356970687 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.35545694 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.352282405 seconds)
  done (took 12.078707161 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.35104665 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.356276058 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.355800101 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.354366071 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.354890299 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.352819279 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.358406803 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.358103238 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.351790734 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.353181727 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.358728024 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.354249859 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.352948319 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.352870682 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.351496214 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.354727745 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.359257873 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.354447135 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.355389927 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.355905718 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.356914246 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.359469167 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.355239411 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.356627806 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.351811754 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.360758466 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.357156488 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.359745529 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.351781774 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.353386463 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.354659944 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.356181868 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.354787786 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.357157883 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.354355235 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.358474881 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.360875686 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.358083799 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.360919855 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.35994143 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.358205658 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.3541863 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.350684898 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.3558333 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.353608655 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.357879058 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.3558866 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.352837733 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.352311884 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.350891755 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.360350315 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.355026487 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.356524368 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.355110051 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.356673987 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.361841162 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.361678697 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.353609829 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.361122959 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.363047692 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.36384769 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.363213168 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.35417734 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.358372143 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.361828959 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.37013008 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.358732618 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.362439608 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.357224288 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.359562297 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.358864278 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.365287176 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.365220931 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.362617694 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.357708588 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.358884446 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.354402366 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.356229318 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.360001537 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.359931416 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.363916214 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.356499106 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.360496746 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.36810746 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.350790185 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.357137378 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.357008688 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.360825045 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.355034437 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.361660993 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.362229024 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.35748109 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.352090535 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.351236955 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.354694238 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.358349782 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.353095912 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.355024107 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.355645924 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.357271786 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.356986353 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.353746183 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.359499818 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.357129787 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.358018176 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.359377422 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.360622452 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.352217686 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.36068161 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.361537137 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.35367353 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.352101311 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.35383322 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.355795668 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.354112868 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.356428675 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.357495184 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.355848401 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.357447691 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.356397587 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.358260266 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.368609044 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.357823262 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.356732962 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.356041813 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.361625657 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.354549995 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.354499316 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.359590791 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.353124275 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.354963173 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.354202198 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.359562409 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.353744651 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.356540077 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.353461052 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.35758567 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.357100991 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.356330802 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.352899699 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.356770674 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.353310185 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.357113805 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.356798853 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.358380682 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.352698629 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.361200121 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.35697869 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.355164875 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.356949512 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.358611681 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.358252169 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.355824691 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.361730781 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.353791292 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.359118793 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.353187228 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.359278581 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.359667909 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.358773453 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.360438837 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.353639186 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.356112653 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.359486724 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.357615014 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.357177945 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.357163416 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.359501871 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.359340436 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.350989259 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.36150314 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.352506127 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.358139528 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.36459371 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.359885051 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.359837589 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.354819879 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.361092044 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.3584459 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.358862268 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.355428035 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.360816254 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.361490202 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.361691717 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.362743619 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.360541052 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.359146698 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.354521499 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.355096059 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.361544759 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.355872363 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.366258787 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.365637694 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.364149872 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.357247288 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.361028778 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.353653146 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.362640097 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.358926008 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.363473743 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.359783898 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.360187062 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.35314529 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.361021547 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.35533499 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.360706413 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.352888475 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.360140334 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.359912528 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.358736316 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.359844267 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.354387226 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.354601032 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.358365654 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.36039765 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.358946244 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.35459252 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.358836715 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.356067826 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.356783983 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.361904905 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.362510926 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.361174112 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.36192947 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.358174034 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.359475673 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.358842251 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.355206677 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.361117061 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.359998885 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.358146364 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.366162776 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.362755849 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.359378966 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.366779722 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.361581771 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.357249824 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.363003373 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.365617172 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.359779651 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.359375115 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.367073955 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.365085758 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.362478311 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.361982897 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.357619058 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.361287078 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.36358125 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.365505442 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.356806486 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.361530387 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.357436409 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.361948932 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.358145427 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.360242653 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.360688807 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.363088859 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.364913025 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.362185108 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.359418024 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.365169889 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.362436884 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.361307533 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.360134397 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.369501667 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.363634259 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.361639333 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.362110897 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.360022694 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.364991304 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.360148619 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.364989193 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.358935187 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.369485491 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.37584102 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.365507288 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.364442358 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.365585888 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.365595016 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.36457952 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.361859618 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.360912231 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.361822573 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.36094816 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.361249621 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.365306713 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.360658823 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.367798041 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.363586356 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.36385433 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.365903758 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.365770649 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.361067981 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.367051065 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.367091787 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.364186211 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.361031714 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.368662319 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.362075588 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.364501917 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.364754708 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.360825777 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.368939281 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.367428687 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.363734364 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.364143417 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.363844885 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.362754143 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.366132653 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.368810803 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.362804425 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.372476242 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.3637026 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.367945809 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.363678162 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.370845849 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.369994107 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.365452243 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.373316049 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.366941133 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.361045425 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.362139842 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.368576215 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.370592078 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.370782677 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.361847942 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.370439096 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.367567084 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.36693301 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.368767291 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.367782814 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.367935368 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.36913019 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.372909711 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.370406096 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.364949981 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.368286681 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.368835034 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.369593601 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.367624768 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.362443721 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.36750585 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.370118961 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.364303799 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.364675174 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.363096763 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.370410897 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.368182322 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.368218723 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.368749932 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.367523754 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.371867703 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.370365129 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.372645733 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.370471444 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.372277854 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.373819266 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.371342243 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.374164662 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.366476853 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.370992625 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.370101741 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.36815615 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.367124694 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.365960458 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.371801141 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.367655524 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.376818935 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.370801685 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.36804032 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.368042356 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.373685636 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.365568718 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.374508601 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.390362796 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.368880705 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.371582428 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.370236205 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.366444497 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.374085796 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.369618503 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.364244465 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.369219391 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.369989839 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.376219052 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.365321926 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.373009221 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.368688976 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.37313857 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.372676499 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.371226777 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.371195301 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.372266803 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.366442269 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.373654192 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.369019368 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.374730053 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.366388837 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.367826194 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.367933503 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.375818354 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.375876765 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.367997423 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.375056228 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.373470827 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.367942345 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.370182905 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.374668 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.365294304 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.375677432 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.366762653 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.373318619 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.371030035 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.374109072 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.370583312 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.373086695 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.367924549 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.370037449 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.375040073 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.374668676 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.376450919 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.370336581 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.37723938 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.369629524 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.367166045 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.376176283 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.369565447 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.373960417 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.370594944 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.37218476 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.370035389 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.375806456 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.373709185 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.373993718 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.367673119 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.369899435 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.377004715 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.374331481 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.377833357 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.375035256 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.380362903 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.370054312 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.374414492 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.375756437 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.371848801 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.372694389 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.378034166 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.372986487 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.374111415 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.371701181 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.376636851 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.380469525 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.373007662 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.372315587 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.37702208 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.376295794 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.378686431 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.371529665 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.374831669 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.370492621 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.37743984 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.374873649 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.370183112 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.378833161 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.375441399 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.378548266 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.376153214 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.372795105 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.372932461 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.380033457 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.375395062 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.372166835 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.377457565 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.372896394 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.376318196 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.379923306 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.376617305 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.370430244 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.371145864 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.373218953 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.375931864 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.379670041 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.374364865 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.377170609 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.372174767 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.379230409 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.379116868 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.378784324 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.376833327 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.371102905 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.377562682 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.373903513 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.375653279 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.375746311 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.37710658 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.38060293 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.379471937 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.375920578 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.380073923 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.383313013 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.37565197 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.372980003 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.373370501 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.37763039 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.383907943 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.381867232 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.378014936 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.376415722 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.382565861 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.382823659 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.382278571 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.378477268 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.38828153 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.384800036 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.374768396 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.377785495 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.381031637 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.383213565 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.378515318 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.38368015 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.378878863 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.379763453 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.385882564 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.383004527 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.386084004 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.381321059 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.37804221 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.386548924 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.378599567 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.379123562 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.382290026 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.385294344 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.382389019 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.380628008 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.388555219 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.387560639 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.385320391 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.397682027 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.384786516 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.380686265 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.386303853 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.377963342 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.385510079 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.379494239 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.385923868 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.382382955 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.385107669 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.382707235 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.37997449 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.381958595 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.383338364 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.390168688 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.382166024 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.378348794 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.38256739 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.382533436 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.383525945 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.387585295 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.381924283 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.383076576 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.385845169 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.380714749 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.391707126 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.390342674 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.38456347 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.386143263 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.38527693 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.383566579 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.383866297 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.387735493 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.390216597 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.38682437 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.385313246 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.380907947 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.388282075 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.386643601 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.378054371 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.37937759 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.383057427 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.384555992 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.393234146 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.396082644 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.384560266 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.382817878 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.383589977 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.384878437 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.381344226 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.386720269 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.387523652 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.381673045 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.382797978 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.391184114 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.387734607 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.387226886 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.382684325 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.390668889 seconds)
  done (took 816.071446941 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.383846026 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.383872035 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.384808542 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.383854232 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.386247928 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.385181998 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.384486316 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.384270765 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.38608603 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.383665778 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.385358589 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.386833814 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.386778515 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.387269986 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.384364856 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.388135544 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.385946179 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.384979361 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.386589523 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.384375385 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.386958327 seconds)
  done (took 30.358680866 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.389503518 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.384507733 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.386681662 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.386744014 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.387603592 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.387214581 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.388124205 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.387691022 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.387950026 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.387057591 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.387115311 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.388657425 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.385136535 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.385800692 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.387263591 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.387898542 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.387927531 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.38669232 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.390157229 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.388807485 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.390988731 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.38802906 seconds)
  done (took 31.790806858 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.394006191 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.388610015 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.384673674 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.389529984 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.389014457 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.3901385 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.389680989 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.391217279 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.387975803 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.386589017 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.384436482 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.388439885 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.389642499 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.394133162 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.385433284 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.391328441 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.39109302 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.390990767 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.389555203 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.388583245 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.393797363 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.391549339 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.390526245 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.384859891 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.390529654 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.389122247 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.39112214 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.389768929 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.385905825 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.393013486 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.389195819 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.385424465 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.389598441 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.387856248 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.387750511 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.393872239 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.390626101 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.38981914 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.389713341 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.393753222 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.40451903 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.392370036 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.39412837 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.396111196 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.391552714 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.388056496 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.397122889 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.392894897 seconds)
  done (took 68.003388969 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.39142007 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.39122363 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.390134603 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.390804984 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.394259707 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.391862035 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.393057946 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.392526695 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.392319018 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.390424614 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.393868956 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.392105451 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.392803459 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.391811042 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.393008036 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.391275423 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.390783869 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.390561531 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.390990624 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.391477298 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.392682018 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.392318257 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.393965068 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.392417613 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.392739435 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.390946157 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.391061073 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.393653147 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.391561033 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.393502269 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.392709172 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.39092188 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.393171905 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.391441059 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.393326236 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.392917405 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.396636079 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.392856699 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.393594536 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.392984851 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.396490907 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.3938964 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.393671561 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.394327051 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.392159003 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.393807727 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.395205174 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.393773 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.395258232 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.395054095 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.393134995 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.394455972 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.392917579 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.392969234 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.395510943 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.39537831 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.393145648 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.393147793 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.396296348 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.393931645 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.396293117 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.396198972 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.394583294 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.395188821 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.394661892 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.395172744 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.395669535 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.396861812 seconds)
  done (took 96.008145004 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.39608526 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.396065503 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.395572033 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.397148493 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.397692771 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.396644721 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.397070126 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.398132366 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.397514085 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.39633005 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.395132451 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.397443872 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.396423864 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.395948577 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.396557356 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.399837105 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.398500306 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.39817152 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.39768991 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.397886526 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.39657404 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.400769803 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.397172091 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.398971444 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.399141496 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.399731361 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.398540619 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.398607821 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.398859146 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.398454199 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.400707501 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.400410303 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.40056601 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.400035555 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.40019826 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.401451532 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.398369096 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.398697522 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.401376017 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.399673931 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.397681652 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.399447553 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.400813896 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.400732417 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.399597302 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.402642131 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.400170878 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.401282564 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.399724998 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.40113526 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.397199797 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.398474908 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.399760055 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.400731595 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.401661037 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.400807502 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.40135452 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.400020367 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.401065215 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.403184629 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.40091973 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.400837239 seconds)
  done (took 88.013623849 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.403652155 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.399200129 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.398061224 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.398763946 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.399983194 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.402483484 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.400832645 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.401451531 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.400181792 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.400369277 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.401734786 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.399849244 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.401882657 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.403357936 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.399774079 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.404646718 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.401090826 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.39977656 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.400489644 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.399822195 seconds)
  done (took 29.29229261 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.40245551 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.401316642 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.399530247 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.400201332 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.401172476 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.399711142 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.401586651 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.400805849 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.399820614 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.40232866 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.401066669 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.40387221 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.401506958 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.399628723 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.402219884 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.402676233 seconds)
  done (took 23.694028866 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.402760792 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.401736616 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.40110662 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.403103074 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.402738628 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.402294089 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.403744 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.399874689 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.402883419 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.40297933 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.403043862 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.40344812 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.404210457 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.404777993 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.404295453 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.404659099 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.403589643 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.403624183 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.404999316 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.40332914 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.405108605 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.405814971 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.407180824 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.405237206 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.402060356 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.406460889 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.402078245 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.402037422 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.405191066 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.407220041 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.402077801 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.405069894 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.405114754 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.40556271 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.40597821 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.407201806 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.407176827 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.40886662 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.408755604 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.406341511 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.407897273 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.403302195 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.408384011 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.40783774 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.406667323 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.406617173 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.40650093 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.405907177 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.404933382 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.404077233 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.406659903 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.406634968 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.41003308 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.407484587 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.40737794 seconds)
  done (took 78.552259396 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.408374517 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.409779375 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.409235724 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.404984381 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.405001504 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.406479718 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.404864874 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.407761542 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.405405717 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.408428185 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.405733045 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.409188084 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.40659172 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.407238256 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.408449462 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.409280287 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.406491417 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.407662145 seconds)
  done (took 26.610128498 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.407938375 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.407367744 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.406791355 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.406886986 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.406098379 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.408189734 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.409599421 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.407180546 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.407964835 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.408495459 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.407854597 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.40781782 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.408349439 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.409458003 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.408481262 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.408753307 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.408827059 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.406690472 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.406937105 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.408035692 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.409409124 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.408470425 seconds)
  done (took 32.25569968 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.400987341 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.404799351 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.402925315 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.418084964 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.413253266 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.401080733 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.40344017 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.403784764 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.425254586 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.441880935 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.438886097 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.417005162 seconds)
  done (took 18.251317979 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408160156 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409456746 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.407628113 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410084765 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408413394 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408955323 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409508906 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40895568 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409475351 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407648636 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409415255 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409510773 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410739726 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407932131 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411523376 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411975403 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408329237 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408443343 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407857776 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410941862 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410250607 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411056464 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409952566 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409976878 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410329279 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409915309 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411907268 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406195501 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412077568 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411912191 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412843015 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409831737 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.412568032 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410662338 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414449535 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414869421 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4108395 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414470209 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41259936 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41193836 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.412212141 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413527536 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414125055 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411510484 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415956698 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411736018 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410609265 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414481896 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411920445 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414792773 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412035515 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412691168 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413203761 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416044905 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.412407375 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413143082 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411549822 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411995291 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411425863 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414021603 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414408814 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414533597 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.413408593 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4139177 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41539835 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412725426 seconds)
  done (took 94.441126662 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414338341 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.41423796 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415165032 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414799677 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.413003728 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412925354 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413221066 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412418176 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41101537 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412856781 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414024798 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414307767 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.412188626 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413908969 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413291008 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413977947 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415027669 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413735082 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.4136594 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418490165 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411259835 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414565808 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413740879 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413707115 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415022618 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416374225 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414331834 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413132838 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415818138 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413010269 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415038457 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416123227 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41679949 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.416005091 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415362538 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416127929 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415635517 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416297834 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415319757 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418312791 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414863539 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415772292 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416564581 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415699429 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415303735 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418077432 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416000955 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414765228 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416583041 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415273301 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416939417 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414269257 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417173042 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41230606 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41635139 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415243404 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417096719 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416887301 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417278333 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417835924 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41707958 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416906289 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416757129 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417644699 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417857007 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416064218 seconds)
  done (took 94.686241484 seconds)
done (took 1915.680345894 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.575664874 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.531909882 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.414231267 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.431113427 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.409995424 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.437279928 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.423928121 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.410352659 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.413536139 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.412833282 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.411625101 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.60946686 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.407930337 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.413587759 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.41275382 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.510708245 seconds)
  done (took 28.515143686 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.443603624 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.421419679 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.529621482 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.419809107 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.442617846 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.60035308 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.474821823 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.419102461 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.583605455 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.434957704 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.422339962 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.434783837 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.413948642 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.409146478 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.446266294 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.603820951 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.661114741 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.414517195 seconds)
  done (took 30.861485239 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.843813459 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.418724457 seconds)
  done (took 5.552354887 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.438869942 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.416835743 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.416690627 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.419816258 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.411617622 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.408684844 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.419017709 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.410699405 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.414808236 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.539749153 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.418934975 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.426069842 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.415187623 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.420104791 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.421988609 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.461757599 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.575669586 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.421698951 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.421822867 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.422698428 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.418033509 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.504410592 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.460683489 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.425722723 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.538337209 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.421282632 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.417598618 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.427674911 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.560381676 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.426173339 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.421753819 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.41923849 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.4203657 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.421939381 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.887506267 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.424257084 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.42450026 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.447065584 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.425636405 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.567003238 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.419961081 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.424400279 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.415463467 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.893482086 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.547929437 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.535093374 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.423290439 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.418324139 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.421272744 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.485835729 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.423610544 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.420240185 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.477771385 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.244302492 seconds)
  done (took 90.015826355 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.442346941 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.415863131 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595295913 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.432957909 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.411592521 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.412485393 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.415851522 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.691715225 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.452735984 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.414889965 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.713013681 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.97840689 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.423985423 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.496921621 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.382370655 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.507548236 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.41365316 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.410353002 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.411465313 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.418662781 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.968506422 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.413094056 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.41493395 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.505150228 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.453905607 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.921690215 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.413062943 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.412086598 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.425803179 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.412002029 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.938927129 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.420245504 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.516240304 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.414106647 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.686805411 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.776399651 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.744094022 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.416954774 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.423135468 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.415632358 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.423207619 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.903485272 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.760707709 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.413122762 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.426916037 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.910718609 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.415136561 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.421873001 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.42876253 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.670690251 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.413973499 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.416572321 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.414010905 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.415787734 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.417071242 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.455173266 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.517919656 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.92537592 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.413406862 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.429466034 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.462088282 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.421698494 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.414472305 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.419486731 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.431664351 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.772360973 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.606398724 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.422615156 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.769097136 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.935820948 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.415958764 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.005423507 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.419920499 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.425922304 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.419427112 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.420581586 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.415741261 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.913856152 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.428781143 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.415237099 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.751655531 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.419540814 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.701714497 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.428652354 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.417033784 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.994815566 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.419886416 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.43977794 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.421298697 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.424995826 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.416720591 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.42206781 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.690974088 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.443621697 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.417261612 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.418374029 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.445897442 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.416181166 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.430923756 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.428593313 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.997751562 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.418609882 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.42109637 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.421351386 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.423783126 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.418185935 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.420642491 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.423200845 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.694603263 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.422389898 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.440597716 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.423929633 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.417865168 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.420736147 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.512189872 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.426094671 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.719525912 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.4207662 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.420614591 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.424159369 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.422839325 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.454164489 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.420387277 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.425523646 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.293261996 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.682783524 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.439682346 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.416965106 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.422545028 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.425042047 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.418368095 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.422070303 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.487750203 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.424903178 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.215490615 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.444716926 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.427951488 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.422442661 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.432084327 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.425847918 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.424215962 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.42392411 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.716484004 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.690770145 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.600571899 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.422397354 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.42906427 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.192185707 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.436718574 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.59972374 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.439871398 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.421006473 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.676557815 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.644898736 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.422205304 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.418189805 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.424784129 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.691073958 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.422143293 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.739675045 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.97340757 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.421791487 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.428280804 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.21872964 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.125073209 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.422509777 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.431545776 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.705028461 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.435202956 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.425667971 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.425191075 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.425888426 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.42165724 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.428831852 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.424821353 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.423313327 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.426242769 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.725155639 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.617523607 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.440224644 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.427243208 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.925606988 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.483970188 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.434838853 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.427875706 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.428177762 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.426064279 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.538904205 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.427322265 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.461282746 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.425934917 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.430682202 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.939792941 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.43281203 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.424180614 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.617944727 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.129478792 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.423674947 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.42601698 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.424745913 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.363783128 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.953566067 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.494469602 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.729426188 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.432220126 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.465309385 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.426744124 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.520635615 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.951284491 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.42920714 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.426383307 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.097654993 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.426173651 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.94589618 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.426337108 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.426388127 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.021557875 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.426818785 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.428174236 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.425671738 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.428567985 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.747648655 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.426380086 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.436360459 seconds)
  done (took 518.028014914 seconds)
done (took 674.259424028 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.429852956 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.429426604 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.415724257 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.432832204 seconds)
  done (took 11.013018215 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.470064241 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.435892296 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.442774411 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.434627963 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.451056366 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.434043715 seconds)
  done (took 9.974613292 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.429954152 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.42739654 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.432971531 seconds)
  done (took 8.594081012 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.650714093 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.445940373 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.797116312 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.4416683 seconds)
  done (took 9.640576257 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.441901103 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.443213931 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.444466161 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.449277606 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.472761642 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.473255129 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.449811559 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.450490916 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.47292097 seconds)
  done (took 14.402651735 seconds)
done (took 54.930524333 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.513758123 seconds)
    (2/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.602826721 seconds)
    (3/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.194792476 seconds)
    (4/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.419243144 seconds)
    (5/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.379773288 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.514002355 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.579043545 seconds)
    (8/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.328815855 seconds)
    (9/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.464429109 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.463572722 seconds)
    (11/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.416187212 seconds)
    (12/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.65336122 seconds)
    (13/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.413177565 seconds)
    (14/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.555151523 seconds)
    (15/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.534577699 seconds)
    (16/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.446111889 seconds)
    (17/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.414138777 seconds)
    (18/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.418164733 seconds)
    (19/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.77466398 seconds)
    (20/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.510800824 seconds)
    (21/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.591034157 seconds)
    (22/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.135930475 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.504193798 seconds)
    (24/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.417578965 seconds)
    (25/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.45915523 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.53697556 seconds)
    (27/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.615502043 seconds)
    (28/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.717394918 seconds)
    (29/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.415920367 seconds)
    (30/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.577998946 seconds)
    (31/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.500404555 seconds)
    (32/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.246875963 seconds)
    (33/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.415302571 seconds)
    (34/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.436345549 seconds)
    (35/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.46952082 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.52177446 seconds)
    (37/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.451078659 seconds)
    (38/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.44035821 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.513504762 seconds)
    (40/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.519069012 seconds)
    (41/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.437758429 seconds)
    (42/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.531905013 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.419092309 seconds)
    (44/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.199327289 seconds)
    (45/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.1925886 seconds)
    (46/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.504503446 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.591741677 seconds)
    (48/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.561452864 seconds)
    (49/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.297226296 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.714897991 seconds)
    (51/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.465200481 seconds)
    (52/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.430802538 seconds)
    (53/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.188395287 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.592957428 seconds)
    (55/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.503373844 seconds)
    (56/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.103790425 seconds)
    (57/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.417412599 seconds)
    (58/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.465539925 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.693410539 seconds)
    (60/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.459762379 seconds)
    (61/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.537574415 seconds)
    (62/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.573610337 seconds)
    (63/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.591807826 seconds)
    (64/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.41659858 seconds)
    (65/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.554112861 seconds)
    (66/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.43108164 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.531385392 seconds)
    (68/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.286879602 seconds)
    (69/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.534998745 seconds)
    (70/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.297047044 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.53878424 seconds)
    (72/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.636098232 seconds)
    (73/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.101662399 seconds)
    (74/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.620824728 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.692414227 seconds)
    (76/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.660927576 seconds)
    (77/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.439609076 seconds)
    (78/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.444681025 seconds)
    (79/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.60622941 seconds)
    (80/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.421428576 seconds)
    (81/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.667480378 seconds)
    (82/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.563278703 seconds)
    (83/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.690227969 seconds)
    (84/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.662249068 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.520359872 seconds)
    (86/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.433263761 seconds)
    (87/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.553044213 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.548666786 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.512208113 seconds)
    (90/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.464818139 seconds)
    (91/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.527213108 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.558106655 seconds)
    (93/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.563788425 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.438798266 seconds)
    (95/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.467215999 seconds)
    (96/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.420431687 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.573779283 seconds)
    (98/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.573964409 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.464742605 seconds)
    (100/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.397653719 seconds)
    (101/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.254938203 seconds)
    (102/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.56345269 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.559255091 seconds)
    (104/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.46595409 seconds)
    (105/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.658181411 seconds)
    (106/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.596138705 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.507096916 seconds)
    (108/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.420002536 seconds)
    (109/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.424332458 seconds)
    (110/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.632513337 seconds)
    (111/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.47075086 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.537628409 seconds)
    (113/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.238981602 seconds)
    (114/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.509243174 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.439265943 seconds)
    (116/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.587778723 seconds)
    (117/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.263816029 seconds)
    (118/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.420674774 seconds)
    (119/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.623779675 seconds)
    (120/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.665362499 seconds)
    (121/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.322726876 seconds)
    (122/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.618479721 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.475268355 seconds)
    (124/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.304399567 seconds)
    (125/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.4241142 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.444988838 seconds)
    (127/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.420837453 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.559869385 seconds)
    (129/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.473148957 seconds)
    (130/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.152247774 seconds)
    (131/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.438322099 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.44210813 seconds)
    (133/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.714214335 seconds)
    (134/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.527684066 seconds)
    (135/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.580638323 seconds)
    (136/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.420614848 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.478710636 seconds)
    (138/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.541452567 seconds)
    (139/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.43306923 seconds)
    (140/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.544450892 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.56717147 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.529534932 seconds)
    (143/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.441258493 seconds)
    (144/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.489434627 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.547899636 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.58698524 seconds)
    (147/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.238199785 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.499106849 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.598339021 seconds)
    (150/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.476878232 seconds)
    (151/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.531563067 seconds)
    (152/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.471627065 seconds)
    (153/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.50638913 seconds)
    (154/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.471976231 seconds)
    (155/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.529373736 seconds)
    (156/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.421979108 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.544941067 seconds)
    (158/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.6137094 seconds)
    (159/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.573298995 seconds)
    (160/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.421559736 seconds)
    (161/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.42986674 seconds)
    (162/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.498929866 seconds)
    (163/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.552184251 seconds)
    (164/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.564024209 seconds)
    (165/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.598914453 seconds)
    (166/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.163780858 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.601925474 seconds)
    (168/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.465909948 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.502545656 seconds)
    (170/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.266367639 seconds)
    (171/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.422389822 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.553028867 seconds)
    (173/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.426016795 seconds)
    (174/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.42180615 seconds)
    (175/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.428338646 seconds)
    (176/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.500421037 seconds)
    (177/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.474569043 seconds)
    (178/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.432769156 seconds)
    (179/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.425335953 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.561939488 seconds)
    (181/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.563213547 seconds)
    (182/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.148673821 seconds)
    (183/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.502780373 seconds)
    (184/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.450210639 seconds)
    (185/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.510455525 seconds)
    (186/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.44016091 seconds)
    (187/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.482231754 seconds)
    (188/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.646200458 seconds)
    (189/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.704845883 seconds)
    (190/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.555734864 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.52633503 seconds)
    (192/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.548514488 seconds)
  done (took 360.279244262 seconds)
done (took 361.586900275 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.470119507 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.531747199 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.450814432 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.449993423 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.454986359 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.448292007 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.464695873 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.452390631 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.462549441 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.464572792 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.449693214 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.453658299 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.465376159 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.461175348 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.486128304 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.453403609 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.456330868 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.461263492 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.463777284 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.465675856 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.456674066 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.45360145 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.47303757 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.455217841 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.463455413 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.461971713 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.459641621 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.448074031 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.457133712 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.463186173 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.448323095 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.457184687 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.46525067 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.460857746 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.455671076 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.462672221 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.454333809 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.535607187 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.472501162 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.462423514 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.459124578 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.468218587 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.46115958 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.46021477 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.463721073 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.476305901 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.463462983 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.472381804 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.448436386 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.443245277 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.468260687 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.467383205 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.458217388 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.448618583 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.460126595 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.470563931 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.464469987 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.471695992 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.464496957 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.459391579 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.49142843 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.472446059 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.46601007 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.464504613 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.461019014 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.469004646 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.463953153 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.466001844 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.459630965 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.458339285 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.45936571 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.462383872 seconds)
done (took 114.701712394 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.588507824 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.454009894 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.599392123 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.464106311 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.618276599 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.589766625 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.458079356 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.45986145 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.461109758 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.28582582 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.460798128 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.461966376 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.457533535 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.462495337 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.590622501 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.465838325 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.460377068 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.195153902 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.465538674 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.603587803 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.455279992 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.464811832 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.465175361 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.305580444 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.459242276 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.457308992 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.606552204 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.467836142 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.180111431 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.455470072 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.459500777 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.203442347 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.606839717 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.483813059 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.47549061 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.473129493 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.625141261 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.468026641 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.589851329 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.590414838 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.603688809 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.50426099 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.456470917 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.460995584 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.469344721 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.466566391 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.464686506 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.492759258 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.459716148 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.466314526 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.17778525 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.478571095 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.473165157 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.468992064 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.466611107 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.487992816 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.466622137 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.467732423 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.607586209 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.470378332 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.592683968 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.298513093 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.300045501 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.468390416 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.461211571 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.467689169 seconds)
  done (took 117.217613935 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.529312356 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.536592337 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.57304675 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.460576319 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.511588602 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.570976029 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.458164562 seconds)
  done (took 11.967209571 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.468221617 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.470008705 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.513851837 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.51382117 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.469941184 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.621381389 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.467950742 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.473998261 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.467907309 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.515411303 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.47051766 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.471565563 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.476671884 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.45938346 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.514698739 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.475096522 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.579553185 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.464994323 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.470820406 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.618343521 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.467115214 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.478333515 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.513791363 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.477896873 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.470821401 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.470498792 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.238569175 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.470286656 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.467842976 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.472501568 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.469632233 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.518407366 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.471805263 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.461986207 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.469897274 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.579824554 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.469937498 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.469520835 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.475375031 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.466257164 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.475246383 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.472802597 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.472468355 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.46799186 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.471906249 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.487919851 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.473100136 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.470837083 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.470698018 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.474923338 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.516557298 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.470302685 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.470037282 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.471613923 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.522053429 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.477914186 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.47094261 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.469219073 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.475201086 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.469099622 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.620377908 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.513959817 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.473789503 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.511840853 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.470911168 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.473164802 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.474500346 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.470743428 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.558018777 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.470425527 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.51547626 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.469269337 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.644908981 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.491923927 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.474761779 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.468092441 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.470250404 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.470388533 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.462964657 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.473475278 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.472928847 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.466966238 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.473187187 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.473503754 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.476218118 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.630735672 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.578147962 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.472812373 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.479165123 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.474509328 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.473996441 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.522239541 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.473736364 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.4713149 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.519909105 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.582007443 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.521996768 seconds)
  done (took 150.788028469 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.482393057 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.483261646 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.471596402 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.498689703 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.471724155 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.469314307 seconds)
  done (took 10.208073973 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.473163193 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.476257287 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.47392033 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.47179111 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.476021625 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.483479258 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.48209968 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.472362477 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.478423632 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.479483037 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.47835252 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.484145707 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.48608732 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.475455238 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.480563913 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.479147613 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.481095339 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.475989352 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.478065403 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.478042859 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.471160979 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.475964538 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.475463281 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.470848138 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.482328084 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.481252327 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.492843255 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.480975141 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.478304849 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.477537828 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.478158306 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.481741169 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.474006072 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.475256928 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.484352894 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.47317609 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.479297023 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.484948214 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.475240678 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.480293652 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.484542708 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.479153804 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.479453532 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.48680309 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.474537375 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.476065283 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.488649294 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.495453847 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.482203977 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.486625453 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.487920785 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.47751103 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.481559291 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.486483202 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.475982017 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.473275401 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.487651018 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.485615589 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.480324584 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.476328474 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.48246188 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.483772918 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.474973201 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.485772807 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.478914954 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.487673027 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.476107113 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.48396834 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.482487454 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.479360913 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.489149263 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.480792343 seconds)
  done (took 108.903450438 seconds)
done (took 400.40685622 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.78211105 seconds)
  done (took 4.117315448 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.555232336 seconds)
  done (took 3.894952072 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.874102674 seconds)
  done (took 23.223928363 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.511729148 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.567454304 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.482462676 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.469632827 seconds)
  done (took 11.369543553 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.789547008 seconds)
  done (took 4.128297827 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.484160711 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.476025159 seconds)
  done (took 6.296199491 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.759526459 seconds)
  done (took 4.096935258 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.837182315 seconds)
  done (took 4.186160141 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.483605209 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.491646989 seconds)
  done (took 6.323197593 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.453025947 seconds)
  done (took 3.789591071 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.802487248 seconds)
  done (took 21.14099323 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.482956339 seconds)
  done (took 3.826033232 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.519101979 seconds)
  done (took 3.858701975 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.067156788 seconds)
  done (took 6.404483743 seconds)
done (took 107.996075993 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.470564397 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.47146057 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.474169291 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.471925436 seconds)
  done (took 11.227653673 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.53635255 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.534198079 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.540689095 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.536315169 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.5343675 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.535695841 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.512450582 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.51167294 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.535222853 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.536033284 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.541121938 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.533822571 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.537240313 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.508803338 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.536261093 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.543686683 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.536304672 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.541846911 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.510559461 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.537822389 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.484085851 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.539203488 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.535681491 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.485563129 seconds)
  done (took 38.025568553 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.994711224 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.54876857 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.631702552 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.530379934 seconds)
  done (took 8.047045592 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.566517289 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.568677689 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.585771421 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.621670953 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.648378557 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.583571069 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.51050406 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.508500077 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.495653511 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.569696133 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.618421319 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.55047029 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.654357575 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.487715557 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.704026526 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.487178983 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.484653795 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.568014814 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.618762429 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.637262957 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.488388028 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.565701593 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.571267654 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.554207235 seconds)
  done (took 38.990037241 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.490977161 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.505865932 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.484606008 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.498562014 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.484702909 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.484681217 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.487806826 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.490864148 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.486241844 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.483093435 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.485866163 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.497795679 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.485258672 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.485865013 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.492574331 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.487670952 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.487893174 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.492586157 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.494223948 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.485836025 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.48660794 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.494474514 seconds)
  done (took 34.118413571 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.476395156 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.476826333 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.828766258 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.731144486 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.474716955 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.47004139 seconds)
  done (took 14.799834942 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.550427345 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.685973056 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.480544867 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.833487512 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.915941924 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.477805641 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.481821981 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.727626783 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.028385055 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.019270916 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.5391598 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.545904993 seconds)
  done (took 21.629823106 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.482278076 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.472632982 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.477121981 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.489587164 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.538815588 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.482181677 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.489496658 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.476748552 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.540731211 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.537917252 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.482896222 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.535324689 seconds)
  done (took 23.350635292 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573655997 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.482639833 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.493401389 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538440673 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478737961 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.321296389 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.531294377 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.191604421 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.484349515 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757891015 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483795211 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569151673 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.73803879 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492008192 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481390039 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.462551097 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.714022694 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00014464 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488879222 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485640916 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514396587 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.484251426 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.496679418 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.696291142 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328666794 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48292602 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.745925983 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483586582 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.780756704 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.754056171 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752674053 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482558508 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758630533 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135378781 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583129126 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700173039 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483679431 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481715122 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.474115473 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.498204701 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494311332 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.483543603 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.75553602 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485813846 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486449211 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501235304 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203824577 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.487964376 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.484241615 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.487582798 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.760338165 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587532733 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.489050145 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.488306778 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482544551 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48372634 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.4909558 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614476485 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050846028 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488621464 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497944674 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.484523803 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.484427037 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484851107 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113325819 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.488781201 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.490732315 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.489520091 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48520014 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486132912 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507108048 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48794683 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.503918515 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485840873 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22696338 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.483970357 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486772771 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066917637 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504693948 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.487214833 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.7184699 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487919873 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490591368 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.488037038 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.489545863 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211656787 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497710585 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.466699824 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554228078 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.204905273 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.700959799 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502965375 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517772792 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.71138212 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.465481135 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489139733 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.488141688 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487152716 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505215699 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.210197111 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485719092 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.491493711 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.746958136 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.696369252 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500213632 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.477914065 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973087376 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486171222 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.516291511 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.500888837 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.709945087 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.105417602 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762859208 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499635642 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517549021 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49001156 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269231353 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499857968 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.491131238 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492595543 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.764675301 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.306787338 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492912079 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559683371 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496018454 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492298377 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492261058 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489287794 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493640566 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.709741757 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492429236 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.762857121 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.490177098 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494011134 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.502006675 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499217542 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.492302922 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.713237078 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499224209 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.764242267 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492265751 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493835983 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488925784 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.711659762 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.50261527 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.494370408 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.755319491 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493378374 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.490947199 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767799677 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521126988 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60252912 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522417004 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.50782102 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.743447452 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.495054805 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.497487784 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495899648 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491829987 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496023437 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.503034065 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494233055 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12421299 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468065565 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.494945591 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.494686012 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.509093211 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563329639 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.500140616 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.711874716 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.505681199 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494904157 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.498468959 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.493902589 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.729747773 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769128346 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.502653872 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567042915 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.981853938 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111529689 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.504612165 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.495179413 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.494248843 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.496299913 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500265567 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497778524 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4969039 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.714505707 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769778248 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490625245 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.11434927 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493596681 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.496549186 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.498059377 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769333686 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.501740426 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49752604 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.507550184 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508597219 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502931008 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.766836684 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633364248 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.509189896 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.497353498 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.016280269 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.504686801 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.49759511 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.498004828 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527572759 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.497643047 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347327689 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.754849865 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507990382 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768025152 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498576894 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.509357734 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.495681769 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498449768 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502226267 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.494741296 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502039514 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.714832711 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.506468273 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498349715 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066786205 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258662463 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062569745 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495095282 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.502384715 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.495951638 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.222103435 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495923722 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499244754 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738121052 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.216773384 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496456418 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986630825 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.495247199 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.265386156 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77021851 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.727707838 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499049473 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.497520502 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.773584846 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.709093082 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531033983 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.502265897 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501914534 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.473736516 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063264316 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508252566 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579046723 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226205969 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498270774 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.498078599 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.576142758 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.511348842 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90263656 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.501411712 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498587914 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.497946942 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.51031779 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352751808 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.498409768 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502761643 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137530499 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.499013046 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.995806636 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498997786 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.717240798 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.776317893 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.768269274 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.496698404 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.503508704 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.752735649 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774839855 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499143996 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.502614155 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071909071 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.361734824 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.506632796 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500888452 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279827708 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515686298 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81337233 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.514071741 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.504486965 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501106596 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.503957037 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502754213 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.500814342 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.507996541 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480739975 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020270688 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.499120143 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502087764 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.509840274 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501774825 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.757610125 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.517340532 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.126384671 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.727782825 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.517285267 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532207634 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.5078913 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507855832 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.479934036 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.504877469 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.501983611 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.573802401 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.72273275 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.522401647 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.485279917 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.554889213 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.712294254 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.503190686 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.514953944 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.738071673 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.505023694 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.513306723 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250591969 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531990127 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.513751296 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50576673 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.517698306 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544246649 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571304207 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.722538975 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.781084615 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.777477996 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903613274 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517044789 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510336025 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.520343588 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604783662 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514389584 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.502040842 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.273409112 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129623712 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257860626 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.123623054 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.778948293 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.504066805 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514802295 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507804873 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638940457 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.5053147 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779993444 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506107322 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.516259207 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52778237 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518197953 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508669753 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.737355572 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781406123 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507086702 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520280833 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509800811 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.508564244 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784281596 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.714041632 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032476817 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095419734 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511227366 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.506359921 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.235458197 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776681181 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50679104 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508163226 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508922082 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.520594165 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.51738936 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.517351968 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507115492 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645832583 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782372392 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159637849 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.783775655 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.543071559 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.026567683 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519725296 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.759109209 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270848726 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.724135527 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135672281 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.258367573 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768446017 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578535492 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.72604288 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.508924569 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645759734 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.519369031 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.507864453 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510350004 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508421262 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.508257591 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.785054601 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142769022 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769854465 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.512025543 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.509474708 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538002642 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.727217981 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.734428423 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.241430006 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.734413852 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787763644 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.5158066 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.513153738 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139267672 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.784563675 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506273387 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.512440616 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.743280567 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.513012154 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538409545 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.199834267 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.509691752 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093820095 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.403223553 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531857232 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510872422 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.260669461 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13368316 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.510693303 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033607638 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515624968 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527920705 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.788969002 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.519116176 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.512639913 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.793609283 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.516287479 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.515687923 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.734341738 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.137765957 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.284738589 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.518074595 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520288362 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.509084663 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513548968 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.585608147 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510170361 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519244069 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.942910666 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.512449155 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514544026 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522140623 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.514986435 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510690857 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.514747155 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514206001 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.51741229 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.516787251 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.505649171 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.512192996 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643579174 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081297922 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509869183 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.189026213 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.836846398 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.769024775 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.516646903 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.494444524 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.517311518 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51374027 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513834814 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510805401 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.513669268 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093054171 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.517098991 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.792609013 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.515966062 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.723873414 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.725853898 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.526508126 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.732708266 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521284945 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53800201 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.493735985 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515386063 seconds)
  done (took 1041.199961231 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.554371878 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.534982102 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.540843512 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.581859614 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.575597288 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.631151264 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.608170602 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.550155164 seconds)
  done (took 21.946118096 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.517667831 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.514188433 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.510202224 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.515473162 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.51889214 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.001285771 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.510475676 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.515067851 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.530380209 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.510261168 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.508925944 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.22882782 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.54334928 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.524511428 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.49215007 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.517815344 seconds)
  done (took 34.838074624 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.658449331 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.720500244 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.548302032 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.583525492 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.516042 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.5207293 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.776404659 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.524706235 seconds)
  done (took 28.22079713 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.525283913 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.524564691 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.525853588 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.525558839 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.526437963 seconds)
  done (took 9.000507104 seconds)
done (took 1326.735054523 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.522638771 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.522248794 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.520273884 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.52344349 seconds)
  done (took 7.460359748 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.499950299 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.493523194 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.493563685 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.504169336 seconds)
  done (took 10.363500408 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.240570723 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.149975212 seconds)
  done (took 5.762700321 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.016437193 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.01496988 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.01776755 seconds)
  done (took 7.419872025 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.806972381 seconds)
  done (took 3.177793047 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.466288394 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.515034357 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.198173598 seconds)
  done (took 8.552510125 seconds)
done (took 44.107305707 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.514688448 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.773669918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.670257866 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.515998159 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.671735868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.669720059 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.252657692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.524316093 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.523416956 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.519464441 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.514065096 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.67182354 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.230292707 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.759831193 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.234179027 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.761158927 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.676750607 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.513638595 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.534670291 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.509023188 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.250867458 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.51153169 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.512519463 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.51051976 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.67310555 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.660870597 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.526903621 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.757615905 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.526543046 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.511088529 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.656398564 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.521241671 seconds)
  done (took 87.032956701 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.525829396 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.512246405 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.539901123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.511275795 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.52760692 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.519407399 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.514891889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.510008522 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.511725002 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.525083211 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.511270141 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.525156244 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.513752246 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.511376564 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.515155446 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.512512897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.521187811 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.512998599 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.511157998 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.514482923 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.512689411 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.526195576 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.515233641 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.510776263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.513151196 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.514738351 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.533702794 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.525551273 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.512977826 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.515541344 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.512398517 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.527998425 seconds)
  done (took 81.945065976 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.529751087 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.512619298 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.516027812 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.512465283 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.513454389 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.515276368 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.516347884 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.513222808 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.530892049 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.51276315 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.512223131 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.513493115 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.516951418 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.514959081 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.513853778 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.51611995 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.513982393 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.514300888 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.514460109 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.529124098 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.517289354 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.521962795 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.514303354 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.520441356 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.514855678 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.514324929 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.524364227 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.524772283 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.514684325 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.526551606 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.517509328 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.519102161 seconds)
  done (took 81.941818034 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.757922017 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.53492996 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.536064906 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.529082843 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.53639265 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.531386693 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.528497918 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.764116193 seconds)
  done (took 16.096935443 seconds)
done (took 268.38939321 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.524492604 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.030142523 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.546522921 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.524107581 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.558119952 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.548716396 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.751661472 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.551526181 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.75422833 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.548784972 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.539091856 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.540157824 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.33746298 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.673728881 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.392637597 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.50321805 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.424488826 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.517559094 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.106660017 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.809678229 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.547630608 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.537640276 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.379506809 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.435389294 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.515990574 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.605176882 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.625593056 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.749898857 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.685783173 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.601949328 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.05664694 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.520023108 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.53694069 seconds)
  done (took 69.361008602 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.52661652 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.530503097 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.53359419 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.534680074 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.530847736 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.534859271 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.525950336 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.53521173 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.536381097 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.532379603 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.534156527 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.533200091 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.534079238 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.529501946 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.532281717 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.515068025 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.524758011 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.529382642 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.527362465 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.515478211 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.531530512 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.536359019 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.533845526 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.531820474 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.534849512 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.535882191 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.531599925 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.534238776 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.531941575 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.530846084 seconds)
  done (took 47.311850421 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.535852801 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.110572054 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.26377053 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.532034561 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.52839561 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.533617521 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.823895174 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.533381509 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.532187985 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.534328994 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.016724346 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.537439677 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.564020748 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.271474315 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.529497282 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.538629339 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.537234905 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.530080326 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.123308782 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.535365194 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.82414121 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.538324624 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.826127141 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.535250378 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.533869193 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.531789829 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.535794552 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.361586834 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.553922305 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.028754958 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.347173432 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.825444996 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.283926494 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.31638432 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.336581422 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.54263589 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.539157952 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.025058612 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.531208418 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.531603493 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.824287156 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.52836596 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.277440763 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.206220751 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.54474365 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.539901704 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.391662113 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.040308953 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.778786512 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.533866138 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.319943743 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.533176241 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.541796841 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.534566185 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.779528993 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.532583957 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.533128724 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.392685017 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.552187175 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.823297714 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.538691886 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.533772338 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.122358526 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.530510847 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.113397748 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.531593425 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.54115919 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.534544779 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.284517027 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.534091668 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.225393094 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.54908969 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.540514446 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.01952305 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.112002477 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.440337216 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.533844644 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.124557358 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.31240135 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.839224418 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.535375088 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.362954699 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.839352421 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.534960399 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.545022069 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.546736125 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.541739335 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.604845863 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.824746069 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.160465386 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.222755814 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.397077255 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.841837774 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.544992332 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.535920904 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.404824792 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.557712751 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.543092359 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.282917598 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.225283 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.548415252 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.543975296 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.213131294 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.548113024 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.830929469 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.538357824 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.324182455 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.534212332 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.603896867 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.544373083 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.544070359 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.54000912 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.830116777 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.536002463 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.545345203 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.213818059 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.047241134 seconds)
  done (took 211.754307915 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.532255614 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.529520637 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.534496133 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.527995548 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.530949531 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.53923524 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.53161918 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.532170853 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.536163117 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.534787698 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.540964485 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.548007714 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.539833157 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.533310304 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.53318537 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.530282392 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.532230919 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.550790007 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.530013736 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.534459839 seconds)
  done (took 48.091615472 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.546396953 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.105746796 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.077198033 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.545099785 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.544405585 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.540073199 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.596515816 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.540201973 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.544317761 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.84352211 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.712930723 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.544691827 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.544218364 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.544569939 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.081567046 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.528814226 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.845811709 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.114925271 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.551592745 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.109296469 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.524532356 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.549159803 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.538446866 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.10876411 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.851105969 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.829572388 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.601684249 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.110256333 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.544307848 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.552350383 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.126764698 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.556901062 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.542285789 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.106337136 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.547353223 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.562281539 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.545516159 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.602629362 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.60223671 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.84380432 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.111215024 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.837627029 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.560917662 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.714389644 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.545742212 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.527513544 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.119358656 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.547667426 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.527981217 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.549164406 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.55556568 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.095783803 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.539846976 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.097258753 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.545049457 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.550051943 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.11242229 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.091882035 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.092306513 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.716701841 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.539097804 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.839406277 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.545368133 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.122337293 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.549768689 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.550853337 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.549680836 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.721646079 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.111405337 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.835756375 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.849041218 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.848617358 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.549258545 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.60936362 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.554336477 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.851522328 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.605399746 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.95463385 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.852317774 seconds)
  done (took 138.578107734 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.814201562 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.652919509 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.923971221 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.134787048 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.049508869 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.676966708 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.657292467 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.790770371 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.560017077 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.637608013 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.199884477 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.644551633 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.279242163 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.632421549 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.652496978 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.67475608 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.948818887 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.550607152 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.207285626 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.175993094 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.540537786 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.64954502 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.05871552 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.733861101 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.537003433 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.1201615 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.499451696 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.065457578 seconds)
  done (took 57.464394325 seconds)
done (took 573.940248703 seconds)
SAVING RESULT...
DONE!
