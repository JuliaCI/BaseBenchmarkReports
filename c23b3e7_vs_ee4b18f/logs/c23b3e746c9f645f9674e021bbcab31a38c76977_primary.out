cset: moving following pidspec: 7982
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.726121035 seconds)
loading group "string"... done (took 0.552723838 seconds)
loading group "linalg"... done (took 10.037631775 seconds)
loading group "parallel"... done (took 0.20892811 seconds)
loading group "find"... done (took 1.491100362 seconds)
loading group "tuple"... done (took 2.221993778 seconds)
loading group "dates"... done (took 1.52066111 seconds)
loading group "micro"... done (took 0.212269673 seconds)
loading group "io"... done (took 0.589668112 seconds)
loading group "scalar"... done (took 56.334898406 seconds)
loading group "sparse"... done (took 14.937480526 seconds)
loading group "broadcast"... done (took 1.287620283 seconds)
loading group "union"... done (took 11.145593681 seconds)
loading group "simd"... done (took 3.409254509 seconds)
loading group "random"... done (took 12.956303791 seconds)
loading group "problem"... done (took 2.393010166 seconds)
loading group "array"... done (took 25.971148002 seconds)
loading group "misc"... done (took 1.212935722 seconds)
loading group "sort"... done (took 4.032148169 seconds)
loading group "collection"... done (took 22.066300728 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.68931668 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.150773312 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.234936538 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.363388617 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.244494896 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144406449 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.152302103 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.30323747 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.874223399 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.22197109 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14666749 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.552510009 seconds)
done (took 6.811753341 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.24929026 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.250106738 seconds)
    (2/2) benchmarking "String"...
    done (took 0.173901491 seconds)
  done (took 1.100373641 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.0847378 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.169226156 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089290585 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.105103303 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.104526947 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.104094847 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.089047266 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.104019142 seconds)
  done (took 1.442292676 seconds)
done (took 3.561279416 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.552371538 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.864114136 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.559810467 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.164020548 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.31404731 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.344012889 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.350579493 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.206998036 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.102950048 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.102721674 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176126091 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.427285855 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.457427391 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.03833478 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.103384816 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093852146 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.130232383 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.817408535 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.073507934 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129005058 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.56879802 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.195512689 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.109661324 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12757796 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.19366321 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111715966 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.172544854 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.09940603 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.656475615 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.125641788 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.201778569 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.076278799 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.172509731 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.238485148 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.217047547 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.102081903 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.658478427 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.197883033 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096101506 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.095458195 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679187477 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.125867516 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.165967099 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.099434285 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.086957413 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184586203 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.111592362 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.088284833 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.110604192 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.080429299 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.158600144 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.454146383 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.087858483 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171964251 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.086857862 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.6977019 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096714735 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.27603433 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.131568678 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.099886561 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.071407124 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.098969402 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154368643 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.103940489 seconds)
  done (took 20.563279686 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.164964588 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.167812374 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070323207 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153839218 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139185424 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.089976303 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079600964 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.088375976 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121919043 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.23937989 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.123843588 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.182667928 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068940274 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.096084411 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.140275772 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.228861744 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.114796335 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.115917779 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.079373711 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102597247 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13677288 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.091193692 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.104910169 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105820541 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.163173438 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197985888 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103526882 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.117150479 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094535117 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110563407 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.12096194 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157104246 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.084593887 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.078069101 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187020377 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.114626333 seconds)
  done (took 5.232980585 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.223619349 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119453996 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.23380619 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.173257804 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142290982 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16180146 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156187335 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.29965677 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.219167513 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.157055453 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121806729 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10526072 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072759142 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095130771 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072950624 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.565864831 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.18020218 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.143637741 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.149485688 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098899457 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096629803 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.394792813 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078048755 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.090310788 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079514784 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088777847 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.19059117 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.224853735 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078834427 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.159736535 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.076374166 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102756971 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125902097 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197980638 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108645066 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136322323 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096679496 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.074663056 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.230618798 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08678083 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.088009561 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123226182 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110366915 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.127642264 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.093939718 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.104261457 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221113717 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.091380204 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115349577 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.086893135 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193376451 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.135697353 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07331204 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.311483859 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.109685237 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07943782 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09338183 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.291103458 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.109948302 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.091596175 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.089600241 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07931728 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.088161313 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.428772022 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099757468 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.99975627 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077855631 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156468178 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093764062 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098838104 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094590127 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079098492 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11054257 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.074525509 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.091574382 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.071678132 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.090512398 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.072187506 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.095086892 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.074141573 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114693434 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.094111648 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.073956773 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155276419 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.104900658 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092479461 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118232561 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.094230666 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.072734902 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122118492 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092135487 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073346455 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.093382373 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.170102664 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098332514 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.097854424 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09440914 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.136290181 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.090060841 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.208259614 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074468795 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117499358 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.093892708 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10505309 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.106676812 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091379257 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078187095 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.08794531 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073405394 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155277666 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073389435 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.0932703 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.093251219 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.088089998 seconds)
  done (took 23.300380328 seconds)
done (took 49.771446121 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.523023768 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.116328129 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.115149961 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097154595 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.115852495 seconds)
  done (took 1.723621532 seconds)
done (took 2.453865518 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.403018462 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.211039904 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.114553483 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.200229956 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09869617 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.211232615 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.213824056 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.089214739 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.245777297 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080343035 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.22183446 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080106087 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.099765615 seconds)
  done (took 3.026316588 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091814777 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120964339 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093198823 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108459321 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072194636 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10722479 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08872975 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.124087121 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105777167 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084610092 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090277939 seconds)
  done (took 1.818042684 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088514668 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115734373 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080555372 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105068058 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072911746 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104774126 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087729372 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119314543 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088788373 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102216296 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072595271 seconds)
  done (took 1.768611635 seconds)
done (took 7.335419654 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.222569438 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.970775233 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.152299425 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.222066849 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.382011859 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.257346929 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.616808164 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.186206907 seconds)
  done (took 12.926828618 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.178210656 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077378093 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095737844 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079629212 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096657287 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.077917871 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096417115 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093961908 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.079667662 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094247411 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07894965 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09477523 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.078648497 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093392271 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079647018 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094189733 seconds)
  done (took 2.29059074 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116900095 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11562044 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.1030356 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.104913655 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.082825758 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101606917 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086756082 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101482407 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.096761452 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.083362582 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.1040998 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.087934645 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102404148 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.096274955 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.086864733 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.104430571 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.082457444 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103377761 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10250474 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.087772879 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104023787 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.084315093 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.102387372 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103615478 seconds)
  done (took 3.189903897 seconds)
done (took 19.142695772 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.170369022 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077759832 seconds)
  done (took 0.989507251 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.149702181 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.1512853 seconds)
  done (took 1.050238138 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.1074812 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093049917 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136830551 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112788935 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.077908488 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.093045659 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.132520849 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078196067 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093567847 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079037206 seconds)
  done (took 1.754343889 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082890802 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097888781 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090076075 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.145475294 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106341479 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.099105362 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082717454 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099085181 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083419576 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.095053674 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102024965 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101396385 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100997471 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120138967 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.082861899 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.104081878 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109192865 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08579167 seconds)
  done (took 2.540098646 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077149388 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094324225 seconds)
  done (took 0.923071481 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08374629 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094540323 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083308467 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098719652 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077851044 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09372575 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078962927 seconds)
  done (took 1.359674389 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.567231466 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.281345906 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.401592865 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.114518287 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.137382754 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.361888655 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.155913227 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.094799367 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.112503756 seconds)
  done (took 3.018471669 seconds)
done (took 12.381209793 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.085992673 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.222698628 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.645119942 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.117741375 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.077370933 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.152801595 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.308811867 seconds)
done (took 2.36485844 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342353603 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.158467611 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087386896 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.076373645 seconds)
  done (took 1.414371486 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072873502 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101340242 seconds)
  done (took 0.931321278 seconds)
done (took 3.107560609 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076012975 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.128104182 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074415443 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.09352866 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074009848 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094220192 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.074883191 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092861994 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.074788652 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.091278363 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.074994198 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.090249774 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075924443 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092040866 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076677496 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090429439 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.075981541 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09008032 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.076049467 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074657481 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092348342 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.074962595 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.091140866 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.075109907 seconds)
  done (took 2.815724013 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100168282 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09633262 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082998857 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099735165 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100598988 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08301257 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099186604 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.078843281 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.099515355 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093981221 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084331658 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.10105228 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.078358096 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.100238497 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078791873 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100279426 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.099486735 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079559299 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09493137 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.084280643 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.099509986 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095619514 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084838141 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099656243 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084451755 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099576236 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.094408936 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079669578 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100413945 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083931339 seconds)
  done (took 3.516288962 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085541312 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088684216 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077061214 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.099410683 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.073217182 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.093635672 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.073499623 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089895142 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078252117 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.075824471 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.096749067 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.075041799 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090074565 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077573506 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098070359 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.078614596 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.104471054 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.090176898 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.074130913 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094103922 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.078694827 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089397149 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077455218 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076686052 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093465721 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072677841 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093970787 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077147171 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094749973 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076393119 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.095267216 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.079477091 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094520462 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086190618 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.096597207 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076922502 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09809224 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.072483048 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096210029 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.073441328 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.091160109 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076365574 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091569506 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085058965 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094570957 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.078680353 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090418918 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078741302 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.094803086 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.081546224 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.091526244 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.07365512 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097134168 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.07968926 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.096670883 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072943542 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094248203 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073118971 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095591744 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077169347 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.089988518 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.073942953 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097353136 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07934513 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11130685 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101071822 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.073985513 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.096591622 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.078777663 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097337977 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.080810179 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106470381 seconds)
  done (took 6.979047647 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093296163 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105236722 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079422696 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096042913 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078925453 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095794478 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085675507 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093675674 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07983765 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.103535123 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093526491 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079517518 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095951015 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0793159 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094038582 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079408388 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102690904 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077915519 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.094497617 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079397878 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095093971 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085454678 seconds)
  done (took 2.733941098 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.23256088 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102245402 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146152672 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11165211 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10046539 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111408505 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098438456 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084582876 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098958171 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088231449 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10519925 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099605431 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118844663 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088816042 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10637026 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090783053 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100251007 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107600501 seconds)
  done (took 2.760821035 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095247686 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097057148 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103372536 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098206069 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079761982 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098333166 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105478316 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.095993006 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.097770292 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.079846497 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.107392309 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097723422 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.081209945 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097610766 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080095651 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10075673 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.080753965 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097749917 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107102141 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089119745 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106325542 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106619226 seconds)
  done (took 2.872111099 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096197226 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097481419 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.113199762 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101394957 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096168216 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080936937 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.102786738 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080317515 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.104788924 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.078777709 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097733019 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078206439 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.106027724 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097633695 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.087525217 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097867249 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080346434 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097859705 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080249179 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095941601 seconds)
  done (took 2.639799192 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.179558593 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095039553 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111791088 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124140937 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095651329 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112870544 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124378537 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094751691 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112449326 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127527111 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095408314 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113401802 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124611873 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10340284 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111636976 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124257447 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10776151 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124012283 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111287446 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094968072 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127654253 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11203951 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107371999 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112481074 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.231992246 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095058715 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111892384 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119688939 seconds)
  done (took 4.078537521 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077343862 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077103473 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095069478 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077262106 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094303271 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077272164 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095083361 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.077895004 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09359968 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077769358 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.094719111 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.077421986 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094055314 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.077574554 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093990064 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.077265017 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094428593 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078113451 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093658382 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078530704 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.093780674 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077670568 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.09378544 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078004156 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077608975 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094974509 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077530497 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09480455 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076259448 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095331037 seconds)
  done (took 3.334769049 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093419753 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106857807 seconds)
  done (took 0.974636301 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.087233164 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114961595 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076936469 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095410654 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089328115 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09613291 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106265737 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087732475 seconds)
  done (took 1.528442469 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.181362782 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.152904442 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084224337 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109336615 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.152546268 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.165146023 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.152776112 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084127143 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.098640383 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071955342 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.145362976 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.092355803 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.082264619 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09837164 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.099613125 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106229239 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.078535295 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106406636 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103032145 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08077842 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100458421 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090812779 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103181643 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.087531735 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.093275453 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.102612922 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.087566475 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108633434 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079735827 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.103249076 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.097834272 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.097057231 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082184523 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101167116 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078846374 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.149395573 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110823789 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114883272 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082619462 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102481645 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087280025 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096817958 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.101450176 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080904167 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104269368 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083069417 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102684795 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078614604 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.092107279 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.075565051 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097044919 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078240369 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09489068 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084336977 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.101821096 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107993683 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08159058 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.093119104 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.078140263 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.094544363 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.081870406 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.097034159 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085802804 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099893714 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079398457 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.100942646 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100372575 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080497369 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097356485 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080596214 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.099107995 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109110428 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.102572269 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083753489 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103210718 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078806219 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098140082 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102445502 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083123545 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.102520038 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083999425 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103627262 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081146263 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095852983 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.078201871 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.103559795 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079306862 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100154994 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.07272277 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110536977 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098640646 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079406327 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.092943773 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.082627963 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.113539217 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.083158174 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.093859657 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084012967 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095622965 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083858353 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103182006 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075513787 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.103621535 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101693665 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085688565 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.100229155 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.144600442 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080786715 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.096548917 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081251918 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102802562 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.076770665 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110995552 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076937844 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093997066 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.078274714 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102224463 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.083182166 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098258375 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100087975 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081660841 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.102894905 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080313804 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094073877 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.078513684 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101450946 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088815693 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.103670856 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080977209 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096781882 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079244589 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.101837923 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082227143 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.098451383 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102504801 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080885266 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096760523 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080111121 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.101276939 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.084777249 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.096789827 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082177429 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103525307 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.099761066 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082977404 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.102754053 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07820246 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.093120514 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.083336469 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.09686608 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.0809956 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107195061 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07891399 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099415443 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.079164441 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107200204 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.098277872 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085520429 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09897751 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.084391426 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103736459 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073142025 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098614847 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082390078 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.103711903 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.080312902 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098110941 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079656303 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104770278 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.076397189 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10185816 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.074888107 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.095810981 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102534378 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081431214 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100246131 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.079896591 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113837345 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093073825 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104215944 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.083180247 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.100749127 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100453182 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083777477 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100620363 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085711119 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102911858 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08372371 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.099330281 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086113053 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.095013947 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083428948 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10042948 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085538913 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.091964034 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079479649 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.091926891 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084416087 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.104473952 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.101046819 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085972749 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098805232 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084174381 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106810596 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.098059978 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.10120033 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.076761528 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102722625 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.089175562 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105462377 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085359514 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.104200299 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099685026 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08140903 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108171852 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081425756 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.100890192 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081224647 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.09482214 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.076947444 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10477696 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083139428 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.097703171 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079187299 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104235675 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085778769 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099351579 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.09374688 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085687359 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106709838 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.079153427 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102490232 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.079746708 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.100353047 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118830352 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.076607427 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.096584637 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.087856478 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102460448 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079490653 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.098742951 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081911557 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104034157 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082475273 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100183161 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081491947 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106794653 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081422243 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097166223 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.080037455 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100602095 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.077167626 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100413747 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.101301107 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08136637 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.097644995 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088882639 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104785718 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085410444 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101271399 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084055005 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105206363 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.094596462 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096731152 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102752445 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.080253069 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.093689133 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.080578504 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.091737361 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082460367 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.097945537 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085441847 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.099408357 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083118335 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101183832 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084950364 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.099887225 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10361169 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097125991 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.093733324 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.076952301 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100133385 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083040715 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.098731916 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.079534525 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099038137 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102688377 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083905322 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104659457 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.077475958 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096100115 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08527859 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.097239244 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.085547338 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.105294526 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.087340939 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.098536526 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.08426244 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.098683792 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107378703 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.078451906 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.101581892 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083624837 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101856248 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.081037555 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.099678521 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.079752395 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.094751808 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.079853329 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104700297 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.076976132 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102829298 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.098807908 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.082175874 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09521717 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079129914 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104374218 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.078253494 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104831511 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080132362 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.094723461 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.077193933 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104007402 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084641143 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103826684 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.0791655 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101820459 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087403956 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102568994 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079540376 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.107443931 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10520655 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086244721 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108270193 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.07554375 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.099059226 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089895628 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09818668 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082995352 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100274193 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.078087327 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105329561 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086048062 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.103685926 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100960506 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.077817368 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097674786 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087466738 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100361071 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.085089518 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099104521 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086032285 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.097121504 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083757076 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105221562 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08411148 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10508143 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084876514 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101843407 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.080280128 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104322482 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098250648 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.078390208 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.094596113 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081895802 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105066068 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.075551598 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.103071302 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086281399 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.098914869 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082527809 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102487741 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.081184279 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099812513 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084401136 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.098317179 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091513702 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099376654 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.079500614 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102346771 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084864934 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.095880101 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.080741112 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098032561 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103909083 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.083147922 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102685591 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084813007 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103158186 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082543243 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102931301 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084784805 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103992506 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.076691319 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106057861 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087517138 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099799429 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.097898849 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083093028 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.095282534 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083507161 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105542863 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.081109915 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106806482 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087641082 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.100471341 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.081414232 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103892837 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083001154 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105726698 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.078414519 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102845398 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.094586871 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.088824222 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101192696 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086609496 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.098674572 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.078178159 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10291218 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084843922 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103204124 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.086678393 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106187249 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.07742827 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.097197865 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081816797 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10074083 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109783851 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081179614 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.100753077 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084077117 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100803109 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080974471 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106227076 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.078662534 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.099329798 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.084212954 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102436042 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.078915031 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.096150562 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08303647 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.102429976 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102782686 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.084496817 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.097364602 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.084005255 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105603168 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.083508553 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.095153426 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082094665 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105818042 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.083701099 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.100462305 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.077929731 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109086581 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105431286 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088467876 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.098386458 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085983409 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101536829 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081912812 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105908992 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.081762245 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103855261 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.102124072 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086139225 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110032265 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.077874969 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.097273735 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09210069 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104332204 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088616722 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101197974 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.082700654 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106735785 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106619282 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082648427 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096539858 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.07947919 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.097568008 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.078289227 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100885942 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091978158 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.101821325 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.082250433 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102913352 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083819693 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.102036262 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.083408985 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.097349793 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088008319 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10006597 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.087561308 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.097711445 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.075374793 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.102301167 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086008104 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099398868 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.098199413 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081980441 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.082192036 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.097848356 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.101813856 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.0879191 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102394388 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086609895 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102642177 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.083166786 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102061843 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092341169 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099898556 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.081872762 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11292967 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106004274 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085931159 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.103530086 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088870096 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107544765 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08342255 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106999524 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08193929 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.099217645 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087619533 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107274914 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116342856 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084109157 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.096507222 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085003246 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.099373254 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079251139 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.108910811 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088257164 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106883999 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.083951927 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.100644347 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107691373 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083474817 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104690736 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.083107285 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.101836275 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.084773429 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101198929 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083710975 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100702258 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088105344 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108314905 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085177089 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108672127 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.076590968 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112023454 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.107979834 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089879248 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099823352 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079558732 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097746536 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083458966 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107347443 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08762695 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103284291 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08549226 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103096549 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086782106 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103816796 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08158898 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.108286849 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.084910886 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.101171029 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085825934 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.098943828 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.079894848 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101141672 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086988174 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10770617 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.105120763 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092296873 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10664183 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.083474378 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.101719227 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086263302 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103277183 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.086692735 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105751435 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.081453934 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098118596 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087362024 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108806822 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103821611 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089880044 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109222347 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083547353 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.107566528 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090475981 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.106455962 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081917972 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.105652914 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082476201 seconds)
  done (took 56.756165398 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.157580069 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089774014 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10246318 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083352545 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130342603 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103627258 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08431287 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102837935 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084730887 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116248605 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083351126 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102714878 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124154702 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132709758 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110529417 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116347975 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101832827 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.084850689 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102064283 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084236542 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124512771 seconds)
  done (took 3.04912827 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10734392 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121790962 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11942642 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122494041 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092572728 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118667958 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.12016484 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100073234 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.123477456 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115443716 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122496728 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09853003 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.113925764 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.115361623 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094359987 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115032341 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.123146595 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112666319 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.100552827 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.120080562 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115932807 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100442632 seconds)
  done (took 3.301592706 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.091028813 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104083484 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088121196 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.102255739 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086314159 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.100762284 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092887448 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101465659 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091827311 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.103246649 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.080336435 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.101645904 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.084372006 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.101750539 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.081249847 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.101507798 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091422235 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.105338345 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087441083 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.102581202 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.118851616 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.08384126 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.101789969 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.080363478 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.116092489 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088242611 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.1034417 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086799081 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.097554964 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086077452 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.102208689 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084181743 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105424511 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.080343326 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.097173284 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086624523 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106219656 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.082529967 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.102863208 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.080523219 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.103816757 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087065718 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109120697 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.082583941 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.102205065 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.079930821 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105580373 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.082270802 seconds)
  done (took 5.376368513 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.121038856 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16183227 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087963552 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.150249668 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125650351 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119059287 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087730126 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148020163 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.108123549 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086784046 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127905044 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.129185894 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109800068 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.094851574 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111896205 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.090059987 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112060185 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107776771 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.096610199 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109727572 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.096269034 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111885593 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.124535986 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.125077628 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092047104 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10861859 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08942647 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.114038502 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.12449394 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117288112 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094670322 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115790102 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125684271 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092235909 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.1094462 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090263384 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128147077 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.111771253 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.11031677 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.087271196 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.110183203 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094033133 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113261436 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.127993869 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091562073 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113167072 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110520786 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.087059521 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126394786 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090529359 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118937557 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.128596726 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113127144 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.091086295 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11406614 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124788514 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.091876199 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.108708617 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091287525 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.12270654 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107328456 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092639871 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.126863423 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109664087 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.098760656 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126175814 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113428396 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091957752 seconds)
  done (took 8.463641512 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120813989 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.114633833 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125812706 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106161165 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114584053 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113687164 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093384517 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.114993747 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113493532 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.102360648 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113841995 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.205626189 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.110011386 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120029856 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.09390979 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114758519 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093365103 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113969146 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113339634 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09287451 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114233413 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127494362 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0932019 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126110437 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129449807 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109559016 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094125336 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114568231 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126289229 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093615763 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130649714 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114303883 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093684358 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127072901 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129697898 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113853671 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086142882 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114580833 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093042185 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114313198 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109699438 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106005927 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114016757 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.109051619 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093676795 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115077907 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12518283 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.109936056 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120475763 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12310348 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.0940046 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128144802 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115415859 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.1135726 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106653997 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.136495103 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12768193 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127619373 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09414168 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126832311 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127144496 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136909136 seconds)
  done (took 7.938927045 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084145256 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083766446 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103948682 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084181255 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10512694 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08364961 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105240265 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083157814 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10386296 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.083015924 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103828695 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08435403 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104525822 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084434615 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.104056789 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083583813 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104422301 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084975839 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104420833 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083566821 seconds)
  done (took 2.701853699 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096395638 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127896877 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087037838 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117475661 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108453746 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095465953 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107268071 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087807863 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108812798 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087927044 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119776872 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.12107693 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088012787 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116493361 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120630412 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.096099545 seconds)
  done (took 2.529673812 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.110436123 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.129357049 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.172469805 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.111200071 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.087913779 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.118447261 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086559054 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.11021676 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08509665 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.114268801 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.110716981 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.091011168 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108343484 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087709525 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108408259 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091575457 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.107236205 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.091593108 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108917487 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.175006975 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.114141134 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.090465464 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10989129 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090561598 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111245695 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094279794 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.11598587 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108427406 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.089671567 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108993812 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.091169619 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11773565 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.087395014 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.11391585 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.106901591 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.090162671 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107298956 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088779124 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112652422 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087526759 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.109238499 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.091542974 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10832221 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089771574 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.106566477 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088306153 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.107029683 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.116025787 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.090882331 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.110934019 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.087591947 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.114592866 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.092058148 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118131742 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116435457 seconds)
  done (took 6.636596644 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100576919 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110210835 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.102241134 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105628833 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087797914 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111547407 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089341796 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110998641 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110946112 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085156199 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111363079 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089640928 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110341696 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089576253 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110761022 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09041151 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.105479673 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.089796246 seconds)
  done (took 2.656857861 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09377343 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108207031 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092681905 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107849124 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087196633 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108886238 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08554938 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105989478 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085646124 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.107810272 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087042801 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.108757736 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086422705 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.108591075 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087560872 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108424036 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.086512962 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106460077 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086741574 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107087366 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087325341 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107125194 seconds)
  done (took 3.002506008 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.104356039 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.173773411 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.120850037 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.187797876 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.109148372 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.086736106 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.119479711 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.107897977 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.109652568 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.107932068 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.087551516 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.107680626 seconds)
  done (took 2.273593776 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114531103 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148205941 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108687034 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087728317 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121701125 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09370959 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115483032 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114051816 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105327222 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131283606 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1155363 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126373443 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106007347 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127585335 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121141207 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100450474 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115366236 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116284631 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088706092 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136384196 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115515205 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126737184 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094721547 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115907588 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09492837 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127578122 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126820251 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131843576 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094442418 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125950044 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121427838 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09354677 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127310039 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131086245 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110230832 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105756267 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115995335 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137839097 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121595641 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107468788 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109280919 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121280634 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106310988 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123152734 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127382906 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094339728 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124321206 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115641654 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094199307 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145318375 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122152923 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128095818 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122042581 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105547878 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127936219 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145835717 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13223412 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128965661 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12114452 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111470216 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127675232 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12178061 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128120645 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130944848 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101081413 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128013472 seconds)
  done (took 8.619428727 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131745026 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110826607 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114563255 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111349066 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128925231 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115551559 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093929653 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114434392 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115947339 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090389644 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16435168 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116343117 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131585046 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107328443 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116665887 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115826867 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094887197 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128157866 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111855573 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146644818 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095193949 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129092044 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129722513 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128603368 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132057707 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101061551 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11617126 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094827363 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115568073 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115741697 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103067295 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116102634 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129361176 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090697612 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129142196 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117323901 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095355413 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124467561 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116491311 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101294667 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129506893 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138459816 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116914705 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096028624 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132781116 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117660609 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0949216 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112223891 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116205854 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090978167 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132659135 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132285892 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134224035 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128916335 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095787566 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116831074 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095388307 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117275402 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117225635 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100947496 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128796384 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117450524 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147413151 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094215219 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117048517 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129839993 seconds)
  done (took 8.553109571 seconds)
done (took 156.849830758 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.157149888 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.177183512 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.154795587 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.14673425 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104160609 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.117993042 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138129328 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.157434341 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.081861159 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.105130706 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.081890765 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.108455511 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.148140925 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.104127672 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.082044188 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107832563 seconds)
  done (took 2.827553159 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.184465036 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.346987176 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.122531597 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.114162083 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091896619 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108625052 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.09149455 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.115537873 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108557716 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.097852707 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10711649 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085780542 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.119355086 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106693716 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.087234371 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106865106 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.09762004 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.107027299 seconds)
  done (took 3.06158675 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111196692 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149727794 seconds)
  done (took 1.123562384 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12186447 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.19039485 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316214348 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155374367 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.112847996 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131416409 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157194129 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.123699611 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197049734 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.127708561 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.106253583 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.109761916 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137923272 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097208077 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.1219189 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.109466896 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119360716 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.120795132 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098067669 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.112454166 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133239692 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.094037461 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117761882 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.121284231 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186576252 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.105296721 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.114395132 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.11459689 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.092067711 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.119507843 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112826043 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.107946797 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12780686 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.19760904 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.095111712 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.192869005 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.101280721 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111216532 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.098302882 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.110646816 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117072604 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.095627807 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.12943788 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11021642 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.093423886 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.122518747 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114023023 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.094407261 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115162751 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101668727 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114666106 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114001034 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.171355078 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.123777446 seconds)
  done (took 7.699358405 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.813014524 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.152812559 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110535277 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.96688585 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116539438 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127336125 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.811342446 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133654504 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250817354 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.844777323 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125806986 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101735986 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.250751444 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.284238668 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.175100895 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360850884 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.694370619 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125373842 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.117088765 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.18188141 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099727177 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139046858 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133648292 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43034595 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.111077851 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088626722 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120782962 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122025968 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175133096 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.088201713 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11567902 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193157435 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.298811071 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227498094 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091261545 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.108159806 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087330389 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.20103518 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.295608545 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.239634582 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177095103 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085466762 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10799409 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098439132 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133793411 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083969695 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.19816711 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.18492435 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.205954018 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094060135 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123860558 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122348525 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.096351268 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.193481273 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.085500568 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360520666 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362008111 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11018772 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119433179 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103998609 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.290187707 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110215796 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.24812393 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138333734 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213315146 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109664809 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.843775323 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.179798719 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109311135 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095207799 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119825453 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11717861 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.095978089 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17468895 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.386636148 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122463048 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114914297 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087141172 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.249933555 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.108945184 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087446514 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.177428784 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112470054 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120173894 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102903255 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122223699 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.182281799 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.281257874 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101910671 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121932531 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116752098 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10205733 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.112439179 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.225230644 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.238785607 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.192123695 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.227582008 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119441804 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.176368824 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.177813325 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118133071 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.182490595 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120937969 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12595952 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096019161 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.236452969 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.171131953 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089091206 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116485726 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.100092295 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152731889 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113555412 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120055645 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.181970086 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.488030634 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.179009953 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.084565938 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.114160633 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122104362 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176567949 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097173468 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.285712763 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121556924 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.179189054 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120233823 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.106405804 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099243849 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.198158197 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09959784 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121555205 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118129123 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101824306 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.285615633 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.241834552 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101100027 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255825847 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182325544 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118911571 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.187842917 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122333698 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.183717424 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123285291 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096837413 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112251972 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.830352092 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126294085 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098788298 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11814482 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20096252 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109771533 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090279384 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.109109961 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085563153 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.825210499 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.090786979 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.107882315 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08873776 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118111809 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120162054 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098740098 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117818463 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.173576785 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.277096401 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103195507 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120481225 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.088092455 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.195578981 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.090929641 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.110746125 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0884184 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.110831028 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10018675 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117349519 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111031653 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189317615 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.171138309 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.243602408 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.542166413 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.109989952 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.088583075 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252666918 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110976848 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.331048521 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099174146 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.248683837 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.203436172 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084581999 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360097447 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.204800272 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20050459 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.090486327 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.206508198 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085547816 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121279267 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.172140964 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111073837 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0981357 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.193194516 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103869108 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124603608 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.1853305 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110629875 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.242807018 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.106883784 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.182821136 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111461452 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09773387 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.33624915 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109914273 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10712258 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.195849861 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094750567 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.111252089 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.657913646 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.089621212 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124205767 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095103583 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.266738799 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.180349563 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122324573 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09998253 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125301567 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.173723506 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.246736068 seconds)
  done (took 45.750174139 seconds)
done (took 61.324145178 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305918014 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275755814 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.335024359 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.206067951 seconds)
  done (took 2.091343155 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.238214426 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.158018288 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.194434747 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109847067 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.205232386 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.109627252 seconds)
  done (took 1.908255148 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.517542984 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.400408332 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.363990846 seconds)
  done (took 2.175258354 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271509739 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.293318915 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.33604635 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.487119741 seconds)
  done (took 2.38924545 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.265177528 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.137810307 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127840118 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.191635961 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.22446799 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211264832 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127954854 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.161026182 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132983875 seconds)
  done (took 2.526453434 seconds)
done (took 11.985680364 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.343964285 seconds)
    (2/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.285189221 seconds)
    (3/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.374756417 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.214569761 seconds)
    (5/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.385701024 seconds)
    (6/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.396381728 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097489866 seconds)
    (8/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.305927487 seconds)
    (9/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.1175539 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.157274765 seconds)
    (11/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.253629856 seconds)
    (12/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.274300295 seconds)
    (13/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.238885915 seconds)
    (14/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.260583292 seconds)
    (15/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.178438247 seconds)
    (16/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.229792493 seconds)
    (17/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.247592776 seconds)
    (18/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.248925961 seconds)
    (19/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.187913628 seconds)
    (20/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.088230779 seconds)
    (21/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.193414051 seconds)
    (22/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.128271777 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.15503955 seconds)
    (24/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095850409 seconds)
    (25/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.221833464 seconds)
    (26/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.212188419 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.135065799 seconds)
    (28/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.079038812 seconds)
    (29/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.118495561 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.094721552 seconds)
    (31/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.345494682 seconds)
    (32/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.334805516 seconds)
    (33/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.291373082 seconds)
    (34/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.194377555 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.143318867 seconds)
    (36/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.248396898 seconds)
    (37/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.359112538 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.119132757 seconds)
    (39/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.247429514 seconds)
    (40/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.091661467 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11981065 seconds)
    (42/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.276697271 seconds)
    (43/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.240780448 seconds)
    (44/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.101562527 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.156727517 seconds)
    (46/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.265077052 seconds)
    (47/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.078220909 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.158042389 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.092984224 seconds)
    (50/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.141321982 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.078375572 seconds)
    (52/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.136692013 seconds)
    (53/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.207839034 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.154711416 seconds)
    (55/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094867376 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.118132547 seconds)
    (57/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.249778668 seconds)
    (58/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.079490672 seconds)
    (59/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115820412 seconds)
    (60/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.078259842 seconds)
    (61/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.113741011 seconds)
    (62/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.078324607 seconds)
    (63/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.089140983 seconds)
    (64/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.101442221 seconds)
    (65/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.07986305 seconds)
    (66/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.185561204 seconds)
    (67/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093224819 seconds)
    (68/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.130930835 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.168333772 seconds)
    (70/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.079687713 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.117757429 seconds)
    (72/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.20209393 seconds)
    (73/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080163109 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.139553516 seconds)
    (75/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.173969618 seconds)
    (76/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.101653051 seconds)
    (77/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096132095 seconds)
    (78/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.102450896 seconds)
    (79/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.21909508 seconds)
    (80/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.216019589 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.12002572 seconds)
    (82/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115957363 seconds)
    (83/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087509427 seconds)
    (84/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.118144577 seconds)
    (85/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.214630716 seconds)
    (86/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.213201308 seconds)
    (87/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.103157946 seconds)
    (88/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.088466424 seconds)
    (89/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.219067261 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117290831 seconds)
    (91/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.120455768 seconds)
    (92/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.220576351 seconds)
    (93/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.081503148 seconds)
    (94/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.101816502 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095327704 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.141600528 seconds)
    (97/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.208423145 seconds)
    (98/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094141249 seconds)
    (99/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.245362854 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119917457 seconds)
    (101/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093118754 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.118466917 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.095588686 seconds)
    (104/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.17262465 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112330836 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.0944071 seconds)
    (107/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.101846977 seconds)
    (108/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.080865145 seconds)
    (109/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078652396 seconds)
    (110/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.276608277 seconds)
    (111/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.103240549 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.095381837 seconds)
    (113/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.137135028 seconds)
    (114/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.181918535 seconds)
    (115/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.174224898 seconds)
    (116/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.103595898 seconds)
    (117/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090547234 seconds)
    (118/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.210480525 seconds)
    (119/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.078852884 seconds)
    (120/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.102970416 seconds)
    (121/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.077931655 seconds)
    (122/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.151745203 seconds)
    (123/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.206473512 seconds)
    (124/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.172126878 seconds)
    (125/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.102652295 seconds)
    (126/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.079602577 seconds)
    (127/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.111899855 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.247843949 seconds)
    (129/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094291054 seconds)
    (130/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117410428 seconds)
    (131/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.08836542 seconds)
    (132/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.091053886 seconds)
    (133/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114623283 seconds)
    (134/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.078369281 seconds)
    (135/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.104283581 seconds)
    (136/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078825329 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.118901309 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.096450832 seconds)
    (139/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.104293446 seconds)
    (140/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087713198 seconds)
    (141/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.102155899 seconds)
    (142/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.091346003 seconds)
    (143/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.103481247 seconds)
    (144/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119628752 seconds)
    (145/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.137307961 seconds)
    (146/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08780407 seconds)
    (147/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.13835908 seconds)
    (148/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.182468206 seconds)
    (149/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.080225559 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.12006673 seconds)
    (151/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095976555 seconds)
    (152/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.10369543 seconds)
    (153/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.175815768 seconds)
    (154/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.103518034 seconds)
    (155/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.078900311 seconds)
    (156/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.079948997 seconds)
    (157/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.104035329 seconds)
    (158/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079332825 seconds)
    (159/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.079075362 seconds)
    (160/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.111280574 seconds)
    (161/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120185137 seconds)
    (162/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.080892482 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118738939 seconds)
    (164/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080551998 seconds)
    (165/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.079796719 seconds)
    (166/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.103295546 seconds)
    (167/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.079805528 seconds)
    (168/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.111401596 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088490131 seconds)
    (170/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.120179488 seconds)
    (171/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.079930005 seconds)
    (172/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.102874649 seconds)
    (173/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.080570877 seconds)
    (174/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09303661 seconds)
    (175/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102250928 seconds)
    (176/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122948876 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.119715598 seconds)
    (178/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121152054 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080796776 seconds)
    (180/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.079130991 seconds)
    (181/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11692987 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.119216367 seconds)
    (183/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.080520221 seconds)
    (184/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095273054 seconds)
    (185/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.102643342 seconds)
    (186/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.080785395 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.136486311 seconds)
    (188/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.089649673 seconds)
    (189/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117520423 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095912992 seconds)
    (191/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.104490719 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.09753492 seconds)
  done (took 28.364411059 seconds)
done (took 29.271639876 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.232263819 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.106268699 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.121294547 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121808338 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.187959652 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.099911688 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.131509508 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.09897283 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.127880256 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.119085973 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088632259 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127925703 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097674145 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.184334422 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.125760309 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.115398207 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.089980458 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.128104192 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.106912384 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.131699088 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.187600087 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089856412 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.126649066 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.114208602 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.189331665 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09081414 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121899333 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.098032978 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.1290636 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095655186 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.121074364 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.112938922 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.106906834 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.129280177 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087924057 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119293808 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087925818 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.111595935 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.095896741 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.120367161 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104787986 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.12055063 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.122535362 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.09101968 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.120306298 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094868856 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11312541 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.101995472 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.11239293 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097509029 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114638707 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.130955706 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.094220157 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112439001 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.088506272 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114897644 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.10307495 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113511144 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107044416 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112798791 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090503463 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112094259 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.097523404 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112583914 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.117653266 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.090866257 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119253792 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098216207 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.117582625 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09150446 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112120739 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.093954777 seconds)
done (took 9.24916717 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095731292 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175505407 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.18717351 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.191812596 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.145554326 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.133148732 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.133809247 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118354867 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.130182481 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.13836451 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.124086626 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.140684475 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.198117448 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126655928 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.132649185 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097294173 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.127305556 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.099098195 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.194511078 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.139195803 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.149203692 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.126134423 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12374346 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134294614 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121634046 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.128775843 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.122449184 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.121536723 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.097651104 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.129012271 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.138242278 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.097987433 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.121029776 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.110504775 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.133103448 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125798306 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.108876285 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122502903 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.095881343 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11975671 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132454503 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107071569 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.12055093 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.132495868 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097560629 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.129628554 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.103407056 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.126632304 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123062144 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.099329965 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124014367 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.123804745 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.127710883 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.131276499 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.103654437 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126463904 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103370185 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.127381182 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.121862504 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.102277157 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.120748302 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.098470395 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.123312564 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145610175 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.097332994 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.127842202 seconds)
  done (took 9.272504663 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.115998682 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.155801377 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130605366 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106852823 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.127153766 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.110638481 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.086021978 seconds)
  done (took 1.783572765 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088707045 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.19175424 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.191096824 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.192389919 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.214753595 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.202431264 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.108644014 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.114142224 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.148316806 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.099423446 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.190942641 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.247732188 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094487733 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.131426558 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.193694359 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.113304456 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.195845461 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08790729 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.125365227 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.194316462 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.129817637 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.117943825 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.128318304 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113632095 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.187226716 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.090641776 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.27235175 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.104406138 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119920327 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09791119 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126708747 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.197369933 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.186468269 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.129430611 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092729176 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.215354823 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.186849076 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.100084226 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.200490547 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.117742977 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.186659405 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.124972745 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.101201151 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.126978755 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099470857 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.173834054 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.13148391 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.127474889 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.098973244 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.194788028 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.126174688 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.187098984 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.122725222 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099172171 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.126759853 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101027019 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132360179 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.124500382 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.437669628 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.102338446 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.214896035 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.190271218 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.186542118 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.191451325 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134980878 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.189396878 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.184249752 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.096803842 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122523536 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.099480937 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.215601629 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.099183381 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.126884309 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.177727791 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102180637 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.214714731 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.189424429 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097120195 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12844325 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.09307219 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.122993423 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.088597165 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.176312734 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124625521 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095867652 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134994686 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127996292 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.100418092 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.118853846 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.138818778 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.099280893 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.127435488 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.129423115 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.098913296 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130878578 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.192163637 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.127233523 seconds)
  done (took 15.113224892 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093479842 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114037776 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096140964 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115232349 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091499794 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115148278 seconds)
  done (took 1.592009469 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12006956 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12718839 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.136371457 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.103616355 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.183588948 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.19394693 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.195628145 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123627743 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.143789294 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.111144988 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.195407044 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.226665188 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.196235605 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.104782208 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.224951313 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.105733107 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.199615358 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125708354 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.135334029 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098973331 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13364381 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.104341537 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123086002 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.187313901 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.128767399 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.103471813 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126568866 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.137063428 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.110163665 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122841717 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.105497213 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.128678285 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.120056284 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.099917936 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.200187409 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.120585278 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122711619 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.108375918 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129971524 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.103716807 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.226498521 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098658926 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.135236499 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.132812102 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.099191106 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121208575 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.106955177 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12638247 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.200301073 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.13321555 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.106855894 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.129243698 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.129237358 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.107146441 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121206109 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124510968 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.107839094 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.19902296 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.131059134 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121099515 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.103387004 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.13037738 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.098408942 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.132401487 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.129580748 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.106478837 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121104734 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.144723157 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100156257 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.128684214 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.107831619 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.127543654 seconds)
  done (took 10.623610966 seconds)
done (took 39.333673895 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.144296126 seconds)
  done (took 2.112654342 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.931709346 seconds)
  done (took 1.900288881 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.267950867 seconds)
  done (took 18.273628029 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.54800868 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.630718686 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.145338197 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.162203969 seconds)
  done (took 3.452077109 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.976072655 seconds)
  done (took 1.965552085 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.336243039 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.273314239 seconds)
  done (took 1.585651463 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.724939806 seconds)
  done (took 1.706841847 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.575822639 seconds)
  done (took 2.551153982 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.370512249 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.192256034 seconds)
  done (took 1.553149075 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.711855614 seconds)
  done (took 1.697378829 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.082734767 seconds)
  done (took 18.070145044 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212339518 seconds)
  done (took 1.211980443 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.30956045 seconds)
  done (took 1.305244086 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.537053322 seconds)
  done (took 4.524676685 seconds)
done (took 62.887268986 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101266804 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128945016 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104509521 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126794107 seconds)
  done (took 1.444375399 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106764036 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.126220431 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106146578 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.125679897 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107296118 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.126802443 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.126305502 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103691879 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.125514765 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102094759 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.127157336 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099965098 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130005758 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125183512 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.097882907 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.128798417 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104378984 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.127270276 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.10246473 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.126732125 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12631283 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.103088594 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.130086609 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.103495308 seconds)
  done (took 3.781197713 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100142531 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118411016 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096781618 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117904624 seconds)
  done (took 1.43051271 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.109418768 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.139439514 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.112117867 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.134526575 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.140747629 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112237398 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.125080348 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096676333 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.126255341 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.109151339 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.144308424 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139902953 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138490086 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.10441743 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.136770383 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.094973355 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.127482605 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.114196843 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.134098966 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.136623404 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101284218 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.133218292 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.107029987 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.136265005 seconds)
  done (took 3.946703583 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.204527414 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.115471605 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.150612192 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.173833499 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.15753313 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.099937622 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.152875927 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.107749324 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.133739637 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.129573453 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.102643191 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.174855363 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131922662 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.101313993 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.127398511 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.13163063 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.113317838 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.133055711 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.171670055 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.131820586 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.107249466 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.1398502 seconds)
  done (took 3.987501717 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108585618 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119392444 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091295169 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.119065264 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.107239479 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122672302 seconds)
  done (took 1.666576856 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.100566162 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.112578119 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092980437 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113899604 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093895858 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.112119475 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.086773488 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.087642594 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.114987876 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.087596913 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.115061921 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.08749187 seconds)
  done (took 2.204431454 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.309350427 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.0936031 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122533439 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.093506415 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.125939312 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117664698 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.110596243 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.117738985 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.234004453 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.117399773 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.111117977 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.229390294 seconds)
  done (took 2.786795955 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22085755 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102223391 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319304279 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.405558839 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165400966 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175563301 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.291075828 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174788749 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198942349 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147120683 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206656516 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164183001 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163947281 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192259424 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122707986 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.190568058 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185667597 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238401731 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131444414 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242908218 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172994967 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179084683 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192309517 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160504766 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11705549 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160691236 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.127776726 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109064932 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181509959 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179640888 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208760528 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13027375 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149020913 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238293888 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198343547 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187546104 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.333904835 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136904843 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.212226837 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.194759395 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289104901 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147306346 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206662708 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164649279 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109546018 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218342473 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138232581 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.194122672 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141193487 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14967828 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195473715 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186249559 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193754596 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141077009 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315674351 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154246606 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158745906 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191365871 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197203302 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200662262 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179063229 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.130037769 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203146307 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192162669 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189685268 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.155960154 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.178897773 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133768614 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184544728 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208584018 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192348025 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173677003 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.221850322 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108992727 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171077507 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177784126 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162519796 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189775856 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172731283 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.126440367 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133616326 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143615669 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133600037 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.199778193 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101878364 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21631061 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14126744 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.384443935 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221384184 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1662353 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169802274 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173840847 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174526853 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154831535 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.135290022 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154818122 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.14374667 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16448702 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144502879 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166205359 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149102534 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.141100956 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136079105 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.129436863 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172966348 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.134471751 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20185486 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145665452 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.139661496 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175394867 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15821299 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.165377703 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181355117 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197641388 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111528679 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139295338 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200651619 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166842129 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144513775 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185418369 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200984203 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175978569 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143220899 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173516157 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202809622 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123662113 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225412717 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116700653 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140519867 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.164500599 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173089704 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166442009 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.138423183 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134344855 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162594171 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208490631 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.133970537 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117416048 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182064251 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144921969 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134309326 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121844711 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143479332 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.149884234 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.155962509 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.118630912 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164843048 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17164814 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165556725 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166435574 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142713772 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182777262 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111038158 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.17226784 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156890777 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12610806 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193860876 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195481003 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10848738 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237607272 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17994184 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225091063 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172039465 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140178045 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188225033 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107266528 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.128979867 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171154988 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168850646 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173358629 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198451675 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218544738 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179722286 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163508288 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158524403 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177224727 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.18620432 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166079291 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.153326866 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170199049 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179628645 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101242972 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.134061691 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135571258 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123547769 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137141506 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112295414 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218322422 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174442097 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204996762 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169330117 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15028788 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194753798 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.112009236 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172732678 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.185124649 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147958628 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199166197 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191757001 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179213169 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150929439 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171574939 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.128056464 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10664514 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144283999 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178515147 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139568135 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115106126 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151684691 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194991537 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186387183 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157685587 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255282552 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178964468 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206995637 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101114229 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.174220492 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180003766 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168763833 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.194185459 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120974315 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.169523987 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190156417 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145844315 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202011723 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170242019 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175897609 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211179437 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.169144372 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13768933 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159203804 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176387912 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119627752 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173074007 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155405825 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137960773 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162421124 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.118486407 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136478148 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192057209 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152742985 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188972648 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.166337017 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18207944 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13235091 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123822205 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17339689 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154532095 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.135691557 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182512708 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198101509 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154444728 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167774313 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186053313 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136748789 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.346962119 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201943946 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195949535 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143619808 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150668357 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173721304 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142314129 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17395294 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190842273 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152993739 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192450344 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171622648 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.152160514 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110788085 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157268501 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159756609 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.166312029 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.11587729 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17028517 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.152704533 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19557442 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149981885 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172421043 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173070645 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12938655 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.164756808 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15157373 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209754792 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17053882 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189028867 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.169059155 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180777574 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210805927 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13190637 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108782908 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.144018725 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191558028 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139129619 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173665561 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.199355629 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225771151 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173356869 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176920481 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146374976 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.105996568 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168128405 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159894459 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253013279 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116242063 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.14911162 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20267243 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.172907037 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137263062 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173709648 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299360993 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153773383 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184260305 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.144937753 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.289325336 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109086544 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137895155 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16965958 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181773198 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.144005381 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.167603934 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170549851 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153482843 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170741777 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145143291 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208491803 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226082753 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176430483 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186796474 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.152193859 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169842031 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172859119 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188842277 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150855296 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.156078955 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144730432 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195767866 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223671152 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115856642 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171214371 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172000602 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168626897 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184226384 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14205462 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213635708 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138104858 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170522901 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120296954 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134697048 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169472343 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.198779162 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140061785 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186837237 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17206696 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113903495 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137545541 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154138635 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170701469 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118019044 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.137845514 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191618853 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.137205011 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175353605 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166122886 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13812373 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167875197 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154176179 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112635543 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152337475 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154218017 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110832046 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.179575449 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193806607 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.142379107 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187161658 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17562797 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176571487 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171846078 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151702535 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.646909044 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.138051147 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195267305 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157415023 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198333295 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158381857 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175160513 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140998344 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158747989 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173471072 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159062627 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23854723 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17211087 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.171903685 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11063876 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154250592 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15076624 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.113698014 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161775361 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17124168 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150515133 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.118994293 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.171699236 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153905799 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.154026956 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146538203 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19691878 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128672275 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220919873 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191726672 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116127213 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17534252 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184239739 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142967492 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.173879027 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185205482 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149813871 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155187828 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.113599755 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.147137958 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193180526 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.103357272 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172490149 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173800364 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170621879 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171351684 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.143679177 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146418411 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1520054 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172321022 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136265163 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.164161896 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14218924 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141646822 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.136888338 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14110355 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16754869 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166896206 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136828556 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.15284075 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190898293 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.132514745 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141067648 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300944548 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170624981 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203198443 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.16596659 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114523087 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154153135 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166870275 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.168878927 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171114815 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110528656 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139380917 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.113433614 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.227686838 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142256748 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16953433 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197449901 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17146578 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242978525 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.126173342 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284120859 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148358683 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167943734 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.122795623 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.138532492 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151901216 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112358897 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147607317 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236031709 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162987466 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.165050226 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.154251123 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136819317 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106073597 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140659062 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17163756 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136517388 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173534372 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1548502 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.137892445 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15246601 seconds)
  done (took 81.942097639 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.153392833 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.142580738 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.154357261 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205722068 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174966508 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267478257 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212985804 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234746141 seconds)
  done (took 2.632043286 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.105636178 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.14067699 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.146373344 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.129369769 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.12821754 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.424727812 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.141434643 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.101928115 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.185648929 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.168103497 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.100004883 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.642674883 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.098237344 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.12948274 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123751599 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.128543569 seconds)
  done (took 3.974192258 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.468205227 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.561687629 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.009008382 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.256445697 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238255989 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.16137298 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.760234609 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.193729235 seconds)
  done (took 12.733720351 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.132867522 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.149800266 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.332281285 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.236155868 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.167266388 seconds)
  done (took 2.111558314 seconds)
done (took 125.626174825 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105890704 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132813923 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.107048498 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.136231402 seconds)
  done (took 1.564345777 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.164706361 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.119670283 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09293633 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.11583809 seconds)
  done (took 1.5840315 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.540593566 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089523064 seconds)
  done (took 1.748913827 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.129633788 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.154972722 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.148564102 seconds)
  done (took 1.53343656 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.117614836 seconds)
  done (took 1.208294598 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117735361 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127039333 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.209555542 seconds)
  done (took 1.55046479 seconds)
done (took 10.283969012 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.106390155 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.531602292 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391996706 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148107344 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.731534506 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382056603 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.046981901 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165021139 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.216372543 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121615288 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117378936 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.70142965 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.043722992 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.466820914 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.052047408 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.346370108 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704117072 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094493466 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131074473 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094958574 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.023910461 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09286666 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124669551 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094229361 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704441629 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.447583515 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094684237 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.389404534 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093373935 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130342312 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381050791 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122618973 seconds)
  done (took 17.377681505 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102859322 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195491844 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.105118815 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124509803 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130231827 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095804024 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.134745591 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.110251306 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203069749 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124766732 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146886989 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093903166 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128214119 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095024224 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147391966 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093570582 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123496582 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094585584 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133713639 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095991439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144956611 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121365975 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097150586 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122126304 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094980951 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.15428597 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094492613 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138530997 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121558665 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103334157 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124551396 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096229549 seconds)
  done (took 4.989945491 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145431623 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.205640822 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13618736 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129954636 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18411157 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125793394 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217418158 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164745874 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205381635 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094048682 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.147830312 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121458838 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.14190326 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123993107 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.120863526 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122851443 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095097464 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123983039 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132147628 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097575398 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145601866 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093299718 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12554491 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094964377 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123607626 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.155934743 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095772367 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.137834699 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094486221 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132089987 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09805688 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123123356 seconds)
  done (took 5.362789865 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.106994553 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.134085167 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.121176788 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.148685901 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.10053965 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134453582 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.105698817 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.130127524 seconds)
  done (took 2.085354669 seconds)
done (took 30.913016885 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.120998456 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141500369 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.113901703 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.13574329 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.196057225 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.096611904 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.140056877 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.0979071 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.136572839 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.116242279 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.122966763 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.099247663 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.142919093 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.103132261 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.19564489 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.136111398 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.200886346 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.195546581 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.127022879 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106926035 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.127476958 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.20132862 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103994941 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.127969319 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.206264339 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.096930577 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.191143155 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.131444359 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.102788896 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.130769762 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.196999277 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.104111263 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.129779442 seconds)
  done (took 5.670783001 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.206640763 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.101497171 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.128329907 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.099486749 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.129984982 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.098712488 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.20730165 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.127335836 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.099341221 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.126982711 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.098572813 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.203560209 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.134104569 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.094001541 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.132551494 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.100829939 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.209064473 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.12966193 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.094944118 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.118342821 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.09439102 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.09817735 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.244607277 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.094709908 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.126671837 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.100356293 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.130890659 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.104713187 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.128814805 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.101675961 seconds)
  done (took 4.97753121 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.1073729 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145776664 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124521606 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201670519 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161046205 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.110704061 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.157020006 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.144488409 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.127419955 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.125268163 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.112180201 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.159636456 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142726725 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.108651475 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.128204228 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113077391 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.147275463 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095581285 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.134111138 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113586529 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.145610773 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.140383113 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.126083996 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.1340819 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093502141 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132946363 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.105061266 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.140591297 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.135602396 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.122074488 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.130619181 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.100687526 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.127758066 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.166258043 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102924748 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.134706204 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.118830459 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.138777795 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.109405657 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.154590654 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129047693 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.107383079 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.152934322 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.159343706 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.126973698 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.135435188 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.109761194 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.142339114 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097994039 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143914062 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.14942327 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.125588044 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.143473515 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.099001948 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.125611286 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108140387 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.126545417 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.100155747 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.147767478 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099797493 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.148109276 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.103217818 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13950218 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.097732472 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.137283763 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.095550135 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.12450937 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.127111851 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.127017817 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133837929 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.137192172 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.12546985 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.105565499 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.138738732 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.107283869 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137527886 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094907673 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137818966 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.135339437 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.103545108 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.14214322 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100347103 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.127397538 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.113463273 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.143870959 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.105799048 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.192554014 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.135732355 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099475996 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127165071 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113944056 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.128010168 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.101642328 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.147944717 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096058286 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.129587858 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.13581817 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.105386583 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.12325481 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124269256 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.131652222 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.095215312 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.152500555 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.107763744 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.132115068 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104975073 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.178415235 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.124398294 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.105773649 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.136113151 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.096422522 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.133094674 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.100056903 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.124435032 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.139087559 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.113843634 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.133043886 seconds)
  done (took 15.934094437 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.299610068 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.320050895 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209699003 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.321187724 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.112427382 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.245518313 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.285988015 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.320182805 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.101433959 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.171601373 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.192678579 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.287863342 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.125694139 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.125624454 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.319703981 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.385257404 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.157844727 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.173046471 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.172249993 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.112266147 seconds)
  done (took 5.565161742 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.11824375 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.165331815 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.152100857 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.129409064 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.133314584 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136135448 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.097878852 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.149151004 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.104212885 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.136994201 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.098799706 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.138916429 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.103769032 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.139775728 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.143788087 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.141894573 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.135273757 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.102210774 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.151928431 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.13253716 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.106289988 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.156527196 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.137742156 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.121243631 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.140902995 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136853615 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097327394 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.131682229 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100405069 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.129884246 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.103171991 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.145837358 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.102231165 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.132591504 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.106110456 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.138557874 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.099131586 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.128029437 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.101487019 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.130577629 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.14302919 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.10652329 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.129070468 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096467355 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.14052519 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.100999753 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.108257306 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.135321623 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.137102687 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.110805738 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.135739443 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.109543957 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131962611 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.117230154 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.130533833 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.112690012 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.139074195 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.138220599 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.104587724 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125028987 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09552858 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.129820599 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.102500461 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.13861457 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.106435086 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.14785279 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.141011217 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098158139 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.131704472 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101736208 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.130564791 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.11309686 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.152946254 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.131049453 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.10127041 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.138967176 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.101882773 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.120149116 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.109712338 seconds)
  done (took 10.945763492 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.125936532 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131449685 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.117936107 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.163256776 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105834954 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133939584 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.101664879 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.147643075 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.137766729 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.110169958 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.13812779 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.112835256 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.150848963 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.136388883 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.102333819 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.145132471 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.106957662 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.167855146 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.115521927 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.158160448 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.139202608 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.102347274 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.139920221 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.108606253 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.159200818 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.137977716 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.12920898 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.137136528 seconds)
  done (took 4.806906061 seconds)
done (took 49.005422248 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.251288676 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.418311162 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.202816009 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.201732552 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.235882589 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.208909682 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201026496 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.204253747 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.94322281 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.208349524 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.202910726 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.200367021 seconds)
done (took 28.612264189 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.271027152 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.710775858 seconds)
    (2/2) benchmarking "String"...
    done (took 1.48295566 seconds)
  done (took 4.320885145 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.206455111 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.197171953 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.426251217 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.19796758 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.212483403 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.215962081 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.198019551 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.204958139 seconds)
  done (took 15.780710675 seconds)
done (took 25.707504472 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.254493725 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.384094263 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.447092957 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.210778768 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.20007835 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.196488741 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.197065952 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.220026627 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.207421997 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.199974766 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.590836853 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.458575195 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.215419525 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.583493315 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.19578993 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.224334854 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.197037414 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.438653136 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.197847652 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.253507502 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.186046802 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.213896402 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.197655654 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.207478496 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.200844049 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.208493342 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.220202163 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.196249543 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.402277504 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.209680721 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.23789389 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.199151234 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.2166127 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.199586652 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.208919791 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.196549131 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.381484169 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.204170509 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.190227058 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.19957675 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.380892708 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.199459232 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.19548482 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.193966778 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.210650822 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.238318627 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.190612564 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.303806666 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.21849337 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.213971227 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.262567367 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.578193296 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.208291762 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.198444407 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.218788583 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.412408756 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.205435671 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.239395593 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.218545527 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.196272269 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.21084464 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.208761946 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.251655871 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.212297264 seconds)
  done (took 143.444350986 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.193891208 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.199092576 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.198461749 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.259817822 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.198373641 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.198918943 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.194868151 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.194610285 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.200715014 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.230189051 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.19790096 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.196268148 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.206436371 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.155233053 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.199666331 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.216754325 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.199530498 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.197407751 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.217964947 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.196421217 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.22361111 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.20004928 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.213086613 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.196227102 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.235171352 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.285276802 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.226910999 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.214966848 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.203940887 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.194465376 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.233464658 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.261709356 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.787094542 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.061589473 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.204730843 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.205994159 seconds)
  done (took 80.12494408 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.197654574 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.19671413 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.1970494 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.228385696 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.196335925 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.736591712 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.738637784 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.910532582 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.445347487 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.471258024 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.454585961 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.201251463 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289632486 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.209444091 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.199725402 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.21224598 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.224317199 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19692363 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198024801 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.736443908 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.213271802 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.216665805 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.367703968 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.214371126 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229875431 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.600862963 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.199068425 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19706645 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227425746 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.52455251 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.243811619 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199324894 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.544786238 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.151128803 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311461175 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200548581 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229690132 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.197218225 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.475440786 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198268 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.19988662 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.202227393 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.845465731 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.202490068 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.73827837 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202547438 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.111054991 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.200588785 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199064407 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.181743207 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.825831564 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.217887327 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.196937115 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.200989344 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.198182843 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198176788 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.226692088 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.158526532 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.290001072 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.213661439 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.200811913 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22563703 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.196487882 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.28362637 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.214898412 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.932803828 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.254121274 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.306879051 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.722175605 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196748128 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290387963 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313919956 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197207637 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.195941413 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.195885556 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.196716685 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.197136285 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.302903097 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.195557277 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.194653437 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.582274548 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.36422818 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.214108849 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.418047623 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.292724452 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.197497499 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.520664573 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.199699794 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.195678692 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.879273195 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.195702765 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.287897883 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.196000304 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.19491911 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194474856 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.579754929 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.713907341 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.383602562 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.199152924 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.285917886 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.196855604 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.579230773 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.694834092 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.830402626 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.200081153 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305082796 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.36251374 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.211980277 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.19474994 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.38768632 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.198382573 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.24716762 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.194491906 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.594445519 seconds)
  done (took 365.031702271 seconds)
done (took 589.728754336 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.108264297 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.058793881 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.189007799 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.084082372 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.047523412 seconds)
  done (took 11.610474365 seconds)
done (took 12.735901793 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.379665451 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.380249457 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.250967065 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.378920191 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.226288774 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.394694836 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.366348293 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.21655512 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.321757555 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.257022509 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.319680247 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.230219304 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226231626 seconds)
  done (took 18.071828353 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.454252342 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.203588897 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27977964 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.435945555 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244201283 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.447434946 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.488949979 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.20554354 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.343744431 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.214511586 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213829249 seconds)
  done (took 17.65709537 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.469767483 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.204485243 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.289664535 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.442421398 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246171408 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.475221678 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.491779157 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.205900934 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.345493581 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.212911675 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213718041 seconds)
  done (took 17.721403029 seconds)
done (took 54.576703324 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.237420572 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.362268847 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.226879742 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.215891215 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209934074 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.210619599 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.216376248 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.210563913 seconds)
  done (took 11.014833128 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.210230862 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.208936947 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.208651364 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.208552782 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.208386052 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.209343219 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.208894049 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20829488 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208895832 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.208995453 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.209602514 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.209221782 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.20867565 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.20810756 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.209479429 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.210404212 seconds)
  done (took 20.470313657 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.211854866 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.208111329 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.209988948 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.208507676 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.209093612 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.209418576 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210211189 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.208651006 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.209119469 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.208317075 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.20995097 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210372382 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.207839367 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209209068 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.210471794 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.210141927 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.209160014 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.209365443 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.212771783 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.207724532 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.209409586 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.209646086 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.20865692 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.207961777 seconds)
  done (took 30.152711699 seconds)
done (took 62.764069317 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.211867865 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.207841593 seconds)
  done (took 5.544210667 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.268364083 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.271336932 seconds)
  done (took 3.669375782 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.210973536 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.207671081 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.210444381 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.209924185 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.209133275 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.208624356 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.209749964 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.209490937 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.209733909 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.207162854 seconds)
  done (took 13.218170262 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.209496561 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.209553271 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.210895036 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.209055012 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.209682596 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.209867407 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.209707506 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.209892867 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.209806107 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.209361095 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.209841151 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.209321103 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.209767789 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.208906118 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.209857075 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.210023344 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.208562215 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.208763048 seconds)
  done (took 22.899060202 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.22421369 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.231456394 seconds)
  done (took 3.581552431 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.348983552 seconds)
    (2/7) benchmarking "second"...
    done (took 1.250923149 seconds)
    (3/7) benchmarking "month"...
    done (took 1.326517739 seconds)
    (4/7) benchmarking "year"...
    done (took 1.317355732 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.251708481 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.230774731 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.253564875 seconds)
  done (took 10.10606009 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.211719828 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.407342099 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.534125773 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.761338072 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.209967957 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.21128464 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.044174355 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.213161 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.213838239 seconds)
  done (took 13.93455429 seconds)
done (took 74.081878614 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.209297382 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.239352279 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.228872468 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.224064925 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.544671247 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.240879437 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.213036355 seconds)
done (took 16.028048735 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.191419705 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.205928624 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.197702429 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.220983761 seconds)
  done (took 9.942215355 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.145515377 seconds)
    (2/2) benchmarking "read"...
    done (took 1.509425516 seconds)
  done (took 4.77984544 seconds)
done (took 15.850485464 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209218052 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.20848395 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.208856499 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.209732669 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.208307529 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.209075003 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.209885999 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.209307374 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.209344217 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.209289482 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.207968252 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.208878732 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20979143 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209746163 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208854948 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208913262 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.209418319 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208085134 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.208528361 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207524366 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208854589 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.209453324 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.20954566 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.20960781 seconds)
  done (took 30.143717671 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.210797751 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.208610744 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.209626764 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.209630607 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.208693303 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.210188638 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.210123639 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.209455693 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.209112886 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.210163636 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209136693 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.210062454 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.210641284 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.208873081 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208965762 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.211133666 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.20929487 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209002729 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208375746 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.208992879 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.208619799 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21049578 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.208688295 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209830711 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.209575689 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208452835 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.209774215 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.20903276 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209765818 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.210247756 seconds)
  done (took 37.413468191 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.213496681 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.212724048 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.210252628 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.210094294 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.209643485 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.20907442 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.209601081 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.209704609 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.210044305 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.209993434 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.210431598 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.209234966 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.208404999 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.210158974 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.211118644 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.21141107 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.210159457 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.209416463 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.210099043 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.209716868 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.210357924 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.210899134 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.209729482 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.210564256 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.210329773 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.209626738 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.211658224 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.210322018 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.210993165 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.210401974 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.209875304 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.20933815 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.210406523 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.211062621 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.212070979 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.210710032 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.211431636 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.21090796 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.210084566 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.211683386 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.211324209 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.210284397 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.211572196 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.211206626 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.210950065 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.210561493 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.210946767 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.211639066 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.209260427 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.210334763 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.210835353 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.21103964 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.209882547 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.211731416 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.212099049 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.213577018 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.210746825 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.211422048 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.212299794 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.213668293 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.211828593 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.21308163 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.211183644 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.211840805 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.213238884 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.211418623 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.211928851 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.212062126 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.210514293 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.214078556 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.212884288 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.213374345 seconds)
  done (took 88.31915365 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.213934368 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.213414257 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.212760834 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.211493788 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213191173 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.211537654 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.213802546 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213702498 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213985433 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.212126231 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212056641 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215278969 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21380063 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.213527638 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213527098 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.211346502 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.213460459 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214060079 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.213691762 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.214508367 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214969049 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.213527894 seconds)
  done (took 27.821722993 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214597841 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.215368322 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.213164956 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.215564358 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216790695 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.214846307 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.215326714 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.214209643 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213536564 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214085533 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215701982 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214807144 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217557775 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214840869 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212625186 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217034042 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214873974 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.215968887 seconds)
  done (took 23.00145596 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.215971944 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.214107354 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.215182623 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215433232 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.2145855 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.215825556 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215057223 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.215060064 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.214446191 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.213648652 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.215388413 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216653664 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.216362866 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2161436 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215946124 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.216606585 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.216356528 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215651774 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215704904 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214694856 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.216299761 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216268296 seconds)
  done (took 27.871922066 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216744998 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.215960624 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.216180841 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.21589994 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.21573018 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.216301937 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.217599479 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.217558782 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.218698522 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.216748852 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217254449 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.215904269 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.218881752 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.215442547 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.216815711 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21717136 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.216472514 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217520933 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216319106 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.216915466 seconds)
  done (took 25.466589838 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.218796437 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.21898181 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219110776 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218584028 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219393418 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.220155915 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220159896 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.219401796 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.21945249 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.221011181 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.219038237 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.221608994 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218764354 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.220364042 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219540482 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220072597 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220623995 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.218676642 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.221416574 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218626255 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.221554071 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220173281 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220069945 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.22078249 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.220468963 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220187502 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221747175 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.221425412 seconds)
  done (took 35.293373361 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219941088 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218848542 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.218928972 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.218432832 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.219473297 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.220267934 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.219571759 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.219944574 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220150875 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219391524 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.219590527 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.219589432 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219687347 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.220928434 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.221373092 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.220364419 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220629256 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.220092058 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220060058 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219932248 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.220675049 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221517253 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.220891551 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220744232 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220483689 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.219690951 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219776584 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219371281 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221514645 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220668759 seconds)
  done (took 37.738360063 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.242611991 seconds)
    (2/2) benchmarking "in"...
    done (took 1.240315339 seconds)
  done (took 3.618897419 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.222410725 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222962394 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.221769618 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.221182334 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220748347 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223281489 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223158834 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22214808 seconds)
  done (took 10.914818882 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.219239391 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.224160278 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.222942514 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.221291952 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.22323358 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.217873555 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226849208 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.230159287 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.220837799 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.220925381 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.221062465 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.221593423 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.221388117 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.221927914 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.221424178 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.223526493 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.224918434 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.223537219 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.223519466 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.223037438 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221461255 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.221627525 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.225389437 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.226642517 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.219674649 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.228331087 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.228369676 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.227012681 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.220476889 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.2236311 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.223300184 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.225362986 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.224511504 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.224420876 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.224058426 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.22399255 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230040644 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242351749 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.228305156 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229119383 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.225213348 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.223983218 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.221991278 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.223432988 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.22454609 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.228488009 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.225705352 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.224738927 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.22053608 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.222053779 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.227223622 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221316958 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.226809045 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2254909 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.225710958 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231994682 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.246046737 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.22197434 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.222226617 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.229308502 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.235107946 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.231492787 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.226344387 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.229965298 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.225608383 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.224768554 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231165782 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.231670372 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.224646244 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.226905531 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.228884911 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238201917 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.232949194 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.230201301 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.226468629 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.227382778 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.223597201 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229728001 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231982183 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.231885259 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.230340179 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228061627 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.22598436 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.22604579 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.223890138 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.228855589 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.227142561 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.228546913 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.223854228 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233429641 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.250474711 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.226418071 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.223508538 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.224897058 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.225489812 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.230032294 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.223144438 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.224936216 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.230020354 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.228396639 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226787923 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.225739531 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.22611207 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230827062 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.229443655 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.231075005 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.232084349 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224619543 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.232433103 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.232886586 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229401763 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.224535965 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.228300592 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.228721945 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2255296 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.229667471 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.230500789 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.226618287 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.231279325 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.229112757 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.227773432 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.232387272 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.233258847 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.228094136 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.225544576 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.232866606 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22900836 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.228887321 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.233083687 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.230023697 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.230978023 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.227766513 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.231577852 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.227052115 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231336966 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22809303 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.230301341 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.230714578 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.229494221 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.227179851 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.230699342 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.227498606 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.228790547 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.231585903 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.233362147 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.227196867 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.236468883 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.23186502 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.229751323 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.230573076 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.232465906 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231640081 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.227540848 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.233169243 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.227131625 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234123376 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.227814693 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.23369201 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.230812531 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.231975022 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232419787 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.227058025 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229984148 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.233908933 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.232018415 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.229766535 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.234484193 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.231149901 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.233348201 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.227648893 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.233408312 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.226855291 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.229000404 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.234913826 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.233708537 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.233962471 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.231261479 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234285485 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.233507811 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232637967 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.229956261 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.23222155 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.234720436 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.2369889 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.237593841 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.23346037 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.232159485 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.229496772 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.231472306 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234437936 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.230698397 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.236786332 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.238820506 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239537242 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.231139553 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.234526441 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.229480304 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.236289799 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.234447621 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.237517199 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.235676296 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233826965 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229904374 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235566558 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.230721243 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.234657695 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.2306858 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.234907155 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.234714988 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.233066849 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234759982 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.230200408 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2328476 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.231439742 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.227135375 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.229126536 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.226043309 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.229682277 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.223867043 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.22490414 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.229662232 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.225660662 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.222968076 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.223204233 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.218934281 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220937915 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.218404506 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.215990641 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.221008362 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.217578862 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.209864581 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.217900834 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.214890402 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.210156966 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.218307489 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.231174761 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.209070064 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.212973178 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.208740105 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.20599511 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.20136194 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.207743432 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.205851228 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.205701642 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.205878869 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.203617269 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.201962122 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.203184474 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.20469538 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.195729868 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.201777409 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.19629605 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.201069675 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.197334659 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.198058314 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.193974132 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.195420726 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.19630383 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.194354411 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.191950921 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.195689619 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.195130415 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.194298262 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.18739521 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.19453879 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.195412522 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.190872773 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.191708362 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.19085628 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.194713468 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.190677438 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.193073132 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.185172138 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.197161265 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.202506013 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.193700248 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.193245489 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.193023194 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.194300584 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.193220435 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.186366023 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.188289637 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.188403934 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.187250871 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.187767119 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.191314881 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.187102151 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.191835484 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.190251992 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.190680574 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.193459394 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.190692261 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.186852381 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.191874915 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.190930477 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.190970444 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.187106354 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.19063604 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.19014134 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.190405114 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.189750389 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.189153012 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.196339757 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.193274002 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.189792787 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.189678146 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.189512377 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.187886534 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.191388047 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.19434988 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.189487729 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.195970525 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.191632184 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.191409452 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.187759164 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.195124503 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.193915366 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.18873655 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.194183879 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.192247768 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.185229118 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.18832432 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.190137669 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.194194307 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.195459799 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.18504016 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.191012085 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.190082793 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.190461648 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.190443025 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.187530592 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.187988828 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.188187024 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.193188151 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.206264424 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.186811402 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.187887089 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.191531917 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.188913078 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.187498102 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.181622752 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.187229275 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.189075703 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.184009499 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.184020543 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.18382353 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.187850074 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.187567772 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.186871586 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.188311896 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.18647112 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.190186062 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.189684025 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.188878923 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.187282368 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.191801916 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.191763673 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.191987004 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.193636697 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.186226889 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.189962114 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.185980963 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.184969899 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.18392003 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.185726358 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.189207076 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.183920435 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.189351165 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.188568673 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.18598064 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.186537237 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.190549946 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.183888722 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.187928514 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.191136255 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.184788377 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.190607906 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.188719783 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.185580766 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.191334424 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.188160771 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.183191139 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.184583866 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.186706518 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.18991506 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.184279004 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.189789213 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.186234752 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.19093568 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.189324443 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.188796126 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.188817197 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.188978412 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.185626352 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.189925105 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.189432893 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.192287146 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.186024229 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.188270251 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.187000083 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.195762039 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.194485528 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.185325283 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.191752223 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.190589705 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.186867986 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.187554025 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.192590917 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.187758514 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.192417158 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.187224958 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.188714224 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.187877408 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.190837596 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.189074566 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.191232571 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.186942023 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.188798909 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.192713208 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.191516443 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.19175126 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.189389616 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.192832205 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.18752037 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.18767544 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.192823906 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.187962724 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.191878523 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.189444406 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.189075135 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.189347194 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.192122648 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.192034394 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.193331725 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.188104071 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.188288202 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.197242107 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.192967541 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.191145728 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.190583506 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.194980048 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.188338727 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.190574635 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.191853184 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.188887106 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.188705955 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.193537316 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.1895086 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.191048765 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.189690439 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.191904825 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.197201364 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.192303949 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.189232837 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.198959892 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.214091746 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.194454299 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.190296286 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.191564633 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.19059965 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.19399782 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.193436051 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.188792729 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.197690923 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.196852776 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.19593679 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.192820326 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.192123365 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.190702758 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.19523845 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.195487146 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.19093982 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.195762145 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.190722437 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.195634351 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.193164056 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.194637196 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.189192741 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.190134789 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.192667872 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.192227982 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.196427364 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.192544389 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.192383926 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.193115082 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.19582177 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.195255149 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.194187726 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.195207548 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.191001988 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.19440696 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.191109185 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.193757227 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.19313646 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.19151421 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.196051123 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.193671165 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.193326628 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.188676729 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.191092184 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.18944636 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.186469179 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.187006855 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.191667686 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.193307438 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.190949588 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.18506095 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.18466798 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.188140327 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.186549254 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.18606795 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.183824163 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.19478539 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.210361367 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.18233595 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.183065475 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.186565648 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.18784846 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.183961992 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.184227593 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.182472656 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.184082992 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.187302119 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.186087807 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.189104452 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.203806651 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.182249314 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.187224506 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.181744332 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.183744393 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.185842839 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.188243751 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.184350219 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.182427275 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.188816308 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.190737962 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.184648084 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.193336444 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.188650488 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.186158659 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.187760938 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.180838877 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.18632977 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.184852509 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.187479021 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.187659202 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.186934574 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.186775875 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.182234859 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.186490525 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.186755133 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.188920781 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.18666951 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.181891195 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.183728135 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.187817313 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.187196006 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.188702749 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.186452442 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.187616489 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.18751996 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.18297678 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.194640008 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.195670024 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.188710318 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.188244757 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.187106625 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.186536978 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.186735057 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.186172939 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.189588398 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.187180247 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.187082638 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.185264049 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.190329091 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.189301096 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.18462376 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.184624371 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.185290052 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.188225981 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.194336182 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.197845129 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.19060773 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.186660492 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.188441908 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.189394303 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.18619645 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.189428023 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.189378512 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.186028957 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.188323798 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.190576654 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.190897111 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.190385783 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.186064229 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.191566389 seconds)
  done (took 719.675263563 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.189276502 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.190158244 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.189102031 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.189382544 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.18894631 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.189669564 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.18951954 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.188918137 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.188446467 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.188656605 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.190430429 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.190959963 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.190119992 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.190135828 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.189747278 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.189970852 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.189561661 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.190715327 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.189993524 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.190342809 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.190550298 seconds)
  done (took 26.091010372 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.189456619 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.190743241 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.19015514 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.191417632 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.189333 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.190467687 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.1908291 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190022416 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.191872131 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190743672 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.190968277 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.192009351 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.19050566 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.19155426 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191812517 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.191449813 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.191297019 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.191619604 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.191893056 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.191011053 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192193713 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.192277247 seconds)
  done (took 27.311240917 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.1913593 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.191123255 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.18841449 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.193146061 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.190853182 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.191640669 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.191717133 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.192528702 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.193009524 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.188419562 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.188489613 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.189401271 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.190595757 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.195456518 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.191261017 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.193946606 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.193202536 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.193748789 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.194064552 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.192611984 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.196264216 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.199256916 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.194051735 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.189194312 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.19427899 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.193925981 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.193084766 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.19288939 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.190527478 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.195144327 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.193624689 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.189350461 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.193769208 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.192808433 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.191375918 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.196046996 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.193454801 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.194571675 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.194366763 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.194845735 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.198464973 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.195091555 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.198443628 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.19972465 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.195177737 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.190985667 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.197757701 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.194976988 seconds)
  done (took 58.388704261 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.194484687 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.194674121 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.194368051 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.194083737 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.194022847 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.194416111 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.195619778 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.194381331 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.195201386 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.194276261 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.196720421 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.194417504 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.195423914 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.193585083 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.196640911 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.195892751 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.19454258 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.196336803 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.195126115 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.194780005 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.195974476 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.19562411 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.196035417 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.195354744 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.195611657 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.196495289 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.196372855 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.195816458 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.196995907 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.195575076 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.196618174 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.196171002 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.197036764 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.196082226 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.195667912 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.197538496 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.196042349 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.19547383 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.195723918 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.19566705 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.196998175 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.197464728 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.197375221 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.196864989 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.197349758 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.197081932 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.197394838 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.196957065 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.197175091 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.196708817 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.198272263 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.197345546 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.197764535 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.198062212 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.198777901 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.197575307 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.197535187 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.197295367 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.197511774 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.197731144 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.197742972 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.198420993 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.198769673 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.198117198 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.198276883 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.198358933 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.197477191 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.198971771 seconds)
  done (took 82.469631944 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.198690386 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.199650403 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.199028621 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.199553485 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.198974106 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.199329446 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.199321361 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.199039467 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.199485975 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.19932424 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.19937416 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.199358064 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.199328091 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.19908722 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.198310258 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.199558447 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.199555633 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.199331862 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.198844778 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.199146027 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.199132297 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.200217113 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.200871394 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.199627537 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.200504495 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.199225415 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.200573676 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.199566576 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.199615531 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.19924577 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.200240107 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.198723001 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.19986219 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.199983049 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.200897394 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.200815999 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.20038351 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.200529552 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.200534882 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.200616841 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.201982668 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.200756388 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.20161236 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.201323713 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.20136244 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.20055715 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.201127839 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.202904985 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.201769532 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.200969354 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.202194177 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.200894587 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20142094 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.201308757 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.201048056 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.201866359 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.202010671 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.201470122 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201110735 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.201157918 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.203568909 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.20244008 seconds)
  done (took 75.537222294 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202249899 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.201892476 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.202116205 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.20249134 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.202075807 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.201547037 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.2024943 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.202361477 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.202815445 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.202074821 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204328051 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202831407 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205112147 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203719127 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.202747769 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203280532 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202485666 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.203899864 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202320827 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.202763368 seconds)
  done (took 25.173605415 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.203819499 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.203476583 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.203997752 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.2037533 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.204473717 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.20238213 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.203503669 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20332732 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204186617 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203260964 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.204683924 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.203462018 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204175313 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.204085371 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.203216515 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.204342789 seconds)
  done (took 20.379716162 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.204660644 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.204680908 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.205335363 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.203924061 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.205344165 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.203909752 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.204739825 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.203953068 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.203956246 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.204703937 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.205031562 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.205220347 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.204342557 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.205463997 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.205621228 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.204709672 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.204727556 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.206158628 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.205641635 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.205395583 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.204971145 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.205040994 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.206255738 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.205043964 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.20496532 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.205714625 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.205806139 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.205108208 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.204986276 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.206445519 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.204664839 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.206582536 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.205431631 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.205638586 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.20609608 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.205749246 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.206079739 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.206284656 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.205509351 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.20553304 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.205792176 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.206522614 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.20652498 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.208647455 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.206469605 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.207797006 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.206303474 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.20725332 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.206067693 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.207378443 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.207188848 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.207146188 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.207781781 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.208261383 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.207162259 seconds)
  done (took 67.436050634 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208254939 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.208066929 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.206967748 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.207923061 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.207100767 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.207893154 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.208374989 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.208766042 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207337849 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.209729907 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.208849272 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.210234317 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207080473 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.208751879 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.209115949 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208349234 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.208105554 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.208107522 seconds)
  done (took 22.872024154 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.208970663 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.209224016 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.209389631 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.2088242 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.207880021 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.208584173 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208405069 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.207933936 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207855814 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.209162119 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209575483 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.210774138 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208592846 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.210016645 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.209357562 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208736214 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.209459855 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210127996 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.209751517 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.20911092 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.209968336 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209596853 seconds)
  done (took 27.725221575 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.204248633 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.204282751 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.205463531 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.214981617 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.210235174 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.205527675 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.205005438 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.205119487 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.217991184 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.224056583 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.221401927 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.210246453 seconds)
  done (took 15.653269458 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210316794 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209980361 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.210036905 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209633216 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211475939 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210270672 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210312231 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210805586 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210543507 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210682893 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210893543 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210404613 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212214004 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210583998 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210737126 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211012135 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211806213 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211776106 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210859968 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211792089 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211935379 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211777839 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211390782 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212039402 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21143938 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212153247 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211226636 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212507078 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211947134 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213438655 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212271637 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2125292 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213869853 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212967052 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213532057 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21199333 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213544006 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213212254 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212561382 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212091413 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.213443354 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212540484 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21283996 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213558371 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213289901 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212471335 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214097585 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213062572 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212663629 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213217863 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214394986 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213854923 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213653426 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213991332 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213588776 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214345288 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21350894 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213674166 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213834203 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212972539 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21350708 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213514788 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214615565 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214468955 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213977805 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214181094 seconds)
  done (took 81.14478628 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214204987 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.213688446 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214867283 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215039361 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214731681 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214491252 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21445211 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214779119 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216022249 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214466632 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21643813 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214862199 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215670254 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215647662 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214499857 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214258978 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215039362 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215209459 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215986301 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215626409 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214645775 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21582289 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216207889 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215192304 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216040522 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215726541 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216798908 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215689078 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215377054 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216129806 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216445471 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21675005 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217269296 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.215909064 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217020178 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216811514 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215863514 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216647002 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216890715 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217004746 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217256022 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217574944 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216853053 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21681758 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217500888 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217504234 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217026675 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217922573 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217274523 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218498588 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217741374 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217633877 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217771634 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216703516 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21824457 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218070469 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217456404 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218547315 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216750048 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217746329 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218594595 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2183971 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218565672 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217959117 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219267033 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219127177 seconds)
  done (took 81.417466119 seconds)
done (took 1680.007494824 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.379286377 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.333926957 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.211856488 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.224328417 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.212764059 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.237187818 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.223660905 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.213105146 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.212350374 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.212855081 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.213206258 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.402903078 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.270227585 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.21275923 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.213214962 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.309812514 seconds)
  done (took 25.215297245 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.237064769 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.224979345 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.326774341 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.237238849 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.245140127 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.395358798 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.278270422 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.223335987 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.377381728 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.239047916 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.223148918 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.242688134 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.222511268 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.221989572 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.239485063 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.395054502 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.45305957 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.224786473 seconds)
  done (took 27.13969924 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.623823687 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.227821404 seconds)
  done (took 4.989587784 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.240553322 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.223309722 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.224558514 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.221658056 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.216149119 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.215325762 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.222404249 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.215722919 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.221909346 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.336125244 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.228666909 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.236825923 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.240760037 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.226474502 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.227692044 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.2646766 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.43794667 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.230625477 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.22601091 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.229597874 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.224233329 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.32475644 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.266348039 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.227592645 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.336001431 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.229215083 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.22674597 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.231228484 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.358445414 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.230154176 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.224043677 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.222840482 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.225382391 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.21773849 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.685047652 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.236735091 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.233599091 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.247561682 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.228649258 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.383955839 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.231011634 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.231632273 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.219881133 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.678251823 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.369839391 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.341864647 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.24042304 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.225835563 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.228598228 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.286808714 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.227445892 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.227421297 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.281824962 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.021943295 seconds)
  done (took 79.401394844 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.223670755 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.219674303 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.398472809 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.236152483 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.220071367 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.218723738 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.236168068 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.479918108 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.238604959 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.227981671 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.49512017 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.764997289 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.235254442 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.280450009 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.165722764 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.294749668 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.22073598 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.219821375 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.223305984 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.223242634 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.752253302 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.225206259 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.220991023 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.337928255 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.258059158 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.714113972 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.220514979 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.234705375 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.224621393 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.221328556 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.721907893 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.249651017 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.287370473 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.223428452 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.481950741 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.570216712 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.536423759 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.230531921 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.224208852 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.221288966 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.253704931 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.699931642 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.564139939 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.2262889 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.23617373 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.70738918 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.226330882 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.227244028 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.230528169 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.467368383 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.22181443 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.222565744 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.236284881 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.22652843 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.222691691 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.350386524 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.308483902 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.72045086 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.227116319 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.223423992 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.253706694 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.223672027 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.228667127 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.225174812 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.239772199 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.563575323 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.446811038 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.229008386 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.557097064 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.717296656 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.2425353 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.778019957 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.24180601 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.237675162 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.412969025 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.223833593 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.237346135 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.707516877 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.23321237 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.22292864 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.541502673 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.228728193 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.50314533 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.23957009 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.249590496 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.766508427 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.229420089 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.312725679 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.225575176 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.229009674 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.225091012 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.225870587 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.491508115 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.260719314 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.225348822 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.22523709 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.226041058 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.229590361 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.226553941 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.229405614 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.778849753 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.243374991 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.225934096 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.227033269 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.225862631 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.226692059 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.227422036 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.225625843 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.491044519 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.227726577 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.230007887 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.227235872 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.225775256 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.232310533 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.327147222 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.235273635 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.510192328 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.229951601 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.228055712 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.234193793 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.226939475 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.277889287 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.227886118 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.229704602 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.101878462 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.521117539 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.241681289 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.226899147 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.229014978 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.226145585 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.227891801 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.227746389 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.271886063 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.229180927 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.991363394 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.249459239 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.259645721 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.227489577 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.239058761 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.2281415 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.234074404 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.228005815 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.514168063 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.493007566 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.421343879 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.232129748 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.227759686 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.981290003 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.249534948 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.406256204 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.245598147 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.227636706 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.475895171 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.438920976 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.229636878 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.229478797 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.232128998 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.487082828 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.228801047 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.530313576 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.757605605 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.243964537 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.229686671 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.001238553 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.949855058 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.232132755 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.23044916 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.503687936 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.245789016 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.228254615 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.230087084 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.231327073 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.244928921 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.250668984 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.235832305 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.230931823 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.229337034 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.540300127 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.420161944 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.24539029 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.23827099 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.715377217 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.253957766 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.231850563 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.240158865 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.231103056 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.230861849 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.298221177 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.232589736 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.278595952 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.234092337 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.233481987 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.764883277 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.231604174 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.233563325 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.420328356 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.905321747 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.250075624 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.233062495 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.231717641 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.146705474 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.742039227 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.269671507 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.517428066 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.240160185 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.269886731 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.23324644 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.327449367 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.742290351 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.233672443 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.233115169 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.868205394 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.248211029 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.664787224 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.233062052 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.234369197 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.803556484 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.252429955 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.234307325 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.233041722 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.239405815 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.533213122 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.232702635 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.255306586 seconds)
  done (took 474.157898503 seconds)
done (took 612.035835338 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.232449249 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.238994378 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.230471914 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.237002195 seconds)
  done (took 10.093585621 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.249446455 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.239552803 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.245087604 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.238773844 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.246069814 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.23913402 seconds)
  done (took 8.61434287 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.233597375 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.238573858 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.237832892 seconds)
  done (took 7.866450531 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.433557549 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.254556935 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.565660129 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.264834261 seconds)
  done (took 8.673231982 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.244809951 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.244678299 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.245617339 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.245668646 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.249435529 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.251240408 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.24730452 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.246212377 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.248617005 seconds)
  done (took 12.37748881 seconds)
done (took 48.780854093 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.790660615 seconds)
    (2/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.246314995 seconds)
    (3/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.228446035 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.29823731 seconds)
    (5/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.22735734 seconds)
    (6/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.527457566 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.282839662 seconds)
    (8/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.310343195 seconds)
    (9/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.26660898 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.256487633 seconds)
    (11/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.285018728 seconds)
    (12/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.132120817 seconds)
    (13/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.233210919 seconds)
    (14/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.229125809 seconds)
    (15/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.229681212 seconds)
    (16/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.316381909 seconds)
    (17/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.14799318 seconds)
    (18/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.230902935 seconds)
    (19/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.653055339 seconds)
    (20/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.229690128 seconds)
    (21/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.456428736 seconds)
    (22/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.238269195 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.514964862 seconds)
    (24/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.397718071 seconds)
    (25/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.792105044 seconds)
    (26/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.231090048 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.501974518 seconds)
    (28/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.228435994 seconds)
    (29/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.254170094 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.502169177 seconds)
    (31/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.230345007 seconds)
    (32/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.256519194 seconds)
    (33/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.0070808 seconds)
    (34/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.328615199 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.365000978 seconds)
    (36/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.229840704 seconds)
    (37/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.588298454 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.847605166 seconds)
    (39/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.238320737 seconds)
    (40/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.271649121 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.470015471 seconds)
    (42/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.649627156 seconds)
    (43/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.230963973 seconds)
    (44/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.802348498 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.517912352 seconds)
    (46/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.233356114 seconds)
    (47/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.290104862 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.798017911 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.265568883 seconds)
    (50/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.253872654 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.233513527 seconds)
    (52/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.885957366 seconds)
    (53/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.232256657 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.895282327 seconds)
    (55/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.331675437 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.889381264 seconds)
    (57/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.945349758 seconds)
    (58/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.229636769 seconds)
    (59/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.29745708 seconds)
    (60/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.02699788 seconds)
    (61/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.248245948 seconds)
    (62/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.232935328 seconds)
    (63/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.71877164 seconds)
    (64/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.051686662 seconds)
    (65/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.231959212 seconds)
    (66/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.502474032 seconds)
    (67/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.271435355 seconds)
    (68/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.244035672 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.254055171 seconds)
    (70/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.232098166 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.803228402 seconds)
    (72/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.250565295 seconds)
    (73/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.236099066 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.644924722 seconds)
    (75/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.404265606 seconds)
    (76/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.241075166 seconds)
    (77/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.914453472 seconds)
    (78/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.233688434 seconds)
    (79/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.143259127 seconds)
    (80/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.251299194 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.252773585 seconds)
    (82/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.266330235 seconds)
    (83/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.406055859 seconds)
    (84/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.356355524 seconds)
    (85/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.922361724 seconds)
    (86/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.250051833 seconds)
    (87/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.232336385 seconds)
    (88/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.386099923 seconds)
    (89/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.775579336 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.654931054 seconds)
    (91/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.339948131 seconds)
    (92/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.825492896 seconds)
    (93/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.234466476 seconds)
    (94/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.64643483 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.343111338 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.346731208 seconds)
    (97/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.233221011 seconds)
    (98/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.279427769 seconds)
    (99/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.928927555 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.51713831 seconds)
    (101/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.283043274 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.295638635 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.33808916 seconds)
    (104/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.234563392 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.350095667 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.271109244 seconds)
    (107/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.972493916 seconds)
    (108/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.124848656 seconds)
    (109/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.435801623 seconds)
    (110/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.248689106 seconds)
    (111/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.245646909 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.535138982 seconds)
    (113/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.974294392 seconds)
    (114/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.414071695 seconds)
    (115/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.404740267 seconds)
    (116/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.126824428 seconds)
    (117/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.238386717 seconds)
    (118/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.234359949 seconds)
    (119/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.395875986 seconds)
    (120/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.291343004 seconds)
    (121/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.3372188 seconds)
    (122/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.257252424 seconds)
    (123/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.668555525 seconds)
    (124/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.942438037 seconds)
    (125/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.106398782 seconds)
    (126/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.251818217 seconds)
    (127/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.326104205 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.824472648 seconds)
    (129/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.281342322 seconds)
    (130/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.28212338 seconds)
    (131/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.319167103 seconds)
    (132/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.251334246 seconds)
    (133/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.277398346 seconds)
    (134/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.918185646 seconds)
    (135/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.236868396 seconds)
    (136/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.26177515 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.523203847 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.244507226 seconds)
    (139/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.251794335 seconds)
    (140/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.351558423 seconds)
    (141/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.236256763 seconds)
    (142/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.252262852 seconds)
    (143/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.242442264 seconds)
    (144/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.655296764 seconds)
    (145/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.377694512 seconds)
    (146/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.331619128 seconds)
    (147/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.745858835 seconds)
    (148/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.41665884 seconds)
    (149/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.236481148 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.826634267 seconds)
    (151/192) benchmarking ("perf_sum", Int64, false)...
    done (took 2.005304911 seconds)
    (152/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.238918871 seconds)
    (153/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.68326984 seconds)
    (154/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.254720339 seconds)
    (155/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.667706134 seconds)
    (156/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.41736127 seconds)
    (157/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.244105633 seconds)
    (158/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.341275909 seconds)
    (159/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.240535782 seconds)
    (160/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.307424409 seconds)
    (161/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.471886153 seconds)
    (162/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.237885439 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.963654472 seconds)
    (164/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.239100398 seconds)
    (165/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.101286944 seconds)
    (166/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.252124947 seconds)
    (167/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.099855667 seconds)
    (168/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.335904647 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.302123217 seconds)
    (170/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.756776689 seconds)
    (171/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.103800291 seconds)
    (172/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.24502043 seconds)
    (173/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.23871893 seconds)
    (174/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.281806155 seconds)
    (175/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.342244589 seconds)
    (176/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.266772902 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.267705525 seconds)
    (178/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.25303467 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.238892763 seconds)
    (180/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.068081598 seconds)
    (181/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.282371445 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.849658888 seconds)
    (183/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.255647792 seconds)
    (184/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.282325774 seconds)
    (185/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.339973857 seconds)
    (186/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.241517865 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.477954773 seconds)
    (188/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.511871556 seconds)
    (189/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.279947998 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.261992631 seconds)
    (191/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.239957659 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.263938841 seconds)
  done (took 353.961307926 seconds)
done (took 355.117439539 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.281631341 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.24002412 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.266242358 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.267071089 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.266465695 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.26358648 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.277219985 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.26689169 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.266143497 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.265683611 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.261827636 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.264381582 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.280455178 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.262228262 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.300702259 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.267659776 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.267728893 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.262848718 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.267888184 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.267783169 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.268490255 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.268445898 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.274264386 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.267490724 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.275962621 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.275110376 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.274005815 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.265920599 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.264527942 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.267068748 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.25990847 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.279119334 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.268417167 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.264210396 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.269345203 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.26337531 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.269057315 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.241869731 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.273281516 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.264228386 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.260951213 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.269158452 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.272666946 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.273107364 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.26512681 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.278183872 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.276795495 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.283535191 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.260479435 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.258760275 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.289662058 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.267085666 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.263028484 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.258941674 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.266454901 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.289675018 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.264986396 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.285356775 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.261508699 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.270678299 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.303507041 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.286372063 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.267015068 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.277621619 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.264170627 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.282386911 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.265698681 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.272037581 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.263012901 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.272080181 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.271451917 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.2633851 seconds)
done (took 102.592857378 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.38811426 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.258965563 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.402245043 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.262112357 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.419521965 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.406702199 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.262038158 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.262615155 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.263104592 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.127166349 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.26262102 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.262290638 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.261217331 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.262445875 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.390402051 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.264137057 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.261952105 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.017957715 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.265341016 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.402321687 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.257277762 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.263894765 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.263458915 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.127099655 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.258935058 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.25538094 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.402060417 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.264816205 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.01728113 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.253445637 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.257983267 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.024302834 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.402968489 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.284242777 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.273327726 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.274755228 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.422623876 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.281652902 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.391417101 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.39198162 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.406741744 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.303763625 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.255681263 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.260046341 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.267328836 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.266495701 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.264373059 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.294337173 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.261359978 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.265520974 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.020203508 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.275079317 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.26742615 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.265355452 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.266100316 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.295584353 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.266307545 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.268220178 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.406447618 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.269391787 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.392704307 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.125044532 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.132835444 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.265107279 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.261082474 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.267146298 seconds)
  done (took 104.134963005 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.330598884 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.341741283 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.367335345 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.267527365 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.314861206 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.367628992 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.266479895 seconds)
  done (took 10.430744727 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.269027566 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.268500173 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.311505281 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.312201212 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.26718071 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.419292944 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.266024958 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.274773094 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.267502765 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.316230126 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.268980944 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.268109599 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.276833849 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.26417333 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.311894081 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.274956192 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.377932697 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.265753795 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.267704894 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.415952576 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.268203781 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.277627355 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.31621433 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.276440847 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.267444236 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.271231125 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.050086581 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.267953906 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.268151085 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.26815485 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.269458946 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.31862472 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.270097154 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.264395052 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.269518304 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.379434638 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.269259166 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.270120209 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.269085487 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.266409404 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.269331799 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.268804188 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.269402672 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.269443293 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.269679966 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.289515126 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.270310957 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.269464393 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.26974801 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.270449665 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.31651176 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.269645545 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.269679264 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.270383614 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.323114134 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.279859787 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.273046697 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.270632947 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.271527767 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.270675501 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.417756415 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.313561776 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.270189179 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.314125926 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.270152754 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.27025785 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.270181204 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.270912619 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.359283696 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.271080564 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.315156372 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.271217493 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.447062245 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.290667383 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.272252243 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.270001703 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.270525224 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.272377035 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.264472453 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.273641661 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.27111173 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.268961534 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.27453524 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.271133028 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.272018634 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.433335235 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.377908924 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.27203727 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.281759677 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.275689342 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.27147687 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.321493889 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.271156466 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.272089243 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.319791839 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.383179821 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.32245387 seconds)
  done (took 131.187576182 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.281947927 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.282158985 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.273724588 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.295848564 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.270160869 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.270102772 seconds)
  done (took 8.854975417 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.27297418 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.275649051 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.273244335 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.274315879 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.274470421 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.274062599 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.275299392 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.272137643 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.278315362 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.274118847 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.277505828 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.276213619 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.276348203 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.27554465 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.277873467 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.275751654 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.277093736 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.274557731 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.274659654 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.274736734 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.269835437 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.275468496 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.275337973 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.272202759 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.278409353 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.275508589 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.293272402 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.276356656 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.276038925 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.279948825 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.294287843 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.27668829 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.272621691 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.277257164 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.279396653 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.273276279 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.27943619 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.277329132 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.277183065 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.276170972 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.277761409 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.277610404 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.276921212 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.277885056 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.274842398 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.276867768 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.28060008 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.294939529 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.277303586 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.277848885 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.278015196 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.278082794 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.277452607 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.278268447 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.275294187 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.294343992 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.281928744 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.278222908 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.276777193 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.275443022 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.279613582 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.278130582 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.276155755 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.282083504 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.277588372 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.278724125 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.274593749 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.280870794 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.279188754 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.278959842 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.280465832 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.27783485 seconds)
  done (took 94.175521509 seconds)
done (took 349.955462784 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.093302123 seconds)
  done (took 4.279176717 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.537698781 seconds)
  done (took 3.724957632 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.694608349 seconds)
  done (took 22.129403444 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.281210927 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.336592538 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.295635062 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.276631216 seconds)
  done (took 10.375057606 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.50353788 seconds)
  done (took 3.689969462 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.274139151 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.273148273 seconds)
  done (took 5.736023992 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.443161484 seconds)
  done (took 3.630714047 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.488076168 seconds)
  done (took 3.675458338 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.28856465 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.286120078 seconds)
  done (took 5.770050307 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.263366995 seconds)
  done (took 3.450524819 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.692880421 seconds)
  done (took 17.880610222 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.286227155 seconds)
  done (took 3.47537031 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.292459652 seconds)
  done (took 3.47996487 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.682782845 seconds)
  done (took 5.869443574 seconds)
done (took 98.352337401 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.271037889 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.271441964 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.275213192 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.272067163 seconds)
  done (took 10.277900054 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.332786479 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.333415287 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.33823646 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.333048703 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.332735148 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.333278859 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.306117781 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.306178149 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.334929611 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.334801471 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.339667089 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.333211196 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.335699247 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.307318547 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.332775719 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.340802744 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.33501516 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.340960362 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.311459815 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.333632335 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.282921971 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.334931891 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.333187857 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.282620241 seconds)
  done (took 33.019157479 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.795326959 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.348859413 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.431683524 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.331137804 seconds)
  done (took 7.097174816 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.39909982 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.411744311 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.410413356 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.456165512 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.494718162 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.412289975 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.309452083 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.305122447 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.290181954 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.412893611 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.414911727 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.353410243 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.503791997 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.283763886 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.566002731 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.283528828 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.283364639 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.412603569 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.458985017 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.481549592 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.284660377 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.401057588 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.412647805 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.352481189 seconds)
  done (took 34.585276154 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.292069614 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.304682655 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.284422759 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.300269879 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.286526598 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.285913824 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.28857079 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.29279841 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.285845576 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.285336056 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.286822425 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.300257085 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.287587425 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.285413278 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.293060124 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.287770779 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.288160805 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.29300113 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.295108154 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.286389305 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.286252608 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.293470484 seconds)
  done (took 29.58160025 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.277653785 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.275957794 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.626386026 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.530920102 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.277165124 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.277219581 seconds)
  done (took 13.456622608 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.346903525 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.483922405 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.2871469 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.615469758 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.706921419 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.288008677 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.283064205 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.518082157 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.81758744 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.793461683 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.342605361 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.350084455 seconds)
  done (took 19.026049747 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.289456079 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.28211761 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.292733047 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.299057833 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.336882054 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.28890868 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.292516158 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.277812338 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.33789438 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.341372266 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.288438405 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.334363415 seconds)
  done (took 20.855565677 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370637062 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.282634171 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281776634 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282911511 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283155152 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126525139 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.283835374 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.965000019 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.30591937 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556683101 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283672368 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392478919 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.536825577 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283374321 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287680431 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.272375958 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511204483 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.745421182 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286164572 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287990446 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321514234 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.286570953 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.292508678 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.484694259 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131923021 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283767863 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.547245508 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.285230218 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553070882 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.29784201 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294278361 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.284568135 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560719877 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916072809 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399851959 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479280897 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292836857 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287031481 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.321054546 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.29180003 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297030689 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.290382165 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294724818 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285763263 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.286068997 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298228831 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97901894 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.309618346 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.286557964 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.285217547 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529528758 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383365475 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.290922309 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.286126137 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318715296 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286177549 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.290809282 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413900426 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867108808 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286194582 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319313432 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.290808176 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.282778311 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288480773 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884105323 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.294234047 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.292940172 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.292036325 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286907187 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.299477472 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.315180927 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286664128 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.313963281 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287080005 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968507163 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302385956 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294178046 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8101177 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291258525 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.293606268 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.517786485 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288598962 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288458296 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.287746704 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288113585 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951416536 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295673326 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.275030652 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.338316249 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.992241381 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.503812089 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313576659 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318721033 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.510295693 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.280539704 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291177888 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.288777181 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29560534 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309460072 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.975643544 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306185927 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.294912633 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546118421 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.49999197 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298563566 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.291019865 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.743323687 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308366165 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.318421312 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.298713201 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.49023041 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.848579319 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.308576949 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293683682 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326218505 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.2901142 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00026807 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294912068 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.299664325 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.298169145 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559427209 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.177107042 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29217952 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358796221 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298219898 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.291900026 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304916419 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298143424 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.291516705 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.57791699 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313512257 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.319795538 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.292365626 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291815605 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.298071625 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308070301 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.299197924 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.514607825 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29677413 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573550173 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291917157 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291675441 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292400651 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.512692776 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.292587375 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.299385808 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555081087 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292595429 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326252198 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.306460333 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322158364 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400931426 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322715691 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.304816558 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.550127715 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.298141959 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.298567674 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293121069 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.316694376 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294212608 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.30342636 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301806479 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849217746 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276975797 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.299009515 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.293997092 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.308914495 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361382775 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.301785722 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.491662169 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.299463243 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294935716 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.301767259 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.29573008 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.521956205 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.302800451 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.304437927 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376801248 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.745109947 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.865068604 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.314738042 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.294903788 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.294740148 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.295781875 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295548544 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294426466 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.295160342 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491124474 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311900808 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.310268416 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.85595824 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303326221 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.307263636 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.307834473 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.306848278 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.303580745 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295918777 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.306264523 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306270206 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302596003 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.310476071 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431438935 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.311133961 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.296647297 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.814875148 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.303867211 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.296461139 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.296246329 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326524681 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.310639136 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088220079 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557420801 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302160712 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.538490053 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.311669047 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.319253228 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.29657989 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29917512 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304855999 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.313192389 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320460584 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.306686081 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.297290155 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32025073 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854596167 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998781114 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813656072 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307690623 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.304211714 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.302071953 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.991240531 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315371102 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298009083 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526289192 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.993323609 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315488879 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.755311885 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.320861386 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027537662 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546457524 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.533071658 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303150266 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.301441059 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548177187 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.515044337 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330474343 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.297859509 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321299502 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.304745783 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.834216378 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331357265 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387287618 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99014514 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329176071 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.30502978 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.364919254 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.302590048 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.683092618 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.317166497 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300083651 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.300187867 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.305663963 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112925973 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.305739664 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299560607 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885809407 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307508463 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.774956525 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317760748 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.498780879 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.315336043 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.406647001 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.314370919 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.30185121 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.558692234 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543960924 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307261031 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.311420211 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819071887 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.176508394 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.308695988 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301608395 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012737751 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315237373 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576429412 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.31217995 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.306825248 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306738911 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302120267 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303264603 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.301860669 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309211597 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274834278 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771910027 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.321226788 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298984593 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329709784 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307695291 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.556278845 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.318063894 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.861673283 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536911221 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313627172 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334558209 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.307243305 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317796928 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.297622486 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.305306072 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304272612 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334381248 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.525305674 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31173397 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.300136081 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.30825758 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.514009722 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.302852699 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305201671 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53940518 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.308393201 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.325111461 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024278652 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342085894 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.305310479 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326041339 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.303394822 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350965898 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37376551 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50428244 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.319963525 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.314113337 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688929233 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327551414 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311565801 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.320508299 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400518735 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306142265 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.313747293 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.084596427 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870498169 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006388428 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.876028136 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560945491 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309880397 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316594577 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306001234 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442451153 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306753584 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581179275 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306804712 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.306133249 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329196544 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308041179 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337890495 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520338697 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585218402 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306512367 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308209739 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328895866 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.307223729 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.316970854 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.516133604 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775206539 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838313222 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310344683 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319207528 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.007739073 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600527614 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306687171 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30856347 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307493529 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.309079455 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.334235769 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.316297839 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310008712 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446937116 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553545236 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949748507 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.33389965 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.347564616 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.827575362 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309145027 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.567174373 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310264283 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.509838969 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879056638 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991026892 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573467624 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379880228 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.510130453 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.314680909 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446159478 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.322111592 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.314050288 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310737744 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309926029 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.310475674 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.318845842 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880216153 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580491496 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.315394343 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.31046307 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344628787 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.319862602 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.530544547 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98894828 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.53389751 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31830085 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.316020599 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.310813456 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.880495108 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566035448 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312416936 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.31497314 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537916979 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.316646186 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339010535 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.829819872 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.311579997 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836352732 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.20116307 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332317421 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324059982 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.996709112 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881766449 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.326594878 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785213042 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314415369 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312237019 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593052457 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.319997177 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.321521788 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595803253 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.317768672 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.321506613 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.519058498 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.880763456 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062578909 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.315765295 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331115831 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.319293457 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313521528 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362716651 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331705565 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321203514 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.825751007 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332069406 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313864663 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.328074175 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.313485989 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329820675 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.317260213 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31496536 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.321780505 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.317016851 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.309981671 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332174773 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439419645 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854070412 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333808033 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.991324278 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.64613256 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.568381577 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.325302826 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.307488429 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.322741062 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315924882 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314798248 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315783946 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.320988464 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842905701 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.325382768 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.330150236 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.320606325 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.525247814 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524241817 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314929958 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.522817443 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332363793 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341923753 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.315265866 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316996105 seconds)
  done (took 938.165763561 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.314049884 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.316205075 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.32630652 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.361052156 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.325366202 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.432717141 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.392090693 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.326221682 seconds)
  done (took 20.018021411 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.312212603 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.336939159 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.326218559 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.3209855 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.318583647 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.776227679 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.337269114 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.32140733 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.333590022 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.326304042 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.329190126 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.982817663 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.344217271 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.314380487 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.311696333 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.325552341 seconds)
  done (took 31.543573075 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.347613559 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.478104874 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.161108457 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.344514002 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.328707474 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.318360845 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.526990789 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.32982817 seconds)
  done (took 26.062621866 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.325508419 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.326730677 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.327283268 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.326960428 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.32869553 seconds)
  done (took 7.861795048 seconds)
done (took 1192.739828524 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.32289919 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.324508993 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.323518575 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.324931086 seconds)
  done (took 6.521607778 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.307219778 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.309256036 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.310573477 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.324122882 seconds)
  done (took 9.476819636 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.003612472 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.914544149 seconds)
  done (took 5.145401265 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.80119874 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.806226662 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.800635592 seconds)
  done (took 6.633726763 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.607714419 seconds)
  done (took 2.83445806 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.221727552 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.313045522 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.986123963 seconds)
  done (took 7.749319831 seconds)
done (took 39.588456138 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.318528357 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.659423575 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.471393011 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.318299655 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.475580047 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.469412827 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.053574509 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.33005193 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.31599248 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.315829905 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.343109685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.47698943 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.101803133 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.660068082 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.099848292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.566034737 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.477048155 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.328818784 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.314881139 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.317523452 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.054348622 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.316308078 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.342871226 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.316735109 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.49463859 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.462145489 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.33030217 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.565643454 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.320446921 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.316634867 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.476951426 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.32479508 seconds)
  done (took 80.965023224 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.326737197 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.316979255 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.330243696 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.317733611 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.319850187 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.328709957 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.320385688 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.318119993 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.318914852 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.317901251 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.321109934 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.317720075 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.318842938 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.331782205 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.317773941 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.331081076 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.317644492 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.334075369 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.333898972 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.333500457 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.32137162 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.318938542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.334885515 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.318662818 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.330282223 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.318824252 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.335084404 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.319292684 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.318846587 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.318732803 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.324617597 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.339590262 seconds)
  done (took 75.602817368 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.318354021 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.326467832 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.320657393 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.329930623 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.319185107 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.321094133 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.322267845 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.320059314 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.318714838 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.349851565 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.319549523 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.336660835 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.320947804 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.321289408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.336515109 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.320630283 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.33828659 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.31846774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.320745841 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.333508048 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.322893481 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.330391295 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.320614834 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.32009623 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.340017589 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.32047033 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.320293692 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.320865871 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.320858275 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.3388113 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.325421698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.320826682 seconds)
  done (took 75.646606567 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.556849595 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.330496398 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.333400833 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.325813002 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.334067917 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.33116433 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.326990318 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.561111662 seconds)
  done (took 14.333802165 seconds)
done (took 247.775994533 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.340169122 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.809674986 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.370790881 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.324659526 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.36247622 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.352874792 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.542215572 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.371183706 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.545484467 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.355676448 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.344013571 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.326078698 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.103513616 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.47705399 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.154655904 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.249447726 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.176235999 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.321925847 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.881723981 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.604785295 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.355471368 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.326103236 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.140364466 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.205713615 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.315867936 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.425636757 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.425327906 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.550953308 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.485585496 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.405904908 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.827253489 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.332707102 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.358437329 seconds)
  done (took 62.403737575 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.328519213 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.332640338 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.334235877 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.333511071 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.334129741 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.333990923 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.329968262 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.334104952 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.334878152 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.33508591 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.333373054 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.335978067 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.335352098 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.333661165 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.333219232 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.325393316 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.329477095 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.334150611 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.329809368 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.325507647 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.333473414 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.335695894 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.336413196 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.334387768 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.334552317 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.335833758 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.336141957 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.336003648 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.336029969 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.335787211 seconds)
  done (took 41.237306903 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.335369993 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.896185572 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.049336656 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.342107479 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.331620411 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.335737451 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.608456953 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.340578246 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.335704783 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.335832319 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.800164692 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.34383588 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.366608973 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.06965469 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.339384093 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.33739245 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.336622722 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.332880329 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.907573554 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.346539411 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.624565106 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.342020536 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.608384645 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.34666352 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.355063382 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.332860125 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.338258447 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.148561671 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.358012122 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.803290637 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.0782142 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.607524615 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.077943857 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.096408302 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.07303972 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.344042703 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.338765731 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.80634165 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.340377988 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.335573988 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.607335779 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.341251965 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.056960833 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.013466555 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.357633359 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.339284044 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.169141217 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.829532191 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.570259061 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.344618285 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.0888774 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.342976389 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.339359789 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.336235052 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.568245706 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.342109084 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.335772462 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.195436605 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.363618684 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.610222229 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.345345062 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.336124355 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.906552698 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.341638111 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.901989802 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.341891508 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.344532643 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.35534969 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.064213429 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.343699233 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.024187125 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.359150668 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.339483368 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.805996358 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.907273923 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.228216209 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.342918326 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.911849383 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.101314099 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.630787961 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.34357726 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.126068519 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.631614453 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.345331283 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.343049103 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.342953437 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.342074462 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.408332152 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.606853478 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.962189992 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.02391501 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.212728189 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.636500599 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.349422649 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.339301132 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.198899287 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.365561919 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.343486121 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.056685824 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.03370643 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.360992644 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.345009665 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.035181042 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.367563196 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.615283895 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.349946901 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.096384382 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.344994713 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.411047038 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.343113974 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.3460309 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.360950919 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.614969224 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.347570112 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.3426988 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.014141544 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.838378539 seconds)
  done (took 187.91994947 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.333923968 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.349427144 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.335531727 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.349635751 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.333354001 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.341803251 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.334266722 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.334496484 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.339064354 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.334271062 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.335617709 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.343085328 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.340540279 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.334091012 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.333124612 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.335046289 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.334528136 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.355995365 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.33502198 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.334826196 seconds)
  done (took 44.011514144 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.344054066 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.884978625 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.851843548 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.349430229 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.344990621 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.340762003 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.394212032 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.34724285 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.344119227 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.628404169 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.505046499 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.351585553 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.344712932 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.34574727 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.853443065 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.33753815 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.628550913 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.878883762 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.345659486 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.885750567 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.342738451 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.347112022 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.34060715 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.879468924 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.639982733 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.619094716 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.402058435 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.88780933 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.351317105 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.346427756 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.886910923 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.351794664 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.343450327 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.886516046 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.367450535 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.358615177 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.345945944 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.397986451 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.399252861 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.634555995 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.896113754 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.626946763 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.363166621 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.523747903 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.350666766 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.338445813 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.895820449 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.369272576 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.338987145 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.349244821 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.351556418 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.860015237 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.364773367 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.858305351 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.369422286 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.347452068 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.889921144 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.86504264 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.875216022 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.510771 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.347381419 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.617281162 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.354176759 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.897560451 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.370966148 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.348425519 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.348723421 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.509855764 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.896261633 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.623537209 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.642265365 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.641913645 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.353938316 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.406261279 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.370152844 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.638020407 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.410919922 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.761662532 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.640085615 seconds)
  done (took 122.208992124 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.604002969 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.463575755 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.724136143 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.916587126 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.833392894 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.476600839 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.456476665 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.599616549 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.357217657 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.436820786 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.976703461 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.466638002 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.06102516 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.429579219 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.451267305 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.495280155 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.732598154 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.316810097 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.01166964 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.950631041 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.355113126 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.44599214 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.85793426 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.552400386 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.360852902 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.877912115 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.283180558 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.853264394 seconds)
  done (took 51.596816455 seconds)
done (took 510.611792531 seconds)
SAVING RESULT...
DONE!
