cset: moving following pidspec: 7131
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.426621492 seconds)
loading group "string"... done (took 0.607329183 seconds)
loading group "linalg"... done (took 7.55260049 seconds)
loading group "parallel"... done (took 0.165598258 seconds)
loading group "find"... done (took 1.198443169 seconds)
loading group "tuple"... done (took 1.896043797 seconds)
loading group "dates"... done (took 1.318725146 seconds)
loading group "micro"... done (took 0.229897839 seconds)
loading group "io"... done (took 1.045555439 seconds)
loading group "scalar"... done (took 39.911258046 seconds)
loading group "sparse"... done (took 12.350797213 seconds)
loading group "broadcast"... done (took 0.99075966 seconds)
loading group "union"... done (took 12.763073313 seconds)
loading group "simd"... done (took 4.701064566 seconds)
loading group "random"... done (took 9.386807743 seconds)
loading group "problem"... done (took 1.859903623 seconds)
loading group "array"... done (took 21.629264444 seconds)
loading group "misc"... done (took 1.713628422 seconds)
loading group "sort"... done (took 3.458610029 seconds)
loading group "collection"... done (took 17.966903498 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53038233 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130604847 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132892028 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.125650328 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152286522 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119469729 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131601168 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090095772 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.809274916 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15847227 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123091292 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.444124404 seconds)
done (took 5.271788996 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177852172 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086904681 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088315819 seconds)
  done (took 1.310601756 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069209389 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130233378 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070520156 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071111091 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070651807 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070235286 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069879808 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070357409 seconds)
  done (took 1.687757374 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077211686 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073003244 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.0695017 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072376525 seconds)
  done (took 1.430716905 seconds)
done (took 5.820729354 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.813467637 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.217475621 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193291972 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.434108791 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135765468 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.16933302 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645606571 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314986516 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.19338063 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084808952 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11907394 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.357722349 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113761142 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.655905643 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078357231 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095763999 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141535138 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.458846884 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071609561 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086286883 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092651845 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133929878 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089497071 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078015362 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149405862 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071423083 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.141571205 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083866772 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069877076 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225635432 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176613588 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662700791 seconds)
  done (took 10.534672702 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103808677 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.106281452 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072272936 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130239742 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.105523966 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073637606 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079729384 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071466842 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09503334 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135729823 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.097658139 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108042208 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069389981 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073527502 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.0893416 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20959186 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084257376 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086211807 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074889289 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08420122 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112588131 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08193756 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.086194951 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085410647 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132450051 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184349736 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099762677 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100534468 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070297207 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.088301289 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118341449 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132190467 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069226828 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069695393 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131630584 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098645759 seconds)
  done (took 4.789776992 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.076709856 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150057341 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094972213 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140313242 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068670494 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114120882 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069722146 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085312137 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.219453978 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.460811575 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.118830654 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068813472 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.635410809 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11535675 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068653688 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108569626 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074116262 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072511627 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070884621 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.603013408 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102137587 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113063157 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.0863063 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07516676 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07320284 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371674493 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074703339 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068309412 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072211754 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060572436 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130149968 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071821245 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.989102685 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.137845959 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070349706 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104717952 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.292794959 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094458136 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147991067 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073299695 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068676375 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162601826 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074889343 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070312215 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088168703 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106912745 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120482754 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071880784 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07089763 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169308434 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068522778 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083681844 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.666373529 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157735508 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.083632129 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069754797 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.26766888 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.0944371 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073842753 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068433263 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.19076688 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138124584 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.074156244 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072644145 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073546941 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073487153 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.375760599 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.072613888 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.090005519 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074178087 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081624409 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073253806 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073511148 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077294484 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076880577 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092297531 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070151527 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079394501 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070332679 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06967946 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070873236 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087052584 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.406830896 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070669286 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072505316 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068833436 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094257887 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100457868 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070866341 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069616621 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104244955 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0719857 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070107757 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.111741727 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071096871 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.188160319 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073696133 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116969022 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069985241 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.101609839 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074056845 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.070242317 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100077435 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074574352 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101923403 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08406877 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071753396 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.446935772 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069260882 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069283114 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073320644 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069725737 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072035361 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070798927 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083303947 seconds)
  done (took 22.129579929 seconds)
done (took 39.667457243 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.272704526 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076636978 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080107277 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077285021 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078118931 seconds)
  done (took 1.825124115 seconds)
done (took 3.040830049 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.132112108 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108094587 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069985946 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101630645 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068151224 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106732882 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105278299 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081106337 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105398064 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068560315 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102714702 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068773499 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067973395 seconds)
  done (took 2.427391473 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089027441 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088472751 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073826463 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088435038 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067495653 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087539427 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086328671 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093902014 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086304795 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077494182 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067773317 seconds)
  done (took 2.117494072 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088770082 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089529125 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073452507 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086501963 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067154469 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086739388 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086257421 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090542151 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08668788 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078190288 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067518191 seconds)
  done (took 2.107470708 seconds)
done (took 7.856260325 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.084564654 seconds)
  done (took 1.282895234 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.606883563 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.12279705 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086030817 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11600169 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198452652 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123065187 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.278258521 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090851817 seconds)
  done (took 9.017013953 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.107561565 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073210179 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07341236 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073429522 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07577981 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073331577 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075286414 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072668687 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072613957 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075002909 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075267701 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075828822 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072394075 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075798245 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076515771 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072323813 seconds)
  done (took 2.49744844 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097045799 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096333376 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077088623 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078669375 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076125541 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075466905 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078473807 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077605461 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074357424 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076097192 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078882832 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077175443 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075776116 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068482208 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077612861 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079263223 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074587346 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077543167 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07803222 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079239902 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079053526 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06776308 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075181295 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077546816 seconds)
  done (took 3.187240792 seconds)
done (took 17.191797931 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110827574 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070828827 seconds)
  done (took 1.385742962 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.086169717 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087255532 seconds)
  done (took 1.386938658 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086924794 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069120756 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09402288 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.082372931 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06974817 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069057635 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091757123 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070078801 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069131581 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069835128 seconds)
  done (took 1.985529465 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.073511509 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081631637 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073267794 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085251331 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077414292 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068034506 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075479314 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071460205 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.0808651 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066218963 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075097758 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086680367 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074551359 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088497965 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076025025 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072818855 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074386049 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071477854 seconds)
  done (took 2.591333313 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069351133 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070650882 seconds)
  done (took 1.359174979 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071829568 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06798114 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070782007 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069913727 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067056635 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066725444 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067562013 seconds)
  done (took 1.696894553 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.395974581 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119207679 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.326368735 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075159369 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088220579 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.275298999 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071019977 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07666102 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.077010552 seconds)
  done (took 2.771693018 seconds)
done (took 14.395215714 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086258089 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091461426 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100958321 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.394801951 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095848364 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070008894 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116987245 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.198581744 seconds)
done (took 2.384141148 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.221575508 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.724409969 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.448051538 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219717093 seconds)
  done (took 2.614864855 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.362847257 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092459065 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062768873 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071136234 seconds)
  done (took 1.821880409 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070615876 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073688175 seconds)
  done (took 1.371466761 seconds)
done (took 7.258956547 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071435696 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.088455623 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07002461 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.0681703 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069874481 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067698612 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.067352928 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067520238 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069892935 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070425229 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069856101 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069790629 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.070301479 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069737875 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069923266 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067125508 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067121543 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069499295 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067172471 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067107414 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067268178 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070126938 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067564441 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067609328 seconds)
  done (took 2.934177339 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.091490761 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070469599 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076199349 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074897527 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073075114 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075327431 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075036903 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069744063 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074932326 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072179408 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073131056 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07258249 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071477474 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072940343 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071566304 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07362641 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074916476 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069661359 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071444504 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073151162 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07449226 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069596764 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072956056 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074906881 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.0726368 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073004949 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072029675 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070221945 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07448186 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072878917 seconds)
  done (took 3.442683356 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074644123 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06769086 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068199291 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075259466 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067109147 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067823736 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066875389 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067640487 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067967151 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066555792 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068433877 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066913323 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067488686 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068342929 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068133867 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.07079107 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.196897818 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067366535 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066711086 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067584193 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070449588 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066384159 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066872796 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066863923 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066425344 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066742096 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067618824 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066822845 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067812967 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068009672 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070834109 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070751603 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067279593 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074840562 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070941481 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06708518 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071971365 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066921722 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067436321 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066629247 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066946512 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067259923 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067007993 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074722776 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06727339 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068787601 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06776287 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068338505 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067443488 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069819151 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067078302 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066754251 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068948201 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06793874 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071257826 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066677117 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068068003 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066874443 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067893046 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06733178 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067333241 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06721181 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070089751 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068346784 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083091421 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074977138 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06710085 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068765758 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067981917 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070185583 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068927749 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08135119 seconds)
  done (took 6.323698728 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09437182 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091127234 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068558587 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068934546 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065156032 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067990601 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0735598 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067693314 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069608675 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085884247 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067894847 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068770845 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068992435 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070878558 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067826704 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069178091 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075785979 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065386939 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067476814 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071353454 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068220472 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073065401 seconds)
  done (took 2.836425324 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159979093 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074219334 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110066094 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079331137 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07332105 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078757199 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073664026 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073633122 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07318682 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071400057 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071206368 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073573836 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073257936 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071175666 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070960219 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070991342 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073850904 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070973593 seconds)
  done (took 2.68624231 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080017401 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069976493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090910784 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070323573 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069546739 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072102192 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073698526 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078290153 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071628714 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069622695 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077679576 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072363347 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071754114 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069641371 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072171613 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069525561 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071429332 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069394404 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077566127 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073948153 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074851081 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077771645 seconds)
  done (took 2.867369305 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083322907 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071984972 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08474994 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072339199 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064945393 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068031424 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073899047 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069685759 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07370464 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071562992 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06901862 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068090497 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072789962 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069212313 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072679201 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06930241 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071667426 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069225679 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071195284 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06562637 seconds)
  done (took 2.679086633 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092597378 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071251319 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071097267 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080256726 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07132865 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071690053 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078807052 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07134776 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071120748 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092301087 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071957856 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071588831 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079470323 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075834787 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071595048 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078762885 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079073655 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079237349 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071578588 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07220983 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093317802 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071431997 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078624242 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071944682 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071624493 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071924049 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072030988 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076350306 seconds)
  done (took 3.378286867 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072349594 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070370237 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067248382 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067837827 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067132067 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068066756 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067084426 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067461727 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069520294 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067536506 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.07011091 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06956586 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06922354 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069590107 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069678116 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069760821 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069738022 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067624905 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067313038 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067743212 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.070278291 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069951199 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069952448 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067192867 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067497682 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069833534 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067035582 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06709494 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069669071 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067361392 seconds)
  done (took 3.313329308 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08192358 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076367156 seconds)
  done (took 1.410287511 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.069166473 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08444996 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066703206 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074219821 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073136573 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070327706 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077410698 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072694174 seconds)
  done (took 1.835058396 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.088996758 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.082287438 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071156818 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083078342 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081052127 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087491064 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.140628037 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070796915 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077669886 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067526277 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086615233 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069279716 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076588989 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070177582 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07620693 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077225625 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06739769 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076149494 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072400327 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068173724 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071228199 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079831949 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074879751 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065109754 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071547329 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093306732 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08128212 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070525859 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073468586 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077715586 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076385956 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063702519 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070206779 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070526595 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068105487 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080591052 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085287253 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072867963 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078997599 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070960454 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080049097 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064847601 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074951539 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077340212 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08104409 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.07057491 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070802168 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06515987 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067839239 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072757447 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06572829 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070752165 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064646037 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077716091 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07474305 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081587664 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069755229 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071731083 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073646017 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073327556 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076980956 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071965293 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073356077 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069685298 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081195873 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075031229 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07900986 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06481655 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064084556 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068028944 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080532075 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094187153 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076724802 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070905359 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071312339 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067926297 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073703493 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070833297 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07625643 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077599881 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070292516 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076208237 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0784797 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070996048 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073398349 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077927364 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069330067 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073007273 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068152387 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087199616 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069169124 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068034482 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068245605 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080579786 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073417199 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069967765 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068409953 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077401034 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064151004 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069688246 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070279263 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071082202 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079785295 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073589124 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073869266 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077954628 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076771431 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069434676 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072742478 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065591686 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070037299 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069012292 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077041978 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063380238 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.195675694 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.072117034 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071618425 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080142855 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069862204 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070821564 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078632887 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077266789 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069343635 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068179115 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07390296 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071208212 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07353998 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078587048 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068711881 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06500087 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065255008 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074597923 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070453925 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075112447 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075243819 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073565311 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064374544 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068592959 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075913919 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079559295 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071280114 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071886922 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076559727 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072121948 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070052192 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07747578 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073141399 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070189872 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076105265 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071244661 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064554966 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073105344 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073135431 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069402582 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07413567 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074388673 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072179075 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071621131 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069013076 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07621367 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070279434 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069352193 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071058512 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069547484 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080835623 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073315733 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064668406 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066855682 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078302545 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06805766 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070146444 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069269915 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072540385 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071004672 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068216571 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069942065 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07273255 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080509967 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074434623 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070752166 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075185585 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08192437 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.071000537 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072344001 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069180722 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071433098 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070456044 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07897276 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076508014 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074410069 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072711285 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067357722 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075361639 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077737958 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069776086 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.0683944 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069194379 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074321734 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07582705 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07425674 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070459014 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069044981 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071750931 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073265162 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072800918 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070708786 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069693538 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076762081 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068496907 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077016823 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070907267 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080683752 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074838291 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064694487 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072801177 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068197918 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076875425 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065131568 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067956377 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.0691188 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.07021789 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068707629 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072241543 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063445056 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076316493 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076538083 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07002867 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06898358 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068848825 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076002363 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070430657 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073007949 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073411164 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.203276335 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.083564421 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070872291 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075070715 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081292106 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070769668 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.0644556 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076624819 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069295988 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070300678 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070232583 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069103002 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074253255 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079167212 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07749203 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064562887 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073515104 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069344351 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069364196 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065799214 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07522019 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073223892 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071832305 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077637576 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071083185 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070852285 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075226902 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070244379 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070842248 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072143869 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074163624 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071173402 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072918057 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070313005 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07377697 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069908287 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068075962 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073136059 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070288567 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071176486 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075662166 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070241826 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071012866 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074428792 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070665637 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071802538 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070648435 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070129752 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0735049 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071251878 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071080483 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07269058 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065113992 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078035486 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06971982 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077627642 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071790882 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066720588 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077519706 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073110377 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076055371 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071499404 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071434687 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.0721768 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069945374 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073473811 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077340212 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068058373 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080823244 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078163155 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071081762 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073831493 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070842387 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071643702 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068844787 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071652648 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070776948 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070897055 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070171418 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074650147 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073527168 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070864463 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072213179 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071386971 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071116242 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071602117 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064365592 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069550064 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070259702 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072453155 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080252883 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071154795 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070679263 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06928499 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071274408 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069752184 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066853217 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.078388455 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078409452 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071366231 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077306114 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069292834 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.0714458 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080676044 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063723844 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068458742 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067889019 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067678943 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076796477 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069948494 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078864984 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070055256 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068695577 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06627261 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069687873 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067481528 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063456199 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066487136 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072311235 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068684737 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068594594 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.198774575 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073960688 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071952123 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080706128 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.071520542 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071588246 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071033181 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067587473 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070432052 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069759044 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074764793 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.07123056 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069430835 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067841743 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070357553 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071221904 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072150351 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070061081 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072598471 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0781211 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069874799 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07360866 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073527326 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064923748 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073464171 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070611826 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070135979 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070184607 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074940512 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073956982 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071635269 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079717075 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.071215449 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071274505 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070402651 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067714527 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069595184 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070099086 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070577821 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070619158 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070934395 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078569987 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067733287 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073788936 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070121347 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.07081244 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077173705 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071271982 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073375622 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076149697 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070672935 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072599324 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079288995 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074806503 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074048059 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071801636 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072305026 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07700074 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070371428 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077411061 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071238247 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.072153776 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072200921 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068285525 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069770043 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070432465 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069694637 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076975965 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071892344 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069748351 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070443151 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067902845 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071778756 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072267176 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078454262 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072299635 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073687607 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065130308 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067374977 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070977809 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068907525 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072230368 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072902679 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076833806 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072661725 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070835798 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069083083 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080135007 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076071445 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074154262 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068358919 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073860295 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071469423 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07330569 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071389916 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071295379 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071602184 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074334372 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072547962 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070826648 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077762466 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073826851 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070626081 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071601829 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070939363 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071074286 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064728834 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070120984 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071991723 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075094546 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07211185 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070004777 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079548615 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067806395 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06974829 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072876569 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068003092 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074474982 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064014544 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070701972 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069865284 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069361259 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.194401427 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070397562 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069302857 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073339383 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070391427 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066104979 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082361323 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080711715 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074488759 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070432222 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069061134 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064800973 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065287755 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069950511 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071776348 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072544534 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080966064 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069589967 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069611226 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065327866 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071343974 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073387363 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073799165 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068104297 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064732154 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070412894 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074055449 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075739191 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069566245 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069907931 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074575668 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072802778 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068462048 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073626807 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067072156 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074021499 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083331214 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.07062196 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071417309 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07771076 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079086462 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070641997 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065643214 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070698843 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07347643 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070689175 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071214663 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071288475 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085271595 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073229216 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069892739 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069237337 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073046047 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069481402 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078045644 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071268562 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071363811 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074999189 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072463215 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078258076 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074180483 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077357795 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073112075 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073317505 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069535284 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070423689 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06873072 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069592957 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07162509 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070657464 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075222065 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077063 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069444259 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080958039 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079588465 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072043386 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067067484 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069472942 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069513875 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065511276 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071364352 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06900258 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068667148 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.069028203 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069577335 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.07158214 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075846757 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071807004 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070682224 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070358071 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06450171 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073343164 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072820727 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071478688 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066987333 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070590148 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070760997 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07464524 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0738546 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068230921 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07199388 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072030494 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071251165 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064712747 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076843035 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069434176 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071650693 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06904252 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070654435 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070209764 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074082228 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07437178 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070958222 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072828164 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.0729287 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070997363 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066311941 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066745533 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074523352 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066783122 seconds)
  done (took 44.935097207 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108920229 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068265681 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066800827 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066662508 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078075004 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067562368 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065952263 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066786559 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066881943 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069079309 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066304023 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065781878 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074551164 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081414437 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077278324 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070355404 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065766427 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066997581 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066748882 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066832772 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074216979 seconds)
  done (took 2.873782686 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078995121 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081372188 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07882178 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085972074 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074901276 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074286215 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079365315 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074147 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082489711 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076789972 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083142046 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07427876 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077003153 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07666488 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076739133 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074563426 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085122373 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074970408 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074837048 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079612821 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074619468 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078979346 seconds)
  done (took 3.047286253 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.073706049 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070875493 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.0727539 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066371663 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069723051 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065340735 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073878645 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068148938 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07351393 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06954464 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069256788 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069245417 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072060537 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065033892 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070857782 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067925586 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112309898 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073761 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070067345 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071337863 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065454583 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072098975 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065578281 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066033157 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069285069 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.074078279 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070793401 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068298713 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070366412 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069667132 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070828421 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068188373 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072337158 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070987586 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069620202 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070168122 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.07032445 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070148409 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066075511 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068429389 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070993223 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066456052 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070497449 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071872029 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068002823 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068273181 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072015145 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069997986 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064987438 seconds)
  done (took 4.791438849 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085345852 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.115216529 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071211958 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094603288 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08382019 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076830715 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074154617 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094815209 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.0672373 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068434685 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085699749 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082770759 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069661842 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074423722 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073788564 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069496181 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070164673 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068634023 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073185236 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068736335 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073205311 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076773557 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083982592 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081877893 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073472056 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068667972 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068947086 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073609294 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081539531 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073531467 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074256548 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074932915 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084357669 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075001778 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068364909 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.07226439 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085368608 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070416013 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071789051 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067193895 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071915911 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073564791 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076354903 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.086008967 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069857193 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074771465 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.07003573 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066913226 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082021179 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072091867 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077241926 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08321 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073464601 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069362218 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073516261 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083900796 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069241581 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067712943 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072564105 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081264094 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067371209 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073784596 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082814314 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071919492 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076404483 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083389931 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074622858 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073180934 seconds)
  done (took 6.644901535 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081436994 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099847201 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087769091 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086924965 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080383747 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079864273 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079589613 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079856402 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080796647 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084153902 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079777049 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120987272 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.075397134 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081835337 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079675158 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080255464 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080712711 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079823869 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079660897 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080067807 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079640311 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087362873 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079652923 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086817634 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092051928 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075037 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088723807 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079521181 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087734613 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079822362 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083126316 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.080352947 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079518541 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087134371 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083239782 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07919435 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069533992 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079260508 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07978224 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079372484 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075280265 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086804098 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079425703 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075615434 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080468736 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079487766 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087152702 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083472768 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081845528 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084102329 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079608497 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08781438 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079324474 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079664806 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087322352 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089497852 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086529612 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087249864 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079748175 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086814151 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087524509 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090136646 seconds)
  done (took 6.504941757 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088702324 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07850434 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085383395 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.0659969 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06810052 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07588266 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068625145 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068065205 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078061503 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077783673 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079871753 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076024679 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078021082 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080173682 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07540495 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0788994 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075597814 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075771572 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077695465 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075393735 seconds)
  done (took 2.883917057 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079400071 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08751569 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070814939 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075560959 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073828206 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075739254 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072483409 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073118568 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07078838 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073418599 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079813491 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079723695 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071494064 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075647602 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079680332 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075218319 seconds)
  done (took 2.561615585 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.090634533 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.078408762 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083031065 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070625762 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.0703038 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066728884 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069610095 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065066994 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066034028 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082654994 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069552577 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.08039814 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069572857 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068768361 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066179488 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075084074 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065794412 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067004412 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069744639 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08313749 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073424383 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068516219 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073088983 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069454892 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071751095 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074113024 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068564595 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070097677 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066511157 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069597509 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073231772 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073126843 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066770693 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067371548 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06854774 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067253437 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069511538 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.07045725 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07569663 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069635967 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068523927 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071736411 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070147859 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070653058 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066554373 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070257399 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065867921 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071799291 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067086423 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.07248495 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069608133 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071892382 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070268604 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076911338 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073060001 seconds)
  done (took 5.27104002 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08598814 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073858297 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066332076 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068313135 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073035799 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071513271 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073402372 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07167747 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071062701 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068531362 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071388819 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072697968 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071004287 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074012517 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07152034 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073541415 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065491614 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070852023 seconds)
  done (took 2.656767456 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07771997 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070191596 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076913724 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070051509 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069848307 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073317604 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06550471 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068580746 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068558607 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069735444 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07009948 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072291041 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070589604 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071952799 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069819758 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069981732 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072934611 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068542489 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069828819 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065861244 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072558197 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068460148 seconds)
  done (took 2.908226052 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.101618315 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087304241 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.147629953 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082952117 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089305519 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075871798 seconds)
  done (took 1.942029655 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099177693 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104742737 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070442774 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073092764 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080923532 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074464822 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073823512 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074264059 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082826746 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079424874 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07413598 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082607486 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082372289 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08143625 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080005738 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079506764 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073918489 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074222287 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070080912 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087328365 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073688401 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082131371 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07398542 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074075577 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074235211 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081056787 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082594348 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079426541 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073417677 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082093989 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080256613 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073810388 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082477898 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079580408 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073343254 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082396089 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074207673 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087745775 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080120758 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081795129 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073187092 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079939297 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082713237 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078573737 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083013427 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074017911 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078619163 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074269237 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074083595 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089712042 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08006337 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0814489 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079830935 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082948842 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082196122 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089591052 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080029859 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081933494 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079546814 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079745095 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081512408 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079678648 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081609661 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079899365 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079934922 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082198801 seconds)
  done (took 6.621145229 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111177238 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07079634 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075193691 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079981739 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081215384 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074080385 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074011844 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074481189 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074239308 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071133577 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113002921 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074255251 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081684425 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081425644 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074828386 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073593526 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074205955 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081248426 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0715266 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089805522 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073710938 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081384588 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081153548 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08097775 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079578158 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079533983 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074015346 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074164153 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073755655 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074146156 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07966775 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073964884 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081496073 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070795365 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081071188 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074002381 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073870679 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078314963 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073787626 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079493666 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081685906 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08694065 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073932191 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073554385 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079220772 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073898953 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074696101 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07142406 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074283865 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071013025 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079261673 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079532985 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079482937 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080990446 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074095996 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073802736 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073878093 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073903181 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074172121 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079969969 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081474347 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073767823 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08975423 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074638526 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074369071 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081923523 seconds)
  done (took 6.520682922 seconds)
done (took 135.093758132 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.196862524 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175815655 seconds)
  done (took 1.721808039 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075666855 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104057858 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082610062 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132620598 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070673383 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10528936 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103417069 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082125788 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069982337 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070581496 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070188008 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072306764 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135969537 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069986257 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070369183 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072760051 seconds)
  done (took 2.753968464 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107072132 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169258585 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10674049 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069297536 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10417087 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076919976 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068816495 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079217698 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075286137 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069068694 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077152725 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074493267 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069186516 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074416404 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074479941 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076607084 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069424861 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076735193 seconds)
  done (took 2.886721314 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107051998 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.096475924 seconds)
  done (took 1.57717792 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.166905391 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139025772 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209677493 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.361058929 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169635075 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.154664514 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.15782458 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.148551954 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121362722 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.143630143 seconds)
  done (took 3.139189615 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.106581151 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.160054898 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280090206 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123589545 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077428716 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097868433 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125007831 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082421159 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084249391 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084241454 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084229933 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080502549 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104584616 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076863103 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078852412 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080530203 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107882972 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07750817 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079742533 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07981831 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105344011 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069876507 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078280223 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077199516 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080978882 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082163767 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07023649 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070102055 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080327482 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078754968 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080172686 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09642462 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081824984 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110944707 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075267505 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.112383353 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080475364 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077724067 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079587322 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077812065 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082178349 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082248625 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077668847 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081429597 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070036233 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081290182 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069926378 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069816938 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081768576 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071748047 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081704333 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080518679 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.111279468 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071327443 seconds)
  done (took 6.245230258 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111090475 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113089471 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07496256 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.121293559 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109636414 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076328472 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110131542 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103150891 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110390819 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074265598 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072546396 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074154003 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085625999 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.087077535 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.122042881 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113582958 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077759049 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07489711 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112396624 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111984052 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072565 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104059591 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09753835 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110527898 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071602646 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074350742 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072109312 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074321895 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080469022 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082305237 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073414812 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084032592 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088862133 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081931193 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071244475 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071987432 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072810499 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.084186416 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084101912 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082986393 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081494098 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072519175 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072349516 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074368852 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07484565 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073428666 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083322056 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084623694 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08329559 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074149526 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074212916 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075266058 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07399133 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084178169 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082281364 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.085414365 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084597015 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072780654 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072884698 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076541327 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084638393 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08376726 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083868379 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074132902 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083296378 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07238694 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084549171 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089058466 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072885408 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074170231 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072467166 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073996321 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073721004 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.0820976 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.082124599 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073887834 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073796611 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072996195 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084473136 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082619263 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072690836 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08157605 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072304149 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073080596 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074063148 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073967385 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081941183 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.084400578 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073793765 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072009334 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072689108 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072861773 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071720776 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07976696 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082589922 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081969497 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081741457 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072878145 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081742232 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081545059 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073668878 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081967094 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.201083349 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075541037 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074655223 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082538646 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081684496 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085107711 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073830034 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073477827 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082673866 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085423897 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07280162 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082063963 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085353047 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.083594292 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07249746 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085829969 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072666779 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083205674 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073940774 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083342794 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072972123 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084365477 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072980583 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072160368 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073319825 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.084680311 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074708679 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073029754 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074792694 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074581315 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083690486 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086271083 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074623481 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083310904 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.083073438 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074685776 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083036731 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073221157 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083359489 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074305327 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074081852 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071430289 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085916434 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073354939 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072667383 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073803556 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083903832 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072008606 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084619271 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081551088 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071590314 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085766593 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084446884 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081196445 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083698051 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075151492 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072553301 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0721496 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074148177 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082978105 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083264308 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073969614 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072798894 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081710549 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.084522662 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071463804 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081960708 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082496926 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082775082 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072833518 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073994037 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084950947 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084722008 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.082429772 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.082530221 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082954393 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072844861 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081780242 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082433985 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072450223 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088336806 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072497254 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.087349314 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082905215 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080994859 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083085422 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.084726173 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.084701407 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084990981 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.087208965 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071967183 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071696959 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082930061 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071829602 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073187912 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080756021 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072920828 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073076444 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08602643 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072081287 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082392804 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071858773 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082156164 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070529157 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073356885 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.219272829 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073402395 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074914743 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084222687 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07436601 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082659266 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086283469 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.083023049 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073167826 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074649466 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083846471 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083746766 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072209063 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072566936 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07526083 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.08213049 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081515777 seconds)
  done (took 19.657300117 seconds)
done (took 39.356030356 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215616514 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158819693 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179701167 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.122953113 seconds)
  done (took 2.153010924 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.124937721 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.110351768 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.098292379 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068890839 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103875701 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069050927 seconds)
  done (took 1.984537932 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.325198875 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217117379 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.193910222 seconds)
  done (took 2.141394683 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.221805256 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.2009417 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.458581883 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284902172 seconds)
  done (took 2.694347417 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150508381 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093050909 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071245627 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089039882 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137794357 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.166827029 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.105605451 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130161069 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083009543 seconds)
  done (took 2.493453887 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.154409912 seconds)
done (took 13.02553909 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.103001465 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.26609997 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.131038116 seconds)
    (4/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.24827224 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.208736385 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171513786 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073951928 seconds)
    (8/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.084123558 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.118090518 seconds)
    (10/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.0802236 seconds)
    (11/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.209062662 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.076687443 seconds)
    (13/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.09493404 seconds)
    (14/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067396918 seconds)
    (15/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.214308696 seconds)
    (16/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07407528 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083227847 seconds)
    (18/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.080868439 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.078523859 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078693361 seconds)
    (21/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.151675869 seconds)
    (22/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.200703501 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.096099375 seconds)
    (24/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.082131214 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.184222751 seconds)
    (26/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.172440331 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.07800555 seconds)
    (28/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.113682214 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.12834727 seconds)
    (30/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.088087452 seconds)
    (31/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07849355 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097476357 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.136284549 seconds)
    (34/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.086164236 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133592509 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078637662 seconds)
    (37/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.085789592 seconds)
    (38/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077940898 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.096555645 seconds)
    (40/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.080508837 seconds)
    (41/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067707623 seconds)
    (42/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.195461204 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.094714136 seconds)
    (44/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.251365669 seconds)
    (45/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.199692764 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.149510264 seconds)
    (47/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076269553 seconds)
    (48/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.108903334 seconds)
    (49/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.120335571 seconds)
    (50/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.176183916 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076717139 seconds)
    (52/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.121153185 seconds)
    (53/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.07621561 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.093621735 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.186027773 seconds)
    (56/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.193172428 seconds)
    (57/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.173251184 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.198743149 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.156755524 seconds)
    (60/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05505628 seconds)
    (61/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.081006651 seconds)
    (62/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071605753 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077689339 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077706978 seconds)
    (65/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.107551914 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.082794024 seconds)
    (67/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.076016717 seconds)
    (68/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071367203 seconds)
    (69/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.172537595 seconds)
    (70/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.118072557 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075908004 seconds)
    (72/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.105515397 seconds)
    (73/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071693925 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071590529 seconds)
    (75/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077797003 seconds)
    (76/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081945856 seconds)
    (77/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078002756 seconds)
    (78/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.163654583 seconds)
    (79/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.157320539 seconds)
    (80/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168496946 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.338416947 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068866834 seconds)
    (83/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.160022519 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.097232854 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.094513068 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.154928665 seconds)
    (87/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.241903884 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.226206271 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055175975 seconds)
    (90/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.206657075 seconds)
    (91/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.173958295 seconds)
    (92/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069257869 seconds)
    (93/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.162263481 seconds)
    (94/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094529836 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.147159456 seconds)
    (96/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.0793726 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06940552 seconds)
    (98/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07697094 seconds)
    (99/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.224316664 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.097673327 seconds)
    (101/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.163357521 seconds)
    (102/309) benchmarking ("sort", Int64, false)...
    done (took 0.070045807 seconds)
    (103/309) benchmarking ("sort", Float32, false)...
    done (took 0.139160013 seconds)
    (104/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055569952 seconds)
    (105/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.111123769 seconds)
    (106/309) benchmarking ("sort", BigInt, false)...
    done (took 0.203230868 seconds)
    (107/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.201774031 seconds)
    (108/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055504609 seconds)
    (109/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.160577237 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.107318165 seconds)
    (111/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.117585292 seconds)
    (112/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054856683 seconds)
    (113/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090906178 seconds)
    (114/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.082038206 seconds)
    (115/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096349552 seconds)
    (116/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.204422471 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.095673876 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.056332625 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.192265332 seconds)
    (120/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05449267 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.076782338 seconds)
    (122/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054797993 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.072360921 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.111627364 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069780801 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09514168 seconds)
    (127/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.202016136 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077812408 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077357377 seconds)
    (130/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08208263 seconds)
    (131/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.162767761 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095606186 seconds)
    (133/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067276757 seconds)
    (134/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072879517 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075877481 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.153163439 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093716233 seconds)
    (138/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054029152 seconds)
    (139/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078493075 seconds)
    (140/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079859936 seconds)
    (141/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055301983 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093145083 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094483813 seconds)
    (144/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.160289482 seconds)
    (145/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079670163 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097304419 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054326924 seconds)
    (148/309) benchmarking ("sort", Bool, false)...
    done (took 0.15465385 seconds)
    (149/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077878825 seconds)
    (150/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066977952 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068172228 seconds)
    (152/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077514923 seconds)
    (153/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.071218799 seconds)
    (154/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.117350814 seconds)
    (155/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054390699 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055640517 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075974804 seconds)
    (158/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07056805 seconds)
    (159/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07734027 seconds)
    (160/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076008765 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055728675 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069801099 seconds)
    (163/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055069802 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055463546 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.093601479 seconds)
    (166/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076879877 seconds)
    (167/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056798848 seconds)
    (168/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.070464714 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148056677 seconds)
    (170/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.055021031 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092914393 seconds)
    (172/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078427304 seconds)
    (173/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06939389 seconds)
    (174/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06935129 seconds)
    (175/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077152222 seconds)
    (176/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096971857 seconds)
    (177/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074823684 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054443132 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069049405 seconds)
    (180/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053839145 seconds)
    (181/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054420437 seconds)
    (182/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067287355 seconds)
    (183/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.114997239 seconds)
    (184/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077435929 seconds)
    (185/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.202430379 seconds)
    (186/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054197487 seconds)
    (187/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076420098 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143859392 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096237941 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069182144 seconds)
    (191/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.067626886 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.117769321 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078195796 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056457931 seconds)
    (195/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065109997 seconds)
    (196/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.259343037 seconds)
    (197/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07358765 seconds)
    (198/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.05582187 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.184330477 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.056114146 seconds)
    (201/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.05582835 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.124861389 seconds)
    (203/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.077779846 seconds)
    (204/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078071884 seconds)
    (205/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.097461325 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.080067952 seconds)
    (207/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069043177 seconds)
    (208/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069961114 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07934882 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070448388 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070110349 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096754126 seconds)
    (213/309) benchmarking ("sort", Float64, false)...
    done (took 0.137742854 seconds)
    (214/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077262738 seconds)
    (215/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076579616 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069681884 seconds)
    (217/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094870388 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054592276 seconds)
    (219/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161942146 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068529703 seconds)
    (221/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.056062692 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.070155012 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055467372 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.194393724 seconds)
    (225/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.169393352 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09214142 seconds)
    (227/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083822854 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077408517 seconds)
    (229/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.187489903 seconds)
    (230/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054448794 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.084457226 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070574249 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119731281 seconds)
    (234/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055823677 seconds)
    (235/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076850433 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075836071 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070930205 seconds)
    (238/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083773721 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069695386 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068161711 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.0551077 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133876008 seconds)
    (243/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.077473377 seconds)
    (244/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05409219 seconds)
    (245/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054037904 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069765076 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069871446 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146444989 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054648794 seconds)
    (250/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084428574 seconds)
    (251/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07799172 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.130021518 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068849508 seconds)
    (254/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06959809 seconds)
    (255/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072944679 seconds)
    (256/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055099488 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138088809 seconds)
    (258/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056796621 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.126460239 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069195806 seconds)
    (261/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.152052014 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071562757 seconds)
    (263/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054684094 seconds)
    (264/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054248031 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068392133 seconds)
    (266/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067364448 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082413511 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085841033 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07660579 seconds)
    (270/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055597567 seconds)
    (271/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.188146725 seconds)
    (272/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07514791 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078433315 seconds)
    (274/309) benchmarking ("sort", Int8, false)...
    done (took 0.149496777 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054439868 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09268491 seconds)
    (277/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078715038 seconds)
    (278/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.075747965 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.102192696 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055075248 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069863494 seconds)
    (282/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071889959 seconds)
    (283/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077265149 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069454151 seconds)
    (285/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.057857181 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083404919 seconds)
    (287/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074257209 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.103379099 seconds)
    (289/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.055028186 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077877821 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068470547 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070877465 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068264183 seconds)
    (294/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055538791 seconds)
    (295/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.056509691 seconds)
    (296/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.055295645 seconds)
    (297/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07072148 seconds)
    (298/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084742727 seconds)
    (299/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076827321 seconds)
    (300/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077965943 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09788942 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075305172 seconds)
    (303/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070191282 seconds)
    (304/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053770018 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069063742 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092263634 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074609416 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067602797 seconds)
    (309/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068447054 seconds)
  done (took 32.5979916 seconds)
done (took 34.018015929 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09302959 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097248297 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080008081 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09775537 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085151156 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.080276849 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077446801 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082880316 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085464008 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086012725 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082388186 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058205765 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079008679 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079220764 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079695178 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096234766 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083519424 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077509729 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077749698 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068363936 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077821522 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069797913 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071565868 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058204758 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.083004227 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075635828 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07629992 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077802645 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06927034 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069734412 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073073407 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078020082 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06976951 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082738457 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076269362 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077020362 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079501653 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080889603 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071082825 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069531646 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078528364 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069653547 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077761442 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078447078 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076183031 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075495882 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077008684 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081405821 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095380709 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071488752 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.079139398 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080668668 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079470404 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077407199 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073611957 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077513631 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074555553 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095052398 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078164727 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072116924 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078220116 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078266415 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07561517 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077423635 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07718741 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079791945 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07981035 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075680187 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079084402 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076570583 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06917296 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077288254 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072986675 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069389081 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080293699 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082587252 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067994192 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075754048 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077874285 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076174057 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068989376 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071411416 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073370937 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076176788 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071026514 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057420624 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074227247 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076096563 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068223795 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077325836 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076735794 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076631928 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07074325 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.08024164 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068308223 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074422211 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070057291 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069366312 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071294981 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074156431 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069208869 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07138379 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079519456 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071567209 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076596713 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083088575 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069131605 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076100173 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06836876 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068271036 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082884341 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079493675 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069325324 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071141977 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068383583 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076668743 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068301097 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069099736 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068693537 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068438259 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074607174 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068178641 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070519082 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075823547 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081685554 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067970459 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.0717467 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070812124 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068173581 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074710015 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.203815925 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069931468 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072346608 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066203717 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072417553 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070018807 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077317967 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071695819 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07819478 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072104379 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078643341 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075131962 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075087507 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074699838 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067928188 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062956602 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071663606 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071810836 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070726115 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069187312 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070634251 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069203906 seconds)
done (took 13.116880926 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072686162 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145312511 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101377337 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100971567 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089820434 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070423626 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079996126 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103918614 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07202721 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1058176 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092510847 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090204108 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.118833379 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068396834 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070632564 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07428179 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071395726 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085079844 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103822159 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.09100217 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119844069 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068908315 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096630632 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094223752 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092127896 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.098443295 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070279862 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074115817 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073420498 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.106874072 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093381338 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073690363 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070447445 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102630307 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098176484 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087843086 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069901271 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08739276 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.07074893 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06964066 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071448756 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103808213 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084223767 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084800809 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074368693 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081061469 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071289904 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088678905 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094236375 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083028599 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089803187 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105645953 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072930495 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088343857 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067952948 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090294282 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080880106 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072182437 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070765043 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078428776 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069791385 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073511725 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085586857 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084489675 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07524633 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.089193099 seconds)
  done (took 7.135234386 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.091548981 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096632908 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087171701 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088134842 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06926665 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070217313 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070155413 seconds)
  done (took 2.086930182 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072952428 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092971883 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094398165 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093014493 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085099605 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093087779 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080203553 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.0701043 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093033186 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071754154 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092283136 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105530926 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074316635 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077830442 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095425617 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070356459 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095069404 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070888141 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073783795 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095135902 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073223324 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101135299 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073891621 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070725149 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085055163 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070576825 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119677398 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074923051 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07250192 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073359699 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068105377 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.11225419 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084512914 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078379537 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070791204 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08543756 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085240289 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068949716 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087918517 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079549602 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08489024 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070754216 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071679117 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068876331 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075411208 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081522413 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071779762 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071244428 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074044709 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091184502 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071176799 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084739407 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073638966 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07704351 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072885474 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077286168 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081847835 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071802072 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092005778 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072157452 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088268343 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.0871914 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084944236 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087491363 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072727085 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085127236 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085229357 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.0739154 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072503232 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074483675 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087979739 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068833112 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071920714 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081277666 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07355465 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094097984 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094748977 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072238214 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084586492 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071000978 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071079578 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071002373 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09571626 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076013408 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070398358 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07508596 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074252016 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068820922 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069510065 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074957012 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068609444 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072291665 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073918271 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073807293 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073364672 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087476999 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072864774 seconds)
  done (took 9.253653589 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073561982 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071730564 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072426359 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071133083 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072472221 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071821088 seconds)
  done (took 1.973232897 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.1001222 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073206172 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084871037 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075201928 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109917066 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090866298 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091402351 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082062577 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088179437 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082756306 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091518418 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092339123 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.0962447 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076483657 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091180527 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075409624 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091581955 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07865907 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082546115 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076720882 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090444413 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076210778 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076755033 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085754337 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079918393 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075369875 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082116836 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083496341 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082919204 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082474346 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076194001 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079834999 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074677309 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081802731 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091183442 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074936174 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075838149 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.08117439 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075562521 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079672278 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092247451 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076746949 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078295111 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081188603 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081993614 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074443557 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081102419 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08359749 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091040953 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080736474 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081497492 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074894396 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080045076 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081518367 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074358331 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082045064 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081156516 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091358444 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076266117 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074347489 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072536895 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080460572 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.082334963 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080882867 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084882145 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081763536 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074943867 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076295049 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076714403 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075857352 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081430284 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072451977 seconds)
  done (took 7.413639338 seconds)
done (took 29.361410589 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542439075 seconds)
  done (took 2.044792212 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.643768445 seconds)
  done (took 2.171566036 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.482721612 seconds)
  done (took 8.008909126 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.417909421 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.536329457 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.763009978 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.14056195 seconds)
  done (took 3.420532959 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.732674822 seconds)
  done (took 2.270802253 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238244285 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222700083 seconds)
  done (took 2.008825095 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.393028864 seconds)
  done (took 1.91978528 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.16493427 seconds)
  done (took 2.69559451 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.275107366 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18928388 seconds)
  done (took 1.995886709 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.497368973 seconds)
  done (took 2.027144535 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.91013806 seconds)
  done (took 6.441820979 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224830238 seconds)
  done (took 1.801123408 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.250966905 seconds)
  done (took 1.784731774 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.761657455 seconds)
  done (took 3.296819331 seconds)
done (took 43.422253508 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.089376177 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.091057597 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089636604 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085757969 seconds)
  done (took 1.875908698 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083402061 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078468998 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081680134 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077074605 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081591239 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076892083 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078443922 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080061071 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077049682 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077421459 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077436363 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076819028 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079500521 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078579619 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075980747 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079267093 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080552424 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077085739 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079990496 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077250012 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074907634 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080066927 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079629088 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076522434 seconds)
  done (took 3.423874571 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083793866 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077442213 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080410186 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07743522 seconds)
  done (took 1.862008449 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.084956011 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09687735 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094187926 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083628469 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097908362 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091556466 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074100603 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073865808 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075710619 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082196747 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.07238148 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10185587 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.094054089 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.08286236 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084845613 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070359002 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072837227 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092946122 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083050522 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083406452 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074860537 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082669188 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.0728057 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093768706 seconds)
  done (took 3.555789938 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.095172036 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109446445 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085286452 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093971977 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095865859 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069370869 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.092519514 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095892718 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132571563 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069661606 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075451426 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070019668 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077792682 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070080442 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085842091 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113477032 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117336772 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073154849 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10266467 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070465772 seconds)
  done (took 3.343157107 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079610941 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073830186 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071835819 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069759312 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082104795 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077222608 seconds)
  done (took 2.005915778 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073547972 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073394478 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071604656 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072040185 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076610214 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071464869 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070852674 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072013449 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.07261207 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072038823 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071187309 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071173534 seconds)
  done (took 2.413721536 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.209962635 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072479807 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073915447 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070183534 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074840749 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070668031 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086057955 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072343924 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097303951 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071180706 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071641269 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073322752 seconds)
  done (took 2.590957045 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218854458 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083978909 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247148487 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157949189 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116300846 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120746208 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118490163 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119392698 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147209798 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105511578 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172768145 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173240739 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113242629 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14357349 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094401817 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.104214755 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160514894 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169485931 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112063685 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171726531 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15195932 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131851979 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158391202 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106902087 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110548625 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127629978 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076169182 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085211053 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176124213 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138434329 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149691457 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116517323 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096784404 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182644903 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178436013 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1464589 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152961951 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089098366 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10775736 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138521841 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206794121 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097092822 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171527788 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259480367 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086182893 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138904236 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123408968 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124629427 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.110360282 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0953322 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151249623 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190088311 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.144403283 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093019837 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131207792 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119024194 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119341585 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118452328 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188710949 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168653135 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135210889 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.077134373 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114176926 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158822296 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138675672 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113642988 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.130851744 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096364804 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140523263 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160469678 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128101152 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149739411 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.123523991 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093905889 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123873134 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146020329 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133228658 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167127333 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129756055 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078618974 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129136618 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106897945 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086549925 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.15488923 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079925362 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180271245 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103822178 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110571494 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131066661 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11392464 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114169674 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164908862 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148935481 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105723918 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.213641252 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111355276 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.125972849 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150986187 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092123506 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114068836 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121613189 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.08222995 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142469015 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080924902 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128292699 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079818089 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129643363 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13469064 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082890645 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127029876 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108951733 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105668684 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138911241 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164476968 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093447335 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087083833 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174833663 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127528294 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108382155 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149128152 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16057123 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.1040821 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106362629 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156138784 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184628463 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094450088 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167758147 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112403442 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088460091 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093166094 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128938673 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117030818 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.129814042 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086487742 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122996098 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173804842 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079902657 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100878966 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139460949 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083172903 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085318261 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109990208 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110068675 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100597337 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.10481743 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.107143512 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143695621 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128471023 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110087808 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126492568 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249517299 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177677214 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092761737 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107454497 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10967626 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075494685 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.141143587 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16106697 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084642282 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170901317 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.130299874 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123132599 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123384907 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088531911 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145877729 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083924789 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075058095 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150478245 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114531767 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116202404 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.158728021 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12324114 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.130293142 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.127669316 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137766958 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135459572 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.134783677 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110217264 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092179901 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116509628 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132289428 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077434721 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09513121 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084115444 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110061922 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100843535 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088223455 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146438029 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129015028 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115196842 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116970053 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101865367 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152864077 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081137189 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13379784 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.123964484 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100270811 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.156616813 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15643229 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13633003 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103617976 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141907487 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074648508 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078231866 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092006911 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124483272 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.2324937 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089286458 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12145883 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152594324 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135559849 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142259457 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131060896 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126880201 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162436528 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074793027 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.1249955 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151286182 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126103275 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109481834 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096328376 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104304156 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147712886 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112983817 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190022001 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11833464 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127497857 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158509385 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105887583 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084872529 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107594488 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140533369 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108549413 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147209172 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104367115 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092943008 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113775337 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079640885 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103113376 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132840722 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123951349 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138947551 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120281461 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138635183 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082521507 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120490137 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126552687 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126567663 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068250339 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125240624 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164820743 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099285328 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12223828 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156733706 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083240874 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139935376 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17826896 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.295713449 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091290449 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114037221 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125386595 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133316005 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125864374 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145383335 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111992246 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141632676 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116385747 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090859142 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092220835 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102332168 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109701462 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.100281523 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111622145 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11826202 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.101465626 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137303408 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109064259 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115550453 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121446988 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.105673563 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096203502 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102471532 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182252225 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123131149 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176910448 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104732232 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.150825557 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16841694 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080051764 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083634914 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082488988 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144827201 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089323495 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135430582 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112933541 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123138485 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128434962 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146829684 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100364206 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073222017 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115820998 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138466306 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130856646 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103757079 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108298099 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167559335 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104860165 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083199247 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118227118 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121271132 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107751426 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174677031 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065163527 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108920195 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079571166 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.231586744 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134482592 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159034878 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084937222 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.109307009 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123830239 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1172086 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133234002 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105043297 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114413144 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133178171 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157235982 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133208956 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094574139 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116262421 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1327295 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160594547 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110208726 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102384148 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178902826 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156241744 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.164085037 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092148267 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118693551 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117378801 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111854209 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141370514 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087796329 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167284399 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086821847 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141407391 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108358205 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093315331 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134225149 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.114155969 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092809023 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152503826 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122574271 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087700392 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082371389 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123625263 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124636461 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110604521 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080042226 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143005917 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077812872 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137544725 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164964367 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084882675 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109120752 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100438579 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083249894 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258565537 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108860169 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093015063 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.10381252 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176876515 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090485781 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155676252 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139334521 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117275346 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140722709 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107203354 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.646755677 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082569025 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156486352 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121901496 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178827534 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105470872 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120961477 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114480741 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127760964 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151905012 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108646967 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.192124241 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137819062 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120508643 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083928358 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106669928 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108541236 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092091051 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112688597 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11687951 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120449813 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097360181 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120114741 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128491603 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086560754 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101105786 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15982659 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121741906 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149272806 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146093917 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090334912 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121854007 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141152355 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083995113 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.125383705 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156691569 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110337474 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104619957 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085721603 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104228758 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310270546 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078358917 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165567741 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125180652 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11411268 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117189493 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116929597 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13601013 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113303456 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126416181 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097764682 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.113315863 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118336717 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086316843 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081145761 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112924731 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115105816 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102620955 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102784018 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102008772 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156562741 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076336973 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103043036 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120491315 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149632434 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17926434 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092637511 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087503963 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123491001 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119188395 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.117911243 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126022431 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083945842 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08670391 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083922691 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.083096241 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113128627 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117599106 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119649081 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115216209 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168145871 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087975218 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.243106549 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100518614 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109917152 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074545934 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083376592 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101298566 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103031262 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112379725 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115555052 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164807527 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100067728 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094066329 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094551858 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077923041 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086981612 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131721528 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112641412 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26939662 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108075875 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.0682473 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113439696 seconds)
  done (took 61.546480173 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.114429647 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087375512 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101610033 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148936345 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126988315 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205912191 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158050313 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194440547 seconds)
  done (took 2.792567381 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073242482 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100992179 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108015034 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088480542 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071308944 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072780144 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.237905523 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086736658 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071336159 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101646396 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082913338 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074115913 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.445476406 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070400001 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072045476 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065749675 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072200532 seconds)
  done (took 3.548835777 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.418751686 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621906933 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.365483502 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.081380612 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.467053281 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093315743 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.149778938 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141357723 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082212779 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541555772 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.417282165 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135923048 seconds)
  done (took 18.181665544 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085952434 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078899412 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094243724 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093848149 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082888442 seconds)
  done (took 2.095231363 seconds)
done (took 110.822396217 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.086660226 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.617775588 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056709068 seconds)
  done (took 2.362134242 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090624605 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089586134 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089998779 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087897964 seconds)
  done (took 2.022564821 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.080527148 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.0810335 seconds)
  done (took 1.818125919 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.242318534 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173592618 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101962771 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.091554569 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083522374 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084437788 seconds)
  done (took 1.924303605 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.079454525 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080238865 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077054549 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080498577 seconds)
  done (took 1.976433646 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.083370717 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055858123 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058032636 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061045968 seconds)
  done (took 1.919058415 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094928748 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084085171 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083627214 seconds)
  done (took 1.923963885 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109264623 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091139806 seconds)
  done (took 1.860906969 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.089577433 seconds)
  done (took 1.752313963 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100883937 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.106010333 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136555317 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.116325979 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.145645393 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115529034 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089238812 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090740971 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.08130702 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090961525 seconds)
  done (took 2.735016487 seconds)
done (took 22.555214141 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083282792 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.380599505 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364140831 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094512051 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673402141 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360839255 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994550003 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098212844 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120820762 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07243148 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089970393 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653312821 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.984879794 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.334363974 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.973670665 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.334594514 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656080602 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072602 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072988259 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073617112 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.9794351 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073052679 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072404637 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073191242 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653010151 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378312818 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072669017 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.334700112 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073017905 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074311574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359873457 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072486054 seconds)
  done (took 16.349054612 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076906963 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127127053 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077635535 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090073844 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075272255 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073586104 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075801233 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073701654 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126991509 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089929982 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090482182 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071938308 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076167553 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073192901 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092839854 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072734506 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073229509 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072983553 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072492143 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073363574 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092232604 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072427946 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073210308 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073261122 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073112662 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085312048 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073014698 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072547042 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072867263 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07526523 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075755183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07351753 seconds)
  done (took 4.240121747 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122209328 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131052223 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0785626 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109858345 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11819318 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075305456 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151305376 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099044418 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133854283 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072537636 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090993024 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0729839 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108534992 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073606513 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093102446 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072949353 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074383538 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073115676 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072828867 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072873717 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092663408 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07342794 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073079433 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073645192 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073349074 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088064667 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07319084 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072807597 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073221771 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075284518 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075904572 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073097079 seconds)
  done (took 4.491207859 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078177502 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07993009 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08891436 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089142384 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074135253 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077359706 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077828784 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074487617 seconds)
  done (took 2.322287418 seconds)
done (took 29.067954302 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084931477 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073787743 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.077026626 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086933159 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077943212 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082438741 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070667898 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.080721003 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077049116 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078185194 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079669049 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071738694 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076052268 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071634634 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079380439 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.072295701 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084173109 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077291989 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083625136 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083691977 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073928293 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07724462 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078999002 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083925918 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083896964 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083209042 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081823026 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077354281 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073116399 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074920506 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081315059 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088970105 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072785105 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083978783 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071693078 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071728894 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076330067 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072204881 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084159758 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081577212 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074018556 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081523568 seconds)
  done (took 4.955103507 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093444245 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.098179573 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089632759 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065539791 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071228594 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.070104381 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093857014 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063992357 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063499159 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093727606 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.060075286 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063715528 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067888975 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057495378 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.065174793 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061026916 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066527054 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060208296 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.064491908 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063879923 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094996013 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.058133675 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082894995 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068179754 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060377932 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066352534 seconds)
  done (took 3.552970242 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079716372 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089841193 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.106329504 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137443446 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11010541 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083870513 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084785348 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.100905896 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094289682 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071569357 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075559891 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098316897 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094827658 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079833721 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072189376 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091293532 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088670258 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074022801 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078330083 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100240726 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.093011853 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090864123 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101331173 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088302649 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071327224 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074918146 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075779729 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086203901 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074766796 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081888016 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075138175 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076202236 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073906482 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083812562 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074740242 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073490261 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.100541242 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082389991 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083784244 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072555044 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080517216 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073103309 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09813377 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133268563 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071122704 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07879274 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075957389 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082105288 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071435413 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092850671 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084152587 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071549737 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075105779 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071190096 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071934715 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075856509 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073821234 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074133975 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081112389 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077910154 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097556646 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077025507 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088624125 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072290404 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080304744 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070989358 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072775383 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071228863 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101208756 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073789767 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116936406 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072553022 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072892163 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081484218 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080426554 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07876726 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072098926 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088847875 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.084324545 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075911112 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081028902 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07575453 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075088828 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096454797 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074603533 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073774646 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072860158 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078208485 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075165734 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073670488 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086074763 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071642232 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074929045 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08944281 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071726086 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073573784 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077950013 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076724959 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071749378 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083627149 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076359013 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073179387 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082301378 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072577404 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075302419 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085449577 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078738853 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.07100741 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076495276 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077504449 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072960995 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073781807 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074932637 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073807293 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081167844 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079265421 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077075453 seconds)
  done (took 11.23636045 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.176612973 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.164524728 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075714012 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.155951979 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081602027 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084129912 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.158367066 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100304942 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072246456 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072931894 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073058874 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.116130011 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.11231125 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122776325 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083851787 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072280575 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089345042 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.121251043 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.161592449 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.155085813 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08937938 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082011329 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074588345 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073587326 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075126261 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08347578 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09070778 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.084191416 seconds)
  done (took 4.624256612 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.088152002 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.112486674 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080378071 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095981129 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095540935 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072436315 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075448955 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074952694 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086921568 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082750849 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072035214 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077793071 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079460294 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075677031 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073991921 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079990789 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079743799 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074094322 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075738434 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077982902 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083814569 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097722777 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076129624 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.0714925 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078092219 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072045296 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067561596 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089268703 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073659256 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.101225148 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070338422 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078084352 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087870452 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073794547 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072666195 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072165168 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071996116 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072545318 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074265435 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070825957 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071091475 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06187682 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071422597 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083828655 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07945757 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.06108364 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077472388 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077559405 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078122506 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069697336 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07595655 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075645887 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075092784 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080338705 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076234942 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.077822135 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073351788 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.078708084 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081950944 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072507245 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069678768 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070520703 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077026897 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069572105 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081923534 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076892342 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070768216 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072136103 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07476143 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079560927 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072225201 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076906829 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070028997 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074229523 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077532706 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074045286 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073649348 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070395653 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072853803 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073050361 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059581513 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072385977 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058029689 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075804416 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070681238 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071397888 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073416644 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077834287 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08447337 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073880052 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078291526 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074150978 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071942966 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07643399 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064824378 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075184848 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084203995 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087413955 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072512945 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070001122 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086678234 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077650016 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071635494 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060519497 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076661847 seconds)
  done (took 9.7215349 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.097972511 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074950744 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08922644 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095889486 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092777497 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079797727 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082758965 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074452958 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089385093 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079140126 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082418608 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072655091 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083385525 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.083036559 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074684993 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083506848 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077027795 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089785093 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088575534 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.072519234 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082356187 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085895618 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.096264027 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087113588 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085816112 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087756845 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096174823 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082895204 seconds)
  done (took 4.096262637 seconds)
done (took 39.860327089 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.774372848 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.929473583 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.75811473 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.099595833 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.83953137 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.935503781 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.946252781 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.755155234 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.96445194 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.793504479 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.051468119 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.939784871 seconds)
done (took 65.477209818 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.785217771 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.89864635 seconds)
    (2/2) benchmarking "String"...
    done (took 1.994875205 seconds)
  done (took 5.585711931 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.091433834 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.33272876 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.004904974 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.755563876 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.760404103 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.073104315 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.572311485 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.291143121 seconds)
  done (took 30.481824567 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.910177215 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.973473814 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.451151704 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.477612523 seconds)
  done (took 15.553530664 seconds)
done (took 63.277880186 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.760812625 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.791297618 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.755817834 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.737649883 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.817136526 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.772396165 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.26533906 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.779554739 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.757072629 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.745624951 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.758765534 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.239690002 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.772152736 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.138465769 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.761241232 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.760704682 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.787745694 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.288335018 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.917918929 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.776405628 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.770525931 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.792048092 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.761339215 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.768460382 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.797379835 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.758351217 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.157510604 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.760116896 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.59032439 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.759736695 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.811416687 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.344443191 seconds)
  done (took 204.145621247 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.75952962 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.807463318 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.873188805 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.806075554 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.274494943 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.943431041 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.863823981 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.29895153 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.762941294 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.768743423 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.972407756 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.761641932 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.006909047 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.708833599 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.790708471 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.840146684 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.0281303 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.012722688 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.793407321 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.909670808 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.770895893 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.875293567 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.804047777 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.957235039 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.781427281 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.867883598 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.769252334 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.792099617 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.949118479 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.990321712 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.806407929 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.773581559 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.966888225 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.637196124 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.776842875 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.783003635 seconds)
  done (took 169.979562467 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.137343555 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.762694972 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.761614772 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.763029097 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.767866033 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.762798206 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.883494382 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.884279082 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.365555554 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.24759722 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.763048815 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.76056704 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.812913179 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.546045723 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.759317353 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.761521249 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.83065025 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.773336322 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.760509491 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.774357361 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.78737945 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.760923148 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.762714654 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.887856252 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.772382117 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.764048285 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.771073134 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.761587614 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.766957429 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.133714227 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.761040375 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.767062506 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.006256915 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.759726327 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.765107295 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.59738841 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.273578363 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.843585157 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.763371793 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.769378006 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.763712897 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.981344383 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.760654305 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.763829283 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.764847909 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.89640042 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.764568013 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.885235641 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.765096036 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.237573245 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.760559664 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.764151947 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.400326378 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.326384937 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.761668347 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.763621223 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.767101217 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.762890256 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.765069906 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.769691404 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.363773493 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.836867075 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.765957434 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.767787648 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.770218498 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.765464861 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.83981007 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.76245909 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.908631356 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.817800961 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.984196081 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.886124993 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.765850881 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.832368529 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.856804729 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.76292124 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.764451692 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.763620359 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.762801241 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.844634721 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.762640038 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.886676417 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.770595755 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.765482081 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.817261368 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.836267468 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.76313465 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.604853452 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.762809292 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.765045574 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.021020847 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.829599559 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.765042304 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.764069021 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.766916105 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.888117649 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.884679554 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.472765636 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.766053022 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.387397995 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.767645205 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.765663283 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.901155504 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.764704908 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.896349233 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.764917041 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.846860391 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.768423522 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.768513734 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.765903924 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.798965406 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.766310461 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.826391083 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.763819545 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.138501378 seconds)
  done (took 399.75733591 seconds)
done (took 777.765381476 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.430502567 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.401877131 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.497428707 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.408715172 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.394029351 seconds)
  done (took 13.830491638 seconds)
done (took 15.528917922 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.856480563 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.860380139 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.789871568 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.858215454 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.787225668 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.856776903 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.83916004 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.790094101 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.825942389 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.789732821 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.826768779 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.789825697 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.777368569 seconds)
  done (took 25.346999641 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.021437792 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.008257087 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.836653543 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.014078038 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.812504379 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.007582533 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.933259811 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.928727625 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.921870491 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.781428744 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.781388425 seconds)
  done (took 22.74890179 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.006872865 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.033730358 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.843739231 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.010205598 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.814934964 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.011150293 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.93260441 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.925121752 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.920951823 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.784041585 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.780720532 seconds)
  done (took 22.766488253 seconds)
done (took 72.561113795 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.776431484 seconds)
  done (took 3.477212711 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.804462015 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.974168305 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.782932948 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.777600692 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.777856092 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.775256336 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.77803191 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.776703131 seconds)
  done (took 16.150302518 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.776005561 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.774871394 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.772928738 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.771500931 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.775104459 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.773304009 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.776813125 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.772953542 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.773571524 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.777447164 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.776359242 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.776997222 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.774029062 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.77669411 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.776526806 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.773336166 seconds)
  done (took 30.100575787 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.776430836 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.774269734 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.773076399 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.774425797 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.777613797 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.774747047 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.774325357 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.775168808 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.773446732 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.773997797 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.773885588 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.772895681 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.776210499 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.774482996 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.775139783 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.776867906 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.77495253 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.775536875 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.779095952 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.776227125 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.774923654 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.774880181 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.773617561 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.777997108 seconds)
  done (took 44.310240439 seconds)
done (took 95.738848866 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.508239612 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.435539785 seconds)
  done (took 9.646026113 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.779774055 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.778711776 seconds)
  done (took 5.315932497 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.778999165 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.779563606 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.777258303 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.777977511 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.777242652 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.77866419 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.778856952 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.776472392 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.779246267 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.779014127 seconds)
  done (took 19.488121281 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.779778075 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.778667893 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.774851131 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.778460528 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.778050608 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.775405415 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.779600001 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.778452607 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.778899808 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.777344202 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.779520402 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.777726998 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.779639479 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.777568994 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.780777898 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.777216219 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.777380501 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.777058142 seconds)
  done (took 33.712263155 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.78070106 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.781022579 seconds)
  done (took 5.267807785 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.778940485 seconds)
    (2/7) benchmarking "second"...
    done (took 1.778356073 seconds)
    (3/7) benchmarking "month"...
    done (took 1.778427053 seconds)
    (4/7) benchmarking "year"...
    done (took 1.777787419 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.777647019 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.777627501 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.779064134 seconds)
  done (took 14.15399595 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.78375912 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.938679066 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.008222576 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.412456831 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.781924239 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.784668195 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.762371997 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.786374639 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.784558749 seconds)
  done (took 19.749729527 seconds)
done (took 109.03667756 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.565618976 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.77549527 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.020698551 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.866901144 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.791269905 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.116229537 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.804386194 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.078095711 seconds)
done (took 42.725921724 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.791966496 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.997473505 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.054709932 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.799946931 seconds)
  done (took 16.558189785 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.762311144 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.321452972 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.819778807 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.44507304 seconds)
  done (took 20.284086114 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.152798031 seconds)
    (2/2) benchmarking "read"...
    done (took 2.127815553 seconds)
  done (took 5.994468096 seconds)
done (took 51.337693498 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.782780079 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.780076004 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.783387227 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.779224563 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.783118978 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.778611484 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.778249338 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.779496632 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.781757446 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.781721424 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.781094026 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.78189344 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.78236245 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783254136 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.782788662 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780643894 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779402077 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782327437 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.778507069 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781217275 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.780985211 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784271043 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.78071621 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.781387101 seconds)
  done (took 44.45723956 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.783355402 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.780539265 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.78279805 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.783268801 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.780620955 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.784169449 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.783959275 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.782232635 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.783635138 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.784222454 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.78109222 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.780540566 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.785725004 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.782374432 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7840508 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.782855135 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.786496219 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781355993 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785544687 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.782921053 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.784189545 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78373898 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.783098375 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786252016 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.783284538 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.783156757 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.785953866 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.784517331 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.786144633 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.783221856 seconds)
  done (took 55.216223864 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.792237208 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.796058208 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.787195356 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.787065897 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.785942661 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.784855668 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.785658024 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.784580364 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.78620853 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.785542811 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.78510183 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.785939386 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.78648776 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.786669922 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.785461568 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.785606425 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.78737553 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.787601734 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.78747554 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.786697893 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.786128589 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.786274089 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.787263232 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.785846879 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.786092421 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.78872534 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.786858567 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.787989761 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.786105572 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.786222609 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.78683206 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.788327524 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.788868465 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.788103825 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.786708555 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.788777563 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.792479268 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.796843606 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.787653006 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.78636815 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.786963476 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.788090126 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.788461545 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.78957 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.788211968 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.788242684 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.788339365 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.787882311 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.78786548 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.789297865 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.78914624 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.789386464 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.789274385 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.788905794 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.790509124 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.789294401 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.788295514 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.789521631 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.789942358 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.788917744 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.78858337 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.78867287 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.789387172 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.789559066 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.790833956 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.789929821 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.789823273 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.789182241 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.790345042 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.788669381 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.788275992 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.790252177 seconds)
  done (took 130.461809326 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.789775344 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.787733379 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.78652204 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.786536914 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786584084 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.789606222 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.788177075 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789192891 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788164828 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.789794064 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790336824 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.787526235 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788372002 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.791419433 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789350835 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.788110059 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.790011101 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.787138011 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.790873501 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.791476224 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.790304327 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.788684713 seconds)
  done (took 41.071536603 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792309311 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.790714627 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.788602177 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.792077792 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.78869171 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.791832977 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.792813316 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.790894878 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790820336 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.788599975 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787941637 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792239686 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.788778862 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788229477 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.788166122 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.788652308 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.791133236 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.788280576 seconds)
  done (took 33.936569348 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.791596149 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.788772881 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.792942212 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.789381435 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.789766866 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.791674513 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789654581 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.792748322 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.792534039 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.78902186 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.792327776 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791758749 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.791601602 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78992771 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791740175 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.7902756 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.792876981 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789554557 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.792391458 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789784654 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.789328761 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.794013751 seconds)
  done (took 41.120965484 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792504604 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.792635551 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.790267958 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.791091815 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.790677682 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.793470488 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.793983998 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.790500819 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.79228084 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.794108587 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.790696777 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.79427631 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.791606268 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.791138487 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.790363079 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791662726 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.79303176 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.792954972 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.793448423 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.790172217 seconds)
  done (took 37.559732504 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.796704462 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795091969 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.794755472 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795275723 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.796074456 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.796387955 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794842319 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.795016313 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.797520811 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.796827706 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.796268681 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.796783866 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.796380565 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.795815617 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.797494736 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795081691 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.79502823 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.796005765 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.795510457 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79502022 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.79487998 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.793942855 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.79562306 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.795238179 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.795941364 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.79537612 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.796311797 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.7962688 seconds)
  done (took 52.00214467 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795480929 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.795476904 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.790931916 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.793101529 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.792406016 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.791950333 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.792023233 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.792795731 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.794884894 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.794805924 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.795509982 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.795447642 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.795006837 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.797042009 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.796775265 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.797257695 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795318868 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.795224305 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795700549 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792558204 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.796436943 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796592742 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.796799357 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.793870808 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794321772 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.797233338 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794653765 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.795126759 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797174568 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.794836919 seconds)
  done (took 55.569375944 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.81564094 seconds)
    (2/2) benchmarking "in"...
    done (took 1.816064341 seconds)
  done (took 5.35389076 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.79445248 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797342768 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.79593096 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.795151181 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.794442583 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.797992577 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.796772628 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794018371 seconds)
  done (took 16.087840369 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.798727658 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.798190997 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.799126217 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.799394544 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.797898799 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.799788882 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.803892629 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.796803814 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.799878213 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.800014521 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.808007692 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.808974976 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.7998886 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.798627457 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.799888346 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799810151 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.797911787 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.79953434 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.799100375 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.798638481 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.801523063 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800491152 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.803504931 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.796060365 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.801246884 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.808958904 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.80418381 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.797369432 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.799732065 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.803548692 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.800641145 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.797295352 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.800856822 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.801790336 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.800901998 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.802717639 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.808974119 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.800958562 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.805685557 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.802061092 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.801091701 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.797727141 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.802332656 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.801705611 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.802491182 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.801699272 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.800778058 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.798184797 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.802324344 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.805596755 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.808310332 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.800692602 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.799036693 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.806285466 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.801832876 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.808032037 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.802926476 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.804283142 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.811788238 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.810653904 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.813760128 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.811030323 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.804113397 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.801517442 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.811923676 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.827839082 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.80729101 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.796295397 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.798841179 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.802010334 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.809078504 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815116725 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.813853104 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.800218409 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.802867372 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.801735985 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.80222545 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.803541946 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.80850461 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.804624959 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.801459879 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.802185458 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.812776052 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.830236801 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.802829304 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.804286841 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.803832075 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.803135192 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.804181573 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.813877314 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.803631377 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.802749793 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.801813567 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.80318239 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.804129962 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.804152739 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.802364834 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.805506851 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.800236317 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.803544135 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.803990331 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.807735023 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.815541914 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.803460955 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.804303091 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.808981557 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.803270387 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.80321112 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.810565635 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.802869776 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.803983456 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.805105034 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.809915972 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.800262305 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805920154 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.812986932 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.804533454 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.803728665 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.8034973 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.804798983 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.81428606 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.833297468 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.803239168 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.803273782 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.809783025 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.818492596 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.804364845 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.806524845 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.804448908 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.803209516 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.801474353 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.807121724 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.803645898 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.808222719 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.805315891 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.806625925 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.802126916 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.806015479 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.805783056 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.805398994 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.805566315 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.807349767 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.806246674 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.806210108 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.80544377 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.806842223 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.809483007 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.805174116 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.807349676 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.807458745 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.801995957 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.80646081 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.80725175 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.807678561 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.80734849 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.807287705 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.806732494 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.807776984 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.805815043 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.805476352 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.805246518 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.807846007 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.81170547 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.80768419 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.810365304 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.807161894 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.805258014 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.808786444 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.809884887 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.807833198 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.807805915 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.808361328 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.811097769 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.817211508 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.807042443 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.809063382 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.809449421 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.808740583 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.809560376 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.808291882 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.810442489 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.8167409 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.808937924 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.815292809 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.808318604 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.808947723 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.809249266 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.808961135 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.808435208 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.809002193 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.810391986 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.818099098 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.821085433 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.818087392 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.81154454 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.812789132 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.809439267 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.813437235 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.811609326 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.808417212 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.809584135 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.806994953 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.808752488 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.810068117 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.810654309 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.809249799 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.808800457 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.810272573 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.808392223 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.810405795 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.810864947 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.81259404 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.812061426 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.80832171 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.810496178 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.811081934 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.811141837 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.807033127 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.810313338 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.810612894 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.809878355 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.811742735 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.817151905 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.806601627 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.812000995 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.809412295 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.810781307 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.808998375 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.810354196 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.813618049 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.810266201 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.816482354 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.809828689 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.812891051 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.816885858 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.810596954 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.811969797 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.81355466 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.809981909 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.807613139 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.815300071 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.821061665 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.811166617 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.81268478 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.812808733 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.811266255 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.81080812 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.818284682 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.809997664 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.811766741 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.811363618 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.812902726 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.809776901 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.8147705 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.811801411 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.812413936 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.812207299 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.811397442 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.812420203 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.814151091 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.812790462 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.813065132 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.813662082 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.81491857 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.822842805 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.815971875 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.814027045 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.815552286 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.812032583 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.816714429 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.815318594 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.812975253 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.813002612 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.825359702 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.823432742 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.819530603 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.813935935 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.813385999 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.820524641 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.815341571 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.818114328 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.812662745 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.813926702 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.813384469 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.814310539 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.809530533 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.814218084 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.8129001 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813141015 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.815955328 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.819622275 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.813660494 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.815115467 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.815036807 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.814246855 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.815102658 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.816052793 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.817536833 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.816949146 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.817128157 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.814683365 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.815060379 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.822190705 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.814939799 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.815091945 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.814712229 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.815016716 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.813880931 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.816060739 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.815368169 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.817633284 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.823890233 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.817249972 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.824909804 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.815709562 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.825163438 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.814574224 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.819300673 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.826182365 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.812341627 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.813588152 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.816412374 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.816422376 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.822817772 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.816410132 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.816453194 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.822237825 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.814864894 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.816224785 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.815234982 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.815204381 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.81781764 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.817040235 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.824003727 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.816300781 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.821400356 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.817000775 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.811315904 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.818540485 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.817008993 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.815877398 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.820089524 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.817175546 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.818370599 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.817218575 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.817384707 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.815926423 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.818912709 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.817747845 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.814854797 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.814350037 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.822785088 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.819609103 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.823857711 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.817735971 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.823807179 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.819145712 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.824349462 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.818275112 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.81572416 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.81727531 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.818360465 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.818369171 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.818544327 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.819346868 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.818716719 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.819680866 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.82218505 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.819608015 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.819554172 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.818178483 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.819379302 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.817863469 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.828301934 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.845947297 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.81991966 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.823440699 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.816592714 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.819748245 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.822161477 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.819306748 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.816113409 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.819373859 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829120823 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.827977781 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.818895983 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.819678298 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.820564367 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.820778553 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.81887817 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.818832468 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.81591775 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.814938324 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.817719346 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.820712029 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.823702991 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.818196752 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.820886847 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.816469415 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.819831286 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.827888181 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.815030747 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.819427463 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.819784065 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.820033371 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.819044219 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.8198126 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.81625197 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.818324686 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.818024499 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.822619468 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829525403 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.825855658 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.821917518 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.816720292 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.818448831 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.819557187 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.819459846 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.820575236 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.819474644 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.818994804 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.822034237 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.822272376 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.819336379 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.821014604 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.819640325 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.821887064 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.817447051 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.821952954 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.829066598 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.816081184 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.813924178 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.81777934 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.818958622 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.82270545 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.82254517 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.827039833 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823734853 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.832715263 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.83323969 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.825536746 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.821058011 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823274597 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.831789181 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.818670266 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.819580015 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.81958607 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.824934724 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.82212811 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.825532627 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.824119502 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.826976981 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.821419882 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.822481483 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.82923777 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.822413537 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.821381645 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.823726831 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.82820401 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.822747049 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.819879252 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.821952258 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.821020577 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.827018929 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.823857143 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.822976114 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.822847476 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.821808808 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.823985397 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.826814428 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.822143014 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.821242576 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.820401674 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.822439088 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.819758237 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.821556206 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.819155671 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.821353094 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.822437408 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.824147944 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.831485574 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.81885077 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.827118516 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.821850003 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.824486904 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.821147783 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.822495515 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.819775787 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.81979808 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.822862941 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.825028972 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.82413453 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.828592868 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.822652828 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.825733115 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.826411827 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825703353 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827784041 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.834975086 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.83271521 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.821040553 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.81792906 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.826288522 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.827565134 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.824914165 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.822419123 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.824098602 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.826784416 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.82296526 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.823718895 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.821759497 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.826115834 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.838324468 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.821721956 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.824779493 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.821369609 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.827631983 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.822781959 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.823113908 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.825016745 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.827066735 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.8285614 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.832046085 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.824296553 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.828115031 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.823394249 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.824842281 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.826962015 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.829779096 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.835441704 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.826219417 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.822378101 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.824858763 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.827806748 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.84259069 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.826726267 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.833875832 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.860132542 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.822506235 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.823942295 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.826034726 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.823298652 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.827246828 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.827387581 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.823628116 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.82446539 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.827249268 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.824916733 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.826259006 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.829670871 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.828285509 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.825537837 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.827799517 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.827477367 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.827395629 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.823725286 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.824848235 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.825687743 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.829918279 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.823227208 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.828426867 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.823573551 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.837975865 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.836339544 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.826171102 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.827530234 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.824055406 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.831309786 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.827683049 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.840610867 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.836955211 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.824762017 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.824570232 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.830632758 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.82812313 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.823952751 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.830177659 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.826851867 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.82515826 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.824893912 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.839014927 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.838632689 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.829364701 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.826074673 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.829248285 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.829259654 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.831359821 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.826831733 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.826092454 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.831792747 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.82955795 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.833624288 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.828157127 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.825186544 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.832551946 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.833709398 seconds)
  done (took 1083.878381046 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.825805356 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824524763 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.82268144 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.824353804 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824994678 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824193067 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.825142257 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.825547335 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.824441627 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.822631408 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.826954257 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.822982884 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.82502591 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.824892336 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.822890472 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.825138946 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824725908 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.822717834 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.82720289 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823100546 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.824445827 seconds)
  done (took 40.066377062 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.825352832 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.821952773 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.825306381 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.831902705 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.82510043 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.827810885 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.823211132 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828581781 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.830369645 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827921569 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.829580672 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829848855 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.827263884 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.823019252 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82839346 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.82747499 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.830141099 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.826112397 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.831201748 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.827841353 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.830106 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.823932362 seconds)
  done (took 41.954703313 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.829556013 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.82998532 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.832461687 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.826299749 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.828679269 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.826798363 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.830415221 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.829776075 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.831752102 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.830569069 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.82789545 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.8296225 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.83631343 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.838602059 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.828816887 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.825459284 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.970450356 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.82897387 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.829386305 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.821511306 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.818471378 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.822718292 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.813906336 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.817238744 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.821026754 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.825050529 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.823077115 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.823909496 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.822425637 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.824209329 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.829347627 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.823687585 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.82207988 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.824579588 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.822227141 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.824134265 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.826706675 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.821541111 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.818514201 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.821962686 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.834299269 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.842830968 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.823907127 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.82814731 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.823687296 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.823054564 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.826339578 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.832141561 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.818312928 seconds)
  done (took 91.388603966 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.821608401 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.823139765 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.81791347 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.820806107 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.822859329 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.82067275 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.821467176 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.821162883 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.818005836 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.8204144 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.821564298 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.818472769 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.818119414 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.822423981 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.822025136 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.819595866 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.820583903 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.819308279 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.819396044 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.819198664 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.820267726 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.822160151 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.823553121 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.819972724 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.823623546 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.819938434 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.818391344 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.823072466 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.819936744 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.820180637 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.822986465 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.823298866 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.822087664 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.82044554 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.819159031 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.824675749 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.822395605 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.821573456 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.823149504 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.819063607 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.823979622 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.821985115 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.821632872 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.823381888 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.818780187 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.818288061 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.819678718 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.817951655 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.820182195 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.821690259 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.823964543 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.819793992 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.822214468 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.820807465 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.822067507 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.82025343 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.818956753 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.820608583 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.820674924 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.819556753 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.8189841 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.821704878 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.820672703 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.823276546 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.821084908 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.819286267 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.820003138 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.82410655 seconds)
  done (took 125.577283353 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823387711 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.821966043 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.822759703 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823494846 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.823688124 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.817526871 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.81831096 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.818141896 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.817384629 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.817750153 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.816602381 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.815464056 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.816321626 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.8161512 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.816520398 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.815802816 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.815293815 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.815072456 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.813638651 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816090266 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.81518472 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.816276397 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.813965627 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.815084689 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.815595244 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.815355913 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81499217 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.814457262 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815175809 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.81498571 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.815866739 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.817055397 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.815570886 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.81530571 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.815294299 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.814845914 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.814919704 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814193975 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.814542333 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.814573303 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.815632171 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.814023686 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.813905125 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.814935585 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.814883449 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.815533027 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.816630031 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.813737742 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.814663841 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.815165422 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.813362679 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815097643 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814423349 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.815602659 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.81533448 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.815935918 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816504027 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.815793007 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816230108 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.815391935 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.816653286 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.815847482 seconds)
  done (took 114.352805147 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.815029292 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.816060662 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.813040026 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.813657371 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.815116651 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.813652937 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.816954132 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.815295218 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.815618459 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.814707327 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815542707 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811324405 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814583355 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815423803 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.81254648 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813470331 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.811999884 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.812955002 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820595382 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.812732884 seconds)
  done (took 38.034003608 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.811975085 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.815196596 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.812051386 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.816131636 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.816386574 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.81150791 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.815222489 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814955882 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814197627 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815876393 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.814331139 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.813063247 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811515494 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.812457492 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.816091587 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.811312712 seconds)
  done (took 30.765383895 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.812107941 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.813689966 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.813649937 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.814146583 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.81066042 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.810981957 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.812230524 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.810418432 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.810130053 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.811430046 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.812619468 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.812169644 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.812325415 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.81611596 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.806482534 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.810143854 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.808420243 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.807519801 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.810597588 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.810736043 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.808511994 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.806137923 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.80965354 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.810179149 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.809954585 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.807347332 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.806086465 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.807030071 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.805343594 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.81007633 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.807201982 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.805727537 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.805322025 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.805513144 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.808438743 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.806041413 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.810399112 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.80795881 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.808089196 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.809174702 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.807236619 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.807652745 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.807733277 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.808016151 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.804652443 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.807645825 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.805311707 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.805921475 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.805964279 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.804697957 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.807539276 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.808077788 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.807410597 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.807406481 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.808517429 seconds)
  done (took 101.226789247 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.808231871 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.807057042 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.805334097 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.807502341 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.808497441 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.802930883 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.808099387 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.807111328 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.8056174 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.807706499 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.8063941 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.8083495 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.804743366 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.809949976 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.805744554 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.807089242 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.804524634 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.806297865 seconds)
  done (took 34.256780404 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.80501323 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.805815969 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.807359993 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.805227893 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.804694758 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.808465948 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805677519 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.806943957 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80833635 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.80529147 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80569591 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.806644379 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807571363 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.807085332 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.804685508 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805809636 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.807585454 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807481519 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.803994363 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.804485111 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.807840553 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.808770982 seconds)
  done (took 41.477313412 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.806338341 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.8044323 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.823264937 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.827633796 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.827705352 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.841552312 seconds)
  done (took 12.667000231 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802930858 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806437096 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.804486541 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806053327 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805830303 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804813137 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802954891 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804662983 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806646101 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80207687 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802874131 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80412461 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804616089 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804096385 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806902115 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807527953 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804457779 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802395306 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802987593 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80893714 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802775483 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80650357 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803610316 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802905785 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803975275 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80397496 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805298519 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803006525 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805342902 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807361301 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806851756 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802933854 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80663032 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802639548 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806600475 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805410858 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804046631 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803907402 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807332799 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804438241 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.807978672 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805786986 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806077802 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802371319 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805068376 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80015002 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804017289 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802600685 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801300763 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806213912 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805538522 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801579494 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805540443 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805134859 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803634707 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804628296 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80321437 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80268674 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806808443 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801878627 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801854327 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803902829 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803433225 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802205301 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80581506 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801265999 seconds)
  done (took 120.828949585 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802043596 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.803305965 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802034709 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801422999 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800533273 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80255816 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802235892 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801763464 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801175318 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803160946 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804316215 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801276706 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8029385 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803274118 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801975467 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801834758 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801359144 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801992867 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801630517 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805373793 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80029138 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802112111 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801161878 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801832686 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803590601 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802803535 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800588148 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800949856 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800684264 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802378566 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801330717 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801554558 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802253603 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.803300873 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80166683 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800889186 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802483823 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802567374 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800339687 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804367632 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799485828 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80426363 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800764162 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800167883 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802494632 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801796862 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800501706 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802045667 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80350651 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801198569 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801170878 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801000864 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803557253 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801205384 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800797035 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804163099 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80065024 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803255037 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802272933 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806386196 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802914701 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801109977 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807066963 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804349143 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802566176 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803453225 seconds)
  done (took 120.678968775 seconds)
done (took 2511.698539343 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.821007612 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.792312031 seconds)
  done (took 15.345748319 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.968665941 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.921875962 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.804568144 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.809581518 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.803290389 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.825781621 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.828733437 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.805725864 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.805078611 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.805613339 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.804696829 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.994005259 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.807440727 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.804307387 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.805514335 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.898566459 seconds)
  done (took 51.23104492 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.808303074 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.811026366 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.819462392 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.813419597 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.807676467 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.820475574 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.841097622 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.815849638 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.849852107 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.823172568 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.88548643 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.823429697 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.808930217 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.861449277 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.825893124 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.824392092 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.903937983 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.883931795 seconds)
  done (took 34.764023763 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.886601016 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.806867743 seconds)
  done (took 10.435773833 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.816115616 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.841312222 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.832785121 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.815628135 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.8252743 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.831996228 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.851651449 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.813393824 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.808266114 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.830316568 seconds)
  done (took 70.005930142 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.816335955 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.813403819 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.811567215 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.809126983 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.802927274 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.803361043 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.810311537 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.8020566 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.481803884 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.844491663 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.816169036 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.815017695 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.809522378 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.81057391 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.806707787 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.832777657 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.906845967 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.808504071 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.805551895 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.815013351 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.809700785 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.863442342 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.82312903 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.809883794 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.840787152 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.476597806 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.820185876 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.816611447 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.899636945 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.809244897 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.808859164 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.810917016 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.812287769 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.205141031 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.071268347 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.809620025 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.824113721 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.820146264 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.806812492 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.903142175 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.811082871 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.815589751 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.434786206 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.050973233 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.904832647 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.851504801 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.136629278 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.829090831 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.811888501 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.836902789 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.814420601 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.813364205 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.824042896 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.292886746 seconds)
  done (took 128.834510711 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.809753745 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.158128007 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.979059542 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.808332638 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.097553604 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.019270207 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.807637723 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.858473965 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.807559748 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.040928922 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.066547657 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.919692411 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.807883733 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.805751726 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.809051118 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.805579714 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.969130051 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.882636662 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.808657583 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.805717304 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840938966 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053808688 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.934915716 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.809280839 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.841710161 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.023374679 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.934134852 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.917718274 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.606421292 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.806752735 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.876222992 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.810498026 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.806341966 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.806493489 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.968656539 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.90881294 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.895667015 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.809455019 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.808261393 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.808869512 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.482048796 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012240931 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.907046122 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.95212678 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.009902039 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.020063009 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.596736784 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.808564042 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.56358749 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.976374338 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.042494678 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.041700623 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.934625775 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.816078701 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.136252756 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.806918888 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.809514236 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.062553174 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.956239942 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.914828829 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.809676876 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.810051232 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.807201192 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.058946392 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.810530393 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.909014149 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.809860647 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.806838838 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.909466232 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.914019266 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.953199633 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.028908151 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.843241837 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.75016181 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.345071313 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.062107844 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.879011594 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063673533 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.811970839 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.809424525 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.892202051 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.663181698 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.06810515 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.063839714 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.066021013 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848569116 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.533942414 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.809646772 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.040775793 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.035950399 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.063505219 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.018561454 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.05515899 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.143559393 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.809923781 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.809498507 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.045177511 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.949217277 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.815300166 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.167142268 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.04845699 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.379084927 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.833570977 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.122420317 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.947916393 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.815838778 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.456246496 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.811428851 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.040456933 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.857308686 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.812875246 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.813668534 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.037504985 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.790452244 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.81136524 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.684115557 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.877615268 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.814682619 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.04851201 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.813966354 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076288094 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.816159813 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053113607 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.343500185 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.848545361 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.989797571 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.017300363 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.815236846 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.062558573 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.060627634 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.931180649 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.089784615 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.719719428 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.810609194 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.104764301 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.814186167 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.81170747 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.988656127 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.814700193 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.960685604 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.818957569 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.100266738 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838767589 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.046155472 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.816254726 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.073794183 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.849131363 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.8657901 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.816199421 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.942547665 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.815055511 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.653540611 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.976651403 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.817014699 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.812303233 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.371233991 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.814597404 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.974977959 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.051142017 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838904178 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.888965325 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.49039622 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.814559865 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.899682979 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.841348334 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.208398833 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.814402978 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.069843521 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.82027355 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.812715621 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.814260776 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.057912441 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.055234187 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.817168775 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.815019213 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.713545107 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.814816647 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.814516034 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.001010031 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.152051593 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.81349443 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.020191941 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.818543066 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946083822 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.818211166 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.897946474 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.153684884 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.813944733 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.815220382 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.815233142 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.814229241 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.81455841 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.02799833 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.844958751 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.375585536 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.956776734 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.086601571 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.131282536 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.067589467 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.861420544 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.818717919 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.074507563 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.818543113 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.883785889 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.816075585 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.84060138 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051432355 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.819330217 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.084976425 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.095690436 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.698232682 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.868315627 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.816974026 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.817984021 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.815885349 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.966892045 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90694582 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.819791338 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.8181345 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.936919316 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.943134526 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.035239091 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.819737347 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.894262523 seconds)
  done (took 890.340366163 seconds)
done (took 1202.688719093 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.815917235 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.820435257 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.804735597 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.814223014 seconds)
  done (took 29.004701324 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.820110874 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.816571684 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.818677044 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.816401475 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.818570858 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.816579597 seconds)
  done (took 12.652650365 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.831385855 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.812881803 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.813974143 seconds)
  done (took 21.203948683 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.885399385 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.202166789 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.920719177 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.238424472 seconds)
  done (took 9.991986098 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.819801675 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.818256356 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.818378732 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.821405255 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.820445922 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.821431544 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.818029351 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.819225389 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.821290138 seconds)
  done (took 18.125067281 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.218612934 seconds)
done (took 96.947157992 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.95475405 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.11165961 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.457454471 seconds)
    (4/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.268657807 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.997191258 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.816232668 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.879929088 seconds)
    (8/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.946367979 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.813342334 seconds)
    (10/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.983544833 seconds)
    (11/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.251551845 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.963031733 seconds)
    (13/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.825592397 seconds)
    (14/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.126611004 seconds)
    (15/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.975221547 seconds)
    (16/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.879231349 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.854121374 seconds)
    (18/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.969218697 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.164674048 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.843017563 seconds)
    (21/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.812530511 seconds)
    (22/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.798669427 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.810949671 seconds)
    (24/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.817698821 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.927813284 seconds)
    (26/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.925618575 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.10451243 seconds)
    (28/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.80239634 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.060322921 seconds)
    (30/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.904589256 seconds)
    (31/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.843825342 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.597431583 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.906972673 seconds)
    (34/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.798197342 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.935687894 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.83912691 seconds)
    (37/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.977783694 seconds)
    (38/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.839626009 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.825348315 seconds)
    (40/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.8248294 seconds)
    (41/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.931902884 seconds)
    (42/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.210029154 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.054871082 seconds)
    (44/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.796868338 seconds)
    (45/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.154926714 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.913139003 seconds)
    (47/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.908658578 seconds)
    (48/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.885389151 seconds)
    (49/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.003113175 seconds)
    (50/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.917562098 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.087001275 seconds)
    (52/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.045225271 seconds)
    (53/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.26191208 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.773438523 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.82283861 seconds)
    (56/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.717770924 seconds)
    (57/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.968829657 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.124608855 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.819905393 seconds)
    (60/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.04925059 seconds)
    (61/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.955757306 seconds)
    (62/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.925076059 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.981976935 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.065817649 seconds)
    (65/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.912866782 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.837359628 seconds)
    (67/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.911286714 seconds)
    (68/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.816126873 seconds)
    (69/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 3.335392922 seconds)
    (70/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.050202075 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.994773488 seconds)
    (72/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.148900863 seconds)
    (73/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.957839545 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.873735976 seconds)
    (75/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.833070138 seconds)
    (76/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.818455345 seconds)
    (77/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.865784125 seconds)
    (78/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.242706534 seconds)
    (79/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.024098725 seconds)
    (80/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.98863627 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.894490177 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.143442429 seconds)
    (83/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.440268533 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.15454532 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.143453207 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.943256906 seconds)
    (87/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.833642434 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.05303349 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.89524576 seconds)
    (90/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.882598963 seconds)
    (91/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.915406054 seconds)
    (92/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.965004458 seconds)
    (93/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.888400759 seconds)
    (94/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.906492375 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.818194443 seconds)
    (96/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.924048018 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.961289164 seconds)
    (98/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.205990975 seconds)
    (99/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.806305778 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.538493352 seconds)
    (101/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.046772873 seconds)
    (102/309) benchmarking ("sort", Int64, false)...
    done (took 5.51254297 seconds)
    (103/309) benchmarking ("sort", Float32, false)...
    done (took 5.51320774 seconds)
    (104/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.116857211 seconds)
    (105/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.008934205 seconds)
    (106/309) benchmarking ("sort", BigInt, false)...
    done (took 6.926522436 seconds)
    (107/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.806859538 seconds)
    (108/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 3.442178072 seconds)
    (109/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.062500308 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.33619317 seconds)
    (111/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.953799447 seconds)
    (112/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.92877567 seconds)
    (113/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.839723522 seconds)
    (114/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.829247684 seconds)
    (115/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.916665052 seconds)
    (116/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.199994875 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.160831331 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.314530138 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.823231916 seconds)
    (120/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.852810121 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.044182037 seconds)
    (122/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.918601234 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.908938827 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.809025178 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.20921752 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.775231876 seconds)
    (127/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.392660071 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.851457293 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.011007259 seconds)
    (130/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.822561803 seconds)
    (131/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.08784635 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.928552856 seconds)
    (133/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.040555991 seconds)
    (134/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.889131936 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.073558887 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.822964724 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.200909611 seconds)
    (138/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.166577109 seconds)
    (139/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.910227276 seconds)
    (140/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.930846037 seconds)
    (141/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.070247889 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.120976292 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.770555365 seconds)
    (144/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.929751503 seconds)
    (145/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.824422057 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.602567077 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.965798955 seconds)
    (148/309) benchmarking ("sort", Bool, false)...
    done (took 2.048423951 seconds)
    (149/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.842807088 seconds)
    (150/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.998980887 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.246171551 seconds)
    (152/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.076113884 seconds)
    (153/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.871200656 seconds)
    (154/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.949161763 seconds)
    (155/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.134510566 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.109323772 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.044784505 seconds)
    (158/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.909495534 seconds)
    (159/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.072856407 seconds)
    (160/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.915916522 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.245018117 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.154700978 seconds)
    (163/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.89280521 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.808723829 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.825702574 seconds)
    (166/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.929644349 seconds)
    (167/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.807812416 seconds)
    (168/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.913508717 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.865760006 seconds)
    (170/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.125317657 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.769130698 seconds)
    (172/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.942728181 seconds)
    (173/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.154720293 seconds)
    (174/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.048031058 seconds)
    (175/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.851385859 seconds)
    (176/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.82519548 seconds)
    (177/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.945418143 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.005570471 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.098298598 seconds)
    (180/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.004620831 seconds)
    (181/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.135191304 seconds)
    (182/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.113219527 seconds)
    (183/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.947649834 seconds)
    (184/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.847906656 seconds)
    (185/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.807961397 seconds)
    (186/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.361884219 seconds)
    (187/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.853493854 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.823232356 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.626500323 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.15518775 seconds)
    (191/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.811505992 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.218136836 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.859515101 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.808839459 seconds)
    (195/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.583032857 seconds)
    (196/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.840917775 seconds)
    (197/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.910528804 seconds)
    (198/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.391432218 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.938261231 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.997031968 seconds)
    (201/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.810395687 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.462284109 seconds)
    (203/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.925996399 seconds)
    (204/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.850650625 seconds)
    (205/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.852304309 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.857852928 seconds)
    (207/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.907418144 seconds)
    (208/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.208095167 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.826856978 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.092115592 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.511409386 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.468684443 seconds)
    (213/309) benchmarking ("sort", Float64, false)...
    done (took 5.587392929 seconds)
    (214/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.931152665 seconds)
    (215/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.924118107 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.068597999 seconds)
    (217/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.846323554 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.004932645 seconds)
    (219/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.065201033 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.888095396 seconds)
    (221/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.199257014 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.65248048 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.811463666 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.913373635 seconds)
    (225/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.957568046 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.643961592 seconds)
    (227/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.390626779 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.042221848 seconds)
    (229/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.826229958 seconds)
    (230/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.730645098 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.037855547 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.897761306 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.975905393 seconds)
    (234/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.916947721 seconds)
    (235/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.854109938 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.845751206 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.826688907 seconds)
    (238/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.571079874 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.130338874 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.871580126 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.170480612 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.920576447 seconds)
    (243/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.022853143 seconds)
    (244/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.070847456 seconds)
    (245/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.971792721 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.831596043 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.926060975 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 8.080106094 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.184815212 seconds)
    (250/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.731876947 seconds)
    (251/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.858043316 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.81066999 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.428728714 seconds)
    (254/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.831588155 seconds)
    (255/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.980656721 seconds)
    (256/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.92980429 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.849065685 seconds)
    (258/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.811763719 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.37960625 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.893714864 seconds)
    (261/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.20424214 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.098254928 seconds)
    (263/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.993018852 seconds)
    (264/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.025766882 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.332741254 seconds)
    (266/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.066286443 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.526274553 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.66831774 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.860622834 seconds)
    (270/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.240047299 seconds)
    (271/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.832665906 seconds)
    (272/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.852204227 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.161327193 seconds)
    (274/309) benchmarking ("sort", Int8, false)...
    done (took 4.764549843 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.932301478 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.992732351 seconds)
    (277/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.845704674 seconds)
    (278/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.302818477 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.819389325 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.091338921 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.207050674 seconds)
    (282/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.832841666 seconds)
    (283/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.152294237 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.241223563 seconds)
    (285/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.152928698 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.629645153 seconds)
    (287/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.922497478 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.863312891 seconds)
    (289/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.83851645 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.947248933 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.921138079 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.82882293 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.044032652 seconds)
    (294/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.895769216 seconds)
    (295/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.349683005 seconds)
    (296/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.924514695 seconds)
    (297/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.83147311 seconds)
    (298/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.62684046 seconds)
    (299/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.532594536 seconds)
    (300/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.839428909 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.948379029 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.861446771 seconds)
    (303/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.929982297 seconds)
    (304/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.92993195 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.131453154 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.992967894 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.856946573 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.911809318 seconds)
    (309/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.752843062 seconds)
  done (took 992.026153676 seconds)
done (took 993.83253678 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.86478824 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.855938599 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.840334534 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.862228899 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.952374211 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.870433923 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.851025636 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.841270029 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.888081639 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.89041744 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.840419744 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.867226375 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.84280649 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.841462826 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.840513058 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.855480315 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.152027237 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.866983251 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.857926041 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.849771995 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.857536655 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.841410148 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.890212145 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.867253022 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.846370589 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.84284244 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.844756629 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.861437373 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.954066729 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.845132471 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.843434232 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.852246341 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.15084327 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.864489464 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.836251428 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.861616295 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.852904375 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.852384672 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.845301568 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.875657638 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.238240818 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.875895483 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.845182363 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.842929155 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.843405884 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.84624929 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.844231914 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.84826142 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.855742546 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.855801986 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.236907034 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.890966632 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.845568744 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.845409115 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.853572133 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.843338454 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.846731081 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.858920782 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.863719995 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.858726203 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.142895163 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.871688388 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.846649516 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.86070062 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.852515925 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.276099151 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.871089203 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.847991669 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.23984575 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.880631497 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.275732109 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.884561177 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.845863503 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.858368525 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.87735835 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.154164493 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.863683161 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.843924754 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.851619934 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.843865395 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.854147342 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.856174227 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.849832738 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.845868272 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.860458844 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.873645474 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.855175463 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.845276466 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.853547346 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.863334443 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.852790118 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.855749844 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.847714653 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.84004883 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.853936883 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.850014318 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.848833596 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.849239005 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.851354641 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.857107887 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.240240098 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895483076 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.844239439 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.843932345 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.845422873 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.860827445 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.238995941 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.877424545 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.867850157 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.893110517 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.847414234 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.1462956 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.873219635 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862063374 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.854472849 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.850085073 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.841947178 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.145139112 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.264391321 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.893051329 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.848739636 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.84669664 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.8628532 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.849526733 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.843551856 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.156005328 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.872226759 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.860606111 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.967635979 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.857547607 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.877890112 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.8456924 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.851760436 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.875444454 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.862498878 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.880473328 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.850608466 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.863834798 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.863546366 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.845238278 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.857424825 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.857134593 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.850150809 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.85341186 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.84191757 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.876332207 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.860922985 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.860859613 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.871049453 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.969102849 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.845511402 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.146686574 seconds)
done (took 289.942969158 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.927226495 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.845085269 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.946595766 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.84386767 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.93932153 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.928471139 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.841720808 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.842135131 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.841819682 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.257199386 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.842198695 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.84336834 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.837953148 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.842543713 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.94334899 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.844732715 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.84192125 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.184297473 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.846149813 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.926852962 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.840905821 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.841989212 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.845225218 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.224214231 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.845688669 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.84150213 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.918039692 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.845726032 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.222913168 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.844368425 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.843201481 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.187718503 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.937253576 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.864056527 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.855612673 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.852545558 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.927727421 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.850275372 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.928766798 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.942007135 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.943909457 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.886565208 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.844877168 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.842151575 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.848384118 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.848218882 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.844406149 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.873873912 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.847684732 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.844516483 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.221426779 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.858036182 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.855050604 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.845061886 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.844073238 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.868521655 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.844691039 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.849440093 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.949136155 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.848492876 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.909751799 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.263523135 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.222080028 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.847365943 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.843894188 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.844739709 seconds)
  done (took 182.939546831 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.914601517 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.919792358 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.913602078 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.850737862 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.896011646 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.913573274 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.850395672 seconds)
  done (took 15.032879005 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.855680047 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.848181654 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.912118888 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.912580484 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.847960561 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.010854059 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.848207195 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.859783726 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.846083616 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.915131858 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.849572055 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.849430215 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.854371694 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.845998559 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.912318684 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.860204836 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.967239219 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.850888426 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.850396025 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.00300657 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.846937498 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.856034967 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.903673588 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.861427248 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.850692455 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.855816537 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.44575952 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.849331106 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.846470093 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.850603695 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.847005056 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.89163796 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.849414177 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.850040113 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.848132854 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.991925993 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.849652494 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.847157532 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.849501404 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.846457419 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.850738483 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.849729503 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.850009935 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.848455834 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.849814861 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.874676241 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.850046685 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.8500478 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.850206885 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.85118396 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.914434041 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.852441072 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.84737996 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.848019367 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.920522829 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.857719612 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.85234642 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.849040707 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.851529436 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.84808675 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.004000133 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.919372515 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.850740903 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.924281264 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.851765002 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.851632164 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.851226932 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.851308871 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.949694985 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.851650823 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.914804037 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.848857072 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.057328942 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.875488087 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.852460496 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.854271094 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.853912239 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.853105025 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.848769992 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.858063584 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.850908037 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.853356349 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.858154466 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.849924036 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.849144242 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.993918094 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.986899067 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.850101434 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.865090514 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.85901531 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.850039386 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.917894994 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.851923092 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.85010244 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.920507247 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.971612569 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.909431272 seconds)
  done (took 204.292223393 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.85820926 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.862205752 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.854282732 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.872646764 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.852729483 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.852662134 seconds)
  done (took 12.932108772 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.855248698 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.853401338 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.854593971 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.853389528 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.854046497 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.85454575 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.853737288 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.85619939 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.856707974 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.853148878 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.855453551 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.854900543 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.857166855 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.853783329 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.855082372 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.854055757 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.854453584 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.851037965 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.855429633 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854246598 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.011323084 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.854441581 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.853927084 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.855015612 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.858980646 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.85349467 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.862524966 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.853897244 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.856330735 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.862564317 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.857483512 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.855403575 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.85493788 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.860529027 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.858596867 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.856158303 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.857112875 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.8548288 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.852524809 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.856213404 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.854730528 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.854859369 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.854745561 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.855533484 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.858036157 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.858681918 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.858857339 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.864333977 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.85662963 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.858410117 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.855783083 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.855370855 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.857495353 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.856428317 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.858252008 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.862830382 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.85881959 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.856922826 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.856029275 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.857872964 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.858454785 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.856921775 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.857177421 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.859365596 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.853589093 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.857390612 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.859146204 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.859645843 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.856419711 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.855928801 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.856723828 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.857163288 seconds)
  done (took 136.596969648 seconds)
done (took 553.576260309 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.996369658 seconds)
  done (took 8.779083905 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.928666149 seconds)
  done (took 8.751638902 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.095170494 seconds)
  done (took 9.88471655 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.86946048 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.882953392 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.859682282 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.853398013 seconds)
  done (took 29.264778952 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.98741634 seconds)
  done (took 8.770833561 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.869847411 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.850614627 seconds)
  done (took 15.537736617 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.003853541 seconds)
  done (took 8.787319462 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.945283659 seconds)
  done (took 8.753396641 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.86823025 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.892510906 seconds)
  done (took 15.563849378 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.842297329 seconds)
  done (took 8.631412475 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.461988073 seconds)
  done (took 11.351914889 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.881384604 seconds)
  done (took 8.77285866 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.912376519 seconds)
  done (took 8.701649579 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.874378479 seconds)
  done (took 9.662320621 seconds)
done (took 162.995868185 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.870874082 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.862359604 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.859098055 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.860740563 seconds)
  done (took 29.244760513 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.896402433 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.897523502 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.899388756 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.909272176 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.901393909 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.897684614 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.893476255 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.888910746 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.907449096 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.89932888 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.898987934 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.899116086 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.898455674 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.888538983 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.899245645 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.898817989 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.907350861 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.899045316 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.888984938 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.899706577 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.86437545 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.908322966 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.902882407 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.863917531 seconds)
  done (took 47.297435692 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.06407599 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.940004594 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.019901796 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.915831903 seconds)
  done (took 9.727116653 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.917272999 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.918000673 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.929638496 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.968162083 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.004725167 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.927864672 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.892720974 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.885789926 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.87389117 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.918806193 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.993014478 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.91417336 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.004180068 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.866405025 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.043873665 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.866185344 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.865520435 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.917396938 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.97189015 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.982554185 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.867074965 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.918411426 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.923243994 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.919381644 seconds)
  done (took 48.079613313 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.863752709 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.873008277 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.872514736 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.867153891 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.865060373 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.864491249 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.870124723 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.867202377 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.885170045 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.867789576 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.86400664 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.864892449 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.864001503 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.865652635 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.866010012 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.878956657 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.879283039 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.865368216 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.869458799 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.871209924 seconds)
  done (took 39.179564797 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.860677051 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.714539328 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.212120742 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.11676192 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.860220496 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.862853394 seconds)
  done (took 31.420417836 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.878980145 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.871200633 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.867955447 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.923958213 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.003891465 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.872103894 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.868072886 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.880208705 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.912191319 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.92785439 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.891152205 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.894802735 seconds)
  done (took 24.585272518 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.863916026 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.87469987 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.863634947 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.88992408 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.879106878 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.874213753 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.875826349 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.861237073 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.880824715 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.886047781 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.874576022 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.880173484 seconds)
  done (took 44.300190094 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952825353 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.753257669 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.922971165 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.589041611 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40273753 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076566789 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.395018441 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.20623444 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.869126689 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139164675 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.836616804 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110106265 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.11629019 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885081674 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.867582662 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.322564226 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166782719 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102202919 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894351888 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.527643499 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984337216 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.319698677 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.5690744 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.990980075 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076801953 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.995452086 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.124177168 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.824910653 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003121032 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903708661 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873961888 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.866000524 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137896742 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246962664 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983444973 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874125341 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.533119482 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.582690414 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.852927055 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.653556407 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.721350189 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.998995789 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872595967 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865614607 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.801147418 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281506004 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209846998 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.870470114 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.568030442 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.867390755 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878823268 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957514253 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.868281687 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.681039157 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818206207 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.143276766 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.86457382 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873266195 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.437627858 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.938363246 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393836751 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.801183774 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.959327155 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.540944207 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.339583984 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.016977918 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.871136931 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.869126048 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802062189 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.612757135 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990648764 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013512758 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.884108762 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.515566942 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17719818 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.898504662 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.948142138 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162695426 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.553816273 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.802107675 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095090459 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.824146002 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802274929 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.719332355 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.801881964 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140887887 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905595325 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.502025765 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909963544 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.21387565 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.878393611 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892192659 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874918624 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092125595 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.751053959 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868393682 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.614296332 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.151271095 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889254747 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.208035038 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807637585 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.873473588 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126044388 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.082728108 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.901640188 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.415614057 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034851509 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86842818 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.9549013 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.579949097 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.969393197 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.154471787 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931323737 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.94204041 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999195585 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.828226145 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175399916 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897728011 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.042180725 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.869076844 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129659558 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.189476413 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.1254871 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954299983 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871296038 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.869693895 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.622071474 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.494526609 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.095116658 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.873481062 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.171446868 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.97229152 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.872446562 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805305195 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.523433814 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.846842097 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.988149185 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.094804898 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.620938582 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235637563 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803868287 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.016217323 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.981679749 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.093859123 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.541588134 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.958523314 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13169204 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.162140822 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.978286165 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973512104 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890715307 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963849463 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895741117 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.073280162 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.21731874 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.875919928 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.874372425 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.583746637 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.941947342 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877288581 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.8773327 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.680680266 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159139585 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898444715 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.878917739 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.762551105 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.885810516 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940405966 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.877853187 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.882879934 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.398058289 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.622400047 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.881756687 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.529180909 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112050009 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880996707 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.545622209 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059639151 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.95650291 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.159692573 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936705044 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.806880988 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.574317116 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.57757423 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873188263 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.809265392 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.873121713 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883984236 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883741733 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.094781242 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.167699658 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920247379 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.549250004 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.989626987 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883778772 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.878537257 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872622027 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.366859353 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.954027329 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.294055045 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.975285344 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009482474 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.888046525 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808236777 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.877845701 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.87989609 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.876947784 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.832113645 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927265148 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.622552349 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329660513 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136350113 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.530109861 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891731926 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.573233081 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.003858555 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.89870741 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.637607045 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.748031753 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.959284938 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938155647 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.88466099 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.574285425 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.655219736 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.444591391 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190713099 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191202475 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317630538 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.139599119 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.187397257 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.216975616 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112637229 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.403161931 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93297699 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.227218035 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820047021 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967747162 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.538749174 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238710426 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890259168 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104490402 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273117934 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.699922677 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03667989 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088440544 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910199421 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.588138108 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.894615718 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.08313108 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034079676 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.633840064 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102875916 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224966333 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.632109444 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.987468087 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.87675703 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.58080213 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964836641 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.585853947 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.239450349 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.30029595 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.850283114 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37376913 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.886726808 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.323691551 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237123905 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.093753304 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.9699139 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814909013 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.887246392 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.888611922 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.876421834 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.854599226 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.797462863 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.158331593 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889215352 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111932851 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.934783409 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.251283192 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.783489335 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.879619252 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879322914 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185052921 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.465761718 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106121693 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.108038278 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.439671345 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887948553 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.813344662 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814077674 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.581619677 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.881381812 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.861582756 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108563805 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.9888387 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.831073655 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.171781868 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178095808 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.134344765 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.892494455 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.161006552 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157512309 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.621519764 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907517595 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.980461717 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.622402301 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.604820125 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.102272456 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115880076 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.681696361 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.10977999 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.946216033 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.85137543 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.879723152 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.092430281 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.10250223 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.852799026 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13099047 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.605350957 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.882844398 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247277398 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940217676 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.871905009 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.093570884 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.973188522 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88979166 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962655725 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891410727 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.892053469 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.892617976 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931515451 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.877752383 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.018837377 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.895635035 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97215233 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.966519453 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.462178029 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.890080566 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168538831 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247624618 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.219897048 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944418618 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.882368584 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888828869 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816504342 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020670247 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.329524852 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154662255 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.01066237 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.025459127 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906126357 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.671325595 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.060015402 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182808362 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155712982 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.780017648 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.805896552 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.980346343 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.108205019 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894613744 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.093978206 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117998606 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21173155 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356721102 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.939544737 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.312613591 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156933319 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.252410762 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.883634218 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.473112455 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.887487855 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.636525901 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.927623385 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.859306314 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167399838 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894127284 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273104009 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.905996537 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.085101848 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.403960106 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.634828847 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.248233696 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.883640496 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.947872856 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169178211 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.29061549 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202996531 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952719915 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8954534 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.585545527 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023308883 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.829393292 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.153230243 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.884736276 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098624015 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.59418732 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.895064106 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178861221 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196581044 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.879362617 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.867652531 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947004445 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.893571328 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.109879028 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159622995 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138692971 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894074855 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.887018146 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.701649424 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177138293 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946734039 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819166555 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.888543145 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985112359 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135574365 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907471663 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.40110921 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.590765706 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192633309 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.807708893 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908388081 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.198967451 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321329209 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231619843 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.41784892 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118882832 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.449351697 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.629112598 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.245270822 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.889961476 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.199873034 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.251431341 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.889780116 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.288852644 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985430642 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.169508362 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209046848 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.897769484 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.626602168 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.931458286 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110837458 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49116883 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829405507 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.896031553 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.948792678 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.888695702 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.020974285 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899510158 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.885255095 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.660871491 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.713504511 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380977169 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.892355482 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.881158557 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.62852641 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.205820278 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023310648 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058963929 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908992079 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.614800836 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.197332774 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.159755224 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.520563454 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.984219712 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.905058547 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904941583 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832565994 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.103108775 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.102257267 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204680125 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.354577074 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.026105749 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.906805283 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.121076176 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113601071 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.85795313 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065908446 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377124407 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026905312 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.823350479 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.61911236 seconds)
  done (took 1687.469387163 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.923737517 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.924810305 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.915666392 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.954772672 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.920921258 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.919774024 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.93099866 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.993791919 seconds)
  done (took 57.317981099 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.905619796 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.129865912 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.915898993 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.90679529 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.93380642 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.905285373 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.11169252 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.918275246 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.927900168 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.917609788 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.907128086 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.910297557 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.295717309 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.93497365 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.90723662 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.917562041 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.928556803 seconds)
  done (took 75.219343498 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.910213381 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.261222122 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.946251493 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.927640152 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.787894574 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.92180973 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.891663015 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.956606031 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.909456571 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.082033179 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.246969151 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.915071339 seconds)
  done (took 90.595202722 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.924002928 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.911047363 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.913461515 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.915434089 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.915637656 seconds)
  done (took 11.422872292 seconds)
done (took 2197.73258833 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.154980724 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.131731598 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.153113843 seconds)
  done (took 6.121136994 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.057823378 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.103689315 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.223795182 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.229778524 seconds)
  done (took 10.456342993 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.195732544 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.305240922 seconds)
  done (took 6.33660724 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.245278679 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.935660235 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.29763433 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.905981833 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.909341722 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.909930579 seconds)
  done (took 22.567927263 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.912976166 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.915667091 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.91202497 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.914180169 seconds)
  done (took 9.496358288 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.893378476 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.640437378 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.895025025 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.908981454 seconds)
  done (took 21.175385339 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.664136352 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.314726842 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.656435639 seconds)
  done (took 9.472787279 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.389449827 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.832691886 seconds)
  done (took 9.062158028 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.162509828 seconds)
  done (took 4.002628412 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.939296248 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.185508024 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.431803991 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.43793157 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.573549894 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.798954128 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.239197741 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.152550805 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.36602802 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.377226151 seconds)
  done (took 25.341535609 seconds)
done (took 139.500350646 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.333980391 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.938387269 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.110912685 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.271389812 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.150459305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.113584586 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.127550839 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.254852246 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.795499102 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.793497043 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.274332853 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.14594302 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.074983775 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.930171466 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.085135471 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.931032027 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.143503873 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.355855515 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.992331527 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.176965294 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.142818359 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.920153742 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.111234823 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.931127015 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.147594244 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.064733227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.463846795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.937286597 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.129202094 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.475209048 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.101753947 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.322316554 seconds)
  done (took 169.588434819 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.913342478 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.914685289 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.914703714 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.913227078 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.212165145 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.913534112 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.913232062 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.911096704 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.991480978 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.973011282 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.915609186 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.201935105 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.914006157 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.913369684 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.908942589 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.905009024 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.136206212 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.902911231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.904875895 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.900023992 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.897781077 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.038000579 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.893378369 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.052916609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.102108122 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.899314666 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.892656773 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.901831606 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.904363988 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.905020809 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.905627591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.8896271 seconds)
  done (took 208.300131394 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.886027517 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.891673272 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.88849663 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.887511692 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.888428525 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.885695823 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.888981825 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.885118262 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.41346655 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.421369763 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.900756001 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.892288063 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.906657412 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.885054906 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.904160091 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.88605319 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.905977377 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.910807498 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.909750144 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.900360932 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.902967552 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.566720371 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.900926852 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.533259282 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.899702111 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.902096608 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.882550025 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.904212393 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.904100609 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.900210456 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.903868179 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.879807386 seconds)
  done (took 220.854378518 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.067023389 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.882589211 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.884711197 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.792139687 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.883929612 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.880110404 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.877929271 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.066695175 seconds)
  done (took 19.170544598 seconds)
done (took 619.765110502 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.350142777 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.192271108 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.056762111 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.901300853 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.165588571 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.942076758 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.893080529 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.959759551 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.632236764 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.968156098 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.587947795 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.915298046 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.675583349 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.923940957 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.01782267 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.955820273 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.483423619 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.577006523 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.066658936 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.959972304 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.057814082 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.833304894 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.976914751 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.664425948 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.689808661 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.88116553 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.067892351 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.486859531 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.891089149 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.044490171 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.665865118 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.302148549 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.895521087 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.873249722 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.931328699 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.91103641 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.225798117 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.890391642 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.993991695 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.617224568 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.952104237 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.487219351 seconds)
  done (took 103.36678211 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.837423767 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.835558723 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.832413951 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.832045196 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.833960496 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.832679246 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.832467538 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.832060855 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.833573023 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.830900256 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.832675589 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.833268475 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.833795598 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.834703252 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.832732129 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.832972869 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.83306115 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.835862996 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.832297939 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.832783427 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.832343142 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.831953256 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.848179074 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.833499406 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.833992504 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.833150319 seconds)
  done (took 49.469542082 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.848457095 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.017100571 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.095112463 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.871893765 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.847984597 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.850917709 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.867190302 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.857798165 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.850680961 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.849953269 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.943875686 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.859374871 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.869996186 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.096414368 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.869570271 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.849914366 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.849346672 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.848890107 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.023947815 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.866824108 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.87009634 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.858407066 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.872432108 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.862181619 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.847382248 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.84587799 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.848966819 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.311917197 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.856898251 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.938550948 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.89223289 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.871669419 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.283837396 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.097757462 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.903368372 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.855742246 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.845722997 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.942016482 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.852665285 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.84599903 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.865254922 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.853341676 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.086284162 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.359783278 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.862834614 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.846108572 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.323726002 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.954423938 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.889752089 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.859034478 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.089992122 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.866272125 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.847947259 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.847034757 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.883039384 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.853138273 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.846244874 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.199899872 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.860030586 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.865469221 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.853158387 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.847595203 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.02565631 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.858334806 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.015224996 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.858453035 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.854683344 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.848556736 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.088912776 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.867092268 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.360018299 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.865210259 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.848505314 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.940484936 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.0184224 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.352013696 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.862796888 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.026623751 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.301944343 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.875035631 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.855780824 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.301633629 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.877463008 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.856701347 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.849552453 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.84911473 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.848292139 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.891075375 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.866170207 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.288377059 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.366259269 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.218835215 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.877128987 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.86479124 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.848913311 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.199130549 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.858249646 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.848099925 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.083436646 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.374457187 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.865345377 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.857772214 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.351355134 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.867041695 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.868628453 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.858100996 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.091350716 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.867679847 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.892124973 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.850119449 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.856034426 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.851159782 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.868843393 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.857493829 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.8491587 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.340086393 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.964464284 seconds)
  done (took 229.925342166 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.84588115 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.874642855 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.845398592 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.877977616 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.842540005 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.848446683 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.843591573 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.843488667 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.849061288 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.843681806 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.844611925 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.84440052 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.844088934 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.849074134 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.493339541 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.852800375 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.453954563 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.846153034 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.844555055 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.855880031 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.624064217 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.851734279 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.845111706 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.868298768 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.845725823 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.846039006 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.846488974 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.97103784 seconds)
  done (took 167.721570695 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.850498224 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.032922638 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.875881145 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.892126947 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.864899491 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.848880656 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.875703319 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.873283677 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.860076764 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.848383988 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.848867348 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.91388205 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.863446486 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.99146676 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.884797772 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.886115871 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.956604559 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.860122132 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.850360982 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.850908583 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.880415885 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.849554262 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.9135515 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.980844052 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.8724668 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.970506994 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.8614486 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.853179505 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.85251066 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.972289063 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.874439802 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.913085269 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.881770695 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.874143777 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.978700656 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.972952847 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.960630802 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.882575925 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.85692712 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.850387862 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.849551045 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.839632569 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.971199736 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.876241294 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.85354131 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.962040679 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.877521683 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.854298861 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.861756055 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.850238826 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.866464339 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.874574808 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.924962999 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.989519384 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.888868054 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.881952095 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.878379566 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.141824396 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.863723731 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.954066725 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.846997157 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.973077567 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.875865753 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.839972772 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.853747748 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.861245351 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.882472379 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.885366391 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.960964825 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.862826712 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.955689098 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.889906119 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.859808515 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.852781073 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.854933829 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.972031738 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.975924678 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.889748555 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.892178407 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.885524815 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.850697414 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.855079365 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.841298985 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.872907968 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.860562696 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.973218632 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.98113894 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.863863176 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.85542497 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.856956447 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.857201929 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.881224079 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.984079075 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.891810811 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.955689897 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.924603206 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.933184932 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.875530006 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.867235879 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.861992445 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.919822275 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.874164084 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.865706956 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.195837802 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.928486522 seconds)
  done (took 201.121724774 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.311804879 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.910129322 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.916908591 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.170218395 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.281830386 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.694085396 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.906788417 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.908693888 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.932907528 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.100571371 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.973774582 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.923555552 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.893577654 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.882946054 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.909462394 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.929436006 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.91853134 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.218059731 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.040706476 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.996059559 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.889451145 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.220437703 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.229803899 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.319472001 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.941559691 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.264248595 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.589771909 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.049190498 seconds)
  done (took 61.113783089 seconds)
done (took 814.518145196 seconds)
SAVING RESULT...
DONE!
