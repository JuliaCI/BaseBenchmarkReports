cset: moving following pidspec: 31008
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.971793008 seconds)
loading group "string"... done (took 0.594049961 seconds)
loading group "linalg"... done (took 9.370238303 seconds)
loading group "parallel"... done (took 0.192834404 seconds)
loading group "find"... done (took 1.409310763 seconds)
loading group "tuple"... done (took 2.23907568 seconds)
loading group "dates"... done (took 1.397839244 seconds)
loading group "micro"... done (took 0.223797969 seconds)
loading group "io"... done (took 0.582502985 seconds)
loading group "scalar"... done (took 44.108809311 seconds)
loading group "sparse"... done (took 13.628508669 seconds)
loading group "broadcast"... done (took 1.294749189 seconds)
loading group "union"... done (took 12.355362609 seconds)
loading group "simd"... done (took 2.60882841 seconds)
loading group "random"... done (took 10.430493477 seconds)
loading group "problem"... done (took 1833.243366758 seconds)
loading group "array"... done (took 25.130027815 seconds)
loading group "misc"... done (took 1.162574898 seconds)
loading group "sort"... done (took 3.601541076 seconds)
loading group "collection"... done (took 18.676167659 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.738407128 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140129945 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.215573406 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.363216186 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.229418084 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146873217 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.168770758 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.605635717 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.934011755 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.281447315 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15141105 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.584590295 seconds)
done (took 6.233201776 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.279732345 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.384438764 seconds)
    (2/2) benchmarking "String"...
    done (took 0.175536863 seconds)
  done (took 1.156603365 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075402162 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.183443681 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111996177 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097265467 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111230763 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10981942 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.110845286 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109365246 seconds)
  done (took 1.433876683 seconds)
done (took 3.551915088 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.550743081 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.920958515 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.526248838 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.168263654 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.199869834 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.177620645 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.312801293 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.155920527 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.109122411 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.106182038 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.215200396 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.354886905 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.494845412 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.993051691 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.103211179 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.109534145 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.094690598 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.698496722 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081156452 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.131817056 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.592444818 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.113629062 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11346526 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124922472 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.20199311 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130499401 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.15397854 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102947033 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.676995294 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103113876 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.227246373 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083951944 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.171520106 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.252699793 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.081718191 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10585406 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671121029 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.183130315 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.115394413 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099073352 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67777985 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082151612 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.236317821 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103711246 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.095801748 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18609469 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116253138 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.095850287 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098702171 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084406134 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.157456403 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.469169495 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103702801 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.16727903 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.106516266 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.687047229 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096692509 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.153683216 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.137037787 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.103512682 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.080836912 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.108512911 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.150590573 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.109912192 seconds)
  done (took 19.923349171 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.161168314 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.164098128 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.090643903 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140983663 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.144693139 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.093519044 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081906279 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091417323 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126111292 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.187114562 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137357245 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.168253665 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.087503332 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085793726 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.140560493 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248547022 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121980594 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118535665 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085323579 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10375615 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138320011 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096429415 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106720233 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108643909 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166413294 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201236567 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10626471 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.118357106 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096594784 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114977696 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.137914997 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147681409 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091055384 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083281413 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.183524519 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118868064 seconds)
  done (took 5.212474542 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.220002037 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.113771605 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.234078353 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.176745976 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14631798 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165262351 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.15368848 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.295883398 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.287734894 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179766487 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126527991 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095818284 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091627409 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079205033 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092054698 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.672306198 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179827524 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148958331 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.149544253 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101673583 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.094385552 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.378996268 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084714977 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094904476 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083789266 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.091810268 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.130005592 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.221134411 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087204872 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.339425296 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118380556 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106595057 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128542264 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190710987 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132155884 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140068677 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087008337 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096850773 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.218517973 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108248189 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076448888 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.127204916 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132094025 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132330743 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09823901 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095473711 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.243541905 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096331609 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.107234415 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.170215473 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197633648 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.135992766 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079024496 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.383636022 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09735356 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10588992 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097685158 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.335389337 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137244258 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080676947 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.093444266 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085596794 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094220832 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.441531002 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091554306 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.324097765 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.091252445 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.165515259 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09730888 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097625502 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105181511 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085948833 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100775386 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099959025 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.094674365 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.093343294 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080726607 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092748189 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084807665 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.119629144 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.156214118 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099562856 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078838566 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159828586 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116058163 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098071016 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124228321 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09893243 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078116738 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126561651 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095913942 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08315539 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.187921551 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087107557 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120214181 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101064283 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140191818 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094957901 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.245023394 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080650707 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123052619 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09858333 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125977389 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10638694 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095152102 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098160894 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078558946 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095183674 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14540073 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.093344104 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07863456 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.097954876 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095835728 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096222918 seconds)
  done (took 24.670390078 seconds)
done (took 50.404675418 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.511447993 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.117458908 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.116889582 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.116480303 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102148255 seconds)
  done (took 1.64700807 seconds)
done (took 2.298947948 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.37633942 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.186482895 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.118761912 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.185878897 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.103041226 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.194156581 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.189825357 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.104055115 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.221646561 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.097782181 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183012673 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097491418 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088664638 seconds)
  done (took 2.831960934 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099724045 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.122038703 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085345132 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111734674 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078819247 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114024221 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109433391 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117040079 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110661806 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089322613 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093670862 seconds)
  done (took 1.780886967 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097812218 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116338134 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084439049 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108923526 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080150644 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109355164 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094053903 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119604538 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109126578 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092346623 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093789513 seconds)
  done (took 1.754459948 seconds)
done (took 7.009389373 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.119645508 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.670775158 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.149468278 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.199386088 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.37613712 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.24205712 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.588366803 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.163232968 seconds)
  done (took 11.374078436 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.173163386 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086210234 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102065451 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.10032265 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08608055 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101652539 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086010072 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.099799014 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086262968 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099068408 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100952838 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086074876 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099367892 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086424503 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.0993097 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085799115 seconds)
  done (took 2.30017866 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121149704 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121388158 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107976428 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112789653 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091527101 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105463844 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108369038 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.093525327 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103202664 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103241942 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09782343 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.110498414 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.108616396 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09040845 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107326753 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110603842 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090087555 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106227187 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108970536 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09517038 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.111196232 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.105736584 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.095561634 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109821912 seconds)
  done (took 3.281450644 seconds)
done (took 17.605245931 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.177371347 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09875398 seconds)
  done (took 0.933805993 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.150254697 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.151280672 seconds)
  done (took 0.964660184 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114884632 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097531948 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140513122 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11801461 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085162852 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097183758 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.13443353 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098474516 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084157461 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.099008973 seconds)
  done (took 1.734557016 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092324333 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103239263 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.098331992 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.160619274 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.097564352 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.103396952 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090417955 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.104671556 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.104772947 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.087446555 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.108225542 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122854773 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.092002208 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125539602 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105406165 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.107967828 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100072878 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.106670559 seconds)
  done (took 2.577823542 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.087020866 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100364605 seconds)
  done (took 0.854645244 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092667253 seconds)
    (2/7) benchmarking "second"...
    done (took 0.099961843 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090121365 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102944945 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.099890505 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085703476 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.100464494 seconds)
  done (took 1.33978398 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.551311036 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.275091483 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.377353434 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.120685849 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144011252 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.380606328 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.159800413 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102434368 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.115737189 seconds)
  done (took 2.936873109 seconds)
done (took 12.00413824 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092406096 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.23389247 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.592922751 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.123456736 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.085255346 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.154842124 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.306711344 seconds)
done (took 2.260291409 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.369679697 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.157499377 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.091357254 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09692995 seconds)
  done (took 1.381865291 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080915704 seconds)
    (2/2) benchmarking "read"...
    done (took 0.106892184 seconds)
  done (took 0.859762777 seconds)
done (took 2.920664547 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.11468414 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097088151 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081269333 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098239493 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080870703 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097796013 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081748842 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096463303 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081354138 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096131937 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.083182451 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.096206254 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081924693 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0957114 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095329075 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082996299 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096055374 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082425354 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09590154 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081690276 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097115334 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083779699 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096932104 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.082630629 seconds)
  done (took 2.891142833 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108162809 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101371807 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103851168 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089562954 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105985296 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089193573 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104025119 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100565188 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089448554 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09996768 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104825794 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.089933156 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100343466 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.090934062 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100096039 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103925847 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090390658 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100928826 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085801016 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104836573 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104507529 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086638193 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104657923 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103806222 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.090927134 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104955391 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085922321 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101879318 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103753644 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091140669 seconds)
  done (took 3.620494435 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.092871617 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094892335 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080699374 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.107408072 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079670987 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098911912 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080608427 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095287534 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081435413 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094851957 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082812704 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095092338 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079587763 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09650898 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081424496 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.103760313 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116577108 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.08040546 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094988779 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081404403 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100135824 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079957438 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097974513 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080347389 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096877923 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080054012 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095428328 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080065165 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096140658 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079691297 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100886047 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.087262928 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093986693 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.108255344 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08846026 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.095394822 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.0893344 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095332267 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080864642 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094722516 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080922198 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095441645 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079678605 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.108026159 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.084203282 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096190176 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080121018 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096451769 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095306011 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.084796948 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.094682288 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.080465823 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09668062 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082754625 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101308594 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079960485 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096427622 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079230323 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097258508 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080657316 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095343218 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080809601 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.102338851 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080796257 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12081887 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.107032833 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080229554 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09623088 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.08565331 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.104691939 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.083019915 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.114618237 seconds)
  done (took 7.263710741 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087390651 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110016112 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085631623 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099915852 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08121861 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09661819 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105787176 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08149865 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100345809 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.10253114 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097300841 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08514789 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100929011 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099202718 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082081428 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100509195 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.092873388 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096431898 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081007966 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100445249 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081463256 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107325017 seconds)
  done (took 2.760373167 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.242434343 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105893403 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.15351093 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.229597282 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.121852497 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099986402 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103325657 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106085091 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089233088 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109459871 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110385104 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088401688 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121893958 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110637885 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110503333 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09753134 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103710035 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112342725 seconds)
  done (took 2.902015926 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101718509 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10229264 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125648783 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.087376443 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101251573 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087514124 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109275609 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116393301 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087747351 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101725129 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111859543 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086574931 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101581 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086854497 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102055837 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087293433 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101223014 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101499687 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095799734 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110439993 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.109502644 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097019068 seconds)
  done (took 2.897185521 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104747974 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102329996 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.137252106 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091053646 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098402311 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082254712 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107081052 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.102464473 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094372928 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101206045 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08687026 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09883221 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.110552035 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088385729 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109752055 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086970532 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101200925 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086161332 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101841426 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09788176 seconds)
  done (took 2.677793945 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.178743007 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102428729 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.117115862 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130794658 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101182483 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.117964512 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.129867194 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10121659 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116752358 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132804816 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116010652 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102189028 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129606193 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123952591 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101682647 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13040839 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128768965 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130345925 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102065624 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115843404 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131543413 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115865583 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113989657 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116528035 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.118164419 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101650122 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116711413 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124378369 seconds)
  done (took 4.036250901 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084910248 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098031744 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083543951 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098074951 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.083243352 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098354716 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.083288158 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098046452 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083143257 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099221735 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08267022 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09799615 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083101772 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09731533 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083625622 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098285146 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083458537 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097540459 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08384479 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097926335 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083582023 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098043419 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083938496 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098056191 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082742305 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099275048 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084007372 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099077685 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083484816 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09857907 seconds)
  done (took 3.418063991 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.098634104 seconds)
    (2/2) benchmarking "in"...
    done (took 0.125885007 seconds)
  done (took 0.914333027 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.087217576 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119131117 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080694861 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105276025 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.110044328 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084961566 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111307842 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095096708 seconds)
  done (took 1.486588718 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.153715112 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.151573289 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090551742 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115303333 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.150722069 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.143024793 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169549977 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090523069 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103750336 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.095875204 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.147091163 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081459767 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107992623 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086032547 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10628501 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112245573 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083166766 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.111501034 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.092910449 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102674538 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089739645 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114736363 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108779314 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095865504 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099434085 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109472795 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097328593 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.11425407 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101485841 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094242295 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.103532858 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.080972571 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.104096737 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.0897571 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.098653247 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.150076374 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116432138 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086483101 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106741753 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090205204 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110405476 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097946955 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091325523 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104114206 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110380348 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.090551687 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.105955912 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.083374 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096663193 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083949796 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098284668 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08406321 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095957752 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107407644 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090666226 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117342488 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.102731177 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086835484 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.10086739 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.083526074 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.104632334 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085274666 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106705563 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.103551952 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091177565 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105143217 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104376193 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.083153823 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095572524 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083191884 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106414602 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106475205 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109408255 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.106407855 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091925261 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098997429 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087263126 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106394856 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104630062 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092932877 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.10527341 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093348068 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107773852 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100007356 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08498137 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108717009 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.087016519 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103237392 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08936001 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119271796 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.110829764 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082182027 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09706767 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093610656 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.101513512 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104533694 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082047322 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106609606 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.081001511 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106870974 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091062486 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10335272 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112223012 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092036763 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106727485 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.105547612 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.125709906 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103541708 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.099894496 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081178212 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10655223 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083365921 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.105642761 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080838066 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102360302 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101321261 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.090650187 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109746326 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087758843 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105645449 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108616859 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093638851 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103333835 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081382796 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101013568 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089985237 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110259712 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.109457242 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.088355243 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.098760055 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082162628 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105507902 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08983216 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103666837 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105913082 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086916715 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09738511 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083469232 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106510655 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110564094 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085776234 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.104576465 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092535072 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.104501664 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.103054578 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092180679 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100524633 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080815177 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107782758 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102522697 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.083487554 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111020052 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08548503 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102553361 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085991438 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110027865 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101789749 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.09130638 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102623413 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091306599 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107151194 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081194147 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102205875 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103381688 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096201291 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101564369 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082437019 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097633705 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092022286 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098656745 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.104562325 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08143699 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101629978 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09138064 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098974901 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08982142 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100553859 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118864396 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099528439 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109007079 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089554729 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.108667897 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104012046 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088349799 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.106827888 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092169054 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.107413482 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.106451655 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089248931 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107908628 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085685673 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100452728 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088671881 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107646282 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.096863454 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083775298 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097584384 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090652197 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110163429 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090278721 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.107943052 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087701639 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105193979 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111516937 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086909388 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.105854896 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081175775 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106735553 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.111318805 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092256997 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107738418 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093498377 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104340775 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.084799295 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110948364 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103509616 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090123384 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099271791 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081672731 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.0982398 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.093156808 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103997191 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.083705711 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.098013391 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107041942 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093799779 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102589036 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082834196 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.106631538 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112717439 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085359672 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106115915 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085758532 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105898087 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118645075 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081239306 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.101974053 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110729816 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.090192638 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097566911 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089558532 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.103658497 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085748731 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103996415 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086680833 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103863536 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110497871 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.088307654 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097763402 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08672181 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103874171 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082526522 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099191619 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107952681 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08814949 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102915151 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096869257 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108117022 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106743847 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088947714 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.106145872 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.091766464 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.109115981 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087544108 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.107411573 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.100596141 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081991292 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103520433 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08192286 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.100794001 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085798072 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.107524653 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103280807 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089286994 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105424029 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09330085 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103198698 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107795772 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108608235 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.099445164 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097325657 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087920868 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105943368 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086078901 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.101825198 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.083342273 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110879762 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.107206431 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093559875 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101171887 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082604579 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107489675 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085543437 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109391201 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.108249221 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.092022932 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.100504392 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.090721817 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.102628621 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114225399 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082982222 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111559589 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090071068 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106018498 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102544134 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088060007 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102707806 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083269425 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104163639 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.090960501 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103575642 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106768478 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089410168 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.102964269 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085652545 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101163872 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108276313 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087644705 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.109968544 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.082279482 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.098561577 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082195878 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.108346012 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106746768 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.0927895 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.100434521 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.088114804 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108414972 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.089998857 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098660168 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094548354 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109996699 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.108306432 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098264729 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.098748165 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088525974 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114341897 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099134298 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.0878202 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100716488 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082961502 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109336661 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.091154883 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110054133 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103782703 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082786126 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099616977 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.093250309 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105323603 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.083641228 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100893449 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090587172 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.100695088 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105956734 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.091876539 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105951693 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093111741 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108989114 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.089018226 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103816783 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.109471851 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083352112 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100495389 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082809204 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104493529 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.092389122 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099400814 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082434568 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.106304145 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104080525 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088319159 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.106299931 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085878055 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110313101 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090674227 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104857032 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112898346 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083768549 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103591499 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090191582 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.108476205 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082413143 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.1058425 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104435262 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093089058 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109289834 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.091495643 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106704114 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107019145 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083783139 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105975947 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.091450437 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108788066 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082390056 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109999286 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11076226 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.086706327 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.1038372 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088181414 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101138283 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089637103 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.110509779 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103931304 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095717555 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108540862 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087854642 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108036447 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091133904 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106953193 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111080059 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086180409 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109596679 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082569719 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112177116 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.106147112 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.093034699 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102861438 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084043849 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107669735 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.09090971 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106647135 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.110189256 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.092932992 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100184337 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084637219 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.102511908 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086600061 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113607829 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110804184 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088484862 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105279705 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.08384307 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100770931 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109472611 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083924851 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.102091245 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089990927 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109326014 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087018382 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101482255 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.106178995 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093769424 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109790348 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091479134 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101099701 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10765535 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.092612876 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104653549 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084518594 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103648817 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093901734 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107022413 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10341059 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083023546 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114461429 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.109746889 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09426869 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102870274 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.090049291 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104526695 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.085507495 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10991713 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10461141 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091526339 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105603863 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091312665 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116690057 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.09803978 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087003087 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115959372 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09059803 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112625965 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.084417505 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105652114 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109904001 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09345509 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102538868 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083075612 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100562964 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087679871 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100997684 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100889686 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099879213 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110811725 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089395376 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106974437 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106121725 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08556 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.102171413 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082585158 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109869936 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087029234 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114107139 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082100087 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101128658 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101243882 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091248854 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105448245 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090280231 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.102146295 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.085000385 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100671067 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088596861 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112600882 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106395772 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.092527012 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1051211 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088716844 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102668697 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115955687 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084961811 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106314726 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101212175 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.110162724 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107496101 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09279816 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111913802 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.093027478 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.102919165 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.110263097 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089182287 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.104936775 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.093454554 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.111397409 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123422382 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089460315 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100565944 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.089756509 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104133187 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084000777 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113464011 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110141788 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.092996324 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107550953 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086048709 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111836387 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112085125 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090417825 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106986017 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10633159 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.090154087 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104220914 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.089989601 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102289249 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.094087593 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.11089387 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090692993 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.1123329 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.100220357 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100059472 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114040068 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.094019798 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103050321 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.099834526 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08418513 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.102241753 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.093667789 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101409208 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.090785968 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.106501233 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.089609997 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107402226 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106969791 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088188648 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.109668631 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.091277006 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100277027 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.092148765 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104993885 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106988758 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.084903135 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.110629841 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.09491824 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110948663 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096975882 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.109315755 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10588872 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087878121 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106887382 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.085348646 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.107977005 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089410678 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.103193121 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.099954003 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093321774 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110620289 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089947647 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111062094 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095736751 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106615955 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.110783005 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096162577 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101312359 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.08458238 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108606536 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.086114542 seconds)
  done (took 59.892005529 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.163364563 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091971678 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101984558 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086010085 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133096314 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10341706 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08508906 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104387406 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086303234 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.120458835 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102231833 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086037951 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.127592229 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135643005 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13246932 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120743147 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085357279 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104652228 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085341182 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103915407 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126822007 seconds)
  done (took 3.029252578 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113578913 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122596249 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122674031 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126631019 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097866718 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.121010418 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.121830155 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121708966 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.124212729 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099722241 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.125965265 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120982714 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.117269184 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.100631664 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116890916 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116965159 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.126703704 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098389933 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121594768 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121548413 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115465028 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106031155 seconds)
  done (took 3.298326789 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.099053964 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106989064 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093279253 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.103738146 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.090641618 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.103870162 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.097588389 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.105149136 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.096512598 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.105197012 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.100503912 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.08825853 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108583608 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.088635315 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.102292094 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.086963895 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113223137 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.090502803 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109792568 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.103557094 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110541674 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.10503135 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.104145787 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.08481852 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.117952993 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.092142593 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.10735399 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.090785497 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.101010745 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.09021617 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.104211796 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106068158 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091616041 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.100708695 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.083522583 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.108069911 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.090809436 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.104793135 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.087954187 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.108222396 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.105178906 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.09246461 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.11234405 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.087810659 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104445659 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088835768 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109979293 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.086551358 seconds)
  done (took 5.513758746 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132453725 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159654939 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.096361833 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.130622666 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.128213203 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.122511348 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.111192071 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.150452475 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.09524416 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.110915493 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12867749 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.11084938 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.117279187 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.117460069 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.095880707 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.114195097 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.115455371 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094031154 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.119582343 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112060182 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.103504998 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.114171507 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.129868481 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129063695 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.099610524 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.115159779 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.113176108 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.101928146 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.128328115 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.120519214 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.116758091 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10234341 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126295753 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.112254638 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.093995208 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.114102768 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128446298 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.098659283 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.114012716 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.108627242 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.097373561 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.115681438 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.117374419 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.112431249 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.114677199 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.115424642 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.09437223 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.109954808 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.127311572 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.095493125 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.122983781 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.129516182 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.117449081 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.097449868 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.117677498 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127874348 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.094871165 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.114739497 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.116060313 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.128221231 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096302271 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.117636656 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127453661 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.094796217 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119797455 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.131070934 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115413143 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.100392289 seconds)
  done (took 8.714689053 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105857777 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.135168538 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128383337 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128222793 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097283685 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115245995 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115678536 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.098411034 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115635602 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124040148 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098122195 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.219390284 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090808534 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122859346 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11548826 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097061704 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116024915 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115672994 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097818755 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115874167 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114430404 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.1282575 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.098962947 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128281579 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131481868 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107823315 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.098617834 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115542194 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127878677 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.097614592 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131230342 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.116310833 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115443872 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.129007037 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.114801388 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.116259633 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105567443 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098348905 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.117143542 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115867083 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091117509 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127972657 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115010928 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.090969498 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115356907 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115948977 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128921664 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114164327 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123167196 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124139187 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116480303 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110909395 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117371347 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115681289 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.128426159 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.138238254 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129589779 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11188586 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117780537 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129452252 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129352511 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.139506077 seconds)
  done (took 8.043530968 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093288557 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106280788 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088247688 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.105296102 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088090029 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105679647 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088391046 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.106164919 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088305709 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.105396172 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088099683 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104429743 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08853541 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104576451 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088064249 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105174446 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088367136 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104298141 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087439571 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104962396 seconds)
  done (took 2.687327078 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.104115039 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129187601 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.091266094 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119179548 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108787349 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.100824348 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110698909 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109599136 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092882634 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109159605 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.120680389 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104449815 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109020561 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.117194585 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102421996 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117070104 seconds)
  done (took 2.495436196 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118253083 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122851667 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.163651267 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.113487073 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.088611429 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.118796553 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107155714 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.087110386 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10425373 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.098414153 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.114707079 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.09986939 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107089382 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103382223 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.093100911 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.113833411 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.087758622 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.114091204 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.088474334 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.182422132 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098394397 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.112877127 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.090711179 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.110472459 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111568548 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.097790802 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.117738915 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.088175231 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.108754825 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107183076 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.095525873 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.118365238 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.087148835 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.115167638 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104088728 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08958243 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106583837 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090064835 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113802887 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089381706 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105667293 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.112143622 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089895744 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.1083558 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.087086017 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107542173 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.086480522 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.117788749 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.110898267 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.095655598 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107247868 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.099570222 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.114530944 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119324133 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.099375321 seconds)
  done (took 6.595619459 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109810009 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111110277 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095859831 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10547526 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.109827282 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.099668175 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110283478 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09377751 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112288689 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084771988 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112958939 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110834665 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094040969 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110668586 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094063595 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111669046 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084765449 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111805723 seconds)
  done (took 2.623601645 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101612839 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108919044 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097155964 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110394157 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.091116456 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109164477 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085813566 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105558047 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104550388 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093976111 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109902102 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091214199 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104361333 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.092723798 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.1107432 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091236102 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.11054294 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086897631 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.110636767 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104786374 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092522937 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10455464 seconds)
  done (took 2.979839449 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.108109799 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.166462709 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.120561446 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.176894036 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.10933864 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.088896392 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.11928536 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.110117634 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.110050038 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.107950493 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.106980029 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.089754027 seconds)
  done (took 2.173678996 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123874069 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149960513 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10826328 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09201339 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12271143 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115589489 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099461762 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115787468 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127244441 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130935803 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097713014 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127953989 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126619784 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129777361 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103972989 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12334032 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117341976 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115721429 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093272391 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13790045 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116309137 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126887003 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099959739 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116840201 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116133379 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1112936 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127700571 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133418202 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116932122 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130107301 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105808718 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117664749 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128883253 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131749515 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09366894 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128224204 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11639617 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139774485 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104547852 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131670281 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110193224 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121326072 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110583114 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124246402 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128659598 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1177359 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106518055 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116565129 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116740899 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1468669 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104352156 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130190912 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12289115 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127264514 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128333166 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145658364 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133106394 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128836631 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104264741 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132405265 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129982591 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122394625 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129704446 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131883783 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10520308 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131764816 seconds)
  done (took 8.727289264 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142702172 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11101526 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116844592 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133112411 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110637488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117381799 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116720995 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09901723 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118097416 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111510602 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166401854 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098629874 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130545111 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130308908 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117465307 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098567695 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117466403 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129585554 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094207363 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163833861 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098879824 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130077946 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130043507 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130132795 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132872027 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10370857 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117582793 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117033038 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098616678 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118470125 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127352506 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097963651 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131422861 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109913528 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129165868 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099205786 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118067322 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124296108 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099272071 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124227445 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12979581 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1411115 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116781795 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098966785 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134223826 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118352964 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118637762 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095726988 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117317707 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094974226 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134026652 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133803109 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133150031 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130159325 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118393696 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099120304 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118699951 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116149117 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100204769 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124453074 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131063657 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098673607 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166222415 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099510568 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1175352 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130287685 seconds)
  done (took 8.646907399 seconds)
done (took 160.961787322 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.154406463 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.171009764 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.148402648 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.148748234 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104978774 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121440439 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139683773 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148144963 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.086264275 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.104883073 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.08576913 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.108559705 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169882253 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086373235 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10311697 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090847126 seconds)
  done (took 2.735181044 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.190918815 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.316413394 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125919705 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.089614126 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.115794767 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.107918951 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.090667363 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110629082 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.08670926 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.119183859 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106392132 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091065768 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.119480914 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.088274337 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.107660994 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106244723 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.100078996 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.108203875 seconds)
  done (took 2.954819935 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116849176 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151517506 seconds)
  done (took 1.040236334 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129860232 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.191465189 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.3120234 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167103521 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.136617065 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131729696 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147740093 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127354969 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198440771 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131006829 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.131041144 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.112649176 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.120469825 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.119788723 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.123702637 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.092740536 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141441673 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.121788829 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.102698423 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114316867 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.135491028 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.094578861 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.119609721 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.123024914 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.187514874 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.130394999 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.095311575 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115078175 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113488673 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.102375048 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.119325555 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131464992 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.129872756 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178273742 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.11885139 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.173764755 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.12155338 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110320147 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.103545597 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.112098796 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.115611769 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098521188 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129489202 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.111413813 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.094882072 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.122264202 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114102271 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.094967404 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121178708 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.123464464 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.103398291 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.119778959 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.193073912 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.103789989 seconds)
  done (took 7.786119844 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.901424706 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.134707969 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113047208 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.035967436 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145115691 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127279635 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.884960714 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136688285 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252381259 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.89862954 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129867256 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125737333 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.25283286 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.269482584 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.199520177 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362831443 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.739540076 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126791404 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.143788318 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162283402 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119480088 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141408203 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114204245 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.437075632 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.113984911 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110293647 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.099367113 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123902389 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175329912 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.111089325 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112702829 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.198113633 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.300444695 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204625004 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113162646 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109167563 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09000518 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.203530215 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.292475603 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.24205141 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184183463 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086960987 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109997625 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123435898 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115141799 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107070262 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178255668 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.211634056 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191401379 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115178712 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124153692 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101438747 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124496541 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.196583364 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.088153175 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.365729869 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.369032862 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112106393 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120948812 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128921928 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.289826522 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.091195322 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.255249937 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139134538 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.237239509 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109364129 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.810542534 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.183928 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089286977 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119987342 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118198962 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115871409 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104327047 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175168793 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391596496 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127408157 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115515894 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089825782 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.262277417 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.11117268 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08993092 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.199775329 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093673773 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122268555 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128442689 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12524223 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188746422 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.266604498 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126792457 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121031344 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114727049 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104512214 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.114868415 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231865832 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.246550478 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.195946653 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229122261 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124695775 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.198823531 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185012795 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123483854 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18974864 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119739955 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128766044 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105727982 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.242832072 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.171648024 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.092853579 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117478801 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098710369 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.153820389 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114847114 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120872819 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186256808 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.500309852 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.182896455 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110932267 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094102616 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121649043 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177859393 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119964989 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.286573757 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121231546 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185794912 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118965725 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087925464 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120970625 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.198869742 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106738983 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121069273 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125183474 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100969756 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.288210528 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.245114039 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126386031 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.259893979 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185997088 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.102474202 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.211679182 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1006856 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.206219072 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12080283 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105268879 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114070966 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804542164 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126052061 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099661463 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116893497 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199328211 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110203048 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092391561 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.110439515 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088572867 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.830822899 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113326666 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.088408598 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.111697445 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102890095 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121518918 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11775074 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097400277 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.198967406 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264803163 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123820755 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118010214 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091536006 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.174007194 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115724652 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.110082501 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091742384 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.11120845 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102435166 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116736687 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111158996 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190159001 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.174960596 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.267820195 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.548679533 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111111409 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.090990867 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.275359291 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090583967 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.337102794 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121508488 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.254485 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.2022614 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088901587 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.36897527 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.203531372 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201291589 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.093893619 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.208725507 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087783375 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118137281 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.176630941 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11147496 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118499012 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176817296 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130189002 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1249285 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.19000925 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091126017 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.267628876 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088664722 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.207469454 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09424345 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125866304 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.340381054 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11088161 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132300546 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18012972 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115317566 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.093878816 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.732092451 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.091775584 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123127326 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121747328 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.253716471 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183031947 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121034405 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121633968 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12423646 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182803875 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.227193921 seconds)
  done (took 46.823674018 seconds)
done (took 62.110146324 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316402142 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271414326 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.333255609 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.22849118 seconds)
  done (took 2.031333871 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.228846221 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160710793 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.18752324 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110099398 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.195977043 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.109179557 seconds)
  done (took 1.787165868 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.528756402 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.405272891 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.364226766 seconds)
  done (took 2.09785833 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.259021332 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.287229584 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.357526082 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.488540596 seconds)
  done (took 2.305371046 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.246298675 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134565282 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126188789 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.179518183 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.21707443 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.218873429 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.151809421 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.167627231 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.117401198 seconds)
  done (took 2.414087177 seconds)
done (took 11.437738999 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.280927496 seconds)
    (2/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.155056383 seconds)
    (3/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.324489207 seconds)
    (4/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.29870842 seconds)
    (5/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.12037827 seconds)
    (6/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.291769225 seconds)
    (7/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.261690994 seconds)
    (8/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.237809378 seconds)
    (9/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.320367455 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.162001572 seconds)
    (11/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.096712381 seconds)
    (12/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.260449892 seconds)
    (13/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.130670801 seconds)
    (14/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.218033179 seconds)
    (15/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119790167 seconds)
    (16/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.182017512 seconds)
    (17/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.101429137 seconds)
    (18/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.225914603 seconds)
    (19/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.154875671 seconds)
    (20/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.244171003 seconds)
    (21/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.158916575 seconds)
    (22/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.325169423 seconds)
    (23/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.217984115 seconds)
    (24/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.176877774 seconds)
    (25/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.082244589 seconds)
    (26/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.169791977 seconds)
    (27/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.185806513 seconds)
    (28/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.118825457 seconds)
    (29/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.206383609 seconds)
    (30/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097046098 seconds)
    (31/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.129993836 seconds)
    (32/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.08404019 seconds)
    (33/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.128808389 seconds)
    (34/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.146221724 seconds)
    (35/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.203104523 seconds)
    (36/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.294204602 seconds)
    (37/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111054466 seconds)
    (38/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099824131 seconds)
    (39/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.139830127 seconds)
    (40/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.097339092 seconds)
    (41/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.168530421 seconds)
    (42/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.102700618 seconds)
    (43/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.094961873 seconds)
    (44/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.168216011 seconds)
    (45/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096979995 seconds)
    (46/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.131299214 seconds)
    (47/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.119651089 seconds)
    (48/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.095123642 seconds)
    (49/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.261039453 seconds)
    (50/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.152104489 seconds)
    (51/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.202715271 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.150494728 seconds)
    (53/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.120546311 seconds)
    (54/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.194400347 seconds)
    (55/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136698784 seconds)
    (56/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.172604763 seconds)
    (57/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.140125407 seconds)
    (58/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.125853214 seconds)
    (59/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.172598565 seconds)
    (60/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116413456 seconds)
    (61/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.082318166 seconds)
    (62/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.140322629 seconds)
    (63/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.094641053 seconds)
    (64/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.198505569 seconds)
    (65/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.191182247 seconds)
    (66/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.198527161 seconds)
    (67/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.110255134 seconds)
    (68/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.104031526 seconds)
    (69/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.082057687 seconds)
    (70/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.194175034 seconds)
    (71/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.148112456 seconds)
    (72/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.334540175 seconds)
    (73/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123305711 seconds)
    (74/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.166611396 seconds)
    (75/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.121009534 seconds)
    (76/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.216051087 seconds)
    (77/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.157118915 seconds)
    (78/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116906322 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096694678 seconds)
    (80/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.196482 seconds)
    (81/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.203785833 seconds)
    (82/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.13282276 seconds)
    (83/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083256093 seconds)
    (84/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.177505699 seconds)
    (85/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.1023036 seconds)
    (86/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.175655368 seconds)
    (87/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110260907 seconds)
    (88/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.136663823 seconds)
    (89/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.182829072 seconds)
    (90/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.132357987 seconds)
    (91/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.205906342 seconds)
    (92/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.134582192 seconds)
    (93/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.144451969 seconds)
    (94/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.117507432 seconds)
    (95/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.166150118 seconds)
    (96/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.147916666 seconds)
    (97/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.122119023 seconds)
    (98/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130948647 seconds)
    (99/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.08189616 seconds)
    (100/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.12744422 seconds)
    (101/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.081905191 seconds)
    (102/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.151555788 seconds)
    (103/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.0819194 seconds)
    (104/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.18135924 seconds)
    (105/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.156676305 seconds)
    (106/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09726524 seconds)
    (107/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.132194559 seconds)
    (108/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119893139 seconds)
    (109/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111359942 seconds)
    (110/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.120152033 seconds)
    (111/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114000843 seconds)
    (112/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120936606 seconds)
    (113/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.123704802 seconds)
    (114/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089603301 seconds)
    (115/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119708726 seconds)
    (116/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.191026924 seconds)
    (117/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.082586279 seconds)
    (118/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079992188 seconds)
    (119/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.101639176 seconds)
    (120/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.107599202 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.119008058 seconds)
    (122/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.191420295 seconds)
    (123/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.082611923 seconds)
    (124/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.202693135 seconds)
    (125/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.100966595 seconds)
    (126/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.099327665 seconds)
    (127/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.189959496 seconds)
    (128/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.268592523 seconds)
    (129/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.103515733 seconds)
    (130/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100282056 seconds)
    (131/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.190843664 seconds)
    (132/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.127756177 seconds)
    (133/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.084137786 seconds)
    (134/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.118343757 seconds)
    (135/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.082080023 seconds)
    (136/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.107905934 seconds)
    (137/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.097883594 seconds)
    (138/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.119457676 seconds)
    (139/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.088089998 seconds)
    (140/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107219203 seconds)
    (141/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.088714839 seconds)
    (142/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.224834106 seconds)
    (143/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.082143991 seconds)
    (144/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.1191479 seconds)
    (145/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.081501131 seconds)
    (146/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.120305186 seconds)
    (147/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.116768422 seconds)
    (148/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.090347367 seconds)
    (149/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.117594631 seconds)
    (150/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.082990131 seconds)
    (151/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117646564 seconds)
    (152/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.17255593 seconds)
    (153/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.128323427 seconds)
    (154/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101152655 seconds)
    (155/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.170156888 seconds)
    (156/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.103065474 seconds)
    (157/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.109443802 seconds)
    (158/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.102203831 seconds)
    (159/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.111793788 seconds)
    (160/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.132839749 seconds)
    (161/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117590006 seconds)
    (162/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.112544179 seconds)
    (163/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.121601651 seconds)
    (164/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.082692616 seconds)
    (165/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.121615544 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.116673022 seconds)
    (167/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.082447717 seconds)
    (168/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.080489072 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118129108 seconds)
    (170/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.148780691 seconds)
    (171/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.096732213 seconds)
    (172/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.147967701 seconds)
    (173/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117292821 seconds)
    (174/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108380937 seconds)
    (175/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.108413197 seconds)
    (176/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.083729781 seconds)
    (177/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.132072922 seconds)
    (178/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.107057316 seconds)
    (179/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.128637111 seconds)
    (180/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.144744375 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.097364167 seconds)
    (182/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110558158 seconds)
    (183/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.083242631 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.118711352 seconds)
    (185/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.101378666 seconds)
    (186/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.102927109 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089286089 seconds)
    (188/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.104229838 seconds)
    (189/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.082512853 seconds)
    (190/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.108102517 seconds)
    (191/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.090658363 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.120487891 seconds)
    (193/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.08155138 seconds)
    (194/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.132553159 seconds)
    (195/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.096864758 seconds)
    (196/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.104466839 seconds)
    (197/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.099410037 seconds)
    (198/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109871782 seconds)
    (199/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.081835728 seconds)
    (200/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.10798895 seconds)
    (201/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.097291687 seconds)
    (202/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123111787 seconds)
    (203/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.081897969 seconds)
    (204/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.102832517 seconds)
    (205/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.138532658 seconds)
    (206/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.103754192 seconds)
    (207/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.081399888 seconds)
    (208/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.108670989 seconds)
    (209/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.131994283 seconds)
    (210/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.108929977 seconds)
    (211/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.111320789 seconds)
    (212/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.103744474 seconds)
    (213/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.082198307 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.134009021 seconds)
    (215/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.081459457 seconds)
    (216/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121007724 seconds)
    (217/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.094841065 seconds)
    (218/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.102723966 seconds)
    (219/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.083961824 seconds)
    (220/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.103031342 seconds)
    (221/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.097305047 seconds)
    (222/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116374267 seconds)
    (223/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082789334 seconds)
    (224/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110608148 seconds)
  done (took 31.465829973 seconds)
done (took 32.276469311 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.493095031 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.10529121 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.124585233 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123460478 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.177282873 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104056317 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.131355742 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.126986709 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.107226732 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.120221004 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090836556 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.130154641 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.12298518 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.179287668 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.103847387 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.117102964 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.114918182 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.107798578 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.130402626 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.131275796 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.177864452 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093291183 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.129084178 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.092175836 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.176747015 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115769503 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121919907 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102350685 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.128436834 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.098359777 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.122724703 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.114169924 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111185487 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.130774689 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091021267 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118805884 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111827161 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090289696 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.120515186 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.101274055 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128248987 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.100141857 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.125300699 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.116168617 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.099726275 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.119874509 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091313865 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12786605 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111029738 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.10130638 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114412132 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.110335073 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.120599171 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.113278278 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.091899809 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.115751616 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.107062552 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113107947 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127994331 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091318201 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.114690919 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092982451 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122491799 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091415024 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.120597485 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.093479918 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.121595429 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.123757084 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.098314576 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115215576 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091236591 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.119339848 seconds)
done (took 9.57125787 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.101734526 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.172873348 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.177548696 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.184228323 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.145790645 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.13188203 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.135334699 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124039045 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.131573274 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14013846 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.150871216 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.123355023 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.18372387 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.129406989 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.131169967 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.100594122 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.129682349 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.126335459 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.189349788 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.140359239 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.127516642 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.131238146 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.150139929 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137793723 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.099587868 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.153351761 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.12336719 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.101945767 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122477132 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.129761851 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.118358179 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.121648696 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.12258778 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122332058 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.13299569 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.127334146 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.110922088 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122483783 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.097272393 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.121391083 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133362661 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136967638 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.098426758 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.132121347 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.1005969 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.128625961 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.129404808 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.106694972 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122952009 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.1241027 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.102401743 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.149543078 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.128421695 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107719302 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.127864489 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126162 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106962039 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.125960936 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.122436226 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.106191342 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.118829524 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.099844627 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.123678009 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.146582534 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.101000266 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.129125527 seconds)
  done (took 9.308387452 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124302742 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.156591655 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129790314 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13046641 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.10548808 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.110110191 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089442297 seconds)
  done (took 1.709680898 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094961955 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.182267361 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.180564353 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.17916725 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.173934341 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.212410602 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.114404831 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.113511759 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.149491931 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.102448981 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.180378894 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.235595315 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.098755514 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.131216297 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184196711 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.112808546 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.183293585 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090718034 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.127185584 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.181813203 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.13012922 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.120739564 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.130256365 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113578321 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.174657312 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.093197247 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.259495819 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108954877 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122201494 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.12511066 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.105255297 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.196348432 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.175260581 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.130611923 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119012258 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.177236246 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.174247092 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10397892 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.214924133 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097976888 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.176408388 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.126056884 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.127115256 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.106311431 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.127054815 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.161083917 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.109724344 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.130367356 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.1253856 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18384369 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.104730759 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.175346926 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.123725829 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.125316587 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.104292451 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128194434 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132164335 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.104693733 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.181431276 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.129473366 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.176529869 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.175874885 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.175901796 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.175341117 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137329893 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.17664093 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.173062712 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.123776487 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100940468 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126962019 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.177161609 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.12435868 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.105011938 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.162110244 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130314299 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.175721642 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.17762452 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101439386 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.129662343 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.119059922 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.101627789 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114782719 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.164298509 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102899017 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123941966 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13323513 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.105069653 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.128070988 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.117416975 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118718901 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.126583317 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.128056381 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.108850405 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.12588461 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131609546 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.179608112 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.126233101 seconds)
  done (took 14.536876098 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098913267 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114737856 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099414905 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116418684 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093551692 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116784814 seconds)
  done (took 1.512022278 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.131668461 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.128122762 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.139060225 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.105922718 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.183253295 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.181546971 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.184798792 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.127491103 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.145469275 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.136954559 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.183371566 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.18708438 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.184194791 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.130116562 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.187595217 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.109142129 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.186688324 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.129728992 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.136692944 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101907902 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.133588338 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.130830947 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10115096 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.175756151 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.129546669 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.130380889 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103322985 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.137741062 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.134863564 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.103771802 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.129403223 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.127875596 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.10145547 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125936321 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.186641533 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124596366 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101391182 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.132827335 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.13075426 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.106756121 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.208270809 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101318048 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.13543828 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.109954083 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.127113543 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123380884 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.131401654 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104363189 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.186034246 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.132563022 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.134460275 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.106971151 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.131114639 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.130709969 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.101511582 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12648002 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.131634845 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.188755962 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.109484198 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.126048731 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.129940193 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.108347303 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126728301 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.132386704 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.107403083 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.132048277 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123242138 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106829203 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124655205 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.128736276 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.112251455 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.129482628 seconds)
  done (took 10.537833466 seconds)
done (took 38.457099264 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.115460454 seconds)
  done (took 1.98995117 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.941209727 seconds)
  done (took 1.818857085 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.877158709 seconds)
  done (took 16.791909988 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.549587994 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.636394868 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.997586049 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.166840668 seconds)
  done (took 3.229171945 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.953447772 seconds)
  done (took 1.850441988 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.335400397 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.274813407 seconds)
  done (took 1.494952934 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.831299358 seconds)
  done (took 1.723439206 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.358290195 seconds)
  done (took 3.245337577 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.373528679 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.192799261 seconds)
  done (took 1.464528368 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.659460983 seconds)
  done (took 1.553662039 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.267682892 seconds)
  done (took 36.161756174 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245780908 seconds)
  done (took 1.153276524 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.31356675 seconds)
  done (took 1.209983873 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.35638062 seconds)
  done (took 4.252961497 seconds)
done (took 78.823580601 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.107436981 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128333175 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106535134 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126841614 seconds)
  done (took 1.360700944 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.118621652 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128554528 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10876892 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127164726 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.136590701 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.106453747 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.126164109 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.13398695 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.104657748 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.129802918 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.104779478 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.127954926 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130154266 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103574855 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.124851186 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.105615329 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.132268186 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.128904374 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104833341 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.128969829 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.126001518 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.105634647 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.130977726 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.104729911 seconds)
  done (took 3.780950417 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.108748347 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11990556 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.1003067 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118873435 seconds)
  done (took 1.352709063 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.117741497 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.145128757 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.141664701 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.112774027 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144183394 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.143057447 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.101652997 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.12311727 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.103155264 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.135464395 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.124038304 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.124351097 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.142549113 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11871862 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.115159173 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116720412 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.098597568 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.144671068 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.13514304 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.115440559 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.123393108 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.112240594 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.134341852 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139924372 seconds)
  done (took 3.915913936 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.213114767 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.118038046 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.152124353 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.178698995 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.154435436 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.103262691 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.154948334 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133112642 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.111336265 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.131018711 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.129741258 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.186837069 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.106834328 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.132982715 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.128141879 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.11239017 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.133984033 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129978873 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.109910359 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.140779054 seconds)
  done (took 3.666714733 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.109724289 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120995066 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091377044 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.119656147 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.104512602 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.123180929 seconds)
  done (took 1.575383014 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096796186 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113492446 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092757517 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114224294 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.097615146 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114271073 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08995158 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114197626 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091907799 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114052452 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092539634 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113038643 seconds)
  done (took 2.151524671 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.305101323 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.095648511 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122910583 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.119176213 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.102311128 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.120325531 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135872223 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.095876996 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.251421986 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.096965371 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.136990825 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.194135382 seconds)
  done (took 2.682020652 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229703 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106192067 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283030666 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.384306574 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168418189 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177390604 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281103383 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178531154 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201442215 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149532823 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209183417 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166640965 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164279016 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19033024 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149280015 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.196627839 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187385713 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214698522 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157726153 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220013737 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19914925 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179025605 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193559204 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160591395 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123222019 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169378291 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.127598847 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135288416 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186391504 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183375243 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188672379 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15999653 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150061213 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218463362 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25562449 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194008889 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.324367262 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143100209 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.200922663 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.195958265 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281601602 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148411262 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211804241 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164591659 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138689783 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194926763 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168117338 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.195132367 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141893672 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12493288 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225288186 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18924659 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198238205 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148504343 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303757352 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157271387 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157813619 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190185297 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205422003 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228394003 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178625636 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.106450766 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218114506 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197356923 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195646269 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.157702332 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.185047634 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110702799 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213870989 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211333093 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194385423 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180077328 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223506089 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119229195 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174306432 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180853816 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165311472 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191717006 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171906229 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.128406177 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160204143 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121913433 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136325821 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196153341 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104645893 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244050423 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142474542 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.198957753 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219116364 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169147037 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174946264 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176639724 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180647207 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157512535 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101911528 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15592655 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.173062908 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167820455 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140765529 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16808061 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155444842 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.113139401 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162985246 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.13017795 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171099597 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.119571756 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179996129 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198533197 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.115791002 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177070641 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160164467 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.171164835 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184314871 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19951673 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140400941 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140401445 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208711496 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169030554 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.122866652 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.213468637 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204195631 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.177004953 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121914464 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208971719 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211523567 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151121955 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203610725 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153489782 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1169413 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.164576702 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169361367 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169596575 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16612411 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136139252 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.165378654 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210952 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.13507701 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121250187 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187673953 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138173062 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135910668 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127914352 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146365925 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.152015176 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.164337969 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.150002083 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167430553 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169275172 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138798481 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170045116 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154079924 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238062139 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116373398 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.170143257 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157617534 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.126846143 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.196769714 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198800214 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138027613 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20064248 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.183151231 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207915638 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175149845 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138744358 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193514661 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139026694 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.104212237 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204404364 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173994814 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175639797 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200584337 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203019353 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183584392 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.165396359 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158684485 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181160972 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.187604024 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170626961 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.15570528 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173590679 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182445253 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.128409564 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.108112438 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.138475857 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150063204 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113851222 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141391623 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196061786 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175886029 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223381748 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172389387 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147623586 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19880284 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.111121996 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176871055 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.213197914 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121406458 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.226269517 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195217068 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178282461 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12710634 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211646364 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.105228879 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132964668 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142921654 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182473472 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116873124 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143039417 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155113831 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197496212 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188536573 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160214342 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238494458 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183887745 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208958632 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.105067752 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.174525536 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183688163 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170748879 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.193344736 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142962526 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.171769341 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191178045 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129040268 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235361837 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1760532 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182741866 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217159206 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.16821388 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139347221 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160383836 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180092337 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150495139 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176892844 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130800564 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145061473 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163966693 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.147384777 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135311263 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198935156 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152043298 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196248763 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.168275911 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190045327 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133917358 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153329338 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17235003 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130673642 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.125599563 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183186509 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202660667 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156958924 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170184032 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188288307 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139073051 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.316769677 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205210355 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226250963 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122271677 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154743306 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174739405 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172394621 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175696997 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197440259 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155829762 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196988832 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17109528 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.152797511 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144182088 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131890698 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161156648 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.164252937 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.144944921 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.167644443 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.152406087 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201689749 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154645769 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169753247 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176933596 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.132887346 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.16765665 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150837215 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216737913 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169073095 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193016936 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.167983793 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181299728 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200002578 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13349379 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13569356 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.112456451 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19700412 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14068447 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170134395 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192070384 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231075441 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173916485 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182109177 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122189754 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.133819505 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171952567 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158601496 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211393936 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153154582 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.149123912 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206748268 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.164200435 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112906897 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175830816 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313212288 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129321774 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212279572 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.10319121 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281602604 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134312329 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140408239 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146848597 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21093483 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133204757 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.191916288 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176552412 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155674639 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172270668 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146236642 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198856867 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219898975 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210242483 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190559141 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.153816524 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144943133 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200953222 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189174005 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126994453 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.156334593 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174706298 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197361807 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.201185584 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144434933 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173067351 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174173749 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171238344 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191395532 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142943426 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200651567 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139848427 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180457359 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149579549 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109665344 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168689034 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.217280806 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1166068 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189378512 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169421882 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141144272 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137286606 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16432969 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144146052 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155812166 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139344701 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192886659 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.135986326 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176818462 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194016477 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112791772 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168590377 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155941835 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142018064 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152644577 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128888729 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145728823 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.177710914 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199110415 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.143221459 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191524598 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18943095 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177532247 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172308671 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155502619 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.67518991 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.113109397 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194195009 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158890578 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204335253 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159178554 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178322329 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172642303 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160788558 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182185001 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16021011 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233257571 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180471506 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.173927755 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140509685 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129738821 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155052463 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142506927 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16303637 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174497606 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124620415 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.148040475 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.170494811 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157465436 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.155297185 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121909226 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225050779 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132497066 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225384655 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197850022 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122573758 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177904573 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219330274 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111352958 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.176141198 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212704671 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126424157 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165086592 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.142364762 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.144907691 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191860149 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.106289055 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172252181 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172239837 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174823607 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175546308 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147443165 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171087893 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126359784 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147015572 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136323741 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.169687666 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168478771 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14116094 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.11319824 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169116218 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170548764 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.169648367 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135813588 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.154026873 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191687854 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.131853955 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143261202 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285094572 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171947874 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209190711 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.165636068 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144484026 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126475691 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16944971 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.167072594 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171424124 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139280699 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11355885 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141849206 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.191089808 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.169860648 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167354732 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192039739 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173826949 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20243624 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.155152807 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276130058 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122676024 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165661855 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.141302226 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.139629241 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12534408 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144554978 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156218552 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203028341 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192764755 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163692882 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.155020721 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136586072 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.107326231 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141190372 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172330705 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165482313 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168851586 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130453112 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.126535508 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154805763 seconds)
  done (took 83.008450134 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.155987446 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.147998566 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.152244703 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202244461 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173883159 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264607929 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211377219 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234337068 seconds)
  done (took 2.53877754 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.134972952 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.118759502 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.147912028 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.129976823 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.12976912 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.404113206 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.142967492 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.128998726 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.191487031 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.141990116 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.126025461 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.660766196 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.126525968 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.127591926 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.103370257 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.128970603 seconds)
  done (took 3.932695934 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.259435591 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.524165806 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.695106593 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.250232747 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.233890264 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.185919618 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.709373093 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.175153819 seconds)
  done (took 12.030279975 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.139708073 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147818169 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.340663198 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.216111507 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.16651818 seconds)
  done (took 2.01735298 seconds)
done (took 124.904099064 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.113320603 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.149747937 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10789171 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150359857 seconds)
  done (took 1.511291835 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.15783878 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.117878573 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094467886 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115500881 seconds)
  done (took 1.487446071 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.520321453 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089336086 seconds)
  done (took 1.641513955 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.141386517 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.15028631 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.151373502 seconds)
  done (took 1.453218275 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.118999629 seconds)
  done (took 1.119644474 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.110875204 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129239036 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.183349896 seconds)
  done (took 1.430269024 seconds)
done (took 9.647464196 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.133911048 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.435695089 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.418058005 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115814031 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.725882917 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.40858887 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.023632675 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160670352 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170369921 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122246588 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115997675 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.701070258 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.033574685 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.3509772 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.01938364 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.349271879 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.706532835 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123246833 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103919607 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123504159 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.001951684 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120725154 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098821027 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125180351 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.700044764 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.401637356 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122296823 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.363143564 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122392633 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126750349 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.386765792 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121484987 seconds)
  done (took 17.028263514 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145067364 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.187166361 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131075791 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097520616 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.127036468 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097479037 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.134047838 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.136705708 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187626689 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096041902 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144783902 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120590345 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101831147 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122466842 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.120009978 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121990508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098708369 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124521173 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.129619919 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098636863 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142830363 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094437129 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124546351 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098731408 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121983814 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134931779 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097832237 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136414431 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095622928 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127709279 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127414929 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096654301 seconds)
  done (took 4.928188893 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.153092255 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.19836461 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131329036 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.158554394 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.174220356 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098633013 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.21326325 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162791128 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191989753 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120934117 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119450348 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123472525 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.161917163 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097089374 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146304493 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096928215 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125996622 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098118209 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130541325 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123633547 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118867463 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122450473 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098756906 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125053378 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096747706 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137453525 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121715976 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.110806774 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122993823 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128427937 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103237654 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122499783 seconds)
  done (took 5.250250027 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.113849739 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.13650211 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.118775897 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.146809871 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.130340558 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.110017142 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.135530996 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.103301221 seconds)
  done (took 2.005412904 seconds)
done (took 30.215934822 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127710371 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.142450414 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.117904377 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.137294805 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.194987498 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.099660094 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.141294542 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099294128 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.137369502 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.118514468 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.122653443 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.1017026 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.1437924 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.13267758 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.178632996 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.111842942 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.183201819 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.178853695 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.130222764 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110731395 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.129825631 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.186327251 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.107872937 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.130155223 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.188518775 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.099033025 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.177230973 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.134117279 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.105656376 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.126870763 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.178996378 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.134527154 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.104762777 seconds)
  done (took 5.516797287 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.198921473 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.205847849 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.100320536 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.125675222 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.206216776 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.099431797 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.192878988 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.126433756 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.099218087 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.12616691 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.098499 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.194446966 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.229470431 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.218112323 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.237257945 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.202638907 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.191215674 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.205369999 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.190938055 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.207857638 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.195533845 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.098615763 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.204516489 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.209984012 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.12691542 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.097983943 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.230469936 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.229957081 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.232808482 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.193482381 seconds)
  done (took 6.301730145 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.116834687 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.140874488 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.123673798 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.198611409 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.168398828 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.111091205 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137482937 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.148028981 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.124103107 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12363604 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.107225361 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.161990938 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143158724 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.107785654 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.12967139 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116772594 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.152231521 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.12632101 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105060561 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.144628748 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.116371031 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.144601167 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139725408 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.107762683 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.124406619 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10785503 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.132328513 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137804024 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.10520783 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133563305 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.102011983 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.129009551 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099900363 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.134086292 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128219049 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.111831617 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.154510598 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132520176 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.111071905 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.162431276 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.106390924 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.129070228 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.146316357 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.149295858 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.12638794 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.109623802 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.137760825 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133666357 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097412181 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145478599 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.111758508 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.126220248 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.146557763 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.097139435 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123307563 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103851599 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.126257764 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.100841854 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133476362 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101703758 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.152359314 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.133755698 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.104931221 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.127217373 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102462738 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.124203341 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09681247 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.131772483 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.148482389 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10319138 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.156996867 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097637306 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.137541631 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.133201108 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103647894 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13445039 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.096807384 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131771094 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.105957974 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.131210632 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.133087997 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.10207439 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.129435806 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117984838 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.147066464 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.137940243 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.109422887 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.136264313 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101037924 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.126368612 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137976125 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100717823 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.128860341 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.107217003 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.126118387 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.100295398 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.137100902 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.133521727 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098317954 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.14378174 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.10374395 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124463047 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.114239291 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.126086993 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.101665731 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.135091604 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.135600596 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.099145137 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.134392082 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.109446223 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12477223 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.102362068 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.128972075 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.123028813 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.115907022 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.134413215 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.102159711 seconds)
  done (took 15.609722992 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.300873777 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.304391396 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204744465 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.362773148 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.153134154 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.192733727 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.302322248 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.223868418 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.128058438 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.171050146 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.18789735 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.233486293 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.127108793 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.130573194 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.305500592 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.368017365 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.160473816 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.173262136 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.1705887 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.15193361 seconds)
  done (took 5.39487379 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.126937582 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.170198727 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.15794667 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.158188906 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.105888808 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.140965525 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.098904224 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.150958563 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.133902606 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.105455903 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.124734965 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.139123765 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.109326969 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.136269692 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.117665788 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.174727169 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.13050788 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.105992332 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.148996326 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.130912358 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.107829368 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.155807616 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.136830907 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.125822675 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.138981316 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.140992435 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097696781 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.133544968 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.10124794 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.13327529 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.105403884 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.145977298 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.134089128 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106166104 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.136564373 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102598507 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.128082357 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099165591 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127527929 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.129363764 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.118590781 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.137991633 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104417383 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.122338114 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.112159774 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.129275698 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.111737087 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.137093975 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.137780524 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.116370251 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.136814027 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.110749097 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13451202 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.14515288 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.10245289 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.141631673 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.112514033 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.138695499 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.132600915 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097445966 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123795383 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.104513521 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.131854972 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.111093541 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.136554573 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.148958761 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.113259186 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.125358819 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.134096474 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.103971056 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.129262982 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.117885863 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.153134436 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.1312036 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.104034915 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.148496781 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.102034651 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.118283861 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.110019878 seconds)
  done (took 11.026605526 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.134138028 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.132328455 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.119774783 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.164276666 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.144576075 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.104562548 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.132109125 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.118319004 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.139685762 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.139700048 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.111627812 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140956239 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123953817 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.142028904 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.130876066 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114971838 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13772465 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.169996168 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.1196179 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.162034935 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.143489726 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.105615027 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.141473998 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.111835733 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.163606833 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.139451533 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.133665578 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.138050731 seconds)
  done (took 4.815931776 seconds)
done (took 49.683268359 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.224164972 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.329133268 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.119119259 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.113337319 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.152516525 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.12842163 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.117206251 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.350317383 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.787788897 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.106268029 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.117141855 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.11540472 seconds)
done (took 26.70370267 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.440621029 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.708823354 seconds)
    (2/2) benchmarking "String"...
    done (took 1.439067598 seconds)
  done (took 4.183220309 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.109822704 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.111636376 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.35710381 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.107862303 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.124640809 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.126309847 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.120444415 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.126914959 seconds)
  done (took 15.112303282 seconds)
done (took 24.884443209 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.136405783 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.292711867 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.369455889 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.13113003 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.108733374 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.114855377 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.104633824 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.146128873 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.110598818 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.106703635 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.110320146 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.39416227 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.118630807 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.52728849 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.111407621 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.121593651 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.12541428 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.334959217 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.109893556 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.159795012 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.102175962 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.101075627 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.134348803 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.144467041 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.126748768 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.111355297 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.156843877 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.110059805 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.304110027 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.142394152 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.155071799 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.110975672 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.169822203 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.115948899 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.213855639 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.136997912 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.291526324 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.111516923 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.104482335 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.116134325 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.297737137 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.500506766 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.115692877 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.123422571 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.116172219 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.138961322 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.108955496 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.837410746 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.11917882 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.122455552 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.153128668 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.520672882 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.118626662 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.141338495 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.12540566 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.350307709 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.129388826 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.129403342 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.13883 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.114472747 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.12742459 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.127245644 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.127094597 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.118353922 seconds)
  done (took 137.637541426 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.115635027 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.114619309 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.116490957 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.177429934 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.115844656 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.117723298 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.115991725 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.111343148 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.119071859 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.121416711 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.115954596 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.118886994 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.11891396 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.088541139 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.122230284 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.140738873 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.118592634 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.125683432 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.124887708 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.116272877 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.12001673 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.117990766 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.132959912 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.120248435 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.151859097 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.203959693 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.144302304 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.133975042 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.123810468 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.114698662 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.146834832 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.180468302 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.669133283 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.979587812 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.127764878 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.120993306 seconds)
  done (took 77.046903899 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.118195395 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.118943835 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.113531846 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.146047367 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.1193551 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.641336151 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.639385139 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.84507645 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.381072868 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.314086476 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.366798321 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.11953643 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.208864939 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.127714447 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.115469479 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.127617374 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.159343362 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.120353785 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.118908544 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.638292279 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.132672032 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.358794175 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.280977371 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.130896758 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.145832947 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.518715344 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.117242869 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.118067418 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.147461844 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.444044084 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.162780829 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.117641975 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.45375836 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.09555547 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22954835 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.118846895 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.148349423 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.118829792 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.399189069 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.115732911 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.119768448 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.124158896 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.751651211 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.120614475 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.639815314 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.120333639 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.025723754 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.117232011 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.121146196 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.934072305 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.705126359 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.133993834 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.121863885 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.120384165 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.118207664 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.122992636 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.151181877 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.906717428 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.211500815 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.135908608 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.124746673 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.151498021 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.121745259 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.195371414 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.135586444 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.711123526 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.189473157 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.339469903 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.120758301 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.643569906 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.1239474 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215097383 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237330861 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.118534287 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.123291224 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.120300223 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.121296535 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.229250079 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.118644801 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.507336299 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.11800772 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.284635523 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.133158904 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.324735781 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.219934816 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.118408789 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.446912498 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.122884587 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.121958362 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.816751759 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.215678778 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.121807838 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.124805939 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.122703561 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.510927725 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.644607733 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.315652327 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.125226058 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.193410344 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.123194104 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.518476994 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.628776782 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.754901818 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.125508211 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231517006 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.289081633 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.137193939 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.123064291 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.32791873 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.125480995 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.178242977 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.123626506 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.124209113 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.520242364 seconds)
  done (took 355.809467508 seconds)
done (took 571.531834875 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.809272236 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.765380155 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.891280517 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.792079019 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.75789569 seconds)
  done (took 10.061706757 seconds)
done (took 11.105278026 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.305193402 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.306254018 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.180114859 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.310036023 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.155821872 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.326620172 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.287757374 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.145576347 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.224275135 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.196352174 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.226984636 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.17351858 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.16006212 seconds)
  done (took 17.046520221 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.378509246 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.130471277 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.208726643 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.358307013 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.168706124 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.423948347 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.435506239 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.129659371 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.267409885 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.14197963 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.141183528 seconds)
  done (took 16.831290684 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.390424713 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.132445155 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.195524482 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.36550185 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.171214557 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.403201322 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.412174002 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.130631766 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.305711716 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.14536118 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.14220152 seconds)
  done (took 16.844456711 seconds)
done (took 51.771229998 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.169225505 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.292095562 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.154478231 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.14493584 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.140726829 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.144631066 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.148154525 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.13852718 seconds)
  done (took 10.382885452 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.138060134 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.135387486 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.138943765 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.137330035 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.135655535 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.137146315 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.135425331 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.13506508 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.137112349 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.138377247 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.137944568 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.138920841 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.137653598 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.136192412 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.138985593 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.138568449 seconds)
  done (took 19.247486092 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.142005823 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.138389988 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.139177843 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.138146708 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.137308288 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.140348966 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.140549957 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.138417484 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.139013847 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.136799458 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.139768961 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.140301075 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.139102048 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.139040946 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.139082953 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.141687613 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.141647655 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.139850191 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.144939793 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.138035594 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.139090807 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.141028845 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.13950908 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.139581295 seconds)
  done (took 28.404993871 seconds)
done (took 59.084704833 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.131527781 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.139582422 seconds)
  done (took 5.323164719 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.203437302 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.204927355 seconds)
  done (took 3.461096349 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.141349171 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.139643324 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.142044481 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.138791836 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.140281133 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.141318009 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.140979013 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.141511883 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.139165636 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.142193652 seconds)
  done (took 12.45794169 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.141432542 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.141767872 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.141032031 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.142849076 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.141243199 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.141548162 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.140566543 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.140914657 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.140902381 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.141087022 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.140373508 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.141196343 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.141383462 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.142043921 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.140644922 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.139744787 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.140900326 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.142949462 seconds)
  done (took 21.596088329 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.155380355 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.164185482 seconds)
  done (took 3.373685815 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.282950174 seconds)
    (2/7) benchmarking "second"...
    done (took 1.184894347 seconds)
    (3/7) benchmarking "month"...
    done (took 1.257960185 seconds)
    (4/7) benchmarking "year"...
    done (took 1.249434254 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.183740517 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.161584234 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.184817452 seconds)
  done (took 9.560050708 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.143598313 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.34219996 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.449781099 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.70472548 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.143454896 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.189066414 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.988906891 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.191723765 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.179225983 seconds)
  done (took 13.386798259 seconds)
done (took 70.210009117 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.130393082 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.197583421 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.155958887 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.154036825 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.466896392 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.18133072 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.1321576 seconds)
done (took 15.476211628 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.132105258 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.12785601 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.136009134 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.140178815 seconds)
  done (took 9.591704381 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.104361016 seconds)
    (2/2) benchmarking "read"...
    done (took 1.507408581 seconds)
  done (took 4.668589169 seconds)
done (took 15.318971978 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.14550995 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.144199534 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.143433872 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.144923217 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.144590667 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.144718046 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.146010256 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.144547288 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.144021484 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.143480606 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.144531105 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.145057591 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.145073328 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.143976162 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.144858335 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.145532238 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.145798133 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.146662415 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.144809941 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.144388926 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.145719292 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.146806206 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.145526808 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.144740084 seconds)
  done (took 28.535323924 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.147646113 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.145952932 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.145635243 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.145317508 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.146383919 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.147501377 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.146373149 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.147099635 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.144987422 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.146971962 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.146653665 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.144461611 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.146659816 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.147039057 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.147331021 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.146856935 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.14721892 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.146585397 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146974993 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.147190406 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.145857315 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.147133995 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.144774095 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.147434474 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.148967423 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.147826073 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.14734999 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.147637596 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.148061385 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.147333059 seconds)
  done (took 35.461155736 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.155094435 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.157193493 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.147052715 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.148887855 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.148543545 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.147512117 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.146623818 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.14936159 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.148692391 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.148334974 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.148045468 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.1476134 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.149040686 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.147534115 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.146054766 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.147233097 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.152802265 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.14560018 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.148882322 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.147692931 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.150343326 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.149485729 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.148415815 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.1487616 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.148031941 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.148998756 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.147870436 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.14811434 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.148729934 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.148030133 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.147871415 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.148712287 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.148708847 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.14965962 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.149493221 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.149362999 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.156162033 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.157994981 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.149502444 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.150631375 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.149433853 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.149864225 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.151565701 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.149845474 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.149766076 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.151368056 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.15149067 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.151097961 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.150195675 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.150444543 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.150473674 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.150926562 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.152440264 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.150789325 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.150620698 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.150977208 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.151439504 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.151691066 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.151187358 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.151053252 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.150347305 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.14991948 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.151370108 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.150434513 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.153926681 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.151415616 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.149232653 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.151836449 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.150211341 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.152399817 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.151275483 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.151523207 seconds)
  done (took 83.864380971 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.152694917 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.153713292 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.151803249 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.152520103 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.153258978 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.150339304 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.152574649 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.15228366 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153588496 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.154209606 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153810033 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.153834346 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151838459 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.154348182 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.151778571 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.149851849 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.153229637 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.153141005 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.152204238 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.153184065 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.153535603 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.153722488 seconds)
  done (took 26.424616716 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.154464764 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.156063118 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.152903535 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.152894017 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.155593771 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.154237493 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.153735029 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.155351237 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154679989 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.155033707 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155605023 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153517144 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.153807145 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151834347 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.15388857 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.154066765 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.154161778 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.158158128 seconds)
  done (took 21.844237939 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.1548085 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.15450508 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.154696234 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.153801319 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.153397381 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.153471464 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.154392243 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.155077449 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.153043448 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.153663647 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.155049687 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.15622979 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.155474071 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.156110888 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.155674068 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.156218162 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.154566958 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.156165837 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.156296291 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.15428904 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.154059776 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.155809933 seconds)
  done (took 26.473081245 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.155659347 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.156029497 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.156986244 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.155760612 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.154332338 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.155776428 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.155851519 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.155868847 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.157330015 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.154453918 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.15488314 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.156167352 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.159028403 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.156038703 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.156622906 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.156103553 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.154194175 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.158225832 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.156720852 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.156614568 seconds)
  done (took 24.188557225 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.157940074 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.158683353 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.157791862 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.157869232 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.159917376 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.158473141 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.158094658 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.158390198 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.159261415 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.158196639 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.157732249 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.159552704 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.159953494 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.159201453 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.157301683 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.158512709 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.15778219 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.159736946 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.159660443 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.158889336 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.160904241 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.158025262 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.159503965 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.158899175 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.158690957 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.158084253 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.160126223 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.159484794 seconds)
  done (took 33.514235178 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.159459565 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.160435616 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.159217088 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.159965962 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.15734888 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.158056644 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.158818245 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.157867902 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.160192603 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.159255645 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.158875965 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.160025948 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.159468937 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.159729001 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.160691303 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.161095657 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.161327726 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.159857919 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.158755748 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.16032752 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.16046169 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.162120035 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.161733734 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.158886819 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.161215959 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.163189104 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.16014834 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.163568352 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.161059001 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.159670571 seconds)
  done (took 35.873036602 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.205320551 seconds)
    (2/2) benchmarking "in"...
    done (took 1.207788164 seconds)
  done (took 3.483784393 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.162817245 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.160611249 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.159018085 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.16156869 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.162556916 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.161305156 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.160569854 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.161508326 seconds)
  done (took 10.36110917 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.157637708 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.160160317 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.162130654 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.161906983 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.161084753 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.157278448 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.163656616 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.177784043 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.157068685 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.157754244 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.165031858 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.163890503 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.158628542 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.156132412 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.157148373 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.158380134 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.162859107 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.161038515 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.161325078 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.16386907 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.162707582 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.159222795 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.157414107 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.16155808 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.158421245 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.166773056 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.178938468 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.162350656 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.158724176 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.161120481 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.157378103 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.162392665 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.162807668 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.165564624 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.166981101 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.162387961 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.167956239 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.175935775 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.160848818 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.179445611 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.165669319 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.164220229 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.158392421 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.159147913 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.159528903 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.165397092 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.164481257 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.165521621 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.158578008 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.162285149 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.171822283 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.156573456 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.161089596 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.16295683 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.161001584 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.16570027 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.182018793 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.162801268 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.170749389 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.17048932 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.187541794 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.182724263 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.161115734 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.165631691 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.167100928 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.18139698 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.166651015 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.181148408 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.165511474 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.164576906 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.1662326 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.188625666 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.18311304 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.167028207 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.167486717 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.1683517 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.158972885 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.167339534 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.166659927 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.179192059 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.167426275 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.167299092 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.171152785 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.182946776 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.162085519 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.163472458 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.166729752 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.165809686 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.162426725 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.172685396 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.185570756 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.167193835 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.161110754 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.159821871 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.163765122 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.166146456 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.162433087 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162349794 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.166146649 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.16781312 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.166784057 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.165983789 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.173506624 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.167776648 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.169830159 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.171216628 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.184553289 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.16158359 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.168045676 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.17056162 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.168571262 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.167041284 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.168984792 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.168008569 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.166863923 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.173372399 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.16940006 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.164725257 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.167960257 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.169990744 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.170540352 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.188776517 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.169418735 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.170657188 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.168268362 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.181222321 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.169517961 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.16674408 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.169425424 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.169283923 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.169994911 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.162802485 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.169922715 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.164131367 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.16641705 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.166264726 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.169247614 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.169053629 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.168632973 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.165570208 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.165618865 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.163186178 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.166436909 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.16708442 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.168387393 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.164530767 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.170224404 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.180361321 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.167191927 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.165703121 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.170457196 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.171645156 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.166363051 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.167811564 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.165753478 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.170241355 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.164608915 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.17124407 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.17133333 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.169944827 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.172305478 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.166598261 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.171031531 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.169946201 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.169356225 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.166729277 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.170453616 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.169276219 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.172237589 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.166043016 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.173068726 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.166091937 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.169810793 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.182184904 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.17489773 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.171142154 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.170975546 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.172689947 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.173724445 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.171966599 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.170649448 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.176293499 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.172739967 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.174611641 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.188628798 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.172330136 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.172516366 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.167397328 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.167141053 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.171689307 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.171525027 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.182579337 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.177794251 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.190078488 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.170433718 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.182555378 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.168900868 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.177878368 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.174675929 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.175348239 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.175160147 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.171947645 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.170454251 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.172124404 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.169884815 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.172571428 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.169789942 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.175763185 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.174986731 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.175479319 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.177664198 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.169888739 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.169924116 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.176544702 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.177232051 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.172162678 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.169112551 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.175057191 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.170666044 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.167641806 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.174672023 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.175041402 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.17684797 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.175129775 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.170958918 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.169574977 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.170659243 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.168263767 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.176130866 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.172490543 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.169415915 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.176807797 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.183953509 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.171991945 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.176422214 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.190114561 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.172323703 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.171745579 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.17644337 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.175334881 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.173218869 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.187263841 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.176381681 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.176490837 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.176665572 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.169724436 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.176679801 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.177633707 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.191226918 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.171039562 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.17564373 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.172590595 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.17436832 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.171943874 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.171509177 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.172098743 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.175414627 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.178871982 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.178548561 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.173418133 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.176950883 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.177791493 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.175661449 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.173784103 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.187611018 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.177829226 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.172644006 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.175585262 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.174290932 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.181731089 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.17223651 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.175929181 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.173339024 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.18306457 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.201776358 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.179268225 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.191954398 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.178298533 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.177500051 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.189833488 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.17802041 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.1760423 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.1720147 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.171701033 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.173808328 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.179761601 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.174205917 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.179990016 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.174857546 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.177643504 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.184825678 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.179228014 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.172701996 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.177407355 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.18035049 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.181422152 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.172930779 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.179995789 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.174945078 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.176187394 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.173446136 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.174120278 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.180760545 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.191148461 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.174376843 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.175344898 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.174137342 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.172942983 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.175342432 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.181005485 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.178318602 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.189668735 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.17976234 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.184799317 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.175129499 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.186152072 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.181789193 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.178532804 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.191082248 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.181235578 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.174552412 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.175250319 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.180236642 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.182987593 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.196589896 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.178914531 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.185834854 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.184526018 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.18265158 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.183191324 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.183574866 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.182529073 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.181440055 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.18599939 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.195482129 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.181961572 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.179698777 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.181407519 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.180988161 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.18249349 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.176781651 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.179338675 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.18300215 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.179389594 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.176872148 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.177138559 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.184407508 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.183070551 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.185803199 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.184005091 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.183631296 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.185080529 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.196745205 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.186854453 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.185673426 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.186546638 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.199390924 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.184141849 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.199321277 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.17980304 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.184325846 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.185353364 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.180494712 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.17943495 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.178069955 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.181812351 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.181682706 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.189846277 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.182441934 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.181224637 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.179202049 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.184172785 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.180500185 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.188636735 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.205055106 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.18048089 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.190644457 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.184207746 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.182296427 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.189910751 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.185709521 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.179998449 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.183248 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.189791471 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.194902767 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.179394126 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.184820941 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.180675765 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.183696986 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.186509686 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.187002318 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.184005759 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.18751782 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.181301241 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.185600675 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.182343786 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.185415121 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.181177048 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.181098423 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.180421107 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.192208474 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.203899893 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.182436109 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.187441743 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.18949035 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.182206481 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.182022891 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.188248567 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.184089146 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.186941348 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.183159994 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.188870162 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.18912136 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.184441465 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.182792008 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.187460758 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.183286231 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.182446188 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.186986017 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.187841798 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.185353603 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.18330815 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.186656384 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.180963892 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.183432941 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.187932955 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.182081186 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.187071535 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.182294714 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.19186768 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.184636726 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.189193353 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.19017249 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.189372664 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.182249678 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.184690356 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.191419332 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.203727685 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.196074791 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.194268619 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.192837482 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.18518914 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.187540937 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.193411144 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.18497776 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.184321699 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.188448312 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.184555692 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.184557597 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.187585102 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.188789838 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.190432326 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.203688527 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.182792529 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.192675329 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.203546564 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.187596548 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.185177648 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.190210713 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.182780926 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.191182273 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.191061038 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.181802713 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.192425828 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.199287173 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.190078463 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.186823916 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.185498967 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.187540639 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.193814719 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.18951968 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.184654661 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.189387582 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.1865419 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.189718803 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.191940201 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.191282527 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.184504484 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.183916813 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.189051031 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.194605058 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.1896308 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.185074197 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.186936135 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.188162388 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.191791152 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.193253676 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.189270161 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.192503107 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.186787815 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.191652137 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.187643935 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.190804646 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.186455927 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.191154883 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.199463305 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.189297764 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.190802783 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.202727689 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.204857501 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.192909473 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.187270947 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.186327209 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.188293379 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.190966688 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.191307202 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.188126903 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.186338201 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.192289903 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.19377358 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.194944277 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.192106193 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.203112744 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.21222935 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.188678901 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.187093944 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.190714891 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.195532008 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.193531449 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.193247231 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.189745429 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.192182054 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.204776007 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.195080096 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.19741439 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.206714789 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.190333941 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.199480987 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.193046843 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.20138242 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.191087481 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.194243988 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.195149477 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.195312678 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.207957192 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.194732759 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.196874892 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.218882512 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.203688351 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.190065591 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.195071127 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.189633549 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.195349184 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.191764352 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.195062443 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.196785776 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.196575218 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.193273209 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.191216338 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.196716467 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.190923897 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.194994725 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.197445892 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.18955773 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.191423213 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.19628258 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.197523709 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.197754955 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.195571404 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.195856907 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.198688038 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.191340626 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.202560927 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.215314722 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.197656655 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.195366457 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.197384102 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.191803651 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.19541007 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.204700013 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.208356678 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.19519167 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.195679028 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.195528147 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.197571477 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.201097964 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.19262262 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.191731715 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.192149053 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.197049641 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.205018793 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.222435277 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.198706887 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.193413389 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.197916615 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.200257684 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.193841827 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.198594544 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.199249546 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.193422924 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.194976595 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.202736646 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.198562166 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.197571742 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.194529396 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.208747581 seconds)
  done (took 704.433062912 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.201563906 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.199224525 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.199651354 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.199465259 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.200666682 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.19820396 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.198831062 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.200720449 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.198946521 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.199471955 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.200311467 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.200470383 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.200711754 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.200620148 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20026656 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.200464545 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.200407128 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.199731513 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.199763412 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.199751406 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.201793091 seconds)
  done (took 26.306427424 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.200954688 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.200574505 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.199419677 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.200389555 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202349815 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.199578669 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.200440525 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20096478 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.200791169 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202753889 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.20216643 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199741847 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.201470966 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.20216633 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203213486 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.201465408 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.201065536 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203165923 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.201804829 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.20178056 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.199305295 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.200647579 seconds)
  done (took 27.532271077 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.20166848 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.201824834 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.198622139 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.202638676 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.200541353 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.203487999 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.201041576 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.202940439 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.203766143 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.196322513 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.196479884 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.198290452 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.206007226 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.21414527 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.197130024 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.201407779 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.202275805 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.202383843 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.203968629 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.203864097 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.202689212 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.220589027 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.202081969 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.199280149 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.204988843 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.205577259 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.204017557 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.202518355 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.197499564 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.208827567 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.204366752 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.197929923 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.201168073 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.200750244 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.199560312 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.209510019 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.204148909 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.204986951 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.202058954 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.203858236 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.228095217 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.201820221 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.205266704 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.223044061 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.204587245 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.201384261 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.213964333 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.203801089 seconds)
  done (took 58.907287477 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.803757255 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.822602302 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.821759852 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.834571844 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.823591148 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.819122607 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.824114017 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.819149197 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.822967665 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.82447995 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.824115211 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.822547679 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.834336182 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.820254221 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.823405562 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.822523715 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.832638288 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.823713265 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.825456831 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.822357155 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.821250772 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.825133591 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.825462773 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.824364957 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.823148529 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.835406056 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.81898449 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.821739695 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.822137721 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.836209143 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.820964982 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.825520841 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.822515069 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.825530006 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.826044219 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.823958444 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.829901874 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.824895558 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.848882831 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.827028908 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.830650524 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.826977398 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.841238321 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.823760493 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.820107617 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.820528796 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.821511748 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.825070796 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.825861149 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.821395154 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.823514072 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.838032745 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.826740821 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.824397236 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.823181006 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.840644418 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.835936502 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.824166044 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.826615361 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.830266313 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.828293422 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.830724665 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.830294715 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.831805929 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.846984531 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.829243391 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.831271172 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.834679046 seconds)
  done (took 125.324401053 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.211933318 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.209152368 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.209901995 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.208239993 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.209378702 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.209249889 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.208324524 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.208900035 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.209090571 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.211401441 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.209066936 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.210577703 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.20901967 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.213246048 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.208464328 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.210506776 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.211069628 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.211635567 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.212252727 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213167458 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.212346996 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.211650775 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.211099463 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.211905024 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.209021003 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.210531211 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.210564309 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.210284306 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.213057469 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.212743047 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.211073352 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.211125778 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.210929685 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.209391621 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.210966752 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.208758083 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.210683979 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212136205 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.21139153 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.214102826 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.210737591 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.211674188 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.210852974 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.211875456 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.212072187 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.213004378 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.213793181 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.212617608 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.213943619 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.211986053 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.213940253 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214657655 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.213732365 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.212156716 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.211137527 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.214087193 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.210940266 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.214593472 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.213616846 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.211699136 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.213509734 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.215262039 seconds)
  done (took 76.227813515 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213332615 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.213084077 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.214942077 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.214001694 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.2115516 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.212977264 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.21354079 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.214281415 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.214008721 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.21379537 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213831907 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213336929 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214645266 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214489377 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.213194547 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216055939 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212983847 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.214190846 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21358848 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.214062626 seconds)
  done (took 25.392481949 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.216110627 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.216396446 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.214847855 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.213984678 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.215457877 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.215675061 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.213214837 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215234394 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215143101 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213734849 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.215405873 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.213506349 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214275455 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.213260769 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.216700212 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.214656795 seconds)
  done (took 20.556741493 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.215868201 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.215107378 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.213348544 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.21525449 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.214416614 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.215522511 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.216064844 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.217473638 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.213629539 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.216162285 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.213571992 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.216327355 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.217357859 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.213874726 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.216823703 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.214772212 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.215450656 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.215522905 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.214825508 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.214990773 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.218096533 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.216093912 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.218777044 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.215852232 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.217293719 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.21725931 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.217701801 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.216522369 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.216849045 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.213877197 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.217230162 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.217363881 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.217488287 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.216858462 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.215622484 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.217577858 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.214597916 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.216521446 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.218020032 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.218666525 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.217769291 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.217142808 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.217279619 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.216245323 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.217883849 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.218948671 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.218663516 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.217209435 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.215547776 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.21868312 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.217189935 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.218596023 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.220560394 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.218570239 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.217448827 seconds)
  done (took 68.033082403 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220560566 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219015213 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.216782098 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.219188892 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.218902618 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.21860442 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219559647 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.218349111 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218528319 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.217339084 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218719459 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.218333547 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217249789 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220223769 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.218139606 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219714726 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.217542613 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.218138048 seconds)
  done (took 23.057557162 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.221949764 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.22063116 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.218509653 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.216805508 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.219516213 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.223458643 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220050158 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.218325488 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219252694 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219536981 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219530743 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.217071944 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21837962 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.220566713 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.218833473 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219323723 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.222038498 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22002485 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.219686891 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219464748 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.224034081 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222680148 seconds)
  done (took 27.962573413 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.215797273 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.215250934 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.216311509 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.22908626 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.236940536 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.214227926 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.218558639 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.216273134 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.234389691 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.273770747 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.267531822 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.235278169 seconds)
  done (took 15.896722492 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221154432 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222651826 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.224228673 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221569165 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221499004 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224276918 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223451135 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221816789 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223615007 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22426001 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223830639 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220542386 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22337698 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223550256 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222304375 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222001435 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222211658 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223154779 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221436848 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220853657 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223779538 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221938866 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221461056 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218938426 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222111403 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222736788 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223594282 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224449297 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222910768 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222521373 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223299125 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225297673 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222840155 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224255057 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223801253 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22342994 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22377219 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224479818 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22404744 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224352975 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.224758789 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221860895 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222467638 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223683253 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2253555 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223955498 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225587092 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225139733 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224768426 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22585901 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225685847 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225977686 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223741109 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224765324 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225019473 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225933699 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227133887 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225052447 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224733041 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225126142 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223354487 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223944645 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226345325 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224886615 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224364801 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227419652 seconds)
  done (took 81.892133316 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226412425 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.225454579 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225255791 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226182407 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226555313 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225302501 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223866957 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226317976 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225926586 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2269033 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226878391 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225880193 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227925131 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227242458 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225517857 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2261203 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227538356 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227541092 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228544773 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225427016 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227742093 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227969277 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226573384 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228460714 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227390151 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228530338 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22724805 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227488076 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227816209 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228705509 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227779422 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228281198 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227996949 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.228880071 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228793903 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2280747 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22903145 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228525667 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229643881 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228181055 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229089725 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228749502 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227854266 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228116315 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228182676 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227258898 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227477925 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229836952 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228468034 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229413947 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228764009 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228535626 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22744423 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229193759 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229046109 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228414606 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231603248 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228720311 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226939751 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227756223 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230338126 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229863216 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228708739 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229103172 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230859989 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228884225 seconds)
  done (took 82.170156335 seconds)
done (took 1694.772237543 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.391154422 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.344948912 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.224878978 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.237033452 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.221239116 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.215771774 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.233864465 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.22180404 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.225568553 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.224746559 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.225782239 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.413281408 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.218825139 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.220067187 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.22622892 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.320161302 seconds)
  done (took 25.296879717 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.252520215 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.235097962 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.342035528 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.244656269 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.255635367 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.411395912 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.283433091 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.232488015 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.398974277 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.251366856 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.231093915 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.256961174 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.229901955 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.228044965 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.249598705 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.413266618 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.477584997 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.236610358 seconds)
  done (took 27.364274236 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.669853212 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.240745845 seconds)
  done (took 5.044902287 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.251640194 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.230306824 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.232783026 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.227329811 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.225141944 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.22036895 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.228920079 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.224592008 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.217673786 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.353481007 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.235518104 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.245832699 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.2471643 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.231714762 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.234167456 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.275111865 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.396231061 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.241036735 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.237086679 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.238458074 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.231350028 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.318005607 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.274903411 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.239955039 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.35022059 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.223552791 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.235879502 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.239562843 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.358994158 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.239114324 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.22800775 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.233744101 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.234323413 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.23865985 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.689550654 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.239190227 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.256036561 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.259542548 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.235643782 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.372186928 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.231761597 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.238224577 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.222430067 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.695950134 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.377499453 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.353219943 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.238662744 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.23434862 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.234356098 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.299924503 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.236887868 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.236202892 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.294504965 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.043270565 seconds)
  done (took 79.768014987 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.232644414 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.226032923 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.402573796 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.251375253 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.221008553 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.227089544 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.243940903 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.510936672 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.264351478 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.223128737 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.518960458 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.812267128 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.250995394 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.283899302 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.09487165 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.301557998 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.226970424 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.244214527 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.230025834 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.226711094 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.777778156 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.2273612 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.245348746 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.360239561 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.263239304 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.752086122 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.228894584 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.244853343 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.248223091 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.224665384 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.7645755 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.244962921 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.305614007 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.228341733 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.501731891 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.612668525 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.581137215 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.229310898 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.284068094 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.22729647 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.236522041 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.732956446 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.595535683 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.23158864 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.232709389 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.744265189 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.226722099 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.233706377 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.231048178 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.477789402 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.229508462 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.232436904 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.246811847 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.247819863 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.226766327 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.317145005 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.340053976 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.752417891 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.230156735 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.229317124 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.244382233 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.230218263 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.235160984 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.227792637 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.247077096 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.595015403 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.377906079 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.230687337 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.595698959 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.75678548 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.244683221 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.832949954 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.246624819 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.244576915 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.448163778 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.231088212 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.231013449 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.76532925 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.24671442 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.228236781 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.578571288 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.238021208 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.526481087 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.246283118 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.228809741 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.79635538 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.236474394 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.24508732 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.232949475 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.232570291 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.246036868 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.233215581 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.509540682 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.279783399 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.23106814 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.231225458 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.268665983 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.22900566 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.234347443 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.236611914 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.818738352 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.257229834 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.231929932 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.233395153 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.232469381 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.231613207 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.232578275 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.234776766 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.502178877 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.230129025 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.250953119 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.235060244 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.228251555 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.242576491 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.371399522 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.23897024 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.545644482 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.236037926 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.229503176 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.256707872 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.232241275 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.238386812 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.23023333 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.241042155 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.092979577 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.507629268 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.249667917 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.248711713 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.2322294 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.233655866 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.254582706 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.237263609 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.32377625 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.237892788 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.02749759 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.290181104 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.241200398 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.232043513 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.235772323 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.241618057 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.239224255 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.235243379 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.529202972 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.512016841 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.378891023 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.239596975 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.236554684 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.019296522 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.260970812 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.413397414 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.252839766 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.233070808 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.492386248 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.471829858 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.237078002 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.231516121 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.234717211 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.496251787 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.235926002 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.552803309 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.794385781 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.246609505 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.245469585 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.041099848 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.930479207 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.23783772 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.237487672 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.524448342 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.252205104 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.237567819 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.235891447 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.234307024 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.246307187 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.252433354 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.239884945 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.234320184 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.237403576 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.28135785 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.42775429 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.254261858 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.23786005 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.754066205 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.256224803 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.234905834 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.247158629 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.235837949 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.236183426 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.313356956 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.236239711 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.244830799 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.237633913 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.243334615 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.773810949 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.237445283 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.237441294 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.431357917 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.947680548 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.25121613 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.23595974 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.250508392 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.14378248 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.776485867 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.291154631 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.553309597 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.248061477 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.273169185 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.237936796 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.275714184 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.779662357 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.241450796 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.259836934 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.912681936 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.254317369 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.773890756 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.23869972 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.237777638 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.858844466 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.247999286 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.231664859 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.23525497 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.25782898 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.551995526 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.238673156 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.266295053 seconds)
  done (took 476.413233181 seconds)
done (took 615.018739197 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.239384696 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.237881811 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.23365888 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.241420412 seconds)
  done (took 10.102107525 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.253039551 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.242771415 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.252783407 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.241712545 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.25337221 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.243826828 seconds)
  done (took 8.639727643 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.236614183 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.240047843 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.240841709 seconds)
  done (took 7.868471602 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.451995414 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.269075185 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.568849302 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.260920201 seconds)
  done (took 8.704451006 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.251525097 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.253479876 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.247023987 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.254250688 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.257611712 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.256294987 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.254221041 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.25313711 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.257078583 seconds)
  done (took 12.434217598 seconds)
done (took 48.899321986 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.365530968 seconds)
    (2/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.287019843 seconds)
    (3/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.301563014 seconds)
    (4/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.235450545 seconds)
    (5/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.286667738 seconds)
    (6/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.981029367 seconds)
    (7/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.235591367 seconds)
    (8/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.257691874 seconds)
    (9/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.157990012 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.316916864 seconds)
    (11/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.318408196 seconds)
    (12/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.921521951 seconds)
    (13/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.284729787 seconds)
    (14/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.430154447 seconds)
    (15/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.286153608 seconds)
    (16/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.449192337 seconds)
    (17/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.237558473 seconds)
    (18/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.410987653 seconds)
    (19/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.260397939 seconds)
    (20/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.240287945 seconds)
    (21/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.325527563 seconds)
    (22/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.478524938 seconds)
    (23/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.28099934 seconds)
    (24/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.30222687 seconds)
    (25/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.227072397 seconds)
    (26/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.430571094 seconds)
    (27/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.467907313 seconds)
    (28/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.243728822 seconds)
    (29/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.346382289 seconds)
    (30/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.308421687 seconds)
    (31/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.280438754 seconds)
    (32/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.018610984 seconds)
    (33/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.260741074 seconds)
    (34/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.339968296 seconds)
    (35/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.339559765 seconds)
    (36/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.035996059 seconds)
    (37/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.33040451 seconds)
    (38/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.277415377 seconds)
    (39/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.267466711 seconds)
    (40/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.596030707 seconds)
    (41/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.30536641 seconds)
    (42/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.021753411 seconds)
    (43/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.259530784 seconds)
    (44/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.232834123 seconds)
    (45/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.32711832 seconds)
    (46/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.56758389 seconds)
    (47/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.280524038 seconds)
    (48/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.40556312 seconds)
    (49/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.281098993 seconds)
    (50/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.333954697 seconds)
    (51/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.295409188 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.471957759 seconds)
    (53/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.277907293 seconds)
    (54/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.325580438 seconds)
    (55/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.274549115 seconds)
    (56/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.338420518 seconds)
    (57/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.254573362 seconds)
    (58/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.3668335 seconds)
    (59/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.232966389 seconds)
    (60/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.341651117 seconds)
    (61/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.244911923 seconds)
    (62/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.449406684 seconds)
    (63/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.452636791 seconds)
    (64/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.252199399 seconds)
    (65/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.348140813 seconds)
    (66/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.27309026 seconds)
    (67/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.325753904 seconds)
    (68/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.503338841 seconds)
    (69/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.279733129 seconds)
    (70/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.383281555 seconds)
    (71/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.385201459 seconds)
    (72/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.286994342 seconds)
    (73/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.360483006 seconds)
    (74/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.400590267 seconds)
    (75/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.394961562 seconds)
    (76/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.949183203 seconds)
    (77/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.28491634 seconds)
    (78/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.356847106 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.35030348 seconds)
    (80/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.457161058 seconds)
    (81/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.401831746 seconds)
    (82/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.439633619 seconds)
    (83/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.891421289 seconds)
    (84/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.285429238 seconds)
    (85/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.234671115 seconds)
    (86/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.401169612 seconds)
    (87/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.352988826 seconds)
    (88/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.467398991 seconds)
    (89/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.441666642 seconds)
    (90/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.339439393 seconds)
    (91/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.351799173 seconds)
    (92/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.264254397 seconds)
    (93/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.290863494 seconds)
    (94/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.457929268 seconds)
    (95/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.399082714 seconds)
    (96/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.505853451 seconds)
    (97/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.459842788 seconds)
    (98/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.545671049 seconds)
    (99/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.030677133 seconds)
    (100/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.355691536 seconds)
    (101/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.352724186 seconds)
    (102/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.325498872 seconds)
    (103/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.444908302 seconds)
    (104/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.150459082 seconds)
    (105/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.352540892 seconds)
    (106/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.361229711 seconds)
    (107/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.322871787 seconds)
    (108/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.280857392 seconds)
    (109/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.264276778 seconds)
    (110/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.272558172 seconds)
    (111/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.244968244 seconds)
    (112/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.275890476 seconds)
    (113/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.260465126 seconds)
    (114/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.354840098 seconds)
    (115/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.278597879 seconds)
    (116/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.949903502 seconds)
    (117/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.250726229 seconds)
    (118/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.386886873 seconds)
    (119/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.385960029 seconds)
    (120/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.285703682 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.355025994 seconds)
    (122/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.005345856 seconds)
    (123/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.944285424 seconds)
    (124/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.237188419 seconds)
    (125/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.236172547 seconds)
    (126/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.301937107 seconds)
    (127/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.060186474 seconds)
    (128/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.382325575 seconds)
    (129/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.239634817 seconds)
    (130/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.44386172 seconds)
    (131/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.005764272 seconds)
    (132/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.443989365 seconds)
    (133/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.360648642 seconds)
    (134/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.262902169 seconds)
    (135/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.985715024 seconds)
    (136/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.306604462 seconds)
    (137/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.35236966 seconds)
    (138/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.598634924 seconds)
    (139/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.422308804 seconds)
    (140/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.44232252 seconds)
    (141/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.356373375 seconds)
    (142/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.89760383 seconds)
    (143/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.379896801 seconds)
    (144/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.267451513 seconds)
    (145/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.370935626 seconds)
    (146/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.29740888 seconds)
    (147/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.452751584 seconds)
    (148/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.309688095 seconds)
    (149/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.277881814 seconds)
    (150/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.378773376 seconds)
    (151/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.271093119 seconds)
    (152/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.325774222 seconds)
    (153/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.393854615 seconds)
    (154/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.237105472 seconds)
    (155/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.070156985 seconds)
    (156/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.238489719 seconds)
    (157/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.346195788 seconds)
    (158/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.392295352 seconds)
    (159/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.39091445 seconds)
    (160/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.325884962 seconds)
    (161/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.340411357 seconds)
    (162/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.312412368 seconds)
    (163/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.279264982 seconds)
    (164/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.928270505 seconds)
    (165/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.299261835 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.375900764 seconds)
    (167/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.450926835 seconds)
    (168/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.398339154 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.408350504 seconds)
    (170/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.29817105 seconds)
    (171/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.342079289 seconds)
    (172/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.294513328 seconds)
    (173/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.40611564 seconds)
    (174/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.268728608 seconds)
    (175/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.397128982 seconds)
    (176/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.425703698 seconds)
    (177/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.248743139 seconds)
    (178/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.360961589 seconds)
    (179/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.268802411 seconds)
    (180/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.357632811 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.390080351 seconds)
    (182/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.355086646 seconds)
    (183/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.1587145 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.344190294 seconds)
    (185/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.290901098 seconds)
    (186/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.234684719 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.297043538 seconds)
    (188/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.894952626 seconds)
    (189/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.322588973 seconds)
    (190/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.298513694 seconds)
    (191/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.335798553 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.297147321 seconds)
    (193/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.321496089 seconds)
    (194/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.365246478 seconds)
    (195/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.256995316 seconds)
    (196/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.398480431 seconds)
    (197/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.270842502 seconds)
    (198/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.406952389 seconds)
    (199/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.89996463 seconds)
    (200/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.303709768 seconds)
    (201/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.38404572 seconds)
    (202/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.319755244 seconds)
    (203/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.110345351 seconds)
    (204/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.472314513 seconds)
    (205/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.294875101 seconds)
    (206/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.438472113 seconds)
    (207/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.022538672 seconds)
    (208/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.370419906 seconds)
    (209/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.293546159 seconds)
    (210/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.395781233 seconds)
    (211/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.263926881 seconds)
    (212/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.236505804 seconds)
    (213/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.421546971 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.476921434 seconds)
    (215/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.95112763 seconds)
    (216/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.272174798 seconds)
    (217/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.348380983 seconds)
    (218/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.396682666 seconds)
    (219/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.350364025 seconds)
    (220/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.231610559 seconds)
    (221/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.351300518 seconds)
    (222/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.26165729 seconds)
    (223/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.988074233 seconds)
    (224/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.418301898 seconds)
  done (took 352.59601525 seconds)
done (took 353.747025161 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.293497586 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.427393034 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.246620739 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.247527923 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.290409436 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.241761995 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.293540105 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.252471712 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.25910929 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.261096689 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.240287693 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.259727266 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.259003735 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.290136597 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.361598969 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.253722041 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.245728336 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.254734749 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.296476742 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.316868664 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288808536 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.292790602 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.273004462 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.245804941 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.295051504 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.29668998 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.254149126 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.253700433 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.257630151 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.299322341 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.250770101 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.256486203 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.308931811 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.30795962 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.294644905 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.257585928 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.291303799 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.431580486 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.29129157 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.289427955 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.26187826 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.310804695 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.257834056 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.258542998 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.305750749 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.273304501 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.294466012 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.374749503 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.240605929 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.252023788 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298124165 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.318655041 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.262928174 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.252527463 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.248455803 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.372648896 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.257568384 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.302036698 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.260186187 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.294816954 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.369265116 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.299822118 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.319692159 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.300100764 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.262200634 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.266671491 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.25957504 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.319740747 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.262335575 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.296861921 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.297366436 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.266234204 seconds)
done (took 101.701599925 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.377188222 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.245143284 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.411149522 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.25494722 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.417392621 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.407117344 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.258235323 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.259307987 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.257707853 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.090899344 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.258130776 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.257680785 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.242879405 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.255986152 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.38787269 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.259109052 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.259720519 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.98497243 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.257521837 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.399381137 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.257765481 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.258954342 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.260530031 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.075398013 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.247845303 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.248825238 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.401909432 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.259155624 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.968639248 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.251649779 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.251211682 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.965162962 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.401567269 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.280267675 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.267265615 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.271114452 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.423082105 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.278050244 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.385107358 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.387156631 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.41606669 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.298109491 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.24977183 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.25413988 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.262736436 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.261793504 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.260915771 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.291370779 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.249662995 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.262744325 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.985855654 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.272518009 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.262650691 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.265085612 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.264278595 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.292188672 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.265644308 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.262695217 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.40496423 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.262301925 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.3840367 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.076852358 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.09666595 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.265261761 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.254534273 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.266271176 seconds)
  done (took 103.534442485 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.322407858 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.333885621 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.366767794 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.277226884 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.341873822 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.375457221 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.277879646 seconds)
  done (took 10.461128732 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.266837385 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.265788098 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.320081805 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.31805897 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.265621588 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.415455243 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.26680367 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.273288291 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.264776069 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.324508511 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.266564371 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.267699613 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.273567103 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.260949808 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.31921101 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.270982687 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.377518349 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.258926123 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.266673516 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.412438907 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.264551615 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.273472884 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.310542915 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.269761976 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.266095114 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.266899725 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.099162989 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.262095282 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.265199528 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.262383145 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.265051396 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.32382563 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.265397756 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.256883561 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.264498416 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395030383 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.262809225 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.263876373 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.264128183 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.257522058 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.26384889 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.261709646 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.262450383 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.265517061 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.263697249 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.286095375 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.264552111 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.262714297 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.2685388 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.265018122 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.318944778 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.269111771 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.267191987 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.264837267 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.32232612 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.272513604 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.2678553 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.267574028 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.270165288 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.266677808 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.415126513 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.318441161 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.267496839 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.319002683 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.268884252 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.26854643 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.26559817 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.266819789 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35251124 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.265897258 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.322154665 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.269287392 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.487919984 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.284347569 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.270518899 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.265112567 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.264465517 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.269333565 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.259557568 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.268514087 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.270449246 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.264862098 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.270566426 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.266175406 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.267759037 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.437403376 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.39294968 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.271800105 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.276413693 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.270176581 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.266376606 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.325005646 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.269052878 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.268348582 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.333792286 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.377461574 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.317945984 seconds)
  done (took 131.052298212 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.276874921 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.276393205 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.26995948 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.293385531 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.265578174 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.266380828 seconds)
  done (took 8.819096204 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.267378932 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.273994164 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.269399025 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.269856094 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.268676544 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.269976865 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.271053079 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.265757178 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.275305198 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.274161937 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.274605568 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.274391343 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.273818868 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.272297651 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.272178135 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.270400483 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.271926708 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.270914462 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.272770756 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.267391114 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.264308605 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.274724577 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.270339928 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.268886961 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.275964967 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.271283129 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.284789333 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.272825381 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.271470405 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.273939221 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.294442743 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.27344163 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.267274242 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.27187639 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.275850039 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.268769324 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.27558124 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.278039538 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.275794115 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.274107723 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.27525589 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.270791664 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.273856765 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.279845739 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.268985524 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.273207246 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.283680702 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.292293616 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.274939104 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.275534851 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.278430154 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.271321528 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.273643719 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.278265594 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.274464514 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.289698359 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.285298679 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.275446704 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.274555747 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.269254304 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.28171919 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.272681561 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.275045241 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.280151297 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.276608168 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.278091995 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.270157163 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.28043874 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.277365154 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.279210848 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.279543892 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.275683699 seconds)
  done (took 93.952384391 seconds)
done (took 348.979752453 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.078279727 seconds)
  done (took 4.252807047 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.371358717 seconds)
  done (took 3.547998856 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.905385961 seconds)
  done (took 22.090292513 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.319026997 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.296554746 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.312047188 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.268909093 seconds)
  done (took 10.372159015 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.556625896 seconds)
  done (took 3.733086297 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.274143175 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.282506458 seconds)
  done (took 5.73419439 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.466934532 seconds)
  done (took 3.642084303 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.785722113 seconds)
  done (took 3.973047995 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.303512255 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.291791397 seconds)
  done (took 5.781401781 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.259328765 seconds)
  done (took 3.434472348 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.834126557 seconds)
  done (took 38.012193276 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.275180756 seconds)
  done (took 3.454398439 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.30044668 seconds)
  done (took 3.477550166 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.838348234 seconds)
  done (took 6.017723876 seconds)
done (took 118.701436566 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.271002194 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.270543672 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.268444271 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.27054903 seconds)
  done (took 10.253045272 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.335246768 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.332330102 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.332423875 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.330432991 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.332297118 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.330670061 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.306533227 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.309085603 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.332884317 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.330897287 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.33281613 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.332872825 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.330136874 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.306187092 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.335717587 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.332766265 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.335456103 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.333977722 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.307892208 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.332130664 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.280253271 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.337290098 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.335307877 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.282485229 seconds)
  done (took 32.967359856 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.769960867 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.346129236 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.429545944 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.327848564 seconds)
  done (took 7.051876337 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.362583777 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.358069679 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.372758794 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.411540622 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.42319003 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.373723253 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.308221505 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.305672822 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.287370308 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.358550696 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.405627803 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.351024374 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.433931516 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.279811335 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.489242197 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.279606415 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.283872652 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.358365761 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.411034565 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.422700866 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.282145641 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.359671014 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.359950919 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.351921324 seconds)
  done (took 33.811163747 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.292941622 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.296657021 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.282285707 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.297091806 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.28466051 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.280281656 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.283601491 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.288708314 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.282608963 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.283317641 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.27919139 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.296265146 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.286539277 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.282509968 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.290566602 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.285316514 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.288568486 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.288020902 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.286809226 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.285888221 seconds)
  done (took 26.92544747 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.269731529 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.270124576 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.620534925 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.5257317 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.267470707 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.267190375 seconds)
  done (took 13.404223977 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.34375412 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.499316005 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.27478675 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.6228858 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.713527732 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.282780763 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.278325708 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.520505972 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.833606275 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.802041892 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.335021749 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.344067425 seconds)
  done (took 19.035356728 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.278953076 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.2729137 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.279426415 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.289619406 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.327896224 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.297868562 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.281332991 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.2706871 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.331891636 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.354593222 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.29946746 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.330115507 seconds)
  done (took 20.795953194 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374948873 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.275538876 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279314368 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298538376 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279771637 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120604212 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.295896021 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.981073528 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.302685918 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555386383 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288820184 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378892649 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.532583768 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288052218 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.280872279 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.272694387 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.512063312 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770089928 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28522983 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279725711 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31558448 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.283073123 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.295301367 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.493428911 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301052621 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278424199 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.543038284 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.27664109 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557651783 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.291362309 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289881526 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276848136 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552791143 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922036526 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396465381 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485310566 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292512707 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.297740406 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.281943252 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.283457365 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303677748 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.284416444 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289750216 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276936105 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.279305406 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285144219 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989197483 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.311585864 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.281432612 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.280508027 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.535715486 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38360221 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.286747556 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.280289961 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364934856 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282082086 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.286269114 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407478586 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886530416 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279644771 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291732107 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.287449633 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.285706535 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284567213 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893530389 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.310431042 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.288841287 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.290790389 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280833356 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.281241022 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.30450843 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283848249 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.307800101 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279375599 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983120605 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.305908005 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288718657 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845141322 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296050821 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.288247638 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.514250891 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284722385 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282922791 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.283842238 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.282985145 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001301923 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294827435 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.269681398 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349466442 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.007280223 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.510660166 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324305329 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317251483 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.509971727 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.267862972 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283350816 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.292271905 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289891299 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305941641 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.991992494 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303057924 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.288359655 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541647139 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.496752985 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283755343 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.28247159 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.753019958 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314573948 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.305264916 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.288478746 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.495366968 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.874494101 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.323528703 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286536363 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305124632 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.284332193 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052806925 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292652472 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.393714071 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.285397933 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558386142 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.091616302 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291010993 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353131719 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.292259555 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.28695044 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281897202 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28845279 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.287409736 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.484538275 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309320458 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.297732295 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.284624305 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289923076 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.285028939 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306379921 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.290728257 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.508722989 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290469738 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567695341 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285514705 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284035722 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287065891 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.510489323 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.289777898 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.627535608 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550021284 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287447377 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.290690526 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.299659413 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307045623 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392285151 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308602228 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.287197436 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.546876033 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.29367181 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.297146928 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289339526 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.292286817 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295835985 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.297391461 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282905874 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857990559 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284612559 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.294185158 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.17826538 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.304027728 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354804479 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.295400347 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.497496589 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.308908332 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311410048 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.294705296 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.286504822 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.512842273 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.299158674 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.285238748 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369312633 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.751794906 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.878895789 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.319354024 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.286871803 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.28797931 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.28726871 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286881205 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288336184 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.286438187 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494581244 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.321775431 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.286115166 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.881228276 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309432531 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.29025598 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.299637781 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.30187962 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.295267989 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293422133 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.291165685 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308537052 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295559962 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.30526728 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433896806 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.306420817 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.290275765 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.807180769 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.299066964 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.290170333 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288385856 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32466025 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.290993071 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090116033 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572639021 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288455168 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552305907 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.292813882 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.313600793 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.289945872 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296132413 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293953829 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.305373022 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317521092 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.302634657 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.290357507 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296239259 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877451378 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013538284 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818901177 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30729138 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.293856456 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.292790574 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.003793227 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307782973 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289934787 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.524947885 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.01578128 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306461196 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754490965 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.308718855 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049436346 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55031384 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52234638 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289938309 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.296580396 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552191066 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.505850728 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325704045 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.292587532 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296260584 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.273856581 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.83632218 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310429478 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372519317 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001494319 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308297595 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314581161 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.346650759 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.306027908 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.692483814 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.313163151 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290771723 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.776458259 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.294871093 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092266982 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.315648309 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291072384 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894485998 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322696351 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.760788998 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309261742 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.500518393 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.324822361 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.295376622 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.290879723 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.305803874 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.552317495 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550009307 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296915997 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.30479507 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821685857 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.175304867 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.301080654 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291853907 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046804531 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298034028 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577804892 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.296678635 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.312085536 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298247331 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.293324979 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291812579 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.291538418 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.297514475 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266860015 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790792659 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.292706635 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292833968 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308746595 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297739883 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.549556076 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.308151423 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.869147611 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53982941 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289476126 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315510675 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.299887122 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292590603 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.284383019 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.292471638 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.292865255 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346496779 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.519405802 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305830012 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.282556634 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.299959526 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.510063676 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.293208323 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.293497238 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533884186 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.310343121 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.311572745 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033496577 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347742154 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.298025949 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298820042 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.297368899 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.334852524 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382234053 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504736242 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.324041389 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.305168894 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687037218 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315422989 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298974704 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.310036994 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391938885 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295720971 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.300411519 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.072536142 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872138174 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033969311 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.875192115 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572327593 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.29633478 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306776258 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29524045 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459511433 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29693853 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573160992 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295994195 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.290287333 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318752614 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296270333 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313901156 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.510878762 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574783722 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297463648 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299130498 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301298211 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.295630016 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.307321174 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.5079339 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786585314 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851290781 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300487962 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.310530399 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.012938799 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592348999 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297464504 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298870359 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295886233 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.316646391 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.331295335 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.311013019 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302903897 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445699335 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553732516 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952203253 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.324902652 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.328638127 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.81746274 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29717256 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.558408218 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299242209 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.529958131 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896186089 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.011194449 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567238476 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369124592 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.508810784 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.316350867 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461280013 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.307248606 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.301435555 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298236701 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299778509 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.298880254 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.307716829 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883326743 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583975728 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.306981789 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.308419892 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33370067 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.308218718 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.523171104 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025541302 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527500715 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.310069515 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.310358391 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.301180807 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882816498 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577051011 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306266444 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.306778603 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535211615 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.319443558 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326198035 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.820718715 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.300279549 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85013668 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.272625518 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321891892 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302672855 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.015384185 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881754991 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.318476121 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802763735 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3046961 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299502387 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582783397 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.308420641 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.311024314 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583254146 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.305800021 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310643563 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.516108006 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.900117373 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079355563 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.319363987 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351326161 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.307254853 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302910168 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340819702 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306132023 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30380085 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.711621207 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323433445 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302474812 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317050675 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.309910822 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318749348 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.305333768 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300904321 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.310704473 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.311836307 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.293066155 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323246195 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432714837 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853494833 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321494958 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.986239248 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.630655929 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.558905671 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317997659 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.293063517 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.31076908 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303903201 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304280184 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304197646 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.299604359 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855234908 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.318547713 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.319326846 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.310995151 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.303827729 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51533728 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.30577984 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.518441672 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337543405 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.327654363 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.290012922 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305435347 seconds)
  done (took 937.661313956 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.321688707 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.341922279 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.305762875 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.330052013 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.33717638 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.415515898 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.389993725 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.42865631 seconds)
  done (took 20.077499533 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.312323519 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.307712888 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.304839052 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.312776424 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.307594921 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.773613432 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.323728838 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.309398622 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.323831739 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.303488231 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.315175643 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.289335085 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.313770335 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.300642581 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.304737449 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.316988032 seconds)
  done (took 31.641993688 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.273223357 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.429594701 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.196636005 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.329035067 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.341097821 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.302225349 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.530734636 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.326753536 seconds)
  done (took 25.93886807 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.315561175 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.313182433 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.314573729 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.315837587 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.315059823 seconds)
  done (took 7.785765024 seconds)
done (took 1188.528745338 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.312358353 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.312972418 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.313162857 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.312636084 seconds)
  done (took 6.459022352 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.294541919 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.291839359 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.294976072 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.30970601 seconds)
  done (took 9.398712512 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.002036242 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.933509013 seconds)
  done (took 5.144044062 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.803217158 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.809863444 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.811111342 seconds)
  done (took 6.639406312 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.600220709 seconds)
  done (took 2.81400047 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.245392128 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.305705448 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.985334404 seconds)
  done (took 7.74531208 seconds)
done (took 39.409760916 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.300899724 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.550917296 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.457576336 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.300330431 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.463790777 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.459556004 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.036168581 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.309618896 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.310529087 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.306210907 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.301353313 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.465692626 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.018554791 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.553445593 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.01789825 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.553127454 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.466500509 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.311508766 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.307940366 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.308442353 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.037645519 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.306485838 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.301619899 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.325157258 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.465516851 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.446476813 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.303658651 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.552601116 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.302742403 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.309914524 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.447684945 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.301244579 seconds)
  done (took 80.111473904 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.315806462 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.304533844 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.3032761 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.328750883 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.30209257 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.336564756 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.304649546 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.304641965 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.303429523 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.320334598 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.332274468 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.317699589 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.305327996 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.305157097 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.319661088 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.303086646 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.332229982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.303636616 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.303782729 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.320158298 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.305169944 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.305277491 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.304974991 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.312282173 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.305215676 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.306295425 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.320978235 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.30504467 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.304398727 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.304976938 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.307282594 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.330996049 seconds)
  done (took 75.193478081 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.304698725 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.330249403 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.307427816 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.305543668 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.325006076 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.30523291 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.306156201 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.306025535 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.306948352 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.305164841 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.305875489 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.323253966 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.308313339 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.306482425 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.30661696 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.306368467 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.327274847 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.30619075 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.307740895 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.307551047 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.327900794 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.306107994 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.305261422 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.307478567 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.310388897 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.3073697 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.307019086 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.308692285 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.308460503 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.326814812 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.309450792 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.307286485 seconds)
  done (took 75.15493493 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.594823987 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.320751348 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.321738485 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.313699764 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.321835199 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.320453679 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.315520659 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.598295034 seconds)
  done (took 14.319489684 seconds)
done (took 245.993410989 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.315302029 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.819085163 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.35908975 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.326173265 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.335290122 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.341785371 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.535702376 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.357142045 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.539580128 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.332148091 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.350800737 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.313873597 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.111649756 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.464263014 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.147435274 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.26620073 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.184423879 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.310569358 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.900280489 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.593297646 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.342124764 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.309915061 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.145773771 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.218714385 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.302483725 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.396087014 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.41201109 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.536685623 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.47455284 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.395607255 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.838048015 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.321162592 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.339559279 seconds)
  done (took 62.152181522 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.314818617 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.447108393 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.324075117 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.322911347 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.451640009 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.344310225 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.316141658 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.323447687 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.323362901 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.322100008 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.323658342 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.325834055 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.323619517 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.372319687 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.450081139 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.335785358 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.316848834 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.446830801 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.317697906 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.317144805 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.36830631 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.325831459 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.328289786 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.37393252 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.326340672 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.327870752 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.452076619 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.346972031 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.3284966 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.451872236 seconds)
  done (took 41.868043905 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.327846007 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.923735525 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.065781176 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.327660787 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.321190511 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.325751835 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.600353185 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.328085505 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.3234503 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.325463532 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.81652285 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.346791912 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.357471429 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.090784576 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.324002437 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.327030164 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.3275778 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.321429609 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.936607602 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.331339711 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.619401588 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.326721664 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.60088679 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.331110776 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.342142391 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.32240663 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.329096794 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.152318081 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.342568977 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.815462633 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.094186425 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.604180282 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.081628156 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.091051516 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.083853169 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.333819365 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.330396454 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.824137149 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.341681788 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.321556089 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.604632034 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.323852133 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.072598184 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.014314139 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.341139972 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.329898256 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.182557193 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.838978471 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.581320445 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.329854063 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.096712884 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.327009337 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.330784358 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.325068887 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.562842527 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.326670398 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.323763924 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.17259067 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.350921562 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.604330688 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.329970459 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.323858556 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.939117439 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.325017054 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.937613517 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.330159639 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.333236032 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.346296996 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.08189495 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.329479312 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.029464707 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.341915891 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.331613363 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.818268906 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.946600836 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.236248067 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.326292535 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.943084386 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.110988475 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.622729333 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.328678394 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.130316336 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.627330404 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.329623732 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.333712645 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.33315039 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.331270047 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.419620614 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.60438581 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.970160811 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.024994103 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.192393324 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.629070824 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.333158359 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.325955107 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.1754102 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.352596935 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.33182193 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.074021417 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.026596635 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.344939192 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.334637277 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.039286849 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.345566674 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.608805289 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.332841836 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.094777658 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.331819124 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.418198294 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.332971277 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.335086713 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.3486758 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.608148793 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.332662534 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.334148632 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.015188833 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.850819733 seconds)
  done (took 187.468918299 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.324818599 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.337290803 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.321712588 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.338069474 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.321310606 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.328392748 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.320103183 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.322308698 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.327283358 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.320992475 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.323124616 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.330071419 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.328810793 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.322319236 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.322434133 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.322723932 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.325965346 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.325401036 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.324291099 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.32172184 seconds)
  done (took 43.73868407 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.335134924 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.878643364 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.870262674 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.34012649 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.336174377 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.329989588 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.385437551 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.353594093 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.335280513 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.624154404 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.500956826 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.357919034 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.335967499 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.336034406 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.852808866 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.327676761 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.630984482 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.882352573 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.338413203 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.877283531 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.324602668 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.337961198 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.329242332 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.879327805 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.650222967 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.612562299 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.388173941 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.900945856 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.353303766 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.336390334 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.880605021 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.338279034 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.332313406 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.883111989 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.353685723 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.350134735 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.337248504 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.389289698 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.405455671 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.644025382 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.958775858 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.640779647 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.350004521 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.508305732 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.339766998 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.325919311 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.893462842 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.354994775 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.326010324 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.338132925 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.343448486 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.866508105 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.351404796 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.869723472 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.356100411 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.338365114 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.882279778 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.868579605 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.875070227 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.499805307 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.352899823 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.615984584 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.343306865 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.894910448 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.356464712 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.337446508 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.33890344 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.5044675 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.906394672 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.61525888 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.628641766 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.629142948 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.338776222 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.397089706 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.357739871 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.696369345 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.395996156 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.734710287 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.632459274 seconds)
  done (took 121.851620837 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.601422536 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.446905309 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.731763227 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.935339552 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.336083387 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.465169806 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.447356353 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.588183155 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.347010268 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.414844993 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.968315041 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.449782267 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.091263397 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.421495587 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.458931849 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.478665426 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.746072445 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.310196448 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.041128933 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.950564045 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.336262122 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.451583853 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.893612575 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.550796018 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.328162394 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.937155658 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.287240175 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.017984949 seconds)
  done (took 52.266243727 seconds)
done (took 510.559754562 seconds)
SAVING RESULT...
DONE!
