cset: moving following pidspec: 16128
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.340400369 seconds)
loading group "string"... done (took 0.536592529 seconds)
loading group "linalg"... done (took 6.723367662 seconds)
loading group "parallel"... done (took 0.155228146 seconds)
loading group "find"... done (took 1.165645006 seconds)
loading group "tuple"... done (took 1.751828354 seconds)
loading group "dates"... done (took 1.18216998 seconds)
loading group "micro"... done (took 0.291148044 seconds)
loading group "io"... done (took 0.903491958 seconds)
loading group "scalar"... done (took 36.417752215 seconds)
loading group "sparse"... done (took 10.924615674 seconds)
loading group "broadcast"... done (took 0.908994805 seconds)
loading group "union"... done (took 11.781246038 seconds)
loading group "simd"... done (took 4.138176759 seconds)
loading group "random"... done (took 8.527136561 seconds)
loading group "problem"... done (took 1.862126253 seconds)
loading group "array"... done (took 19.933458274 seconds)
loading group "misc"... done (took 1.683889082 seconds)
loading group "sort"... done (took 3.106048801 seconds)
loading group "collection"... done (took 16.644168467 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.477434557 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120782606 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11300696 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117092316 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.137979151 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113500119 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12077791 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.081996232 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.776376743 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138651477 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116779368 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.406449616 seconds)
done (took 4.879387295 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172314664 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08161624 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080128091 seconds)
  done (took 1.278111904 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06431154 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119680436 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065237525 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066250961 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067677055 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067104253 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066556923 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066402056 seconds)
  done (took 1.637883948 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071664988 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067602436 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067541246 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066698074 seconds)
  done (took 1.393866273 seconds)
done (took 5.672227328 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.756674916 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.196924023 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.180971323 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.38876708 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.126700987 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.164139348 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.635497307 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315324987 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182050054 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079165443 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101322317 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316896473 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10498312 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639108732 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078024362 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088513594 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136442093 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.399370924 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066042165 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08102629 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087743734 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127234244 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084354973 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075262356 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142022578 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066771452 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.12723627 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080076278 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065743144 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205123569 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171808427 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659309978 seconds)
  done (took 10.086552859 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095002461 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095301621 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067307145 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121716153 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093813795 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068622181 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069241593 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066154882 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.084934187 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125673473 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087083497 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099056458 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064378263 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06737937 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.082833516 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202728352 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078180759 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079737347 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069296124 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074086781 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104057513 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077223108 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076447769 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076048113 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127216577 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178338846 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.094622045 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09588647 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06795879 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07999724 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113606443 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124213604 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064299866 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06572343 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122444094 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093298346 seconds)
  done (took 4.509396836 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.893196423 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.136853868 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088060132 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158693913 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066426108 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10458262 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06397572 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082541489 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.195729575 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.05444006 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.423376409 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109742735 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.083434696 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0664608 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067510472 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065801043 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109144053 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.33914007 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110776218 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107158967 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082495027 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073363022 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067434597 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066125826 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065255774 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067041963 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.100251284 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.296530236 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115539756 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069006446 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.970658674 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.115302177 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066824657 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099873384 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168118992 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062933363 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063425908 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085222321 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131453055 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.063874182 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063928162 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.14467545 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072194466 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064311491 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080161589 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061968735 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100399904 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.232011071 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068186908 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065804679 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16336981 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065743839 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082041187 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.700495014 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152846002 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075232482 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065635027 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.241795647 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084068746 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065762828 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063956629 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.192165041 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125249905 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066788639 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066279897 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065069147 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067112942 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.350614132 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06688873 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.904813304 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068936884 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075075593 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068452468 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065601689 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07146546 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071650791 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084052378 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065493051 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067260533 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065372671 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065086976 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067628019 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083387338 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.187624293 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065618069 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066533232 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064034535 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089446905 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095672673 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067986899 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064205576 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098758978 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066781832 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066565988 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100312559 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065498623 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082488335 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068046477 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111931676 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.064865545 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.100368421 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065432699 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.093900591 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.066591197 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097318828 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.075789866 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.158422467 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.214251444 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063701626 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063453834 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065777797 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067149906 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066679897 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067393703 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07777314 seconds)
  done (took 19.859831863 seconds)
done (took 36.466484709 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270595982 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073481485 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073287823 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073450101 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073639012 seconds)
  done (took 1.767846445 seconds)
done (took 2.95036642 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.117835479 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.096546219 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062885479 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093944409 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062962661 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098198855 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097335096 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08011356 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097686645 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063063731 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094814417 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.062967651 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062899472 seconds)
  done (took 2.292690175 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081255555 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082279681 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06854058 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080969345 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062353247 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080824812 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07970411 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086819468 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079688825 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071175524 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063678416 seconds)
  done (took 2.013698195 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080500098 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082591183 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068569764 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080584247 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062982398 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080126356 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079463905 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084288126 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080073763 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071752489 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062720237 seconds)
  done (took 2.009520729 seconds)
done (took 7.486042478 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075870649 seconds)
  done (took 1.244091648 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.57663496 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.024404343 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080149376 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109956889 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181336413 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118700546 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273655159 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085096117 seconds)
  done (took 8.79744451 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086870405 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067129765 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.081355117 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067155433 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069917672 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068012691 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071160624 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068569049 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.06984223 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070715986 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068298873 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068052862 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06736661 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070089677 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069342091 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069608109 seconds)
  done (took 2.371926941 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090722854 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089199412 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07202464 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073402538 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07067831 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070596015 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07336937 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.0723288 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070043987 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070784691 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073327497 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07209821 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070375353 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063765779 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072629146 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074073865 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069492746 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072582294 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073623596 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073593905 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073280571 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06294745 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069807988 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072937276 seconds)
  done (took 3.02014706 seconds)
done (took 16.610874439 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109922868 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070178213 seconds)
  done (took 1.355290038 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080295303 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080521862 seconds)
  done (took 1.344129782 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080742609 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06430761 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087323452 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076251454 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064965348 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064698994 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.084936701 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06507189 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064778599 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06480675 seconds)
  done (took 1.899321714 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067026521 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07600578 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069209938 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079176042 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072030366 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062890395 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071220929 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066554123 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075811005 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062206881 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069706241 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080312511 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069295146 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081834302 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07062866 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067750685 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068880077 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065450446 seconds)
  done (took 2.45724914 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065057555 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065351507 seconds)
  done (took 1.314985205 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065901816 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062512659 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065196903 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065172107 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062434625 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06154883 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062087566 seconds)
  done (took 1.625895225 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.370691817 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109038482 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.289735988 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069494028 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080441 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24685194 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06463258 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069111353 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069249311 seconds)
  done (took 2.592298824 seconds)
done (took 13.778170751 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076395189 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083685372 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.092626749 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.336513818 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090312661 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06451522 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112308015 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184691894 seconds)
done (took 2.236496898 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.203885555 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.556073876 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.363701575 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192673994 seconds)
  done (took 2.296910138 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.311657122 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090203274 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05945888 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06717579 seconds)
  done (took 1.72161048 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065315102 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067342101 seconds)
  done (took 1.325372373 seconds)
done (took 6.738495188 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065333874 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082078374 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064935163 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064913435 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.062449442 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064729095 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062287912 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062326662 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064456712 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064619978 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067018285 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064579732 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06446313 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062284372 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062716437 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065367615 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062131445 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062324314 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061945259 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062445912 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064619997 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062296851 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064517317 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064832775 seconds)
  done (took 2.776789417 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081887707 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065469688 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070683049 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070107068 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068796447 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069979694 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069566207 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064895789 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07017446 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066738097 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068709825 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068452613 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066537847 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068572426 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066993705 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068729577 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069876596 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065232803 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067009125 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068612873 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06928832 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065066621 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068617796 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069353403 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068058157 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068711695 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066689847 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065294584 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069265036 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068214562 seconds)
  done (took 3.255959828 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069197882 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061996796 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063082812 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069337646 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062609155 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063620169 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062391002 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062958512 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063252838 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062326694 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063690186 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062560558 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062641497 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063518726 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.0632532 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065857407 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077635988 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062907384 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062203385 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063498433 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065681734 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062719592 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062667136 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063778726 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06296117 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062436338 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063388317 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064015582 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065138551 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064388277 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067215945 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067934733 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064521168 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070720804 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067862355 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064035712 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068113532 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06369781 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064674668 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063836639 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063639104 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063921006 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064482878 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071289583 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063715262 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065553736 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066363143 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063685792 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062495633 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064789037 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062412452 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062429296 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.0643909 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063831323 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06611726 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061949857 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063414933 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061860691 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063281907 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062200036 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062243268 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062143938 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065757998 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064357307 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077609123 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069550015 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062377913 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064201926 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063631058 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065002444 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064117039 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075512552 seconds)
  done (took 5.869896597 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089569091 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.194406623 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064109821 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064761465 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06084559 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065057074 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066224187 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062918076 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064441909 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068279586 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063166516 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063897894 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064129038 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075255418 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063001642 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064240137 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068381598 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060774674 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062842633 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066069483 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06284032 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065771728 seconds)
  done (took 2.789672928 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152710503 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069013842 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102778763 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071478993 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066281287 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071773452 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068121327 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068929689 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068336012 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067144835 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067201404 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06869412 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06593221 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06675756 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06709657 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066707261 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068809398 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067159548 seconds)
  done (took 2.548363245 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075288841 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065050326 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084976243 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064984292 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065131522 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066858855 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069465158 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072914245 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067087702 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064611217 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073039318 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066887874 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067352637 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064917831 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067234922 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064472192 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066963026 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06448817 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072436611 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069305276 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06922531 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072662274 seconds)
  done (took 2.719327665 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078100612 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066311112 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081317667 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067793583 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061039928 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063129118 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068511293 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064855424 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068922008 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066309088 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064819171 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063233889 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067907422 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064626619 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068128004 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064952293 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066062087 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064561406 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066628395 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060706812 seconds)
  done (took 2.54457943 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084690149 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066452364 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066949986 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074135387 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066114691 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066105204 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073728622 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066008389 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065739714 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08574651 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066239996 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065875974 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073807514 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070913668 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0662231 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073414483 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073539818 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073617402 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066221166 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065983355 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085729066 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06610459 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073247456 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066145656 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066332921 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066090792 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066409683 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070535272 seconds)
  done (took 3.179145824 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065483753 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064846868 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062271491 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063156437 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062490074 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062777755 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062300959 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062283195 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064531797 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062182876 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064839169 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065004978 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064976535 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06482834 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064718645 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065396664 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064692576 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062411364 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062515653 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062396425 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064739611 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064702345 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064528836 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062234176 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06243677 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064610748 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06237863 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062283434 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064574508 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062483407 seconds)
  done (took 3.119480971 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074374247 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071574679 seconds)
  done (took 1.357427974 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062174221 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078373014 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061754683 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068504912 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06840233 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065200598 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071703939 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068362964 seconds)
  done (took 1.752515722 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079490363 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075834356 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066750641 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079325685 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075098275 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082005176 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129830871 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065701762 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071852808 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063175123 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078027671 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064014362 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070936386 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065172795 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070532625 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070959286 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062686946 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070825879 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067362206 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063672958 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066472999 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073677309 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067118369 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061094765 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06613033 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.085996129 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075371051 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064938805 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067860357 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072203496 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070241765 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05963434 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064730857 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065819021 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062758205 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074595845 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079295134 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067938514 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073502102 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065727381 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075127348 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060395389 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069546853 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072189235 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075169369 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065335675 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065821827 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060654029 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063205319 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067913861 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060511159 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065162484 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060118229 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074430683 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068645117 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075809525 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063866117 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066995274 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068022578 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068885083 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071846272 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067246101 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067495958 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064953422 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074744991 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069595963 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074213617 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060867787 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059626015 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063272964 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074388383 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087660333 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07210085 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065856923 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066062091 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063011736 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068449325 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066250193 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070941116 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071657065 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064963393 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070211251 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072599983 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065466412 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067838312 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072910569 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063363837 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068001322 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063394036 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081061525 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064139032 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063158696 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062859198 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075747881 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068512048 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065125236 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063032846 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072023698 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059404371 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065627166 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066223235 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06514522 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074154926 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068315945 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068836348 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072630152 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071001357 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064008392 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066833824 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060956034 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064851622 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063261041 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070687749 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058588885 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066726741 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065026256 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064360675 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.19723692 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06341473 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06578505 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072615404 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071458737 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064310767 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061883792 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068697002 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064585594 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068317868 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073427627 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064159791 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061128087 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061418642 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068702274 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065736894 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.068953989 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069414619 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068660784 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060290247 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063886421 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070579769 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07424766 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066122976 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067395631 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071296456 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066950399 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065346923 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071981746 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067816607 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064901899 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070640396 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066707442 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061038135 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068234828 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068026953 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064203791 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069136469 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068899349 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068076328 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066028583 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064286037 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072309032 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066150672 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064694399 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065361659 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064509685 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075147949 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067239087 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06091969 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062068069 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074402305 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063551565 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064959139 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064729608 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068046847 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066521708 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063875426 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065212728 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067631019 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075579737 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069237686 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066806049 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07115868 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076591282 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064518094 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067512415 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064337787 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066100103 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065754079 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073571684 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070727253 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069237049 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067311055 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061667743 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070683451 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07246483 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064346279 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062867321 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064320705 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069027525 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070684048 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069116452 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065935576 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062947469 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065596172 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0678974 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067840145 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065013056 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064563746 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071691888 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063752969 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072409163 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066723818 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075332143 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06889868 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061090779 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068598349 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063557228 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071635073 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06094147 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063563983 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064721976 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066083463 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064186141 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067812047 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059714281 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071645618 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071533137 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064644905 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063493163 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064110254 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070771803 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066009373 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068400542 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067372375 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070231829 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074372398 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063599789 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067258862 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074125156 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064055537 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.187778725 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07192241 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065201934 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065467861 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065627925 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064557532 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070027281 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074810136 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073058991 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059842562 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068972237 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064221031 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064897844 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060937751 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070466969 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.06925185 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066427115 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072450739 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066874878 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06603992 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069538064 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065159291 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066423126 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066928251 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06846071 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066688247 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068013774 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065504628 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068450618 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065219203 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064244353 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06751346 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066197447 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06617837 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071551392 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06473589 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0659386 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068164852 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065953143 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066396204 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065683435 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065021301 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069413596 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06649861 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066084656 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068111838 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061604636 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072878586 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065548603 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073163431 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066776882 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062779273 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073024717 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068339551 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071482411 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066399854 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066451605 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067079639 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064964509 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068634171 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072365262 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063735055 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07588506 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073270904 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066497459 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068833345 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065998074 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067119115 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064424679 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066393556 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066141686 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065989972 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065411757 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070025524 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067601885 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066071464 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066737986 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065738515 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065470493 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066298623 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059883164 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064588706 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064423252 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064798578 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074605219 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065598418 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06462606 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06438663 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066363694 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064492979 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.0621125 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073306597 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074121705 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065504721 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072506813 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066150641 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067448567 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076079205 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059800545 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06357689 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.0632047 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064363658 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072530007 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065867434 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074295259 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065462817 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064889979 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062388252 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065323513 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063937382 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060535379 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063347175 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068463731 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063797764 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063582426 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064472467 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066851854 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065238442 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073154568 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06376052 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065046007 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064354627 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061763233 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063863687 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.195274999 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069394967 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06735296 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064925062 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063665831 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066370246 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067086583 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06756473 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065197083 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067435468 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075058653 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065328451 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068581551 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069988493 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060720188 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068468954 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065397632 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065393292 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064648455 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069289924 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069558626 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067173134 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074741744 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065496498 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066593302 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065728068 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063473019 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066072243 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064746046 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065975616 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066014432 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068556603 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075101048 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064866399 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069221707 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065771253 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066488598 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072852252 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066628761 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068313886 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072465459 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066449695 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067856899 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073613408 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069671296 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06914109 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066844838 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067051207 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071233487 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064873702 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072106887 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.0660645 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066998037 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067348902 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063823025 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065251867 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066002496 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064705633 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071482541 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066408546 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064577895 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065030778 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063518686 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066347034 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068962459 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073304315 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068093991 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068915442 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060719212 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062688626 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06645685 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063629481 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06702695 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067720877 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070824228 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067713998 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06588924 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064100437 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074169827 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07093588 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068535102 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063300869 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068645147 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065573898 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067111268 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066415008 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06552043 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066201913 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069216738 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066465808 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064708022 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071980068 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069076908 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066177803 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066629669 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066523007 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065726753 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060833379 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065584276 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067268146 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07083683 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067449217 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06542168 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075454645 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063015352 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065654773 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068367868 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064524842 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069912003 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060544429 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066385415 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06579571 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065838963 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06009298 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064028524 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06234306 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066043298 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06370734 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059339412 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074288112 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073054553 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067335396 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063285055 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063090439 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060068498 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.190102392 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065326917 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066769562 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068094554 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075946483 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065564377 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064929297 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061379701 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065978755 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068793654 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069594647 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062847262 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061107684 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064874296 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068259472 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071492231 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064353398 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065222651 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068434337 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067998915 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063907202 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06970312 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062736507 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.06926073 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078272806 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066316668 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066080755 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072388796 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072990556 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067368172 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061522339 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066633285 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069125962 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065837572 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066904641 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067165849 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080306783 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069300356 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064895143 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065099236 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068210358 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065171829 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073030811 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067016034 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066921484 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07043 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067412483 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074779736 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068695814 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073751097 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068488609 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068159717 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064623625 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066300711 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063768214 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064362202 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066530731 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066609155 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071165161 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073718896 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064831921 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076098715 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074301282 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067738435 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062267529 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064861677 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064859068 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060879314 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066088089 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063518312 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063689305 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063562307 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064330648 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066322253 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070816117 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066636072 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06591372 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065126046 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059744189 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068065671 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06785097 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066079282 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062519193 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065717264 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066431093 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069230834 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068848675 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063101439 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066622408 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066678246 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066034085 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060654994 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072188686 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064522768 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067583543 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064626453 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065256788 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065979069 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068853858 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069928338 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066068535 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067602172 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068882933 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067379017 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062886276 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062510779 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070768027 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063179254 seconds)
  done (took 41.909373887 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098779658 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062257632 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060820048 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06164716 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072131518 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061849358 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060822073 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061964328 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062354342 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064033647 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060915541 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060855496 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069508933 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076078503 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072206515 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065389238 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060760595 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061961557 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061088353 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061686841 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069720199 seconds)
  done (took 2.696386563 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072556629 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.06954803 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071540723 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074003945 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065942872 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069102177 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071067623 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06945418 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074265277 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065863928 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074285287 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06930384 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.065738326 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07384947 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065777994 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06955137 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074024388 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066275706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069417533 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070936343 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069147165 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070903948 seconds)
  done (took 2.828364571 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065762035 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064569532 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06598976 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060237351 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064624029 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060171911 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068235041 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062975565 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067968999 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.063702045 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.063882769 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.063994456 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066199914 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060100577 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.064544305 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062918629 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106730998 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068009252 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064485105 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065375617 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060631852 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066463669 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060364518 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061189576 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063549997 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067934828 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065321976 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062755953 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065120278 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063974852 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064616425 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062698475 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066036148 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065250615 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063576176 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063773188 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064238664 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064441335 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060453499 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063039746 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065455521 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060784287 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064838344 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065802676 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063116265 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062825828 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066059692 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064378584 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059781931 seconds)
  done (took 4.467587998 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078608072 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106103773 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066833701 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087173513 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078488824 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073975937 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068184336 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087401562 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062250203 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062926096 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079683198 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077796209 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06441195 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068967373 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071074715 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064345231 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066712376 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065511492 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070334508 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066007963 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070451563 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071442889 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078101892 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076993138 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06813124 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063624784 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06361646 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068628038 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076546864 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068770168 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068760658 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07026807 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078883482 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069802833 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063251885 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066421751 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07979701 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064941443 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066621514 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062098941 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066275662 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068312171 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070607685 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079508933 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064613898 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069346656 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064182921 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061823046 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076577404 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.0666094 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071522444 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078250633 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068007843 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064815087 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068472776 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078536042 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064345304 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062649992 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067311645 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076275606 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06232019 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067957575 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077467138 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066083823 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071126561 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078040725 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069278954 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067941578 seconds)
  done (took 6.233838331 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074064649 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.070967528 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078293522 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078421346 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070884242 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070722781 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070599558 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070861208 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070624415 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075409259 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070646892 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090623572 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066404483 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07349492 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070572272 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07076968 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071167211 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070671972 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070840343 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070801056 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.0708511 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078040636 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071020504 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078449389 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096570797 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06612232 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070667956 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070492542 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078450415 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070551576 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077841914 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070696432 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071067233 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078115634 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078482206 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070426609 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06446431 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070592459 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071051668 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07102124 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066003901 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077907671 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070534425 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06608837 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070701134 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07034404 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078022915 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077481875 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072972205 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074945652 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070544823 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078221239 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070659314 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071290921 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078120203 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103029324 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077684207 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078014217 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070779406 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078477467 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077927219 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084443428 seconds)
  done (took 5.908519391 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081908665 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073545999 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074257584 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060702096 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062802091 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068388078 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062590135 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063026027 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072824401 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072931691 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075089178 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06810582 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071288684 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075145577 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068266172 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070902058 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068077556 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068395374 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072652941 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068179319 seconds)
  done (took 2.711357445 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073394691 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081184113 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06550176 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071140308 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067763313 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069990517 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067091932 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067858188 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065912427 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067701051 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074367373 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074713412 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065448951 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070581468 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074242256 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06994603 seconds)
  done (took 2.430920685 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.072839353 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071288295 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078205834 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064693931 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063067684 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061519002 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064358062 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060418485 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061208588 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076334647 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064326293 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067494006 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064614794 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063517105 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061719158 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06741392 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06120147 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062126605 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064932127 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076879413 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075142639 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063039865 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065367504 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064532834 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064669456 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069551668 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064089378 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06241337 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062141352 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064981844 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065362246 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068172814 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062003889 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062705634 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063870978 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062225829 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064476621 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065377526 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067521621 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064486602 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06274993 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064111064 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065031897 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065538035 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061432237 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064835983 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06136749 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066309494 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062907651 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064937702 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064658147 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067200653 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065140112 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070706384 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067186827 seconds)
  done (took 4.909136723 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077067032 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068128353 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060265541 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063034419 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067864777 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066520632 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068166852 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066355467 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066452995 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063070004 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066315495 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067524237 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066489356 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068246664 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0665586 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068715765 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061001127 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066014982 seconds)
  done (took 2.514043333 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069736802 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064787436 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071811454 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065003837 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064604102 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067427491 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061020643 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063544329 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063277022 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064662484 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064469295 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066765404 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063587107 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06691803 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064584967 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065129408 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066949159 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063359165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064667294 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061016036 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066853342 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063555273 seconds)
  done (took 2.743446056 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.070097099 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090468465 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136546538 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082057224 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08018453 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077004121 seconds)
  done (took 1.846883761 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089048484 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076900662 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065459822 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086535404 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071919608 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066459446 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065892627 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066086532 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074413809 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074644057 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066419668 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074732941 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074242949 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073945876 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07198679 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072018187 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066457315 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066785931 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065213166 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082279766 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066363046 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074451408 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066119659 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06578538 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066720265 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073898857 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074219335 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074285703 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065849725 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073981449 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071392906 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065980049 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074706927 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074184011 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067774652 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074260194 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066151229 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082667298 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071747285 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074247567 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067669441 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071674105 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074403972 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070808125 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074112057 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066407587 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070678309 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066314601 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066561201 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084122963 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072145195 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073539399 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071756606 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074853338 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075184361 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084138609 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074850666 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07393725 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072877063 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077261942 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07404991 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072080234 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073983091 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074769863 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073081855 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074660347 seconds)
  done (took 6.094621202 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08019834 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085127484 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066620328 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074651169 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073877948 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066407179 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066485819 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06638163 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066532642 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066360633 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105475274 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066521069 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073960744 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07419834 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066375706 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06616237 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066274519 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073488826 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066345428 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08430152 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066641402 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073769647 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073985138 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073664033 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074613798 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071927359 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066617478 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066607856 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066827092 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066112224 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070855545 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066408398 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074051058 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066021253 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073864502 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06685119 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066088856 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07123333 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066312105 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071547727 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074084231 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082112394 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0661607 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066076676 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074614528 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066091682 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065962846 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066147976 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066186039 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066054767 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074878046 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074389939 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074455923 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073955896 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066568891 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066498341 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0662156 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066136073 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066416851 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071544271 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073928785 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066393124 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084479471 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066393424 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066376332 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073945606 seconds)
  done (took 6.005627858 seconds)
done (took 126.403225879 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184993135 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.170648724 seconds)
  done (took 1.661355705 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067284869 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094897971 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075717703 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.126758662 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065471353 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.097924911 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097571204 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076678715 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066866028 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.064915665 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065084162 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.066336898 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129256789 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065609594 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065044324 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.066871138 seconds)
  done (took 2.61066272 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.094987414 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.170682684 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098107067 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06381846 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095625351 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07192646 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063817309 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073328234 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069927672 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064386019 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071560697 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069626186 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064228556 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069373749 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069724292 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071595241 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063963155 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071566878 seconds)
  done (took 2.737989856 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098217603 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090039451 seconds)
  done (took 1.511192392 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153702258 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104685315 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148011017 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331760903 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158741209 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.227581204 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125539061 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124695458 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114891391 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121311687 seconds)
  done (took 2.929230987 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09657372 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.145330803 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253546693 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113441923 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071329083 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.08971648 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114991459 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07750187 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076553003 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076070003 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.075886866 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074729001 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094998729 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072420264 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072404704 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075177242 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097902244 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071266019 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074201827 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072928709 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095265121 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064703675 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072461389 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072010045 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073506752 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073523602 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.0648541 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064896493 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073260472 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072697868 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07608525 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088295276 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073241707 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102437613 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.06888944 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104388291 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075314341 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070368859 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072913596 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070228405 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07496091 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074947987 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071555374 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074940798 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064565924 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075110163 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06469809 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064953919 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076775216 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065496697 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077359518 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075964678 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1029287 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065646039 seconds)
  done (took 5.803210697 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.659951607 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101845136 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069005327 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106107087 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095134066 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07122947 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.681219228 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089328514 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171592064 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090900631 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087203011 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069059951 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079317516 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081821986 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109210548 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.099783013 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092692736 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070117998 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099446968 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.097230506 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066949665 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092290287 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088589011 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.373934322 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06609191 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068505502 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067365597 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068961427 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.10883244 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076972327 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06903371 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.118835556 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082710088 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.119332513 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066272438 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066768367 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066894787 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077420564 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.178007648 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.130117924 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.130590153 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065892269 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066461962 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067734052 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.088006037 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066232968 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108669202 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078371832 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.116956482 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068626243 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068416075 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067038258 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068076429 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078230359 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076105448 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079235072 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.227815571 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067487691 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067066106 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070271982 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177211169 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077185687 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077259841 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090000839 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.126808996 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066346178 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.717771559 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081659851 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06644025 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067684469 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065948623 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067484692 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066635094 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.243262346 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.342426289 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069758744 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.0695242 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067211204 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.16052564 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076839669 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067280433 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110733439 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06730492 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067988594 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069286628 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068870819 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.115255055 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078589768 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069075624 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067191843 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069082479 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067933339 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066517223 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.15999081 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079327126 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078430698 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.156343963 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06854249 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110510263 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078755897 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06904438 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078130976 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067328832 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06973096 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068543116 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07718691 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.093213048 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079268166 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068944705 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067035759 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.097013362 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078196732 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067293541 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077627055 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.3955623 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079350783 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066631836 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079637315 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067042963 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.109534454 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069003079 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.1740807 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0676386 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077776692 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067350341 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066339502 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06725502 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.108743917 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069049154 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068085048 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068024753 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069153805 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078007028 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.131149746 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069468825 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.159257913 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.132517463 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068909116 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.118068393 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067216251 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.115435693 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070094717 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06786053 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06627573 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.707366648 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066804213 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067204908 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068070697 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.136294522 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066315181 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077170676 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074725361 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065106879 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.685027536 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076444842 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074254197 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.207241554 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069143578 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068004698 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06724108 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069518865 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.109613585 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.143996843 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069822115 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067546406 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077398705 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.109369151 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066790961 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077695178 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077866929 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077687367 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067195906 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069603416 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079615763 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.116557782 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077467553 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.13358193 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.512701668 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067719814 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07593713 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.140562043 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066950097 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083214331 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067188668 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081185944 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110895484 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075999957 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.225192107 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.112428155 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.136125961 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07891077 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081594364 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066689046 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06702376 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078668683 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067114832 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068819171 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076863491 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068667034 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068393775 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082475549 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06756584 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171291297 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.072317921 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077791329 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06637445 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069048068 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082138366 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067138592 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068830179 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078041481 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069150716 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075993301 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.657215587 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076892489 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066951504 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068940508 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.133486001 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.110645524 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067179031 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066879875 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068701685 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.108031423 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.156756812 seconds)
  done (took 27.796130515 seconds)
done (took 46.380368262 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208084595 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148661065 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.19939259 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116564751 seconds)
  done (took 2.095440438 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119485616 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09981779 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093610895 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06450589 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100223793 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064433789 seconds)
  done (took 1.900798958 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.303010471 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20679917 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17913946 seconds)
  done (took 2.044829902 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195414704 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.184538927 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.39336864 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.250436709 seconds)
  done (took 2.490523108 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142432285 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087406664 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06632196 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082488737 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131457728 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158285262 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099498123 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123897494 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077339885 seconds)
  done (took 2.375248238 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142736669 seconds)
done (took 12.424273102 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.200013257 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.188643744 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.164624305 seconds)
    (4/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.169680779 seconds)
    (5/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092126492 seconds)
    (6/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.192705234 seconds)
    (7/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.1470745 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.164515158 seconds)
    (9/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.220216976 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098827837 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081286444 seconds)
    (12/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098542126 seconds)
    (13/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.181776104 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.062761705 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077797028 seconds)
    (16/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075989055 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.141757389 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093657072 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07257601 seconds)
    (20/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.153327481 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.189162199 seconds)
    (22/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075670624 seconds)
    (23/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.13998765 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.218777577 seconds)
    (25/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.192090036 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.106316064 seconds)
    (27/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.098619601 seconds)
    (28/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089510558 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.169837934 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072918247 seconds)
    (31/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075370103 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175201052 seconds)
    (33/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090055865 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.169668924 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.095278096 seconds)
    (36/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066469571 seconds)
    (37/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098670707 seconds)
    (38/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.213835105 seconds)
    (39/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.141596702 seconds)
    (40/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.102996048 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.109390234 seconds)
    (42/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.135582248 seconds)
    (43/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088886008 seconds)
    (44/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.08165762 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070183784 seconds)
    (46/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076139068 seconds)
    (47/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073323171 seconds)
    (48/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067836246 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064555659 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.09645973 seconds)
    (51/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068498171 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071878728 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075225709 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071422671 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.159757969 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091302888 seconds)
    (57/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071565763 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173163723 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070856772 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064165658 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144819409 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.065723085 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144804066 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094093127 seconds)
    (65/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.150192325 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071433849 seconds)
    (67/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087235766 seconds)
    (68/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.098291374 seconds)
    (69/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125629007 seconds)
    (70/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.166295885 seconds)
    (71/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.077564996 seconds)
    (72/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064952035 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.159882742 seconds)
    (74/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.106641665 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 0.064593103 seconds)
    (76/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.158397465 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.17092612 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091298686 seconds)
    (79/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072259481 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.107732953 seconds)
    (81/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073072232 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091885026 seconds)
    (83/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.049531571 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.305188179 seconds)
    (85/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076075141 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098046025 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134153559 seconds)
    (88/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066711874 seconds)
    (89/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051720912 seconds)
    (90/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079045252 seconds)
    (91/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07201931 seconds)
    (92/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050701059 seconds)
    (93/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.181191959 seconds)
    (94/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170252356 seconds)
    (95/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051935932 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066177065 seconds)
    (97/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17146258 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073267742 seconds)
    (99/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068421043 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.137091322 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.169496972 seconds)
    (102/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053851193 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.136289973 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.090224327 seconds)
    (105/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073804982 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065404239 seconds)
    (107/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.114097162 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088058654 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120224149 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091757505 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143100819 seconds)
    (112/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051099421 seconds)
    (113/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079963069 seconds)
    (114/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06048812 seconds)
    (115/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.134954814 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.137027373 seconds)
    (117/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066271717 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065773245 seconds)
    (119/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.288656257 seconds)
    (120/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076632819 seconds)
    (121/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.049995959 seconds)
    (122/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.200631028 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.130877 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072492586 seconds)
    (125/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087065698 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070988475 seconds)
    (127/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.142581438 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070770465 seconds)
    (129/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08110265 seconds)
    (130/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071916873 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070087811 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070696718 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064371661 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.112568776 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064370857 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.093940175 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071090807 seconds)
    (138/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068699395 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088243671 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069993091 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065527516 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124460718 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073006544 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093104777 seconds)
    (145/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051264564 seconds)
    (146/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.154348566 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064179642 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071624832 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07059935 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051592777 seconds)
    (151/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070966645 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065898755 seconds)
    (153/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.135327962 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100300144 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072014375 seconds)
    (156/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077950565 seconds)
    (157/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087959191 seconds)
    (158/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065190572 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052194223 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.074867465 seconds)
    (161/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086896946 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101608626 seconds)
    (163/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05007249 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050155795 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167135771 seconds)
    (166/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075322594 seconds)
    (167/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074439985 seconds)
    (168/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076158559 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050339252 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064279862 seconds)
    (171/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06087092 seconds)
    (172/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050156278 seconds)
    (173/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050217241 seconds)
    (174/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.098729164 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.147804632 seconds)
    (176/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065401943 seconds)
    (177/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076080165 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.049928983 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070622977 seconds)
    (180/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.060491095 seconds)
    (181/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071630043 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068770167 seconds)
    (183/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.05990738 seconds)
    (184/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078664615 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071956494 seconds)
    (186/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06278453 seconds)
    (187/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.102704121 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07001239 seconds)
    (189/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05086739 seconds)
    (190/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.100733056 seconds)
    (191/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.049948402 seconds)
    (192/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070212782 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.065936205 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062542285 seconds)
    (195/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.049705346 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.062739418 seconds)
    (197/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.063182262 seconds)
    (198/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.261521965 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066167769 seconds)
    (200/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051885096 seconds)
    (201/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062905282 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067345781 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140194993 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072786968 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065262385 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074879969 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05126549 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051874393 seconds)
    (209/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068910409 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065627382 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075639871 seconds)
    (212/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071070366 seconds)
    (213/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079853198 seconds)
    (214/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051095915 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10801653 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087047619 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086208747 seconds)
    (218/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063665457 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106698515 seconds)
    (220/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06561458 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050561553 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065455691 seconds)
    (223/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.168296591 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065843375 seconds)
    (225/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060183825 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137411783 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065439045 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052108524 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053425335 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065078501 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064829852 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087777987 seconds)
    (233/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075434707 seconds)
    (234/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050502667 seconds)
    (235/309) benchmarking ("sort", Float64, false)...
    done (took 0.123810883 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066670997 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064619244 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067526897 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085177891 seconds)
    (240/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07206485 seconds)
    (241/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06163651 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052065482 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051017841 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066899244 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065920784 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14456668 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050533952 seconds)
    (248/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.098925454 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064059932 seconds)
    (250/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052135973 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.0674468 seconds)
    (252/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062000673 seconds)
    (253/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.060817739 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070908205 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089685328 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064833521 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090528578 seconds)
    (258/309) benchmarking ("sort", Float32, false)...
    done (took 0.125759763 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051666871 seconds)
    (260/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050378672 seconds)
    (261/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051831508 seconds)
    (262/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05024128 seconds)
    (263/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051205449 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07184756 seconds)
    (265/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072904853 seconds)
    (266/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052007929 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085117141 seconds)
    (268/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.1352718 seconds)
    (269/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050573044 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064804486 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16405563 seconds)
    (272/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050169264 seconds)
    (273/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.096322438 seconds)
    (274/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071506083 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137133122 seconds)
    (276/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050325742 seconds)
    (277/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062464628 seconds)
    (278/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052479224 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086399644 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063031369 seconds)
    (281/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069721421 seconds)
    (282/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059780224 seconds)
    (283/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066182464 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066931521 seconds)
    (285/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065441854 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071505467 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05022283 seconds)
    (288/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051814207 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064236778 seconds)
    (290/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07031037 seconds)
    (291/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051917109 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069472928 seconds)
    (293/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051940203 seconds)
    (294/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062505995 seconds)
    (295/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065712271 seconds)
    (296/309) benchmarking ("sort", BigInt, false)...
    done (took 0.181579857 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.116454257 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.090752484 seconds)
    (299/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050105828 seconds)
    (300/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053272315 seconds)
    (301/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070273718 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088295268 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087356234 seconds)
    (304/309) benchmarking ("sort", Int8, false)...
    done (took 0.136673337 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070436779 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069869516 seconds)
    (307/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07706717 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051799343 seconds)
    (309/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071971721 seconds)
  done (took 29.895231591 seconds)
done (took 31.262093285 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082563245 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090924794 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072958912 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091249286 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.078415245 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.074930215 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07073196 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076475813 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078384982 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080387857 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07671722 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053928452 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072516048 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072678191 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072902679 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089350065 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07647136 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071426187 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071961119 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063505445 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071462222 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064730878 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066182056 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054035773 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076566933 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07031996 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071282847 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072155831 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064544768 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064433222 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06795198 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071629608 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064331349 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076565525 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070647974 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071348786 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073214683 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07486441 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066427847 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06440525 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072758886 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064591783 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071085838 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071616308 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070370839 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069683933 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071263951 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076010007 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092381622 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066701099 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072544885 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074652878 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074600136 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070799886 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068101488 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071529114 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069543365 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08895646 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071646832 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066705441 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072625346 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072465874 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069586138 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071373573 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071539998 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073697948 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073529211 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069930604 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.072963691 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069499027 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06413041 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071708144 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06765349 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06437465 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073943003 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075292952 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063524824 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069915508 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07132513 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070208807 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063568674 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066319853 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065795212 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070023133 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066274089 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053552412 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067803385 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07083668 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063121563 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07178561 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.069846798 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070651375 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06570507 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073699718 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063534454 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069122555 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064288822 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064282609 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065894375 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067795037 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063886849 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066696866 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07323589 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065664759 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070734887 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077611923 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064472555 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070649849 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063479519 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06364847 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07848678 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073666677 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064799079 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067521203 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063688637 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071620925 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.0635268 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064431895 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06354023 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064427038 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069065478 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063502709 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064997201 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070295849 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07533154 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063075744 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066499346 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064958835 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063516421 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.067977255 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063218078 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062998833 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199333147 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061387162 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067058578 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064924404 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072003515 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06695104 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071502655 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066604268 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072373855 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068898594 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070166651 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069498663 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063814916 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.057858079 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067407421 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066596329 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066234571 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064566608 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066229433 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06481839 seconds)
done (took 12.200052167 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064852703 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139599342 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096136412 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093832459 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08441783 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064902637 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074834851 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099715731 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066826769 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10040855 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.0859836 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083364882 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110160183 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063744123 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064728515 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068488826 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066475946 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.079746946 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.098910243 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084903866 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107177153 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064579754 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092272201 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088226906 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08540407 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.099519434 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065721567 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068534194 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068223233 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089118012 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.084823149 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068618136 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06561523 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097938508 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09020714 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081271528 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065068443 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08052352 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065104238 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064572134 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.0793156 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096255337 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078185704 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078404128 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068423303 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068057797 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066143177 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08155289 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087011627 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.076966124 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084642206 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100752109 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067487074 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06484408 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063688169 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083556389 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064440069 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067501639 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065178194 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.066872442 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06514553 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067868306 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079641371 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.0850341 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068183699 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.07851091 seconds)
  done (took 6.663863462 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081558439 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088830106 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081881013 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082373588 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064536703 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065192263 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065156898 seconds)
  done (took 1.984267608 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065498887 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086319826 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087376499 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087021007 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082969211 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085130099 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074384678 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065565596 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079301895 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066189714 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08675102 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099360924 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066073004 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07132058 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.088993841 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065952565 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.088488237 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065580652 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068513991 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088592946 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067261527 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.080620516 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068434895 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066071326 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078978479 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065529452 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110797896 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069572261 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066747223 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068540299 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063605604 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104311493 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078874034 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074050379 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065302212 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078949859 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079257805 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064068156 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081402479 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070304713 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.078658362 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065569157 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066453275 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063490343 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069635029 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075444191 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066127874 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065901748 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067815563 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084772776 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066226732 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078862037 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069813714 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068234442 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067420014 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069593876 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075175218 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066045114 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084952314 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066971681 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082414588 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081146061 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.07909989 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.080975485 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068159486 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078977758 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078285346 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067570076 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067072359 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068919325 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081591309 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063814626 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06708102 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07573721 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067007715 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.087879565 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087372436 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066961288 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074348866 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065981712 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065416231 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06537056 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.087565623 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067573514 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065298859 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069408412 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068450286 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064502754 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065122513 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069357313 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063923317 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067075646 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068589259 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069121597 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068431384 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081700579 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067807631 seconds)
  done (took 8.598681285 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067226876 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06633027 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067947025 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067101142 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066282361 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066321982 seconds)
  done (took 1.878942052 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091800863 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068233696 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078914 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070766009 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102572257 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085622005 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086113373 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077002725 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083204113 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077325939 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085475094 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087106509 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091189745 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07155557 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085127638 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070672836 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085812887 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074661252 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077074177 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071958154 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084888824 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071416502 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071464784 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.079987307 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074928797 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071048206 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066275048 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077504345 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077106464 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077469517 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071206666 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074758759 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069294313 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077124782 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08516572 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069339076 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070438306 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076488657 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071134695 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074324216 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086594931 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071918907 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073557619 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075662188 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076597021 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.06913584 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075818432 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074422954 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084454396 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075667554 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075700706 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070006551 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07406565 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075519161 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.068925741 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076715888 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075881235 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.084986737 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070720918 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069324175 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067559573 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074188646 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076703577 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074062316 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07723842 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076037484 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069267248 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071388898 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07206127 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070854383 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076264495 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068014933 seconds)
  done (took 6.949745842 seconds)
done (took 27.518637037 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541586469 seconds)
  done (took 1.987544656 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.610026056 seconds)
  done (took 2.080541266 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.385168329 seconds)
  done (took 7.850289095 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.388976741 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.49988515 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.701708811 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128660185 seconds)
  done (took 3.228305803 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.664156495 seconds)
  done (took 2.144079691 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207367393 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193922683 seconds)
  done (took 1.891764051 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.365442279 seconds)
  done (took 1.835268043 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.081955196 seconds)
  done (took 2.55167999 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.255583456 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160625618 seconds)
  done (took 1.891916747 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.454833326 seconds)
  done (took 1.926946382 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.796508176 seconds)
  done (took 6.270921637 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.203467364 seconds)
  done (took 1.722740276 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235406686 seconds)
  done (took 1.708786925 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.70529586 seconds)
  done (took 3.179022839 seconds)
done (took 41.744272104 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07953561 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080086221 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079859687 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076836982 seconds)
  done (took 1.778502485 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076381907 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072184095 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07534387 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072082898 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076623596 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071779672 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073375175 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075868518 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07163648 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071854473 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071402145 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071918722 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074155494 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073494349 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070585363 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074078037 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074940527 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071643378 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07508262 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071758009 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070462042 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074236466 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073892381 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071040546 seconds)
  done (took 3.232911957 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07778648 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071765395 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074486339 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071433772 seconds)
  done (took 1.780791242 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076666873 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090144678 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088333001 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076401082 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09053253 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085153697 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068535554 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068530349 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072052724 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07595272 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067210449 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094839612 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086704042 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075952707 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078137959 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065606764 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067467738 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085544526 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076594749 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076989323 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069537849 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076382147 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067111602 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087231009 seconds)
  done (took 3.348970256 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076510781 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101593396 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077019142 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088031298 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088339181 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064487587 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073450884 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087998632 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121914765 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064663958 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069132544 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064581124 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071557322 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064174785 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075095288 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104405595 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107446416 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067493543 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094628133 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064860259 seconds)
  done (took 3.118126322 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072396112 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068707257 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064723961 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068526398 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076814955 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072456765 seconds)
  done (took 1.91367089 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067044725 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066461994 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066124337 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066062369 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071293756 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066921957 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06514077 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066360356 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066226144 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066716561 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065820532 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065999184 seconds)
  done (took 2.286783721 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.333314196 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067420185 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068395676 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065290482 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069646903 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065519574 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079057846 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067275002 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089469731 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066193626 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065873158 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06759774 seconds)
  done (took 2.593853959 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202247236 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075507476 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235163927 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135261193 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109605856 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113889143 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102805049 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111846963 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140847254 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100165281 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164651839 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162316718 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105239708 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135054701 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088297399 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097146237 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152478151 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160007808 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102235163 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162874702 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141774827 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123157994 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145086726 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099939084 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104060496 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119736948 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.06982469 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079088101 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167297229 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129771848 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143739065 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110010301 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092466941 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174028325 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168942937 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140594273 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132617258 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082749022 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100955815 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131302967 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195223223 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087225394 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159010895 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243833813 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080607254 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138898451 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119438144 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11916677 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106692984 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08954183 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143941293 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180705323 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136815831 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086571046 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110894081 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114016614 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114084119 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102417918 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179376638 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158068792 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12624253 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070949177 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097818047 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150598023 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130474868 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107537155 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124423084 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092590395 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130739038 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153398019 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117373286 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141905465 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127238287 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087823281 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117900621 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137954549 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126299843 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167825148 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123873714 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072392917 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123268642 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106860304 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080549232 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142211108 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074892854 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17280098 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099030886 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106973962 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111709643 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107145804 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107276058 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157587573 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139433919 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241686887 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065839944 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102405338 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119474501 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146245105 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086974951 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107057611 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114852692 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076432272 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136894833 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073977179 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121990362 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074846383 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123425553 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131255011 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075297925 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119619272 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099821463 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098402799 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130778591 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157530793 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087974698 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081645022 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164219582 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120291626 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103928602 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142937478 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154132844 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097520035 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101395232 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147764561 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176943364 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088845179 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160354339 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10651025 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083061919 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086694684 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122291793 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111066309 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120475003 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081432262 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117043297 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166091081 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074430324 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094295261 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132200698 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077780035 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079472007 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101489993 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098889331 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093518893 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098998961 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102302071 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135817962 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121250597 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102291557 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265919696 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097540241 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168509523 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087257714 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099483526 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103448388 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06986902 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13531809 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155016835 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079176766 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162214574 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121633726 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103817031 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117181032 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08205546 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138621253 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078175168 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069183715 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14212341 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110771932 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108380852 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148770111 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103258721 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126092393 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118709552 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13212858 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130171136 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127976473 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104195844 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087521016 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110479607 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124218719 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072766555 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090524236 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079451953 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103050266 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094295003 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082483988 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140124148 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122949017 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09908546 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109985738 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095557225 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145319674 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075720626 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127132197 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119568116 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093710112 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148973842 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149439536 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128863193 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097176095 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14214058 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069387654 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072784042 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.228921155 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123474224 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082785164 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083428414 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116064003 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144773995 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128257831 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137107268 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110270854 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119373806 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153310773 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069187888 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11568696 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146388371 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120151386 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104102516 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089419265 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098662406 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13996586 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106626179 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179764113 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112138192 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124213172 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151459838 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099201024 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079416217 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101644939 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132779135 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103036032 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145601884 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098561303 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087162449 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109123761 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073451565 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098477471 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125380923 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117713588 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13370719 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113311076 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130850709 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07634179 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115301563 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119114045 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120869459 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063579866 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117573427 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157666931 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092653416 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116376628 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149973048 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077691177 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122266609 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318825836 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144491876 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084094453 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109144782 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117742452 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127191247 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118187646 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139343643 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109261319 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133922201 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107621341 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084810403 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08682954 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096736567 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103238862 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09384798 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107091707 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113300784 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094286149 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12976396 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101984002 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109311033 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115996326 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096224099 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088733129 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095430105 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171165391 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118831147 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169382103 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097642597 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142201969 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161047952 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074228667 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078255072 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077531008 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138087601 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083045139 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128869085 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096806955 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104354082 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122372899 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14007937 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093869002 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067948971 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107557427 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132447507 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11106033 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096963514 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102513386 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15968532 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098957047 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078202637 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112009725 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102906752 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100319618 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165083948 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.203294528 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097060467 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076159099 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080452451 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127159396 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151197459 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079553401 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101546773 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11779767 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10863092 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125444954 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10024297 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097732839 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113694658 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148195567 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126890838 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088401381 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110452762 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126856045 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170838204 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103242708 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094202065 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169383921 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150174887 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157838338 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087309572 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112466115 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112707222 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109378764 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137805824 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082698289 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160726596 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08093616 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134022858 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102743598 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088749588 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127788524 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097723495 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087579091 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145836137 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116362083 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082022194 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076921398 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116196896 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118867251 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104487667 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074193525 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135730886 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071991865 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130269274 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165265864 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079502837 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102243792 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238620913 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080545151 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107545585 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101990356 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088528954 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.09779669 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170730107 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087596884 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147527588 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139420193 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111409668 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135275899 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098470396 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634235864 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077425014 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149518196 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115047941 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170528632 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096394578 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11627388 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107870961 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122204294 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142490546 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103207896 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177042848 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130512465 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114491724 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078716675 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101111965 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101086446 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08766433 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104480409 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112099777 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114107535 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092144428 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114416987 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121560641 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080919795 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094229869 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154335793 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115439227 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141987195 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138507406 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084127677 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116015845 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135543375 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078667483 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119746916 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149244393 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103559272 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095921193 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07843398 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.243565809 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169353034 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072793405 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158864748 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119172277 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108578235 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113203627 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112943682 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130358235 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106538657 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118686622 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092573117 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109382688 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111010368 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080228956 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075884267 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10336825 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110811146 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096955208 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097702173 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097960155 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148746359 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070665603 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095612019 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102565758 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142738936 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17153371 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086847406 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081735567 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117663567 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111351794 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111794164 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119152457 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07827959 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081370184 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080952117 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076520244 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106755131 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110800069 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103234535 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109823034 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16176835 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081908895 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223316596 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094010613 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103397252 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069223833 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077546259 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094422765 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095976859 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106751097 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099924808 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165659177 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093192231 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088195571 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090546507 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071610472 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080926847 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.267362714 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111395059 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117841975 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096099754 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062778758 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107158162 seconds)
  done (took 58.117666449 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107218414 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082200258 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096354407 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149455069 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121676634 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210704816 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15677957 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198616869 seconds)
  done (took 2.71730373 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067369971 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093254414 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100002986 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081725122 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066257527 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067857797 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223047063 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079764834 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065745309 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08796706 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078277823 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068435882 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.399278489 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.0651967 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066864778 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062097321 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066945458 seconds)
  done (took 3.326283182 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.372445092 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.36405767 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.36988455 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072586787 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.65096498 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088299131 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.062775628 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095977177 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070651316 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.279991137 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.70264987 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091745155 seconds)
  done (took 13.81665809 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074823527 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070086685 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082953275 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083121042 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071795812 seconds)
  done (took 1.976598857 seconds)
done (took 101.546219796 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079880563 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.292735572 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052846484 seconds)
  done (took 1.967059217 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.0813952 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.0837635 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083872639 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081968589 seconds)
  done (took 1.925567274 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074203802 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076085074 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083949847 seconds)
  done (took 1.823537874 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221565421 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.137193681 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085652433 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081649401 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077162942 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077515506 seconds)
  done (took 1.828255826 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071660709 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07508543 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07228971 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075593421 seconds)
  done (took 1.882614653 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075790554 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05229794 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054142561 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055476621 seconds)
  done (took 1.829561205 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085516241 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077740485 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077189851 seconds)
  done (took 1.831404387 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105413393 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083848998 seconds)
  done (took 1.778589099 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080724534 seconds)
  done (took 1.670411241 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09745402 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112018171 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127069852 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10813123 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134548803 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107307799 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08499929 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085673068 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076509971 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085689888 seconds)
  done (took 2.608544709 seconds)
done (took 21.261068721 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077166551 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.359851352 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359656471 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090131558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.665995544 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355772804 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.99564706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091039474 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119288618 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066635928 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083085125 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647000788 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.955614749 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318188681 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.944089914 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.413431369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648282119 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067556401 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067013594 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06691309 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.985903109 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066635004 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066838849 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067208997 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649071669 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370082919 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066881518 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.41216947 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066734636 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068385772 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353930862 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066866465 seconds)
  done (took 16.209048002 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070150252 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117345855 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072969024 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083318858 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070140207 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068630657 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070461574 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06823431 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123869786 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066790528 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083380435 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066792246 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071298591 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067818266 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085760169 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067532082 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06960128 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067945044 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067516776 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06745192 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085700397 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066558867 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067474283 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067746791 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067415319 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079214773 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068048755 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067951223 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06755049 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069695139 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070072856 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068018865 seconds)
  done (took 3.980097867 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114524808 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124363864 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073276987 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10171014 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110943654 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069199523 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141876861 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091313026 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125809637 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067482574 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08357934 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067403296 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100083289 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068826152 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086672277 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068098524 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068336167 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067661622 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06764924 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068025689 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086099354 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067275133 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067776212 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068202991 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067925719 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080733731 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067836155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067725056 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067826513 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069430037 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071052459 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068681149 seconds)
  done (took 4.223667507 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072013461 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074386515 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082601818 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083201422 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068714133 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07125905 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071960098 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069169354 seconds)
  done (took 2.207381148 seconds)
done (took 28.215991414 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078526778 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068037392 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072460308 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08015886 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072227159 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077781697 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066101687 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073467795 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.0709528 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072060766 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073661122 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066692077 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070019359 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066273277 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072813968 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067474961 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.077951367 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070736315 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079060006 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078354971 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069276008 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07206908 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073675004 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078313767 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077715459 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078267399 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076130951 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071941576 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068267193 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069408372 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075656144 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082912559 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06758238 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078135244 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066708564 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06696694 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070601265 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06710933 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078239362 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075361404 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068863379 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075374983 seconds)
  done (took 4.659057042 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087050486 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090167849 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083516459 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.0610989 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066596667 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06364969 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087550908 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058632188 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058753444 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08662817 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055214241 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058324707 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06152404 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053413115 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.05856444 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055953589 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060659523 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05516749 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058520535 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058330778 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057182801 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053464267 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059074306 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063907838 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05602551 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061250266 seconds)
  done (took 3.287615466 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073443131 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083526289 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087391884 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125027849 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102428384 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076228039 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076943115 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086092033 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084376 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066300909 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070097296 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092407375 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086628928 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072744387 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066559473 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084454087 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080664865 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068067834 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072433164 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089297602 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083086774 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.076506456 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091074888 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.07936913 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065796729 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068587726 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070337658 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079808416 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070867415 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.074994247 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070159307 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069523458 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.0681478 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.088830223 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069926198 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068154742 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088642162 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075767893 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077427954 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067174096 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069870142 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067104285 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088236875 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12127238 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066180293 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073005176 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073865721 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075556116 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067007726 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084999431 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077489974 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066100826 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069383296 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065689172 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066676518 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079562673 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068458406 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068889854 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075224121 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069548608 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079055453 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070321936 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081527933 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066096828 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07406779 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066302185 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067222252 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065571659 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09134833 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0681244 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107421008 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067537683 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067903515 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075255222 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074113197 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072408462 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06703606 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081377426 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076766572 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069908931 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075161927 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.06987562 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069233684 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086912162 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068963168 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067948469 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067383133 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072415139 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069052726 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06780273 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079357319 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066786373 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069994616 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082920355 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06638593 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067660104 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072507608 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071536994 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066723163 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077482586 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071296566 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067881909 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075993721 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067023815 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069804306 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076782666 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072930091 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065781185 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071494001 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072894157 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067695881 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068344052 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069377285 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068414522 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075939076 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073072725 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070904003 seconds)
  done (took 10.396481974 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158159558 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151451661 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069369267 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143188411 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075850679 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078056307 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145219394 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093701693 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067219628 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067556806 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067998871 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113797009 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104342581 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120566655 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077834259 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067229847 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082330766 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115444357 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146510884 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14069445 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08254874 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075432118 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069016252 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068584576 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073548991 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081294144 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090187298 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075946681 seconds)
  done (took 4.353487797 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080259238 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099629697 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072874132 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088035129 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08933053 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066731114 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069157921 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069022841 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079632542 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077473717 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066955333 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072618996 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07389384 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073022777 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067843134 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073765804 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074270348 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068392787 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070058008 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072119531 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076648959 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079828558 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071122887 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066283792 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072985544 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065802376 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.062985374 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083085011 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067308416 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089097195 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064811983 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074290338 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080551031 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067807517 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066976343 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066830162 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06693465 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067131542 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068655657 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065776907 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06550275 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056635645 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06597469 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078150699 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072749223 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055786321 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071691858 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072068707 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071916166 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064881811 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.06986507 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069380924 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070178319 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.0739931 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071773637 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072054392 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068106314 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065142602 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074412401 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066929034 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064018364 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065421207 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071624634 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064871955 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074828177 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071160786 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065594871 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066420817 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068270727 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072896947 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06706443 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069890913 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064441909 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068408943 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071579833 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068675008 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067673118 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065929622 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066233093 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067712966 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054999117 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066708514 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052774904 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069622055 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064773479 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065432148 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066878766 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071263492 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078300101 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067944321 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072441429 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067412119 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065755391 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070333481 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059917202 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069542293 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081482768 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081107605 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066573866 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064461772 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081100033 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071286873 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06588864 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055481409 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074073216 seconds)
  done (took 9.015130728 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093736505 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086700125 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069682326 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082655019 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.089893568 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085898443 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073831732 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07569543 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068766167 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081010217 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072237806 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075212815 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067243529 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076138584 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093279463 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075859885 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069122704 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076075266 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070811629 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100065057 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081802484 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080697292 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.073739557 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067251214 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074904105 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079160575 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089011685 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.07913649 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078012033 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074212842 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078829529 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08906755 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073124879 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071411681 seconds)
  done (took 4.335913142 seconds)
done (took 37.655746457 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.698049446 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.872394893 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.688540489 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.045214202 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.767965377 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.90920741 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.869860504 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.684151934 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.883310829 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.729763985 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.926306693 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.714243137 seconds)
done (took 64.416122154 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.702892698 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.823243353 seconds)
    (2/2) benchmarking "String"...
    done (took 1.955959643 seconds)
  done (took 5.405889538 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.037521958 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.216373946 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.933923447 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.684849077 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.691612976 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.993948279 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.487352453 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.21054018 seconds)
  done (took 29.844523252 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.856774714 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.88738439 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.340139289 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.379636837 seconds)
  done (took 15.138607112 seconds)
done (took 61.845111409 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.718461279 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.689039039 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.708565894 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.665866939 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.742053723 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.696370834 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.293540596 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.686841071 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.682216249 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.666953941 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.686183547 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.107911919 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.697285739 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.179082778 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.682725517 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.69372416 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.692060097 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.257338373 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.837204681 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.694183327 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.690239223 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.746372787 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.685825019 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.691758967 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.723820514 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.682469948 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.108201298 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.682006001 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.295858382 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.687314317 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.712465489 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.845532318 seconds)
  done (took 201.255356999 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.681829978 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.678130964 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.715051037 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.683880786 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.176065508 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.875676556 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.817467014 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.209089837 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.681575694 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.707909251 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.833459035 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.685546332 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.86774308 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.632289888 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.687255352 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.769189982 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.859094812 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.877109012 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.681729458 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.960591412 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.692035728 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.849562529 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.784296488 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.816966071 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.687513418 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.787320724 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.873090612 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.703984952 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.874751759 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.823987625 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.714706269 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.705102222 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.90870662 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.556170559 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.689041063 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.715307167 seconds)
  done (took 166.886742896 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.092489775 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.687070222 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.687687728 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.687871303 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.699599581 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.686541199 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.810105017 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816715213 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.146923543 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.978931112 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.737417089 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.518084348 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.68848471 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.754572162 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.70120504 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.688385779 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.686488778 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.702269709 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.689891192 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.711371642 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.68839363 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.816172561 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.700025946 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.694104859 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.689351843 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.693242513 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.053588145 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.864863941 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.688517713 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.694804112 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.946296094 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.688147706 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.688033519 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.580932441 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.90877486 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.69524366 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.688556962 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.771012718 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.689956154 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.695888885 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.689787446 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.908604865 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.689627765 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.689177331 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.691907749 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.691406152 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.862523693 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.689722278 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.814154799 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.690661598 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.188256018 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.68956458 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.688704295 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.436456351 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.356758556 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.688798417 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.689831489 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.691479604 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.689337141 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.688655173 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.697405365 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.549602386 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.763828412 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.69000344 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.692816663 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.696633807 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.689243846 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.847490262 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.690342231 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.098319811 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.748954065 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.795909718 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.812939124 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.693285296 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.756694259 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.784454343 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.691272652 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.690215963 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.690464333 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.690322791 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.770675935 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.691514203 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.804773807 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.697625553 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.691973079 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.739393243 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.760495791 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.691327492 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.58597798 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.69236025 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.691431288 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.003065851 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.758258424 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.691082475 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.692084906 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.691190627 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.815738752 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.81506557 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.476740732 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.692329318 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.623720849 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.694153696 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.83385992 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.691750084 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.862990969 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.692130064 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.773467852 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.695766976 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.693225343 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.691137448 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.722702535 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.692016287 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.751809384 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.694949551 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.064507861 seconds)
  done (took 393.282844552 seconds)
done (took 765.19899883 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.365020244 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.333223808 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.446263667 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.356136994 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.336331614 seconds)
  done (took 13.471447106 seconds)
done (took 15.102649098 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.778658173 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.783306461 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.715644476 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.781781485 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.712132926 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.780589956 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.762248437 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.719282197 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.748899428 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.718533085 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.75072214 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.717764566 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.705244266 seconds)
  done (took 24.30739523 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.917820596 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.933055312 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.760855391 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.930869466 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.738399127 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.91834181 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.85850226 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.845154881 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.84691882 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.706536962 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.70396651 seconds)
  done (took 21.796713494 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.927390845 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.934209107 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.763823602 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.928861309 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.739381534 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.943541893 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.857618192 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.843067206 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.843020737 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.706069195 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.703517262 seconds)
  done (took 21.825293159 seconds)
done (took 69.5607061 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.698652918 seconds)
  done (took 3.332845059 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.720951873 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.857174207 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.706298176 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.703556586 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.699064356 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.700201032 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.70473791 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.699130584 seconds)
  done (took 15.426672901 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.695782593 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.6956322 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.698586415 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.695944492 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.698907628 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.696485225 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.69859592 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.696481838 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.69930696 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.698860972 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.696860588 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.697016964 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.697033101 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.699066852 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.699314484 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.699842582 seconds)
  done (took 28.799367476 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.698279266 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.696028958 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.696081739 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.698327027 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.696831508 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.69760326 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.698267507 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.696900818 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.697584952 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.69896349 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.699348964 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.698112663 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.698257048 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.698458639 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.697858439 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.698877343 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.696919173 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.698254719 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.702394775 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.697791822 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.698597155 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.698192359 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.698754129 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.698021741 seconds)
  done (took 42.393832714 seconds)
done (took 91.585782118 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.399727966 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.157033372 seconds)
  done (took 8.193877279 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.702013768 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.700589806 seconds)
  done (took 5.079876855 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.700711187 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.700697256 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.700552446 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.701006725 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.70074801 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.702099441 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.702127124 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.700926756 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.70151817 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.701014917 seconds)
  done (took 18.648773492 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.702471074 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.700989287 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.70003293 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.702087385 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.702003836 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.698355556 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.703189934 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.701085264 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.701899652 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.699417773 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.700975221 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.700447742 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.70223507 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.700597606 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.702541035 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.699521681 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.700257967 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.701043727 seconds)
  done (took 32.257047885 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.702403985 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.702637137 seconds)
  done (took 5.044213769 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.700395932 seconds)
    (2/7) benchmarking "second"...
    done (took 1.700252126 seconds)
    (3/7) benchmarking "month"...
    done (took 1.699451749 seconds)
    (4/7) benchmarking "year"...
    done (took 1.699713703 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.700242322 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.70036474 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.699785861 seconds)
  done (took 13.538915016 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.704105671 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.860089803 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.927585742 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.364977234 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.704485183 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.706307316 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.663177484 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.705407771 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.708965169 seconds)
  done (took 18.985031828 seconds)
done (took 103.383498063 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.496804098 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.698045444 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.079077899 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.766297854 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.716606548 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.996173913 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.711883621 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.923930736 seconds)
done (took 42.027812037 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.69842914 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.179586729 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.184875116 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.442636338 seconds)
  done (took 11.446555217 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.689482276 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.237206118 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.743669896 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.366407841 seconds)
  done (took 19.889683172 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.068844643 seconds)
    (2/2) benchmarking "read"...
    done (took 2.064809718 seconds)
  done (took 5.775279343 seconds)
done (took 45.452004097 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.702443286 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.698562722 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.70060208 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.700862741 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.69800702 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.700722182 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.698179054 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.699157948 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.700440417 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.70037151 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.701529121 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.701311094 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.703082256 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.699107156 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.698847237 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701479474 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.698524973 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.698039172 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69938933 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.698958503 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.701633516 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.699360784 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.700023624 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.701613452 seconds)
  done (took 42.440363093 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.701613325 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.699916534 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.701632704 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.702504947 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.699632293 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.702448121 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.702059285 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.700789114 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.702951547 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.702970133 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.700836512 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.701193726 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.702222158 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.701365725 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.702381789 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.700780505 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.703158139 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.701275118 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701999971 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.700650875 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.703273397 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.700940605 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.701419639 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.702804173 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.701279704 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.70044366 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.703221753 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.701590248 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.70421455 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.700460669 seconds)
  done (took 52.6915195 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.707526919 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.710562521 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.703663302 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.70486792 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.703890974 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.703980231 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.703999421 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.704133994 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.703718969 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.703768243 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.703260908 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.704104007 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.704183021 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.704502911 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.703985386 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.704181939 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.704622063 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.704442809 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.705005921 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.704880895 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.704727721 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.704168667 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.704224159 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.704704582 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.70441419 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.704575056 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.705054487 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.705158266 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.704672211 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.705453352 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.705936938 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.704603663 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.705227864 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.70512412 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.706138813 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.705822406 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.709861017 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.712874863 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.70767754 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.70593437 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.705832371 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.706177361 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.706030074 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.70629125 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.707233181 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.705399103 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.706692781 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.705757662 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.706228033 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.705457254 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.707172804 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.706097506 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.705950833 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.706860167 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.707241553 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.706708413 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.706970699 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.706511874 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.706478379 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.706682601 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.70669919 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.707358388 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.707490757 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.706543629 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.708474218 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.707902304 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.70723377 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.707042938 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.70842173 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.706801178 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.706737838 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.707459839 seconds)
  done (took 124.468654757 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.706502283 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.704820334 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.704761688 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.704187178 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.705589874 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.708476411 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.705203418 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.708000379 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.705009671 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.708387328 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.70723598 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.706056571 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.704233133 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.707842257 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.707755038 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.704510135 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.708483517 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.704867214 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.707896522 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.708852284 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.70809129 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.705599111 seconds)
  done (took 39.185878644 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.708502878 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.708102899 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.706281904 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.709132059 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.706379845 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.708773491 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.708655127 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.710135188 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.70835239 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.706196173 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706926786 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.709344502 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.70694192 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708019438 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.705736257 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.706775135 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.709323927 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.706557718 seconds)
  done (took 32.384591848 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.707131461 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.706605695 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.708599465 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.70674307 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.707411067 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.709835839 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.706418598 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.709974106 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.709090601 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.707009182 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.709364885 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.709797602 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.709494619 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.707328842 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710584329 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.707428563 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.7105561 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.707506384 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.710516157 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.70762107 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.707449464 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.710274018 seconds)
  done (took 39.232834683 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.710533664 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.711961532 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.708407014 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.707731417 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.707869107 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.710509343 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.711219687 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.707983318 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.710331071 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.711566791 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.708369593 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.710796012 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.708519904 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.709408699 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.708606435 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.709003752 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.711183958 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.709764027 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.7115806 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.708701852 seconds)
  done (took 35.840243429 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.713138061 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.712128192 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.713126292 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.7133511 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.713052554 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.712485506 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.712498382 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.712552296 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.713860885 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.712780556 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.712857239 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.713372452 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.712797986 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.713390478 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.713136745 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.713310501 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.713307784 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.712801497 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.713528025 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.713309909 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.714091575 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.713072703 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.713232304 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.714403713 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.713679414 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.713476396 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.713751023 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.713354217 seconds)
  done (took 49.617740057 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.71292813 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.713401306 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.710804244 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.711513112 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.710439161 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.709868416 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.71052075 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.711501143 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.713146507 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.712226417 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.71331204 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.712589619 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.713173743 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.713985043 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.71396204 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.713481822 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713790061 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.710945341 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.710951233 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.710675957 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.714513391 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.714158886 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.714289691 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.711516603 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711906026 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.714830494 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.711607061 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.712263596 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.714527568 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.711871202 seconds)
  done (took 53.024385387 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.733481399 seconds)
    (2/2) benchmarking "in"...
    done (took 1.733783233 seconds)
  done (took 5.117588843 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.711259853 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.714848951 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.714588735 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.711800327 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.71315979 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.715125719 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.714203694 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.71249027 seconds)
  done (took 15.357943106 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.718942403 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.71696356 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.715093536 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.715173137 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.716110112 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.720009296 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.727217084 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.715499503 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.721356745 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.720017029 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.725174911 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.727354348 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.725809246 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.720314487 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.721164312 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.721055059 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.715686189 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.716673625 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.717620935 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.714675181 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.716696489 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.721967113 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.721882607 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.714064752 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.722345891 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.733269894 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.726990736 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.716218934 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.721321405 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.72595535 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.721843565 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.713693707 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.716886967 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.717382427 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.716642154 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.717676094 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.732532351 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.722127887 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.729498083 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.717203665 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.718212735 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.715095081 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.723605303 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.724398575 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.723792012 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.718948753 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.718365497 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.716743816 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.722545652 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.724864114 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.722649212 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.721327004 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.715521774 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.729204307 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.724518933 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.730324029 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.719526848 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.725645544 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.730714012 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.733457546 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.737468223 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.729359711 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.72484824 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.718863548 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.731516232 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.745932921 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.730992822 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.715934349 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.716422636 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.718930306 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.732901275 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.737955467 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.732468888 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.719154803 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.719160676 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.720101486 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.724436184 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.718947129 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.730745595 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.727114136 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.720028174 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.719985997 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.732911615 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.745087601 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.723031677 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.720845931 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.720905551 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.720459843 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.724608878 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.735710605 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.72023371 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.71876969 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.724000403 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.725500504 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.727750929 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.721322708 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.723175313 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.727148487 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.717724115 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.720593473 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.721799451 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.727333087 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.734022463 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.721139289 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.720440763 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.734762147 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.720490027 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.724226751 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.735871526 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.720524966 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.721794456 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.726232777 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.732808323 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.719040827 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.727897433 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.7347304 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.721467201 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.727988061 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.721970988 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.721456763 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.734904964 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.752113397 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.72153143 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.721934422 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.730485084 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.733455341 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.722277413 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.729356464 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.721454477 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.718564388 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.7190373 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.72821693 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.721822342 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.728103723 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.723573256 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.727891028 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.720282874 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.721192261 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.723548259 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.728528879 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.730374893 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.726707342 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.728167816 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.730194612 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.724107029 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.727780554 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.734279782 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.727683656 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.729891919 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.728694001 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.720349188 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.723219218 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.729816448 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.725187728 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.729279604 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.724248796 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.727320081 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.723961877 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.723583914 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.723379792 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.724595277 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.72949066 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.732052977 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.724998816 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.734101752 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.727718416 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.722008755 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.725081057 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.72430767 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.729620223 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.724163127 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.727187584 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.731505583 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.731925434 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.724250894 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.725574475 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.733648373 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.724943718 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.725605179 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.725328022 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.731555313 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.736057579 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.725836867 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.736889554 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.724620256 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.726133018 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.725353732 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.728628635 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.728319699 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.725087381 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.731880346 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.731937113 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.746461092 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.738248652 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.730621478 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.728628291 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.73187506 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.729057918 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.736714893 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.72666029 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.725795124 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.725993695 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.72969757 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.726273372 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.733210793 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.726189366 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.730071789 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.72684459 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.725729124 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.727394076 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.726183983 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.73100201 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.733356609 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.723644176 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.727112122 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.727677036 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.731445192 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.724012565 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.730335961 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.731796471 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.726845028 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.728062102 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.741510147 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.724759677 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.731764811 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.732506998 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.731954819 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.730910367 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.726684888 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.733336719 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.733361093 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.738899677 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.732739137 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.733616167 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.740186654 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.731910713 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.732093739 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.735835781 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.727296722 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.72448423 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.734808487 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.734826374 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.728268875 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.728530454 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.728648287 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.732901365 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.727779791 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.740586697 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.725247918 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.731480574 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.729362107 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.736002587 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.72678989 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.733949819 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.734687499 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.733410524 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.735525829 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.729635607 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.729003185 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.735507405 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.72901364 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.730748206 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.729556681 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.736005809 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.737401226 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.73842576 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.734446161 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.736957026 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.734040244 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.732131206 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.733787273 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.730934425 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.732760634 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.750378842 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.739308944 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.74202587 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.738789081 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.730527569 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.74035574 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.735529964 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.737648709 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.733808992 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.735465285 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.733938406 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.733150276 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.72735784 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.735983399 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.730431916 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.735506611 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.736331228 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.733525697 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.730500379 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.734244742 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.730238215 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.730943377 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.73040726 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.734258279 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.730660967 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.739040547 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.737238324 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.734111313 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.735547026 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.744484984 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.735328454 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.737769332 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.735399174 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.735061979 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.735586172 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.737865587 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.731909811 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.738954147 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.7391847 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.737214164 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.746896713 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.735654929 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.746494968 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.7325834 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.739439295 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.74060012 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.730047137 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.734781975 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.737092718 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.733112979 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.745765514 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.732502913 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.737931717 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.737152187 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.733497402 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.733806256 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.7320366 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.734451689 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.732943131 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.734000522 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.746232165 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.738472488 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.741164797 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.740113711 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.730873899 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.7339119 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.733371709 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.736791156 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.744044789 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.735289224 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.738160943 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.73792456 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.738748615 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.733919745 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.733063778 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.734724673 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.730240454 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.733148881 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.745774272 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.739063856 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.739215261 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.734544349 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.749681511 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.734383763 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.747609641 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.735576734 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.740108645 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.734476669 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.733404307 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.741487361 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.73860651 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.740703847 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.735089668 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.73916916 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.737862168 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.734982272 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.74242254 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.739521349 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.735733863 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.738070735 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.748052038 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.757054307 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.741208664 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.739481438 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.731812685 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.739923253 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.739537825 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.735333683 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.737774916 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.74310098 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.749373823 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.741743744 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.740684226 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.736237762 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.740749703 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.737130994 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.736176038 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.73517911 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.736550983 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.736256718 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.743316043 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.736706113 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.745807223 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.737198613 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.741947044 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.743333235 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.74161782 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.752294199 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.736415782 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.744319849 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.73717119 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.73622357 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.742016828 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.741131061 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.737508816 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.742208832 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.736539157 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.741822863 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.748239255 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.746492326 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.744159032 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.740011503 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.738145661 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.741550266 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.742375985 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.738141837 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.737003833 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.737724566 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.743283114 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.738628127 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.744632807 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.740788 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.737450175 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.743837638 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.73812046 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.744960667 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.747979402 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.743233767 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.734595663 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.736491 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.737591115 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.74185733 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.743254754 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.753381715 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.745644162 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.753312197 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.750881039 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.743697585 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.744001693 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.745711022 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.751000963 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.741506658 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.745392022 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.739301229 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.74505453 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.743125414 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.746366963 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.739860037 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.752019942 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.744254229 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.743728296 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.753912259 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.745748133 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.740963387 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.744271487 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.748661979 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.742528818 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.736766137 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.740078594 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.74373223 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.752685192 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.747181295 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.740148678 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.74654749 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.74183245 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.74512986 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.744585249 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.740394965 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.746107011 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.73803895 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.744842723 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.739429376 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.739817719 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.739113837 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.744306833 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.744490563 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.747569191 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.752862952 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.737922744 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.747239945 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.745585655 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.746056248 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.741298523 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.741984582 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.737684788 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.737373594 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.745120999 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.741045913 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.746261637 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.747904491 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.745227225 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.745639243 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.741537458 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.741935231 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.74906266 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.755720272 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.748273649 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.738501379 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.74455516 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.747635876 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.751001114 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.742692713 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.742958367 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.748100454 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.748801505 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.742098724 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.742794769 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.742132537 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.749118395 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.763865639 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.743116749 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.747547432 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.747947943 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.753030395 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.742551592 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.739818824 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.743585278 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.751669939 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.749386803 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.749765065 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.743625003 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.754627265 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.746636248 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.748122685 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.74723582 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.749995685 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.755700918 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.752134386 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.745210565 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.743132034 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.752132819 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.764987186 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.74309904 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.757270219 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.777077178 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.748021844 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.749705631 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.74365872 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.746365767 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.744797166 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.751818388 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.745325116 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.743901072 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.744036728 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.744156341 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.749105836 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.755080825 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.750539097 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.743113376 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.743166542 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.74970658 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.751395434 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.741276949 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.744842684 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.744481933 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.7453451 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.745135762 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.74607016 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.750876179 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.764832777 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.760623034 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.745103619 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.7451673 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.743572025 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.754505604 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.751608656 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.759736678 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.752027643 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.746497353 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.745531011 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.751738579 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.746103817 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.742843387 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.750913137 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.750378382 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.749374863 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.741897205 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.765227898 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.753800997 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.755605457 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.751124297 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.745739307 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.745230482 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.752736902 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.746344693 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.74710875 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.75329816 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.751160242 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.750142917 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.746793801 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.746413471 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.753799496 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.753462604 seconds)
  done (took 1036.008254099 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.743906548 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.744162012 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.743639291 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.74403684 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.743757976 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744333112 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.743656465 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.743205099 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.74438102 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.744741446 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.743813373 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743606511 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.744734534 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.744407439 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.745369531 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.74494519 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745493889 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.744450996 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.744577603 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744220049 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.745057596 seconds)
  done (took 38.312012002 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.746177273 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.745095276 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.745369105 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.747029751 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745605706 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.747761646 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.744245039 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747892633 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.747854758 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74534093 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.749292911 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747996013 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.744872955 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.746548461 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745280143 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.74920914 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.748621329 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.745838674 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.748197668 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.745902412 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748330427 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.745942857 seconds)
  done (took 40.110923772 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.749377446 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.748915833 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.752128489 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.746937473 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.748514031 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.746046179 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.749561021 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.748688717 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.749174916 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.755343941 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.752721147 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.754830362 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.759969577 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.753584593 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.756635087 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.748834943 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.893419366 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.749785627 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.750519496 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.750510411 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.747112689 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.761025593 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.747069748 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.747448528 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.752220787 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.750397902 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.74972978 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.749456212 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.751380489 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.755594972 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.75434642 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.750230833 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.75428182 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.756482158 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.755154507 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.755794557 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.75516429 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.752093555 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.748766617 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.750172308 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.765193705 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.770442963 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.751803594 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.761449536 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.751856926 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.751252029 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.758707395 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.758977202 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.749724597 seconds)
  done (took 87.714117384 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.750112272 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.751388655 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.74813547 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.751372829 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.752180036 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.752816542 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.751521449 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.751551262 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.749251745 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.74843523 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.751839722 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.749766439 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.748909681 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.751469221 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.753165878 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.749499833 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.749562507 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.749771929 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.749437731 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.749513525 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.749993974 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.752773381 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.753181605 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.749294257 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.752247873 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.749483684 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.749661594 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.752163596 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.750922936 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.750516408 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.753406715 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.752616101 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.753252542 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.750581301 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.750346661 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.752814634 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.752732037 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.750033619 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.753851501 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.75097958 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.753981874 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.753238813 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.753657322 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.753069545 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.750763545 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.751652377 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.751525773 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.750216935 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.751208069 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.754981715 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.752987871 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.750775697 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.753557363 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.752477757 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.753858106 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.754324897 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.752015798 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.751031012 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.754056449 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.751879762 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.7517205 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.753801239 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.752623415 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.753490015 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.754601112 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.75177668 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.752068611 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.754306794 seconds)
  done (took 120.805378819 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.75537433 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.75533975 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.755837546 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.755306598 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.755403171 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.756608234 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.755473465 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.755362844 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.755823771 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.755054478 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.756164261 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.755750432 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.755412581 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.756353246 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.755783269 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.755602662 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.755647819 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.756243431 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.757247092 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.756255853 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.756431474 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.756525215 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.757265056 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.756114465 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.757267933 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.756360491 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.756553316 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.756385138 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.757427736 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.757395326 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.757143707 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.756779969 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.75773924 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.756254776 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.75753643 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.757105418 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.757384113 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.758013194 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.757674517 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.758159552 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.758014793 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.757356662 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.757699062 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.757222377 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.756854981 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.758555828 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.758057775 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.757697389 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.757280444 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.75763253 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.757481274 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.757654204 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.757924524 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.758622481 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.758395111 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.758516245 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.758162209 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.757972101 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.757883847 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.758640976 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.757577837 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.757718794 seconds)
  done (took 110.622686548 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.757720164 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.757685823 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.754942465 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.755034344 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.758528695 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.755622275 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.758850304 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.757678161 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.758561273 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.757408691 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758535376 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.755839228 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755453428 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757813265 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.755917882 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755552198 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.75758118 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.756291749 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.757708429 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.755451421 seconds)
  done (took 36.832081387 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.757361164 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.759014357 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.757419922 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.757149552 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.758801951 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.757002119 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.759826749 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759298692 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755984811 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.758756582 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.760200185 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.759680779 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757007819 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.757481348 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.758685022 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.757198207 seconds)
  done (took 29.824361889 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.757455052 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.759591774 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.76035073 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.760841503 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.756899773 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.757067147 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.76088976 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.757775713 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.758395036 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.760529837 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.759727443 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.759938044 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.760627812 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.760786103 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.75741261 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.760597248 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.757282516 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.757491473 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.760342251 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.761910036 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.758915571 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.75836316 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.760484424 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.761229052 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.758049604 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.75921759 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.759197963 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.758951162 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.758866716 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.762665139 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.759461898 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.759257972 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.758721115 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.759068391 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.76258512 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.759507017 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.761045411 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.761735437 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.76179615 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.762157374 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.761430534 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.759839076 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.761922768 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.762899891 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.760596303 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.76175213 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.761062398 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.760687085 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.759562145 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.760510203 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.763683583 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.762918489 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.763527657 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.764239003 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.763055859 seconds)
  done (took 98.510974733 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763073781 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.762551049 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.759880955 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.763362506 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.763693575 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.76038957 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.763098344 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.761088055 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760492367 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.762300733 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.760947142 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.762643994 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761299138 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.763355477 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.762152404 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762315114 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.76116295 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.760708008 seconds)
  done (took 33.412343904 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.761100363 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.762113178 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.763595001 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.760891277 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.761986368 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.763634436 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.761144183 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.763612535 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764044534 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.762423597 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761475193 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.764898443 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764244637 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.764342405 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.761666214 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761341689 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.76486769 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.76494769 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.762565456 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.762201563 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.764950266 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.764303179 seconds)
  done (took 40.485710907 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.768157704 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.768777324 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.787301332 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.812901209 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.800403608 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.769526808 seconds)
  done (took 12.40707897 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763782882 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765217341 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.763000663 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767666947 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766156633 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762988213 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763029517 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763594437 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765182354 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764090246 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763274217 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765559201 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765954336 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762999385 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765803008 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765688235 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763337658 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763279052 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764922572 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765822414 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764289174 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766087393 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763674018 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763662643 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76417852 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764260213 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765845615 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763894979 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763528712 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766140714 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766925282 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76394233 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767196052 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763983933 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767964166 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766786787 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764495261 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767788056 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766911707 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764270067 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.768027083 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76735882 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768238872 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764870749 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767643422 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765069977 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764152871 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765993017 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764696874 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7686414 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76759554 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765099307 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768006787 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768074216 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767793588 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768139002 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765977756 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765140956 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767768624 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766131267 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766185301 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767847872 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765723187 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765960297 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768368628 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764871156 seconds)
  done (took 118.232183412 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765787009 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.766439386 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766363641 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767520395 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766758072 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767070505 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766206578 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767489741 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766597082 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766725215 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76835738 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766532275 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766380352 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766562936 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766743234 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766475796 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766715921 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76664104 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766248595 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769374014 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767458766 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76697789 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766285433 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76725372 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767699984 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769426804 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767107243 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767399189 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767356989 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767687262 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767217311 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767019442 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767146637 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.768250895 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76731262 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767787769 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767847309 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767602652 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768447242 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7698654 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767996939 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771077035 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768861312 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768047756 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76928925 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768323453 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769150346 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768119191 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769758201 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768876827 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770031079 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769270086 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769996699 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769133792 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769069926 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769266901 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769837811 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769061046 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770183905 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772846489 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769410608 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768747555 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771872582 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769469646 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770022193 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769989777 seconds)
  done (took 118.404124991 seconds)
done (took 2412.679672641 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.797746671 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.817611656 seconds)
  done (took 15.320578656 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.941081444 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.890347738 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.776007074 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.772070161 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.775627692 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.798365622 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.793447893 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.776801205 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.775945615 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.774951376 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.776879596 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.962272032 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.78230153 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.776718588 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.776869558 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.869028474 seconds)
  done (took 50.729677957 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.780207815 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.781109934 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.790452548 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.782174735 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.779333718 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.792946798 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.813266842 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.783209773 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.815392783 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.802963688 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.854043849 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.790071609 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.780016358 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.829879685 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.791692224 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.79398434 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.879875784 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.855663284 seconds)
  done (took 34.204603774 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.858021613 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.787343816 seconds)
  done (took 10.36085488 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.795465256 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.790636226 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.775049389 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.80062607 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.780242083 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.803310884 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.786106612 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.794963811 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.781391494 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.805248918 seconds)
  done (took 69.624823703 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.785383584 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.780837856 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.781087288 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.779456542 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.773704312 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.77767984 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.781532792 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.772438896 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.462906513 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.815515201 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.787631265 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.786447474 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.780137182 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.78152959 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.774012309 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.802277884 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.944528546 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.773604908 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.774859255 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.785345655 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.781301141 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.839476835 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.79415369 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.77747526 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.811220187 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.465239041 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.788550433 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.787226089 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.900789629 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.775260717 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.7805575 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.781488991 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.783248516 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.162298524 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.072510002 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.780638123 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.789804994 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.789881969 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.775469847 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.892627282 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.782718456 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.787610907 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.716426697 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.059348231 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.882683521 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.824400973 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.136232932 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.785958966 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.78385628 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.81246391 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.785705335 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.783083964 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.795102746 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.298818309 seconds)
  done (took 127.778102723 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.80000888 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.261888083 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.932276478 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.777323714 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070495778 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.015346852 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.779689308 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.827751225 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.794365152 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.029016071 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.957917089 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.898503358 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.779383419 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.7762219 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.781189932 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.776458688 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.92561384 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.849480444 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.778376241 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.780631638 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.81409424 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.045185301 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.905630848 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.918423473 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.802741645 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.00371704 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.906364683 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.896908873 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.781216553 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.777784728 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.846447066 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.789213718 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.780061052 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.779525624 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.943978853 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.885390606 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.876336154 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.780354538 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.780005405 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.778728385 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.81602122 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999589934 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.888113974 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.917816916 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.027976304 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.007457747 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.779508689 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.778673146 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.777657345 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.971900886 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.995272061 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.034022203 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.909138023 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.783090878 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.121986633 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.777316003 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.80209067 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.030341941 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01475682 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.891172832 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.825755114 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.783222968 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.779117461 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.095489502 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.786361384 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.886215687 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.166945553 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.781212838 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.887511016 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.894460067 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.013951102 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021098407 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.811637509 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.783616096 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.828651361 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.064281674 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.8536309 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.032379983 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.823930976 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.781228481 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.873548512 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.7864279 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.954961444 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.099048941 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.048760129 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82443114 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.78924238 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.780657218 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.029424856 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.031661506 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.055139682 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.026526711 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.948494373 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.833967388 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.781537969 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.780623796 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.782150012 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.914943573 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.784264664 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.143802251 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.028510695 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.557223741 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.81281669 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.099061586 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.920514473 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.785171315 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.783438269 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.781856638 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.987674842 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.827044103 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.786085322 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.783160535 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.030888408 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.727339271 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.907218854 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.497188367 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.849003031 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.787440465 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.048619588 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.785029281 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.031232865 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.815551538 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.095699543 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.192125598 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.826706744 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.980505546 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.027770832 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.785856204 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.046542668 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.098706022 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.908210023 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.033657332 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.525162407 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.784674849 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.076343503 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.797341131 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.809105022 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.953826796 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.788582781 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.93979324 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.787160442 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.090616545 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.810028496 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.956136104 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.055626305 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.061157767 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.8304335 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.837700641 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.829874566 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.918530622 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.787032495 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.757072464 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.972810929 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.881192235 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.785812527 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.365110466 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.78430873 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.932855091 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.084497537 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.810468568 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.857936834 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.787709051 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.789979109 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.880373125 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.813927707 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.380067073 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.78688295 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.955778967 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.769568921 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.237608623 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.783088267 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.095152335 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.006029514 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.786726749 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.78722621 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.585706932 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.785248949 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.935811141 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.94483989 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.420232307 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.788358414 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004662019 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.788827606 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.919263923 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.79036991 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.7866688 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.13796111 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.795743 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.79074841 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.796201941 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.788024969 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.785279485 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.018030943 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.815639588 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.508263893 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.925179066 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036964289 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.099077888 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.050387988 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.837195494 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.788471969 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.052307385 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.813310835 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.861666415 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.789669572 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.813009423 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.032923061 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.791802852 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.016812422 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.077083377 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.934283211 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.840216164 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.791593035 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.885406455 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.787134866 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.928902973 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.884920408 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.788995885 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.790196616 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.905609484 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.915697742 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.984204256 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.7902449 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.818564523 seconds)
  done (took 935.479749192 seconds)
done (took 1245.203688314 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.788231805 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.788413969 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.772406349 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.79198079 seconds)
  done (took 28.865363421 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.795641477 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.797035412 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.794483083 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.797303266 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.795389419 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.79748648 seconds)
  done (took 12.504386553 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.841294236 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.791796135 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.793723806 seconds)
  done (took 21.15392509 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.865649096 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.203684787 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.906113714 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.241228817 seconds)
  done (took 9.943730547 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.795247519 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.79452771 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.794734495 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.795808519 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.796085347 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.79787827 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.795413737 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.796406186 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.797762564 seconds)
  done (took 17.891971194 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.974621752 seconds)
done (took 96.056783918 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.996016051 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.944643462 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.800419901 seconds)
    (4/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.991900243 seconds)
    (5/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.822408432 seconds)
    (6/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.134270511 seconds)
    (7/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.990459869 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.886609949 seconds)
    (9/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.022906364 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.840396655 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.949238302 seconds)
    (12/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.459970983 seconds)
    (13/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.780001378 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 3.139002907 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.836606089 seconds)
    (16/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.875767611 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.794261708 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.158447206 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.820152502 seconds)
    (20/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.877582323 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.051832884 seconds)
    (22/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.876376102 seconds)
    (23/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.124945776 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.382456608 seconds)
    (25/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.166334151 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.808641353 seconds)
    (27/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.944297342 seconds)
    (28/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.796813698 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.810568381 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.56823817 seconds)
    (31/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.900337451 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.794133663 seconds)
    (33/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.376277793 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.970270907 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.091003306 seconds)
    (36/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.143902817 seconds)
    (37/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.935986474 seconds)
    (38/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.779670034 seconds)
    (39/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.908028677 seconds)
    (40/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.933329017 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.700334304 seconds)
    (42/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.033737253 seconds)
    (43/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.827187838 seconds)
    (44/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.197327959 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.893253144 seconds)
    (46/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.795549777 seconds)
    (47/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.912156365 seconds)
    (48/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.809678511 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.097252866 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.454518996 seconds)
    (51/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.898358018 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.901989686 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.816343605 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.051456858 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.090641367 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.170007671 seconds)
    (57/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.819781721 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.795241688 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.819921454 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.144856417 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.911490091 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.848602045 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.796449926 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.123885712 seconds)
    (65/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.929488121 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.019408756 seconds)
    (67/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.85446641 seconds)
    (68/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.930866934 seconds)
    (69/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.799258887 seconds)
    (70/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.778558984 seconds)
    (71/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 3.285249328 seconds)
    (72/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.807350328 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.110878471 seconds)
    (74/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.109516153 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 5.516867542 seconds)
    (76/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.977164639 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.09465485 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.490183971 seconds)
    (79/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.893556573 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.868391871 seconds)
    (81/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.353965942 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.256498922 seconds)
    (83/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.986912031 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.767047556 seconds)
    (85/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.800915664 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 9.096745906 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.686615586 seconds)
    (88/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.195953419 seconds)
    (89/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.206411391 seconds)
    (90/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.316795177 seconds)
    (91/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.828944881 seconds)
    (92/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.09006146 seconds)
    (93/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.784894069 seconds)
    (94/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.873950315 seconds)
    (95/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.961232722 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.800740735 seconds)
    (97/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 8.2511172 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.876843185 seconds)
    (99/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.857366556 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.087678199 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.679068124 seconds)
    (102/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.780115484 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 3.068425896 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.005558346 seconds)
    (105/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.358442454 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.537161443 seconds)
    (107/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.737913711 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.721758416 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.788674102 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.608552369 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.804831554 seconds)
    (112/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.783757001 seconds)
    (113/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.370330302 seconds)
    (114/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.003631038 seconds)
    (115/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.881559369 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.074611042 seconds)
    (117/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.904263153 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.175836456 seconds)
    (119/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.916848929 seconds)
    (120/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.904633771 seconds)
    (121/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.958177817 seconds)
    (122/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.319645975 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 2.256022274 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.820708708 seconds)
    (125/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.811667137 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.074895397 seconds)
    (127/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.305168715 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.964563299 seconds)
    (129/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.663284147 seconds)
    (130/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.831294779 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.016704919 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.059962245 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.171498012 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.84293382 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.947222454 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.788338712 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.919340474 seconds)
    (138/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.919933082 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.591988828 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.906237992 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.398380794 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.917249571 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.407348293 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.932239124 seconds)
    (145/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.426516376 seconds)
    (146/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.408362608 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.02798042 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.82587417 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.152022045 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.322194993 seconds)
    (151/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.823657835 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.802108078 seconds)
    (153/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.069925432 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.874824521 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.819979166 seconds)
    (156/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.388671113 seconds)
    (157/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.587026691 seconds)
    (158/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.087282919 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.880451911 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 3.572105785 seconds)
    (161/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.886165132 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.8717261 seconds)
    (163/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.819922102 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.175826712 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.804220983 seconds)
    (166/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.805801482 seconds)
    (167/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.835627514 seconds)
    (168/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.803047704 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.027698279 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.062281954 seconds)
    (171/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.120697309 seconds)
    (172/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.896674209 seconds)
    (173/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.105495582 seconds)
    (174/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.936610092 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.838792796 seconds)
    (176/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.80859528 seconds)
    (177/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.91236259 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.986131783 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.832824029 seconds)
    (180/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.090263166 seconds)
    (181/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.827465376 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.66609316 seconds)
    (183/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.294520429 seconds)
    (184/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.736077536 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.845944997 seconds)
    (186/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.916318775 seconds)
    (187/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.978354653 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.832271335 seconds)
    (189/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.929309137 seconds)
    (190/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.786859748 seconds)
    (191/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 3.592095336 seconds)
    (192/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.826993432 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.883634604 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.856360931 seconds)
    (195/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.873258071 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.924881499 seconds)
    (197/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.202591228 seconds)
    (198/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.017412286 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.046285158 seconds)
    (200/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.10546641 seconds)
    (201/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.015851285 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.868459503 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.803386386 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.023587963 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.125458217 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.511452705 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.086644136 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.147070385 seconds)
    (209/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.868588439 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.943459716 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.808242613 seconds)
    (212/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.835381637 seconds)
    (213/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.621944816 seconds)
    (214/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.407438879 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.787185689 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 5.125574631 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.732126712 seconds)
    (218/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.85021638 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.329430571 seconds)
    (220/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.151025098 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.280424621 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.042827978 seconds)
    (223/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.506142448 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.924035887 seconds)
    (225/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.970554 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.797663575 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.812590373 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.251021615 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.842875509 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.148321549 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.02975204 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.060922467 seconds)
    (233/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.815499314 seconds)
    (234/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.102468401 seconds)
    (235/309) benchmarking ("sort", Float64, false)...
    done (took 5.615097382 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.981133955 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.053330657 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.871069549 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.815683768 seconds)
    (240/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.826402983 seconds)
    (241/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.130340293 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.073577756 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.754929993 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.810014216 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.913560087 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.876513627 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.913244393 seconds)
    (248/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.942696584 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.913327489 seconds)
    (250/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.79279537 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.880165217 seconds)
    (252/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.457336489 seconds)
    (253/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.010316603 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.840691548 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.850695994 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.107885967 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.459918706 seconds)
    (258/309) benchmarking ("sort", Float32, false)...
    done (took 5.596913767 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.793927678 seconds)
    (260/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.349544615 seconds)
    (261/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.209390166 seconds)
    (262/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.42871302 seconds)
    (263/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.76040879 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.194093419 seconds)
    (265/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.830635081 seconds)
    (266/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.394063153 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.716320984 seconds)
    (268/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.070090481 seconds)
    (269/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.912235557 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.200623554 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.811496489 seconds)
    (272/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.193273067 seconds)
    (273/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.937993208 seconds)
    (274/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.900659891 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.827068823 seconds)
    (276/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.903581786 seconds)
    (277/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.891750128 seconds)
    (278/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.05203121 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.180852317 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.925707393 seconds)
    (281/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.832598732 seconds)
    (282/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.974905974 seconds)
    (283/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.895181441 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.868315088 seconds)
    (285/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.809335257 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.059180267 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.163711021 seconds)
    (288/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.184418147 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.089394687 seconds)
    (290/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.836335929 seconds)
    (291/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.391249697 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.848677785 seconds)
    (293/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.691211475 seconds)
    (294/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.379192887 seconds)
    (295/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.995337462 seconds)
    (296/309) benchmarking ("sort", BigInt, false)...
    done (took 6.809987755 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.833275395 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.844544291 seconds)
    (299/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.872148134 seconds)
    (300/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.79402869 seconds)
    (301/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.963862277 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.972292203 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.467979095 seconds)
    (304/309) benchmarking ("sort", Int8, false)...
    done (took 4.820186606 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.937650142 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.82662388 seconds)
    (307/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.494147263 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.796327744 seconds)
    (309/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.872793375 seconds)
  done (took 1006.386242144 seconds)
done (took 1008.126625638 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.839189173 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.833060385 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.816204985 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.838346335 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.929476255 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.85169896 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.82780401 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.819190781 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.864367337 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.866427949 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.816307633 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.851117208 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.818992955 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.818817786 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.817343094 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.831724037 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.126886834 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.845382158 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.834283965 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.826566755 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.835052747 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.816905586 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.86752426 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.851604473 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.821633193 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.820922422 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.821476877 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.838116419 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.932301902 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.821773952 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.821185506 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.829698347 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.125615782 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.84304611 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.813400317 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.839218884 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.831249754 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.827223803 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.821994926 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.850854729 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.268344589 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.825772205 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.820100046 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.819841287 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.820339255 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.823975466 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.821470741 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.825389545 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.835601686 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833502285 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.267138717 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.841168468 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.823160684 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.820201617 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.829798183 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.820505638 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.823105942 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.835980302 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.839585016 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.835786627 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.119728599 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.851573695 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.821706174 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.837251639 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.827692081 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.304582564 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.821715015 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.825031649 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.270166018 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.831938558 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.303787419 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.835479432 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.821388898 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.83507752 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.853301832 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.127149846 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.843515239 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.820058418 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.829842008 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.820329708 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.83134696 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.834491365 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.826591098 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.821551763 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.837756424 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.858144343 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.83375846 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.824826158 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.830111748 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.841249365 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.82989524 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.833325818 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.826284303 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.817327226 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.831594654 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.825269827 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.82557469 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.825818507 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.827350769 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.833460287 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.268518875 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846406388 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.819264002 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.818944422 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.821256029 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.837493496 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.269774927 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.831171297 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.84515713 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.870709437 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.82480902 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.121463828 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.852414768 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.839709987 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.831605204 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.826159346 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.818087464 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.12221453 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.296887201 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.845237022 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.82532131 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.822708479 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.840661944 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.82534804 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.820817598 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.131040223 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.851306814 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.837463592 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.945150802 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.834587512 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.856005412 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.824184739 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.82654156 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.853988775 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.840293299 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.856287879 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.826663156 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.840102641 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.840967872 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.821365881 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.835969358 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.836367049 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.826954625 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.831197492 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.819006373 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.855294687 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.84047932 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.83809318 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.846598726 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.946373751 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.822706819 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.122528914 seconds)
done (took 286.651615802 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.895067338 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.825799531 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.919292655 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.820748717 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.909175174 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.909791326 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.817823668 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.818979755 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.817635844 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.203558834 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.819328772 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.819376225 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.82167977 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.818640618 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.907488159 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.821121314 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.818240787 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.165296112 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.822526432 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.895491363 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.825172045 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.819777573 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.823102433 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.206339078 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.818095745 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.820061173 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.902765832 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.822041468 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.171555442 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.820364403 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.822087273 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.171705493 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.915463284 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.841250076 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.83219994 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.830155726 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.911500608 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.826606481 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.907475992 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.907576979 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.921185332 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.862770741 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.823345199 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.825216997 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.826469937 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.824345298 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.821026338 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.850299548 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.824819965 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.8211105 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.16785098 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.833629874 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.821599911 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.821184917 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.821256476 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.855205123 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.822349906 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.824329404 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.91733096 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.824778256 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.891265528 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.209215009 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.205277954 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.825008396 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.822022601 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.821899605 seconds)
  done (took 181.281527658 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.89513568 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.902861923 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.896300946 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.831681088 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.878917303 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.899450213 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.832217584 seconds)
  done (took 14.892204511 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.834896384 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.824131915 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.878806858 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.877895608 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.824658475 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.978690665 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.824817895 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.839798867 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.822289304 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.88144758 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.826400295 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.825574119 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.831997917 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.827488235 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.877971121 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.839764607 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.944518237 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.829697199 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.825762862 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.986849768 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.824120096 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.832457602 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.885303787 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.842002965 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.826668689 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.836568433 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.416749945 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.82694934 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.822546418 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.824681188 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.822502873 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.869580898 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.82660027 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.827431967 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.822739575 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.946181927 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.826755689 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.823270933 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.82658339 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.824134982 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.825770203 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.827182845 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.826292746 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.823074757 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.827521179 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.854969083 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.826312555 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.826504868 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.82598306 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.826764829 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.881512305 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.826777191 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.824817919 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.82490111 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.886683321 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.834879878 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.827939706 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.82393073 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.827491468 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.825205972 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.988227624 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.879341249 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.826913036 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.878913359 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.827255372 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.828008351 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.827586037 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.827568912 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.887415787 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.827134901 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.880537779 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.825712013 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.990144252 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.856289619 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.829018277 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.834688938 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.835732644 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.829631365 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.827686475 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.839142426 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.82645379 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.835477298 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.839519549 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.827033744 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.825329889 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.940191273 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.940973635 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.826078511 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.845830607 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.840404844 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.826409403 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.885580379 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.82807803 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.825576741 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.885332599 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.947993421 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.889324501 seconds)
  done (took 201.773424817 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.837757039 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.841136786 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.835012221 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.850273382 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.833927739 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.8329993 seconds)
  done (took 12.792236211 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.835701951 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.829730601 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.829296337 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.83008307 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.830981557 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.830139037 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.829412618 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.835452165 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.834146757 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.83047377 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.831014363 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.831628668 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.830518628 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.831354816 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.830650195 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.830263333 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.831329197 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.827930902 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.831285785 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.831986565 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.990665024 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.831737463 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.275560046 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.837522761 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.836135775 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.831907903 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.84415705 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.831054177 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.830441774 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.84136996 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.836019672 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.831556362 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.836194106 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.840721627 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.836104347 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.837769309 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.83559536 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.832723913 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.828732103 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.832858023 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.833302605 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.832644299 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.831842576 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.833254603 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.837544281 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.841361213 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.836936824 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.84400015 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.833397504 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.833962738 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.833825316 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.832355912 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.832406379 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.833559619 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.840720734 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.842259639 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.838018998 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.833411714 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.833342375 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.838791296 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.834675158 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.833557451 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.839533454 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.837962795 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.83075888 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.834690702 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.838315738 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.837928353 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.834186009 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.833250081 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.835199803 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.830367073 seconds)
  done (took 135.423105658 seconds)
done (took 547.929845355 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.094983661 seconds)
  done (took 8.859531998 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.91091043 seconds)
  done (took 8.764628791 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.27205334 seconds)
  done (took 10.035465735 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.838048102 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.864102962 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.838870712 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.82930507 seconds)
  done (took 29.145462194 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.134318032 seconds)
  done (took 8.897398471 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.838757244 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.825024625 seconds)
  done (took 15.498052475 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.919306745 seconds)
  done (took 8.682655726 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.013669858 seconds)
  done (took 8.779805445 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.850651645 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.828619097 seconds)
  done (took 15.457514052 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.812242495 seconds)
  done (took 8.575734697 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.545912807 seconds)
  done (took 11.316356973 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.834408302 seconds)
  done (took 8.613117824 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.88960562 seconds)
  done (took 8.652783941 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.038961948 seconds)
  done (took 9.803045537 seconds)
done (took 162.844738486 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.83328264 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.830769523 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.830520006 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.831986833 seconds)
  done (took 29.089863912 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.866352966 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.865437057 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.867553903 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.87822917 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.869755575 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.867080586 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.857788975 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.858336327 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.877516922 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.869678088 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.870800307 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.869139029 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.88266511 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.867690818 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.871997993 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.869199995 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.877271494 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.868134903 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.859108233 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.870687972 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.833232955 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.877622003 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.869215726 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.834593489 seconds)
  done (took 46.564565902 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.036610004 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.908655145 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.991837412 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.890591738 seconds)
  done (took 9.592635213 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.885921541 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.88707076 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.899332565 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.938122678 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.970873206 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.896787533 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.861678029 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.85638045 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.841166237 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.88785132 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.963169539 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.90418785 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.971449058 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.834572415 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.021662941 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.835638159 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.83452929 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.886632549 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.93840349 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.952037974 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.835229182 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.885442025 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.88986286 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.904063097 seconds)
  done (took 47.348267784 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.835061603 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.841206923 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.840043221 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.835144539 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.834496063 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.835508909 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.841493225 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.835459567 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.856010467 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.836224882 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.833361655 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.835653887 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.833883348 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.835149231 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.834376362 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.846926063 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.848439866 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.835388825 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.838175278 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.84191887 seconds)
  done (took 38.540243961 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.831902949 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.687399017 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.185351523 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.088838661 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.83277153 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.833789384 seconds)
  done (took 31.22743005 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.852898309 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.904119142 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.848530426 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.896448157 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.979834 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.850949878 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.841181974 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.90854938 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.952526666 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.914915165 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.862004599 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.868433979 seconds)
  done (took 24.44985436 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.835041018 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.837705637 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.836392621 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.85423625 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.852385961 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.848741259 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.848591911 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.834922431 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.855282222 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.85907825 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.849216774 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.852597052 seconds)
  done (took 43.936513078 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91953447 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.876008459 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.870550642 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522821093 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.210365205 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043058724 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.486199726 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.161759187 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.835646043 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107877559 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.907981275 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937040978 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.088305469 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.321351069 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.866516286 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.298520827 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131101205 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047613125 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862207218 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.518661445 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897489349 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.002239536 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.5881839 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.893008672 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045219866 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.965855008 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.093663607 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.832708886 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970756391 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871133913 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842703432 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.83359515 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107016239 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231084535 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93774442 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844182759 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.45646118 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.5496559 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.825701219 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.685218011 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.567606747 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.957821001 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844466373 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833810759 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.767431946 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.973598221 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210508406 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.83978779 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.544902363 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.833499267 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846094133 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929013986 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.838594544 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.650025303 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752182063 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.836998266 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.832384666 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845552681 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.404658328 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.95148632 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.020659568 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.809881391 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.931121774 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.522336623 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223254386 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.984383279 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.838874161 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.839169109 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769876052 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.599657263 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89441822 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.184243646 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.855920623 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.484898057 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153588178 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.917790222 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.780302905 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105259435 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.369905722 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.811677185 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063454582 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836747703 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770840693 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.78505596 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.770501625 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098649118 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876123601 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.586530016 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883391904 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.164374031 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.847420074 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853085569 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860226465 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.060701209 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.723811272 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838064294 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.6216193 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005150336 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859139202 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.170997072 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771769102 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.841878326 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094541806 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.048603843 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.901563072 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.335939916 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9964451 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.3988603 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.894403165 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.974579958 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.890112085 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.105890512 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898313293 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.957306644 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893914522 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.839046609 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141792721 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412776746 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.97998948 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.844852631 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.966951359 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.159030322 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867884547 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920216842 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.841694876 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.838377192 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.603879395 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.393253858 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.839035204 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.84251038 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.913091532 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.889387268 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.840822822 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788353358 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.465283979 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.919811079 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.854506446 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.06406973 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.403131258 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154868872 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773563317 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.168585064 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.895015268 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.062189767 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.485605926 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.913443814 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100840901 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.906703119 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.945152128 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891067345 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85862608 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938790682 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86208001 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.969918923 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136441735 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.844586058 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.843947123 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.621550509 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.878203252 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847980958 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.845625584 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.596106569 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111767311 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.86614365 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.848080149 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.730091329 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.854934422 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905389867 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.847355233 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.851493932 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.380374378 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.558857028 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.848050985 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.431438195 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06700953 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851636595 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.601700505 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958835135 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.92265364 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111138432 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903561246 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.775743312 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.552983849 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.534848322 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841665388 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.778045919 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.842663578 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851891179 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852939972 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.044015064 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.114132742 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887068961 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.530114832 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.885983194 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854086654 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.848290189 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84341466 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.352759034 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.96367266 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.016928665 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.893382578 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987444903 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.857377158 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.779066957 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.847030237 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.848481865 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.842911122 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.843861501 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87668773 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.531834157 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225379981 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104858474 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.459188534 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857480263 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.566877155 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.903026923 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.845709699 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.646673265 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.004816802 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.877584792 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861680341 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.855004253 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.62074786 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.541589142 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.411887006 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151910324 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147981774 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283910031 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.045593126 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.877291007 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.179640007 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779307892 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.402444049 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.903794904 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.18581369 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789151608 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928669892 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.491264194 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187038742 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858554309 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072635442 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232277354 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.704203931 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871476077 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.057114581 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880566291 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.984246907 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.81275975 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.370202619 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986714901 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.539398041 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054341497 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17671364 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.505300561 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.00564272 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.850019203 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.524529758 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937804891 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.55659964 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.018741034 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.039559967 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.825440508 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324980561 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.85372585 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.071678683 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194676829 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.994649434 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.970229037 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782325549 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.857873672 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.857531302 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.849110237 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.844831577 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.721252227 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.103499644 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858127528 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781982224 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.954471753 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141329981 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.749961262 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.853831227 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848962135 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141647427 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.385242663 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031646564 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.939826283 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.37025484 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855308913 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.781758756 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782414953 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.540358833 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.854808093 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.823044032 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055077311 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.955672117 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.766820515 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.9232877 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.114405771 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.104391861 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.861919219 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.11941695 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125203969 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.554887371 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873794955 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.948836939 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.516683634 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.958819197 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.849581291 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.084918683 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.609925351 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.076457005 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.890611277 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.805902449 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.854002699 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06422729 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.849705048 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.739258234 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08208748 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.57157151 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.857890184 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163652659 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92508048 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.723940167 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.896330393 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.945714554 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863818098 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929440923 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860754037 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.861556438 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.862001688 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896126339 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.729406545 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.975573787 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.86563611 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944436016 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.97701496 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.37525682 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.857022391 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121573989 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208100721 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.175508939 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911741814 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.851314426 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85587838 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785312674 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000109637 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.077537842 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125602928 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.98263113 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.975211293 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877348928 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.513440505 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.055108823 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097572999 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12798248 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.747740581 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.354100695 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.897974255 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.855089733 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863787162 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.064024479 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062648817 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153708492 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.991409428 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.925925408 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.215895909 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126890802 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.853494003 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.854825333 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443441704 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.880592834 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.54671668 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.898421867 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.798293408 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131218564 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864407407 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249130749 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.876381297 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.009072439 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.627456074 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.582618829 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.14526566 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.843179775 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.917572191 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12426069 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.232441804 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168053168 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921319405 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865706216 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.959977391 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000860514 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.728169026 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.857750052 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.855406337 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.093635435 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.568972264 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.86612546 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129418665 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167771001 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.853101597 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.739498882 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881987782 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.867092747 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.081882075 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131647717 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111316809 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866346869 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.862918854 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.674118653 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12822178 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917150372 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790784436 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.859130324 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955929229 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.105867814 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879124049 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.308874057 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.566953998 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128631287 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.85781323 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877581467 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.012347649 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.220833022 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1783103 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.39367328 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069835552 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.446414025 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.422851133 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1628909 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.862726416 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.998073955 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165765536 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.862003461 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.93330267 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901406456 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.121993516 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171115248 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.862964548 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.551081595 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.832070349 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.198628092 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413635099 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797233781 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859456681 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.91852725 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.857885981 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.988938006 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870311475 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.741022383 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.01173956 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.623050492 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.130599479 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.863525638 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.852476727 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.582376095 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.140346419 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901786215 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001026978 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870179944 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.534513549 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.215570788 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.120884207 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.949449577 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.878101242 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.863448493 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860219262 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.846515281 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.056014824 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.061110269 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133819813 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.969964766 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.90108172 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863131245 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.076825745 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071794922 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.718857734 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997609319 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.938537282 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906828639 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.765621658 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.362240768 seconds)
  done (took 1663.201051878 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.884779814 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.974028985 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.878659004 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.911145446 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.904455102 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.896395334 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.039750383 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.901874387 seconds)
  done (took 57.187843742 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.864174389 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.082240539 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.873937054 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.864527657 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.873213927 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.865300656 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.035459567 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.875578275 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.874855667 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.874981159 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.867350382 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.865076696 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.180433306 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.890498411 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.865438353 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.84821434 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.874636031 seconds)
  done (took 74.295478652 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.865827982 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.927715612 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.893834608 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.875880421 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.896977794 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.860835467 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.712186342 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.883320329 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.869126136 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.009309005 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.497678309 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.885482747 seconds)
  done (took 86.977784696 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.874843502 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.871979203 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.872824526 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.873035528 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.873281157 seconds)
  done (took 11.167631804 seconds)
done (took 2165.37025857 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.124932162 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.078175894 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.087065638 seconds)
  done (took 5.965076045 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.016986303 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.064919369 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.184961421 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.190759785 seconds)
  done (took 10.260876276 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.152674235 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.238239091 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.079179317 seconds)
  done (took 8.269835634 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.265006966 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.872268139 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.974260117 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.863051446 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.867004377 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.865208377 seconds)
  done (took 22.396560709 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.866889026 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.869966613 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.8661447 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.870180094 seconds)
  done (took 9.273210799 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.850156217 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.589348456 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.852802696 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.866262628 seconds)
  done (took 20.958841851 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.61705578 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.627247632 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.612531088 seconds)
  done (took 9.657355468 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.459722406 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.784330503 seconds)
  done (took 9.045411523 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.125892313 seconds)
  done (took 3.926500113 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.999199701 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.130863698 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.342530514 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.364991591 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.462503091 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.740819894 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.187782614 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.117176592 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.263852806 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.308801105 seconds)
  done (took 24.718949105 seconds)
done (took 139.508224612 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.252181459 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.112089834 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.07250052 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.253727149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.09987735 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.073336069 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.284981688 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.240021805 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.724699065 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.719598356 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.212412672 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.098749655 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.019153343 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.8737625 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.016329875 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.246876775 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.09505271 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.27546909 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.94656647 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.106330296 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.285855451 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.852694008 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.054402093 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.866878409 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.101849433 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.027107062 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.429709603 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.24961157 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.099354119 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.437920015 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.028442999 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.256553323 seconds)
  done (took 170.216808918 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.630895695 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.87174671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.869944694 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.881048031 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.390324662 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.872490755 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.870561711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.870823772 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.042853852 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.026958143 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.872133748 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.343207749 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.873271687 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.872911862 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.872642615 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.87141466 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.205924938 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.660615789 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.872571575 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.876969764 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.880216246 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.238191066 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.881755266 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.280894594 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.211866119 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.889983234 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.872411858 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.891620681 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.879207303 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.874819824 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.884986293 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.874192117 seconds)
  done (took 208.114437703 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.871947933 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.87354312 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.873140329 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.872631836 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.873601783 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.876800328 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.87450895 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.87200916 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.653029066 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.646732527 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.881083873 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.878472394 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.884157178 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.873758838 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.881161979 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.873723566 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.882781518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.882492405 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.877772066 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.882890288 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.884990368 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.795000883 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.885741973 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.804171193 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.882505403 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.880782069 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.874620033 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.882277199 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.88372285 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.884461793 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.884453123 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.874999973 seconds)
  done (took 221.32484372 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.065240863 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.876631376 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.877250513 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.813271799 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.876980193 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.876824498 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.873608933 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.066424822 seconds)
  done (took 19.146579092 seconds)
done (took 620.615113906 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.312642929 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.154676403 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.049880826 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.901201884 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.137789222 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.939365604 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.897000253 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.956745738 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.118089546 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.973645788 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.593619504 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.920065292 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.686228115 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.920726251 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.028669069 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.952610587 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.475196349 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.564932974 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.08168762 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.972975329 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.065387963 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.833195523 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.972648706 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.173800184 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.706994181 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.887354563 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.049624649 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.474714175 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.910788687 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.065054414 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.624153308 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.279379336 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.911590716 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.899541084 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.950383046 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.934985808 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.226536799 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.910212103 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.02532539 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.637000083 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.963568633 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.003469715 seconds)
  done (took 104.95216884 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.870807856 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.867784406 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.86730187 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.869590959 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.869557407 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.868601923 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.868232214 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.867777003 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.867977391 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.867540551 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.869807143 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.869801553 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.868016757 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.870559379 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.867859775 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.871619425 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.870398286 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.872617347 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.868946368 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.868910149 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.870530467 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.86825503 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.870773352 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.868133508 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.870643065 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.871188545 seconds)
  done (took 50.427402128 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.880208943 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.027028456 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.109267769 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.903137412 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.885071389 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.88829226 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.903608496 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.88540729 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.88747864 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.888018868 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.979952236 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.886808175 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.903721434 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.108551381 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.90042031 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.881502375 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.882370847 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.886930755 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.032763096 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.901017205 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.906790366 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.886324538 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.905496462 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.898270234 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.888103537 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.886695364 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.889602918 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.3196778 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.89371323 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.97980349 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.927750112 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.907153917 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.275530087 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.126509931 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.937665226 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.889685928 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.882602984 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.985305001 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.892057719 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.88742298 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.904590479 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.892136676 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.108902157 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.381013904 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.901027376 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.882723057 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.331733993 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.991191612 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.929107497 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.902459355 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.112195282 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.903385677 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.88649644 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.88884315 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.925055225 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.90140205 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.888490189 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.192921558 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.898616091 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.906409813 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.888288568 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.888869149 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.041069502 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.895978041 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.030770356 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.896363919 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.894979974 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.88892944 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.1109798 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.903364188 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.382671026 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.900505108 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.884029239 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.980581099 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.033728759 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.355115286 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.900810932 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.0450973 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.292914014 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.912616663 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.89633928 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.312079522 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.915486771 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.895566206 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.887206764 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.887386908 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.88520289 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.928792487 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.904559443 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.32141902 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.387294252 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.20566338 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.915787288 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.906076514 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.890900454 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.194043524 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.892623281 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.887268133 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.108213616 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.398000322 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.902903827 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.897739853 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.371841283 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.903979205 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.908750384 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.898503963 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.115696838 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.903918141 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.930250883 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.886193673 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.896661094 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.893354771 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.908508912 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.897027842 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.885931958 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.359207951 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.999394725 seconds)
  done (took 233.639206353 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.886842377 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.886104099 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.885170476 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.897186415 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.884439153 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.889998536 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.884685875 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.88434689 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.890763472 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.885442871 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.885670592 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.890951314 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.885283848 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.892200413 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.346243215 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.894677115 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.49895826 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.892619844 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.886767659 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.888573379 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.568800389 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.891912049 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.886624406 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.910546627 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.890606236 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.894307573 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.895348661 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.910837713 seconds)
  done (took 168.505897758 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.889917873 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.075909641 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.911495686 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.928764756 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.901823239 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.887690441 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.919348004 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.917371165 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.899885902 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.88798322 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.887331804 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.955648882 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.901142627 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.020447455 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.926142908 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.922110264 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.003078265 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.898440858 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.888397257 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.887177846 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.922744312 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.88708779 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.954888586 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.022800591 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.908268118 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.010039566 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.901204648 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.891236608 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.894252663 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.013069877 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.905800579 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.952310534 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.922795724 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.915775115 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.015371076 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.016492686 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.999441841 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.923442916 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.903261159 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.889719931 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.88956316 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.881852279 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.013376126 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.910444516 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.897472149 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.002796159 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.913619714 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.893036549 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.900198283 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.889702829 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.908705009 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.913706171 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.962739292 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.029849568 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.924277759 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.920410331 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.921110447 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.19834702 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.901710537 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.998407085 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.887875115 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.01075461 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.912662636 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.880880539 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.892129592 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.897002848 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.920326357 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.924269738 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.005711979 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.905292121 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.998503546 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.927447678 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.900231552 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.891378469 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.89407818 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.012810656 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.016613737 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.927859596 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.936359441 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.928760277 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.889375954 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.897259852 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.883257466 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.913875889 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.900023912 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.010525379 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.016526127 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.903434787 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.894422676 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.894725084 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.89549937 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.922986847 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.024336427 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.934848218 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.996996426 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.966858781 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.972878257 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.908124738 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.90652784 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.897308082 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.962079092 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.907920032 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.905192449 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.246607851 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.970173151 seconds)
  done (took 205.347887769 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.992586564 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.368676264 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.9504488 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.952711055 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.19205286 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.326965335 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.697573957 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.947922884 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.943350017 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.972445663 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.107229115 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.00202314 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.957089243 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.935829006 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.35197628 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.938118363 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.944448471 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.967336716 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.946546203 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.490245988 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.255115656 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.071162097 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.948717667 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.112219783 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.931830601 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.254107582 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.451692054 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.339919061 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.985786523 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.294545203 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.284253818 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.628539878 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.165941338 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.193605635 seconds)
  done (took 75.735112376 seconds)
done (took 840.413938808 seconds)
SAVING RESULT...
DONE!
