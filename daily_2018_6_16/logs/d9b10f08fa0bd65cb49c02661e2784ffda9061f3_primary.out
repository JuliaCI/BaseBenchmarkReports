cset: moving following pidspec: 3432
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.966432138 seconds)
loading group "string"... done (took 0.569073636 seconds)
loading group "linalg"... done (took 9.399833099 seconds)
loading group "parallel"... done (took 0.19206526 seconds)
loading group "find"... done (took 1.475223917 seconds)
loading group "tuple"... done (took 2.181917503 seconds)
loading group "dates"... done (took 1.408616442 seconds)
loading group "micro"... done (took 0.224684453 seconds)
loading group "io"... done (took 0.575436784 seconds)
loading group "scalar"... done (took 44.273673297 seconds)
loading group "sparse"... done (took 13.763818213 seconds)
loading group "broadcast"... done (took 1.201623374 seconds)
loading group "union"... done (took 12.370566579 seconds)
loading group "simd"... done (took 2.613899357 seconds)
loading group "random"... done (took 10.533002432 seconds)
loading group "problem"... done (took 1832.315593155 seconds)
loading group "array"... done (took 26.070551223 seconds)
loading group "misc"... done (took 1.204930408 seconds)
loading group "sort"... done (took 3.754098871 seconds)
loading group "collection"... done (took 19.460234389 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.797003234 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.154189869 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.226420738 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.386607416 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.248758794 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.174482113 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.183400564 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.591287776 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.003326776 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.300740664 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.16332215 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.610245572 seconds)
done (took 6.554985786 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.270425519 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.398731056 seconds)
    (2/2) benchmarking "String"...
    done (took 0.188090993 seconds)
  done (took 1.208331196 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.084483337 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.192839603 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.120465116 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.106873835 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.125019552 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.121340407 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.121786428 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.121112995 seconds)
  done (took 1.533560991 seconds)
done (took 3.725789694 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.56228045 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.889192786 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.574871198 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181087547 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.211675148 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.193771911 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.333342694 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.17285484 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.119972678 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.11653356 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.229756865 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.389502842 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.507448539 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.073597096 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.10056399 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.137683713 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.106453213 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.736609575 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.092401205 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.145589275 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.604375948 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.123421859 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.126560901 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.134626739 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.210748737 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.141227343 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.176188072 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101393062 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.691147799 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.113287503 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.243374536 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.092599423 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.184344434 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.262965676 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.090041118 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.116167358 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683219421 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.195033605 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.126283546 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.109243501 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681457826 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.09299246 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.257119084 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.11546222 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108251589 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.200992116 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.128131896 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.105717007 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.110078453 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.095125434 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.171634749 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.476840606 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.113653457 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.184424731 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.117490492 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.713483808 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108198367 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.164403799 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.148363828 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.117255053 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.096083853 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.119442175 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.162391819 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.123737873 seconds)
  done (took 20.841489411 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.170379418 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.178582339 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101286789 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.150633823 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.150683773 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.104896172 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.106631941 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.088876589 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.140355577 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.200155678 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.149284984 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.178457791 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.099341314 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.094332725 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.153531075 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.260692383 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12981423 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.131091639 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.092804158 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.117539644 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.150877636 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.123127213 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105522295 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.121934634 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.183022311 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.228439704 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.120007237 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.133847102 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.107870775 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.125192903 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.148444648 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.158499883 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.099717095 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.092754697 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.210559683 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.114829728 seconds)
  done (took 5.667948058 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.234723957 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126478911 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.248210698 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.189982684 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.158858858 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.189970551 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153964147 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.311311433 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.251259615 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.196166288 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.14128797 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.137120968 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105512059 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105111535 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.090055178 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.103595807 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.726080378 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.192209575 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.160365531 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161491276 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11395299 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.10495687 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.397470674 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109801044 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.090121598 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.11068791 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085214061 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.232634025 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111275822 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.376622155 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126504081 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099046634 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.141691143 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.219587557 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.143117453 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.15192581 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095432391 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.108234513 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.230116844 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119741485 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.102225837 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119765054 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.142310436 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.142351283 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.109341426 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.120587665 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.240311582 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.107531139 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130752224 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.158341684 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.223849405 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.146032393 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.090523853 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.379904306 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.125880468 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.113336583 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.089794388 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.365323137 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.148476527 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.106354092 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.105079816 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.088250276 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.110842817 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.087059363 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.460593407 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121054187 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.347691898 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.089792547 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.174261944 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109224553 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.115574173 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111281232 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093803468 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.125939315 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.167041448 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.105841398 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.087166302 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.10547287 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.086930641 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.110604468 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.129134336 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110206575 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.088735328 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168416291 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.128326002 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107845861 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.135372938 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.110466329 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087979116 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137340566 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10637318 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.108771552 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.185282151 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114199758 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091685387 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.130118074 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109212905 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.15073579 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.107280287 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.247289586 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092696221 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.133417325 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.109510999 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13751119 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.134211208 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089188462 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.110839709 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.102244539 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.089351203 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.169266157 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090859979 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.104727883 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.108265224 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.104246281 seconds)
  done (took 26.031077711 seconds)
done (took 53.162105236 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.528525509 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.130982797 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.129836862 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.128752686 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.114175055 seconds)
  done (took 1.745389602 seconds)
done (took 2.432085261 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.391341601 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.19964557 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.130191911 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.197157259 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.114981295 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.204205353 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.202418667 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.128285074 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218391025 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.110053747 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.195275262 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110036531 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.115859463 seconds)
  done (took 3.032666648 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.110581104 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.133188655 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094253401 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.123774109 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088004839 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.122883888 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120565134 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12882947 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.123042355 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115808088 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090291198 seconds)
  done (took 1.93331279 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105323772 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.128850233 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094291968 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121675972 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088463156 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119762426 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118946429 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114946715 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.120007145 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100624322 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106390548 seconds)
  done (took 1.906063862 seconds)
done (took 7.55068217 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.1864511 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.980358632 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.163139939 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.213679846 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.391711062 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.259413896 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.638798821 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.174053155 seconds)
  done (took 12.90591053 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.125002333 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.110523072 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.153390062 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.111558446 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094775263 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.112001624 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.095272135 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.111024165 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10911735 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096694512 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.111943854 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.096834731 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.110724225 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096064764 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.109911406 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.109214304 seconds)
  done (took 2.506340056 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.14580819 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.145618455 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103791491 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.123262868 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.115640873 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101268753 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.118896135 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.116628026 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099443459 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.115559964 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.108627589 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.125082183 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.123659601 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.116914019 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106911667 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.125226148 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.117542198 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105842791 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.122202782 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.121089654 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110481188 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.117481456 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.119600172 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108524358 seconds)
  done (took 3.596868505 seconds)
done (took 19.697041551 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.187896926 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109156419 seconds)
  done (took 0.98853063 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.161199998 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.163219754 seconds)
  done (took 1.020634996 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.123838636 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.108788995 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.151124073 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.128343497 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094598427 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10971952 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.146071642 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.109609773 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094408437 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.109704449 seconds)
  done (took 1.876756666 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.10007355 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.113469309 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10698833 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.173514378 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107530257 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.114495997 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.11434191 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100057338 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.115111447 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09545629 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.118032631 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.134277993 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.119163463 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.137429414 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100869167 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.119908756 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.123768669 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102948882 seconds)
  done (took 2.797087327 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093651984 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.110039881 seconds)
  done (took 0.906333246 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.10055695 seconds)
    (2/7) benchmarking "second"...
    done (took 0.110297189 seconds)
    (3/7) benchmarking "month"...
    done (took 0.099575408 seconds)
    (4/7) benchmarking "year"...
    done (took 0.115202558 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.111425232 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096845989 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.112873014 seconds)
  done (took 1.446428111 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.561134676 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.286783216 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.389874928 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.133705199 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.157348344 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.406238849 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.156012149 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.128488122 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.11134009 seconds)
  done (took 3.074808295 seconds)
done (took 12.810820133 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.10246376 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.256641747 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.611347523 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.134520219 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093965324 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.167865237 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.335385481 seconds)
done (took 2.409860022 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.374213951 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.168936984 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.102423944 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.106810427 seconds)
  done (took 1.456209871 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.089054555 seconds)
    (2/2) benchmarking "read"...
    done (took 0.117713777 seconds)
  done (took 0.91614357 seconds)
done (took 3.086763879 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092994633 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.106365122 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.12703871 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.109142641 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.107737033 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092358954 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.107146686 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091808533 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.105837486 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.0924835 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.105911748 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09180201 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.105984978 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.091509838 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106321542 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092276984 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107178418 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091563586 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.106186964 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092468431 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107238509 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092339946 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.106508252 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.106051952 seconds)
  done (took 3.182901094 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.117305401 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.112092145 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.114998027 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098444905 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.115752162 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.114204013 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099153096 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.110511787 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.114710657 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09653652 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116191946 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.101410139 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.111767991 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.115911679 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095301571 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.116474854 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.11552158 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096982919 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110712831 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100223851 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.115476539 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111728615 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100265986 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114705749 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.115686964 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100380055 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.111243815 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110878228 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099858614 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.115963352 seconds)
  done (took 3.983904532 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.102328963 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.104512979 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091080652 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117646296 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090621352 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.109532848 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.089275566 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.106465708 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091156975 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.10578088 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.107590154 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089673233 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.104948923 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09176019 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.107064983 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098077924 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.12891143 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.105172841 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090192811 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.106643778 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096620192 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.105491469 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093496412 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.107109182 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090156809 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.106435097 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090837985 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.10525974 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090491392 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.104636153 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.111969131 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09893558 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.105503661 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.105785079 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.11405152 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090821142 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.115508389 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.08879664 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.107688913 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.10587072 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.092455213 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.105948524 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.09095548 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.118955982 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094281262 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.107370641 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091317142 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.107459705 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092602675 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.110580171 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.104964534 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091071516 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.109979325 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093323338 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.1127937 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.091353124 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.107892539 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.090498787 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108309215 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090160217 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.106113395 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089530973 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.114069184 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.107698817 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.117766931 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.11888821 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090354529 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.109043285 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.109759369 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.101297978 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.109055598 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110696401 seconds)
  done (took 8.08916721 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098065651 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122164321 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.095507568 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.111551498 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092768091 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.109583355 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119752273 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093284017 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114380004 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130678937 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097343811 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114785894 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099699887 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11472822 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093994319 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.115593561 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.123357737 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094908161 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.111384834 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098395611 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112395364 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.122169463 seconds)
  done (took 3.112819191 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.270740163 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101566684 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.164829059 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.128575556 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.137257782 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.130857333 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102774694 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.120899776 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101801054 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.127855144 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.247307652 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099749698 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.134299599 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122518813 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.122306311 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.123768322 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099628801 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.123782205 seconds)
  done (took 3.186496138 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.112460402 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.113711289 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.137527847 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097333558 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.113988059 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098072162 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121259695 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.128850027 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.097151014 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.114956795 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.123406259 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097765654 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.112825918 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112738499 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098087984 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.114194026 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097599816 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113530688 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123563368 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105865139 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.121377363 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122994746 seconds)
  done (took 3.208409996 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112742508 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113256235 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.149828427 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101026266 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.109676139 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.093439626 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.120705036 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.113364442 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105010431 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.113458943 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114012815 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094540752 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.122082341 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097859653 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.12096361 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114293051 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0966834 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113322374 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097218096 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.1091627 seconds)
  done (took 2.942017642 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.191578046 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111755912 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12944072 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.141270181 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127873752 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112180227 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.141192767 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129171533 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11284351 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143731801 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.128792085 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112237414 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.142223964 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.136372561 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128273855 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126077354 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.141676071 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.141524673 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129640796 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112954828 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144218937 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.129482309 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.14072858 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113506287 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.129759305 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130130565 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112502432 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136746911 seconds)
  done (took 4.413008247 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094898495 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.111512141 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094941664 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110922436 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094431453 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.110871893 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.093929488 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110906443 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094017158 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11105923 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.095259842 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.11117217 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094777644 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.11045249 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093724433 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.10946267 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093946504 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110549889 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10969887 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095521792 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.111486105 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094195942 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.111467565 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095018258 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110893952 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095218787 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111986315 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094325175 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111210218 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094871545 seconds)
  done (took 3.818624905 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.108580512 seconds)
    (2/2) benchmarking "in"...
    done (took 0.138396392 seconds)
  done (took 0.987838936 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.09619046 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.131424691 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092826915 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.118327515 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.123976809 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095177811 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.123655636 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122107738 seconds)
  done (took 1.646084707 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.165735881 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.165561231 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.10215851 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.126530989 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.164038088 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.157553019 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.182500816 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.118842434 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.099026882 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.109293724 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.162069939 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.091731337 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.119431956 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114373377 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.102325629 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.124466006 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.092967056 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.123304998 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.120671529 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097039851 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118280337 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.128125505 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104196158 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.124810284 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.09445903 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.121739521 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.125417177 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108906392 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114108412 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.123026853 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.099702121 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.109064439 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.100759967 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.118777448 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.110292466 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.164010554 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111484365 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.1152646 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.1202575 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102374187 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123236308 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093571928 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.123142424 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.1169958 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107132717 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.119997498 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.121386358 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.096556336 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10937992 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.096682455 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.110541486 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09589043 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.109149906 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.119956444 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103315433 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.131244652 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.116257285 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.098591133 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.114515424 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.09645771 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.117270959 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.113978233 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103965456 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.117220281 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10316413 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.119307903 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.118700464 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093971684 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.11004975 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094517247 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.120997791 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.13747082 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106090669 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.120512526 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120190125 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094648943 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11772143 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102731159 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.120526034 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.121816481 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101424253 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121982196 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.121429513 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096151381 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.114585526 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104327824 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.117524865 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.116486325 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.093822065 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.13278942 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099666228 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.112854004 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.110729531 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.105108337 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.114927004 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10007723 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.110764777 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.119868198 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093286497 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.119144968 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10261595 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117220356 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.125648758 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102777148 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120064315 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.102253269 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.155724295 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.117441684 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.113819562 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093308448 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120961349 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.095356618 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.118644316 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092673092 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116323487 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.115183078 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103352509 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.12295549 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.11606208 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105204203 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124749298 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106744163 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.121508781 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.111317656 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101423014 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.121361233 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108968333 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.124641894 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.118090627 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096774787 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.117051357 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107593506 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.122737216 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.122334388 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106858125 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.120028725 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093375062 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.113034344 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103277397 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.124000895 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.114208543 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10108784 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.123469139 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.11909734 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100439545 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.12615641 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.117846872 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.0974857 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.127518236 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102132064 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.116584869 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.129377179 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.100900226 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.121555342 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.099357426 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.125182777 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.115990197 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103249865 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11659676 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103075735 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120927737 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.093016462 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.116115127 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.117339657 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108331907 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.115289958 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095606374 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.111230836 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.121091371 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.094890934 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.118401443 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.093655735 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.115271939 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.120577737 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095863929 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.117722016 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.097395963 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.13270605 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.129280578 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10444364 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.12001636 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.105579348 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.119119456 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.118817287 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101120165 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120968892 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102515727 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.12068663 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.11828459 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103138103 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.115239767 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09543404 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117195951 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.12196417 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.093941519 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.112788313 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.093504274 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.11958359 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.124119001 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103040146 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.121659612 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099917401 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118668272 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124884388 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.098786729 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.119576871 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.0937707 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.120185604 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.109272858 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.122411213 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122456027 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.106695225 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1179691 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095576535 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126180371 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117954511 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.103064142 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.113042868 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.09457028 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.111882617 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.121307919 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101481119 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.114227639 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094267182 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.122032778 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104719434 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.117742276 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.111439586 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103176421 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.126776977 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.115077757 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103132388 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.116123163 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10273187 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.132592358 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.11162995 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.099143871 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.125803228 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.120059875 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093716389 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.119514479 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099444943 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.116543833 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100134006 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.119437466 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116551 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106599983 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.118928529 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094099368 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.116302883 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099536482 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.117447063 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.115023575 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106249608 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.118019637 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107747746 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.127910885 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122196318 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103422046 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11963318 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.119966297 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103930916 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.12314192 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100024852 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.121741984 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.114581533 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.094668732 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.118033923 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09465986 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.114192044 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.098250136 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.121180906 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.11745538 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101940556 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.119653715 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.124020255 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.099377622 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.122084315 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.14110327 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.096284977 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.112336759 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099903296 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121324708 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.116286683 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.098633632 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.113836915 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105020895 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.120622578 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.124242286 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.098739022 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.113657027 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.103900537 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.11651636 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.121971441 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104501797 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.121808947 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.098564093 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.121214361 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.118975032 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116896078 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.119043042 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11230883 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.125519271 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.119932646 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10103797 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.121566064 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.120531204 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099877408 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.122898604 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.108910571 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.123724122 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.107210767 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.126216179 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.119406291 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101984829 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.11810339 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105263242 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.119287828 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.122490917 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095208496 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.11344903 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.095076389 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.121508343 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.121963975 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104944955 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.114982823 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102406277 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123763941 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100881402 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.114041694 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.125683774 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106856069 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.122379238 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.128641631 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.095903543 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.1202517 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114032639 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.113525487 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100266004 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.11523764 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.113431431 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106370032 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.122166343 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.105229107 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.119651154 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.113339226 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096368883 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.122453309 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101606929 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.114050992 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097640495 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.122623665 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.116575386 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102455062 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.124490988 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.102674826 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124391698 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.124981224 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104294329 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.118682517 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10410107 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.11457348 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.096119691 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.11478991 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.117250638 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105678543 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.114558069 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096445157 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.122102248 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.118682714 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101350154 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.121290395 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.0989851 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.124173784 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102857945 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.119665434 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127202208 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09620047 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.118982053 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102068265 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.12124328 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.113362443 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.102340131 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119939574 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105362093 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.125763091 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.125102475 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10829446 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.127662766 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098596495 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.122312913 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.121233374 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104762119 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.113500916 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106542531 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.126820663 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.114943497 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102122072 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.119730027 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.097719374 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.122041875 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.124274442 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.101360636 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.126397779 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105130766 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.118904986 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.122509744 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104919732 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.120879123 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106239227 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.11763374 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.124076539 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.096467922 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.127622374 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101314566 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.12519117 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.116857459 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.097266915 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125224336 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103654574 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122241067 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.125907155 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106926749 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.114647321 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.0973221 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.11850297 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.101538402 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.129341708 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.125469603 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10253918 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.12144473 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097523667 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.116159579 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124463668 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098006749 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.11962827 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103757085 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.126094906 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.119708251 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.098641186 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.121185628 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.106068516 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.12630877 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.122344097 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.097314841 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.122445203 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.124524598 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.102676446 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.117222517 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100525813 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124614284 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.121940274 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.100712165 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.115242584 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11113038 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.12596718 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.125035686 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.100542753 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.123195167 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100670263 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.11697647 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.124833099 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.101034465 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.123855961 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.101222502 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.123547149 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.132467278 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.096616692 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.119053561 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.131806382 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104877522 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.127419399 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098000614 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.121918314 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.127570535 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109848609 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.117152573 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.09745781 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.115441152 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.101935761 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.115927342 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.116448335 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1142275 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.126508363 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.120415029 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103063366 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120829369 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099279406 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.116356124 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.096388719 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.126082759 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.099440465 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.130955897 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.115608629 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.096668669 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.117181394 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104742818 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.123112904 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.122196725 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.09808245 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.117125164 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.098829312 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.121408029 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.128430457 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102933978 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.123519956 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10377575 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.120811546 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.11695866 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120431763 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.114925693 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.103557746 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.133574575 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.124749481 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105250803 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.124999366 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.126475628 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107333596 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.117406347 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106651072 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.121208552 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.121143616 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10664635 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.124998438 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.138214716 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103134942 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.115296087 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103739914 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.120109823 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.096892352 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.129674103 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126053307 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106629704 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.122447616 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.099976202 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128363774 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.128607684 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104997739 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.121998651 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.121182338 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104645178 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.120411881 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103314941 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.119735873 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.126565302 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10837987 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123664677 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108829264 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.117247796 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.132005333 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109732958 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.127093835 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098338005 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.11636174 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097516898 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.11875286 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.126302685 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100791531 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.122130707 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104013259 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.123316494 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104852951 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.125132693 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.121408662 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107188821 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.124529246 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098700064 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.127315394 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.121874032 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106576627 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.117219302 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.106463794 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.126204532 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.127160158 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112829941 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.126504911 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.102437796 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.120782686 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122916358 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100723984 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.124003875 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104831368 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.119648395 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.097483724 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.125439439 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.125862553 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104222182 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125782002 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108057548 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.122594964 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.126089073 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109959944 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.118807048 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.0976134 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.125509146 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.117904083 seconds)
  done (took 68.559100491 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.179478152 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106812676 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11821907 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099517005 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.149506603 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120233226 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099450759 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.120012394 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119549877 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116723087 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.117574774 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099354676 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.145796474 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.15164229 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.147833043 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.136446076 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118324497 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10085131 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.118579856 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101567175 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.143047642 seconds)
  done (took 3.423522832 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.125795419 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.140322857 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.139871737 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.142434559 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111450663 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.137188107 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.138068322 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136838767 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.1424548 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114023055 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.142786347 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136789164 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.133792324 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.133176201 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11531431 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133839252 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.141711282 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1305186 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118500657 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.139065521 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.134226251 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.139116984 seconds)
  done (took 3.741448244 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.111733364 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.123547036 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.107504559 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.12064921 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.106993226 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.121751039 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.130738691 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.102782606 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.130209226 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.101956576 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.117819753 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.10229119 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.126588211 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.12104609 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.10108614 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.120049472 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111321121 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.124900539 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107278337 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.120678517 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.148767995 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101555798 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.123574414 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.117589261 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.117095445 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.126602131 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.106083707 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.124307116 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.099001319 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.124899588 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.100531037 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.124843649 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.124883588 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.099700045 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.118712577 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104860125 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.124711289 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.121323255 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.102676577 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.125143408 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.103385971 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.126037961 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.130026069 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.102820347 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.121434087 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.104926316 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.126105842 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.101381333 seconds)
  done (took 6.381727155 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.14902012 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.178541466 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.111348455 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14456141 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.150986862 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.137716734 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.13000525 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.168929639 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.109016407 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.133760991 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.147835659 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.146989337 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110005992 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.138976552 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.130438164 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.112716364 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.136624639 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.130425837 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.120687979 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.129098872 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.136023394 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111457306 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.150417727 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.144612803 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.134605336 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.132338245 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.113555977 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.136676217 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.144154785 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.118162038 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.134023407 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.140372422 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.144304007 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111243733 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.134135331 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.132426901 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.150582579 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.110875662 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129845652 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106287928 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.136659932 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.133412832 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114606454 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.153425416 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.134131721 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.137109863 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110299399 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.126626447 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.144710951 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.116363213 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.139213719 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.14896777 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.136409453 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.114656395 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.138576996 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.144074289 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.130353587 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.108857424 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.138476839 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.145354165 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.111778547 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.138987647 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.149194186 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.132916165 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119515585 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.146511269 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.132954379 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.139109273 seconds)
  done (took 10.055764073 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11722711 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.15350564 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.147182149 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.145727061 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113507311 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.13425702 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.13241436 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113454016 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.134368638 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.141481824 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133621812 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.223704409 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126404583 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120124698 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134580207 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.132788385 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112719931 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132965425 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.132721416 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113479457 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.13439361 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.145850834 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.132234174 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.146954061 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.149887581 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106615196 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.132434878 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.133073216 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128028286 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133200337 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148250101 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.132293982 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113976983 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.146717007 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.150071264 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.134039623 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102199058 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133072459 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.133748819 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113966711 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.126199111 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.145575456 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.133451103 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107595574 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134193079 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133688494 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126818074 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.150633301 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.141054151 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.142151428 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.133268105 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125981838 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134545696 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.13334073 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.145899022 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.157365294 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.147164037 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127293478 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134186722 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.14636243 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.146014508 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.156514165 seconds)
  done (took 9.208638988 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103968326 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.122020195 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.104360125 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.123751626 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102937988 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.123308125 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103847187 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122513384 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104043553 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.122971256 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103225737 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.123200294 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10357626 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124408473 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.103006828 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124107629 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102437068 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.124182949 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122425315 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105372313 seconds)
  done (took 3.106523441 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.117095247 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.147806837 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.127611416 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115788776 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.128923319 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.13516685 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106914656 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127356182 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107892079 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127873477 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.139400941 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118642989 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.127995557 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.135738058 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.138596192 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116001148 seconds)
  done (took 2.861493724 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.131232506 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.140558503 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.184746726 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.131266677 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103670402 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.137631398 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.12477381 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102629779 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.122722598 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.113353572 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.132321102 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.137055195 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104807135 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.123242749 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107447012 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.132159597 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.121896482 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.112121552 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.124628867 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.187703339 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.134991692 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.111020379 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127485027 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106292416 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.131205513 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.135293141 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.115195166 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.126033981 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126153275 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106499779 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.131619639 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115982012 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.126105068 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.134077934 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102729341 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.124783013 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104661142 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.126081144 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.131577932 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104257657 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.123398821 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.11061575 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.125081965 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.126845635 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103557836 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.126196858 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102934202 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.13619937 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.129867418 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.112644088 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.125252641 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112974426 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.133394341 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.138528611 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.117773426 seconds)
  done (took 7.669569157 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.121410878 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.12982422 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.112833532 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.124002366 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128620614 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.116916186 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.130289387 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110027676 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.132161307 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121869972 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111170847 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130507468 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109473325 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130106152 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.129335872 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109595743 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.124131065 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111079095 seconds)
  done (took 3.034267064 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.114830063 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.127292921 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.113771043 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.129231347 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.107115265 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.128174642 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12324 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104211563 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124404481 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.107689482 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.128357548 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10621853 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123983278 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.127087682 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108340536 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.127103145 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107677788 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124300403 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107840632 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124320902 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.127224424 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104342932 seconds)
  done (took 3.44904122 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.121510849 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.187318977 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.139643662 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.197861986 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.12958779 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.127843565 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.118732472 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.128807615 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.146037242 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.106671976 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.126291001 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.105778361 seconds)
  done (took 2.491754267 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136137873 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16933736 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126160849 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109305715 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14216019 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134605653 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114979079 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134957499 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145689764 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.15182919 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114715425 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147387395 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145140543 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.149689679 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140896622 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141541821 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115008728 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135345651 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108133469 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157643046 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135677245 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146050798 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135286901 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115079851 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135510781 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148058254 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145584206 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.15246912 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115366931 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146753012 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141671136 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135208885 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125759672 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.152280468 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129725768 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146194666 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114557955 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158504856 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142692876 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148266091 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.129113187 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121411981 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148276966 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144190652 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146634021 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115671454 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145973989 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13594269 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135551916 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168909404 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120807355 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150316424 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142416861 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147959892 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145967376 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167240827 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.153152602 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148729776 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121536432 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151692064 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.148959368 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141510965 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14958268 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153192577 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121753042 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151842579 seconds)
  done (took 10.059312637 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155353856 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128816524 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135659909 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.153498074 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.149416601 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11642432 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135455103 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135524255 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115813156 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13022546 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18719793 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136107584 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149130483 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128074718 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135527698 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136154565 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115680779 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.148662454 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130234541 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167495367 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136014539 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.149516566 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128568563 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.149540295 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.151709183 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142162281 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136125623 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115592707 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136043778 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13697036 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123213426 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137027404 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.149007544 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12778241 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12781128 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137547387 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135957382 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143314134 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116327317 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142626924 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.150544713 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.159587321 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136159988 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11598775 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154423072 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135716479 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115363174 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13400943 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136490648 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111308495 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15408052 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.153129895 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.153564353 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148364258 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137883834 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115737357 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1376648 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137670909 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115929628 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143499866 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148318843 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136781679 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168076737 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115986387 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139424079 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.149417883 seconds)
  done (took 9.986959841 seconds)
done (took 183.310889952 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.172616032 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.194967913 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.169061886 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.166051271 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.123975348 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.137220207 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.158786925 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.169887067 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.123696102 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.102470718 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.123970751 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.10831254 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.189018573 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102114276 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.123437231 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106476133 seconds)
  done (took 3.135731923 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.225169633 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.321235494 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.14549506 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.129183005 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.112183181 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.127363358 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.10693298 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.130471164 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.104509069 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.140282503 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.125841453 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.105912869 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.139405095 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.126083989 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.104889029 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.12727416 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.137762287 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.105307697 seconds)
  done (took 3.391365903 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.130671878 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.169391399 seconds)
  done (took 1.178406305 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.142903062 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.233459011 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31340423 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.187117741 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.155650069 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.151729439 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.187324459 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.125909506 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.241501034 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130231842 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.151947917 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.131631299 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.158842455 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116356635 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.145312051 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.131096539 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.161637075 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.120408611 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.140611502 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.133843664 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.135141697 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.132261018 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.137327399 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.120098825 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.208053475 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.150280793 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.13349598 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.132147532 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113581452 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.139962047 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.138853488 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.150969723 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128325458 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.221451072 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.137574505 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.197130124 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.141369958 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110537964 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.140644113 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.130958121 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114147066 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.13774855 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.148602828 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.132054762 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.112311363 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.141214678 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.13281322 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.112083538 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.141644754 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.142546572 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.119912685 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.140288111 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.21681075 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121302372 seconds)
  done (took 8.947694006 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.931787149 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.152904043 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133203108 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.058359566 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.164496371 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14711246 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.914394646 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.158387971 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.294800983 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.934725629 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126338793 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.146182998 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.278639053 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.308433753 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.20575381 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.390241776 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.79670405 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130924884 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.163842908 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.179776069 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13731691 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161618693 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151443329 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442193923 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.131271389 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108563537 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136064017 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.141145542 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.195425189 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.129519237 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112948353 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.238422159 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.299313557 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.246508127 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131544855 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106483823 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128584573 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.202002099 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.314625512 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.281943727 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.200066447 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104239769 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.128367285 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122578635 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.153736776 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.126046238 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.19712631 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.230487783 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.20800357 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.134272856 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.142681912 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118220489 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143394612 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.217674321 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105160395 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.391618342 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.410438122 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108144351 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140265801 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.149030432 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.313902618 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107788858 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.273172163 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.159435129 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.257444026 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12953272 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.872286172 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.201927632 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.12817439 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.138418168 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116992137 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136076166 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142418638 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.195350525 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406431137 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.145577839 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11176177 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12865347 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.266519724 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107273259 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128792982 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.199686866 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132583996 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13978795 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.145821234 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124676249 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.226802508 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.285175563 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.146070825 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138193619 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114365848 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143578589 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.131820677 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.246411006 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.267099793 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.214153755 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.246493408 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.145083794 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.22061727 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.203721752 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.142537466 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.206597922 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.138496208 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.148998141 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122403522 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.285660055 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.171393099 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107859128 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.135499835 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13724022 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.174894996 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111141756 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139733437 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.204284604 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.505920319 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.224727238 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.106997843 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.133350744 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118847739 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.218676446 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116335039 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.306300171 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141256143 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.224863918 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117833084 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.125807615 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.138981346 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.199894943 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.145794447 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.140005981 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122803444 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.137880725 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.307207896 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.267039017 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125968956 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.279315802 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.204577644 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.140221167 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.230531352 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118683513 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.225664442 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119235848 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143124071 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13321111 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.854831414 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.145120581 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117622314 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135260316 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.216816059 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128669678 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109981867 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.129695287 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104772407 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.848634542 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.133070733 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104879153 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.131816064 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.140399311 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118466769 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137020643 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.136584991 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.197500019 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.28280143 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.144244998 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.139069197 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10816251 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.217299687 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.111051136 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.13050922 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.128826425 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.109504523 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.141107769 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112393622 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.13175671 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.228376418 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.194596064 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.267877492 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574398899 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.129443666 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108396683 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.279185158 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130664344 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.354799158 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138122201 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.277022314 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.202857133 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.127620256 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.387584583 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.225997834 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.219950617 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.111937922 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.229340774 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10691343 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138234738 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.197060246 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.131053063 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137862578 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.195068403 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.149249613 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146324481 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.20932086 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108422977 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.286225261 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.105416577 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.227719785 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112452454 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143941852 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.361808557 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.130367709 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.152766881 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.198099488 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136454212 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10785563 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.655508521 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.130728018 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120840471 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.140624999 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.271599175 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.224444142 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138179987 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118254566 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.144424897 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.197833756 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.267572035 seconds)
  done (took 51.266147156 seconds)
done (took 68.787008508 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.341277516 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.298401315 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.360019035 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.252057275 seconds)
  done (took 2.248130809 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.245746407 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.181531533 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.210474414 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.130691905 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.21911883 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.12938758 seconds)
  done (took 2.03274313 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.557621012 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.461843535 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.371001192 seconds)
  done (took 2.310957617 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.282784847 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.311594511 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.383672876 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.52286439 seconds)
  done (took 2.529674236 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.270419578 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.153729402 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.147616852 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.201801607 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.240681285 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.242146045 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.171590615 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.187466234 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.157093987 seconds)
  done (took 2.742916229 seconds)
done (took 12.78538334 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.21140886 seconds)
    (2/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.253093597 seconds)
    (3/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.184629735 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.314463406 seconds)
    (5/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.341558254 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.184284095 seconds)
    (7/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.25375244 seconds)
    (8/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.2758211 seconds)
    (9/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.162698795 seconds)
    (10/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.377220522 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116706535 seconds)
    (12/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.317561855 seconds)
    (13/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.157847422 seconds)
    (14/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.269553332 seconds)
    (15/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.140470072 seconds)
    (16/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.243523549 seconds)
    (17/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.3074321 seconds)
    (18/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.171538149 seconds)
    (19/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.250611501 seconds)
    (20/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.139231721 seconds)
    (21/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.318199232 seconds)
    (22/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.150224485 seconds)
    (23/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12891724 seconds)
    (24/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.233894481 seconds)
    (25/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.137297885 seconds)
    (26/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.285019813 seconds)
    (27/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.152010627 seconds)
    (28/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.151435615 seconds)
    (29/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.117800892 seconds)
    (30/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.138002509 seconds)
    (31/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.188583984 seconds)
    (32/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.215098909 seconds)
    (33/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.218663698 seconds)
    (34/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.213873445 seconds)
    (35/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.172086239 seconds)
    (36/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.144479865 seconds)
    (37/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.244807395 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.138558244 seconds)
    (39/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.139294796 seconds)
    (40/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.199435812 seconds)
    (41/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.160782157 seconds)
    (42/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.137704319 seconds)
    (43/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115886538 seconds)
    (44/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.139718775 seconds)
    (45/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.234825863 seconds)
    (46/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.254698569 seconds)
    (47/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.301005992 seconds)
    (48/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.138791315 seconds)
    (49/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.23008579 seconds)
    (50/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116862182 seconds)
    (51/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.138873056 seconds)
    (52/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.151941886 seconds)
    (53/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.255375506 seconds)
    (54/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.212855918 seconds)
    (55/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.206876191 seconds)
    (56/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.218108668 seconds)
    (57/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.155811471 seconds)
    (58/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.233635053 seconds)
    (59/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.140232868 seconds)
    (60/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.159538698 seconds)
    (61/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.150674361 seconds)
    (62/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.168277315 seconds)
    (63/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.149756921 seconds)
    (64/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.275426679 seconds)
    (65/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.164594889 seconds)
    (66/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.13748487 seconds)
    (67/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.172979695 seconds)
    (68/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.099354273 seconds)
    (69/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.241829382 seconds)
    (70/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.142220017 seconds)
    (71/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.135858439 seconds)
    (72/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.198298028 seconds)
    (73/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.151005255 seconds)
    (74/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.137416612 seconds)
    (75/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116164117 seconds)
    (76/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.146634448 seconds)
    (77/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.213115543 seconds)
    (78/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.112356545 seconds)
    (79/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.13164017 seconds)
    (80/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.2509235 seconds)
    (81/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.228873443 seconds)
    (82/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.100910348 seconds)
    (83/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.186214663 seconds)
    (84/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.099934525 seconds)
    (85/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.137876249 seconds)
    (86/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.213653172 seconds)
    (87/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.130831755 seconds)
    (88/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.123962706 seconds)
    (89/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.180523787 seconds)
    (90/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.371604429 seconds)
    (91/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.138790716 seconds)
    (92/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.151476435 seconds)
    (93/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.130782143 seconds)
    (94/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.188897174 seconds)
    (95/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.182089089 seconds)
    (96/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.161799156 seconds)
    (97/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.122617809 seconds)
    (98/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.100146272 seconds)
    (99/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.121315246 seconds)
    (100/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107028829 seconds)
    (101/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.140309313 seconds)
    (102/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115066819 seconds)
    (103/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.216877341 seconds)
    (104/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.122350042 seconds)
    (105/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.100536216 seconds)
    (106/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.14884693 seconds)
    (107/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.169503682 seconds)
    (108/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.14931925 seconds)
    (109/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.122580445 seconds)
    (110/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.098599766 seconds)
    (111/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.122515352 seconds)
    (112/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.098991836 seconds)
    (113/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.183438334 seconds)
    (114/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.098792498 seconds)
    (115/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.151871534 seconds)
    (116/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.138080824 seconds)
    (117/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124776624 seconds)
    (118/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.18889858 seconds)
    (119/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.122966925 seconds)
    (120/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115567183 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.138313417 seconds)
    (122/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.21240048 seconds)
    (123/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.099575091 seconds)
    (124/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.138755021 seconds)
    (125/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.111667457 seconds)
    (126/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.18678608 seconds)
    (127/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118508288 seconds)
    (128/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.178404321 seconds)
    (129/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.169977156 seconds)
    (130/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.115437317 seconds)
    (131/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.122165361 seconds)
    (132/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.104643956 seconds)
    (133/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.124230479 seconds)
    (134/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.231157909 seconds)
    (135/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.116324134 seconds)
    (136/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.137486505 seconds)
    (137/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115061494 seconds)
    (138/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.138865569 seconds)
    (139/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.148680422 seconds)
    (140/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.194895831 seconds)
    (141/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.125331571 seconds)
    (142/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.122920488 seconds)
    (143/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127912356 seconds)
    (144/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.152471283 seconds)
    (145/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.099046891 seconds)
    (146/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.138459103 seconds)
    (147/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.138650088 seconds)
    (148/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.158656311 seconds)
    (149/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.138455317 seconds)
    (150/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.209282887 seconds)
    (151/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.098513937 seconds)
    (152/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.139287081 seconds)
    (153/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.105836765 seconds)
    (154/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.137985813 seconds)
    (155/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.223054005 seconds)
    (156/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.111107251 seconds)
    (157/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.127785311 seconds)
    (158/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.124716934 seconds)
    (159/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.122477579 seconds)
    (160/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.09895152 seconds)
    (161/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.122331187 seconds)
    (162/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.09769195 seconds)
    (163/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.12105686 seconds)
    (164/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.123598091 seconds)
    (165/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.129953568 seconds)
    (166/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.098179087 seconds)
    (167/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.139977162 seconds)
    (168/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.105997246 seconds)
    (169/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.121821005 seconds)
    (170/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.104347978 seconds)
    (171/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.154204549 seconds)
    (172/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.17192634 seconds)
    (173/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107239434 seconds)
    (174/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.122229629 seconds)
    (175/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.099331192 seconds)
    (176/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.096646866 seconds)
    (177/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.139190235 seconds)
    (178/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.142091801 seconds)
    (179/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107612348 seconds)
    (180/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.148040674 seconds)
    (181/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.119218616 seconds)
    (182/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.122848248 seconds)
    (183/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.113638908 seconds)
    (184/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.1231091 seconds)
    (185/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.152073189 seconds)
    (186/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.131068792 seconds)
    (187/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.136178725 seconds)
    (188/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.097909613 seconds)
    (189/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.147650501 seconds)
    (190/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.104459661 seconds)
    (191/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.123048178 seconds)
    (192/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.124619972 seconds)
    (193/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.122845395 seconds)
    (194/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.139939685 seconds)
    (195/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.099223967 seconds)
    (196/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.137180305 seconds)
    (197/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107050217 seconds)
    (198/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.122893523 seconds)
    (199/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.159674789 seconds)
    (200/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.120910449 seconds)
    (201/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.097867197 seconds)
    (202/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.12264235 seconds)
    (203/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.114088621 seconds)
    (204/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.141356653 seconds)
    (205/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.098139016 seconds)
    (206/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.122456664 seconds)
    (207/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.125819992 seconds)
    (208/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.15215999 seconds)
    (209/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.104031264 seconds)
    (210/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.122306201 seconds)
    (211/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.113377983 seconds)
    (212/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.14730413 seconds)
    (213/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.137948065 seconds)
    (214/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.097878242 seconds)
    (215/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.12974968 seconds)
    (216/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.099015114 seconds)
    (217/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.126903673 seconds)
    (218/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.098100075 seconds)
    (219/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.097410718 seconds)
    (220/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.128049978 seconds)
    (221/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.11461231 seconds)
    (222/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.122020924 seconds)
    (223/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.098572331 seconds)
    (224/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.1450523 seconds)
  done (took 36.027298942 seconds)
done (took 36.95356611 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.525794462 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.147146733 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.118701074 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.143500602 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.199990993 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.144479382 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.127938036 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.147239342 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.145711525 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.11521364 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.131851382 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123664586 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.142555417 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.200639538 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.144723018 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.111372785 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.135024859 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.146856321 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.126482264 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.152014562 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.199427168 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.135558978 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.122944971 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.135364607 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.200652217 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.110255626 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.143848421 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.143471139 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123334331 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.14044503 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.14285804 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.110949655 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.151215071 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.149856337 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108966046 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.138851432 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108070042 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.131224405 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.11786871 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.140386973 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.146896656 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.116816241 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.145863435 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.136024723 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.1175419 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.140678237 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109761353 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.146964148 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.13254236 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.119434508 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.134923767 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127577341 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.140127653 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.131855726 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.109092708 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.138434915 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.123512659 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.134751745 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.14742063 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108645342 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.136113996 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108555283 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.1434671 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.132374614 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.116588592 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.134633446 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116572322 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.143422173 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.138113215 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112422097 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.132505831 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115649098 seconds)
done (took 11.106083998 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.116361816 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.194821882 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.200106039 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.208790138 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.167957648 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.154024152 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.15628558 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.165942923 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.12847472 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.160831511 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.172747666 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.163246825 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.210553507 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.123887029 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.154401283 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.142010247 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.148857904 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.124476728 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.21127769 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.161452313 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.170542081 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.149372034 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147123736 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.159002986 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.141715041 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.165408876 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.121284884 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.142627659 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.141728533 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.134953818 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.161917263 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.141439382 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.119130599 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.162907973 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.151347811 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.124227258 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.153711126 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.142080194 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.116965284 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.140553496 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.154954094 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134289238 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.140314684 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.152913933 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118017726 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.148458758 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.148930184 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125003824 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.144596065 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.144458817 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.119785258 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.171917041 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.150113405 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124832361 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.148583524 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.148888408 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124960229 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.148881091 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.143086001 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.12430982 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.141174441 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.141841358 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.119729107 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.168400654 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.144882519 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124613656 seconds)
  done (took 10.788147358 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.138301942 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.176324904 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.151481215 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.152080965 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.123357043 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.132550965 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.107907941 seconds)
  done (took 1.979065185 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.110267353 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.20637331 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.20384418 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.203729515 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.22321611 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.215779802 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131990374 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.134992724 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.169873327 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.145145842 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.204864585 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.23763764 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.14092948 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.126570711 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.207402498 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.135200771 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.20687308 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.135449662 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.12036247 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.204558812 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.150527386 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.165106596 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.14976143 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.109455221 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.196117592 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.136747456 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.259654049 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.152121628 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.140939634 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.120949731 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147840461 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.22048872 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.198235988 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.149364796 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112881714 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.201253572 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.223309879 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122270174 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.214504569 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.140919621 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.197742089 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.14556866 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.12241705 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.148658165 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.146004558 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.184676786 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.125863584 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.148244518 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.1442244 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.20656617 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.1219671 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.199604657 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.143289776 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.145415752 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.12166249 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.148668694 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.15266258 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.12262637 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.204583939 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.150318215 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.198060674 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.199119632 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.199763467 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.199135261 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.157600179 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.199813669 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.196441742 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.145700669 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143504637 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122604114 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.201496049 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.146742836 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.147937678 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.187616567 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12410043 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.201031036 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.200121469 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143529177 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.14822052 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114551815 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.145201417 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.108924694 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.188133126 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146075774 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143635319 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129523329 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.149746097 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.147816096 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114766832 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.162448374 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.146855109 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.123114775 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.152900819 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.146404249 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.153261624 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.204029401 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.122196243 seconds)
  done (took 16.722954972 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.1119255 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.135343507 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.118036884 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.137927455 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.11108041 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.137752027 seconds)
  done (took 1.769893699 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.145469635 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.149741188 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.157745342 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123645095 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.205558627 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.205695083 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.236362687 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121735015 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.167153029 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.159837269 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.208414104 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.209464308 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.206677428 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.152049244 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.210188365 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.151272475 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.210924462 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.120901036 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.157767851 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.146372207 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.130163195 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.151683966 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144853428 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.20089897 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.150924889 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.124285598 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.147327148 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.157385667 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130871325 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.14763101 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.151418379 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.123962597 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.145132609 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.147412781 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.210885506 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.145249075 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118907239 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.154051099 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.15091307 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.125669152 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.209632549 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.14562986 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.155828181 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.128608369 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.148544429 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.144610978 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.126888113 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.147866417 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.209253503 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.15404049 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.153165002 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123282165 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.151466596 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.153021408 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119755851 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.147462318 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.1532788 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.211605181 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.15172163 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.118974279 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.150720334 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.150137226 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12257354 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.153046663 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.148915035 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.125923875 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.146179089 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.148212154 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119683854 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.150342722 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.153429943 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.125094442 seconds)
  done (took 12.177027775 seconds)
done (took 44.422788521 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.186795152 seconds)
  done (took 2.201630916 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.969410972 seconds)
  done (took 1.986501206 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.268908051 seconds)
  done (took 18.320728397 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.584498671 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.674885898 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.994858698 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.188390056 seconds)
  done (took 3.459278844 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.002244035 seconds)
  done (took 2.037562003 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.380869788 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.27759078 seconds)
  done (took 1.679313249 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.891583748 seconds)
  done (took 1.92136275 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.459447802 seconds)
  done (took 3.485690139 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.399111514 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.213746661 seconds)
  done (took 1.64980366 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.689377015 seconds)
  done (took 1.722229428 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.441067074 seconds)
  done (took 36.474298167 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.264706805 seconds)
  done (took 1.310297061 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.33142004 seconds)
  done (took 1.36585266 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.488503818 seconds)
  done (took 4.524141883 seconds)
done (took 83.166421327 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.12238395 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.149851924 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.12538327 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.147695942 seconds)
  done (took 1.574937976 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.131870156 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.148810797 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.152558143 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123395113 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.1579896 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.123957445 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.146473501 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.155812953 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123566786 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.150682473 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.148194366 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122975912 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.152320776 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.146181294 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122981668 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.150072123 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127645144 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.150392384 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.147997662 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.125270203 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.148357153 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.149094703 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127023978 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.1494676 seconds)
  done (took 4.421888988 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.123452389 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.140582891 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118479301 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.140773316 seconds)
  done (took 1.564442468 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.131615335 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.165514503 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.163778503 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.130610546 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.165867333 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.163586839 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119504037 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.144520039 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121183612 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.157742576 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.146253271 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.168411695 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.140000995 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.140737656 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157320578 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11333928 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.141270454 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13960016 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.156228475 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.1575787 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119349022 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.156292026 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.127830454 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.161496207 seconds)
  done (took 4.533039202 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.231118994 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13660868 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.172600103 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.200855371 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.174293865 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.120304424 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.17532449 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.15385922 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.154344288 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.12506908 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.151303827 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.208394663 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150312593 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.127871328 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.149637977 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.154381325 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12895309 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.152296066 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.154162191 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.136336865 seconds)
  done (took 4.207350562 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.125885897 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.141221124 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.111888258 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.141126683 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.124023616 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.145171734 seconds)
  done (took 1.841301097 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.111116617 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.133982089 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111629183 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.134342828 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.114761653 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.134347654 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.109347669 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.135156414 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.109816176 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.135419773 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.10899787 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.133385934 seconds)
  done (took 2.522979364 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.326715059 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.113819195 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.14472863 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.13921075 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.145382044 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113790533 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.155715384 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.113008971 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.277364803 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.141759803 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.130673391 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.243467767 seconds)
  done (took 3.094759131 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247718509 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149719027 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28308922 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.412357252 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189788134 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201289931 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.312188674 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199650957 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.250730055 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144880319 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260451619 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188115326 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161157855 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239796984 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143786246 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.219972014 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209516684 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.264564192 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179654448 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244763398 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200475706 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202225154 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217465522 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185976781 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168357992 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19241493 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121977161 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15916696 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208746566 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205718344 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23950747 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182051965 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145811196 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269894786 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255386451 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2436398 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.353487539 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165502988 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.22641143 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.219358309 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.308721113 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169577579 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235421984 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185477741 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159627257 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215759768 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189740753 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.218555915 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.16482722 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145124605 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250993767 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211303527 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.220554381 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169541465 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.353635117 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153924437 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.178906901 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209831831 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255170506 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228386757 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20089323 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.150029324 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218757695 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218066266 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216826613 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.177922647 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.204397824 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157668796 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212837928 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232089385 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242485963 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202293475 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224310263 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163937482 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197056651 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205217145 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186111249 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214455987 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194044106 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.148987529 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155950557 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168251133 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157419708 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.219834003 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12441847 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268982677 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13744424 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.248112599 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241635716 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19204086 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196603307 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199680699 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202538287 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180932541 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.148996778 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151651272 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.196209992 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192795332 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162486597 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191156345 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194125543 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.158565528 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184801198 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12598378 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19415896 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.166316041 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203657634 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200436664 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.161821043 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198376489 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1546006 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.193309977 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233501509 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223425144 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135032467 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164729973 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230348231 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190757162 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.168855977 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211509472 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225507293 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.198632831 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167822965 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206372292 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258711938 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14689495 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252654088 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148151566 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16352073 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.186172754 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19373773 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192302574 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.188240428 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158318764 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185631536 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23523133 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.155919606 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140842554 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211398002 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158398094 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157276132 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175233458 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142530445 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.173915892 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.185429296 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.172819808 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190325202 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193278417 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186385005 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195308758 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1731381 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236810364 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162668456 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.193505533 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152810348 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.15023277 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.219185461 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220966446 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161246061 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222528188 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.206436306 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258713428 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198234686 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158834177 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219663857 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131990174 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.152349107 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20277701 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196833929 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197068331 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.220902365 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252928225 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.206226551 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187678784 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181113965 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204664094 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.211909644 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19357379 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.177810738 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196651746 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206163649 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.152521176 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.129261168 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.160666074 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171135141 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134644182 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163983054 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219930191 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198938278 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.250386397 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197561198 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170536722 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219501409 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.157230308 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201349864 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.210925054 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168251059 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.22550212 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218891462 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201903455 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174465646 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209630791 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.124429613 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156128446 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.165489253 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204934111 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162420222 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138211569 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176538364 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218174623 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238422804 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154097433 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267407975 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204841008 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230915041 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.152734266 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.197660503 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206973651 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191432332 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.219752967 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140408939 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.196841359 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215007546 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176763877 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259057939 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198098695 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204735456 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239256181 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.190267734 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161550051 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182208405 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204551919 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174141256 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19886245 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151325729 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165685924 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187255682 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.17059076 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157452756 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223144589 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174390956 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217949063 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.191008063 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210404357 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156529963 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176646385 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194092329 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177424561 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.121976449 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205412846 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253496065 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150483268 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191701778 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238968536 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13358532 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.345290303 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255766359 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224587995 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169317454 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176099486 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194970323 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193031016 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199441463 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220309019 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176058361 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218681705 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193825945 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.174819652 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139751099 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181652575 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184601033 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.188734827 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.166327617 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.189122617 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.146079624 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252328728 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17637805 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16568557 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199211478 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.180007092 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.191460335 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172121752 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240112105 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191616255 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215852568 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.190748012 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.20317384 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224346464 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154925541 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157371259 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131999836 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219480266 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163497583 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193940062 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.21592918 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258030904 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196741087 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205198392 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168623268 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12820748 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194497056 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182422067 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259768132 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148911054 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.170518704 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25722371 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.155802438 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162489922 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200006916 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316848709 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17795213 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210153344 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.151056149 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.309735657 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156585603 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135825608 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195493219 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20685105 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.182603139 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.216966448 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20193295 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176786419 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194615007 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141036984 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.250688 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246539901 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20708627 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241599384 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14782796 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192350984 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198933938 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241371961 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146884065 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.178788114 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197526331 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218869419 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.225744561 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.166345458 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197949417 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19617505 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19566688 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239841269 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138309128 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223628625 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162153055 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202639275 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173288705 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157415939 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191927089 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.217501412 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164315061 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213912726 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192567069 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133244491 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161340142 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18604287 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193545878 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176564414 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132944182 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248052607 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128855839 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198117657 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219410728 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162996052 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190854006 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179145655 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138279147 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176627363 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177800441 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166613265 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.178947354 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244856866 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136377154 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241509598 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211237925 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202089149 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195003713 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176579495 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66763377 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.160792844 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222856626 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180870937 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229026826 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182191508 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202516519 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196454773 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182668399 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205442291 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183572823 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.256997698 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203119679 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.195795707 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162523796 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175983103 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150101086 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.16596817 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18577861 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198273241 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172256242 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.142349103 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.194578378 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180044594 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.179454505 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171852211 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222589687 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181334029 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223398716 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222317933 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171857362 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201607346 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214408546 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161228906 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.200330938 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209682402 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176402668 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18738321 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.164405139 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.141044158 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216127743 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.154723195 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198810824 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195045127 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196703417 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198644012 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.169650609 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19504804 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14807926 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195028011 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159289213 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.192447429 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192873855 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164715398 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.133355679 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190365047 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194759391 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.193451614 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160316915 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177924644 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242489907 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127433496 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166321877 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313619513 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19399412 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232302101 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.190240407 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166667716 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176760695 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192160803 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.187718127 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166518655 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.161456058 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161864151 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.164742817 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.212488009 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.163539053 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191913534 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215799268 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196214639 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255460691 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.15035678 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.302749133 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170912434 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19123469 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.13525695 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.163767315 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174494119 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166710121 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180222664 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227436742 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216724796 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.187322433 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.178476718 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13378695 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.155065141 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162448048 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195754004 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16290898 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193753518 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17981586 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.150859925 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178534062 seconds)
  done (took 94.353259071 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173051672 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.170414695 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.175291257 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.227482404 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19614737 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287913143 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.235317111 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25538909 seconds)
  done (took 2.877493649 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.153509499 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.139257842 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.171678137 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.152544394 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.153338483 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.435662298 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.191918737 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.124561328 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.215795251 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.190841195 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.12442449 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.711242402 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.150228456 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.15166888 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.149707084 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.151031288 seconds)
  done (took 4.516286312 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.416851031 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.565105516 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.817161139 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.27814626 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.261828037 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.20891244 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.75348594 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.198009525 seconds)
  done (took 12.651004207 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.155700754 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.170528782 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.372096884 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.241177637 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.189070166 seconds)
  done (took 2.294780314 seconds)
done (took 141.483160981 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.128300467 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.172706181 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.127474748 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.17282367 seconds)
  done (took 1.752307033 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.176970738 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.140862332 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.11508655 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.138584155 seconds)
  done (took 1.737386042 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.556776894 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.111105839 seconds)
  done (took 1.861626151 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.162695365 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.171573005 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.174511222 seconds)
  done (took 1.681888722 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.136999 seconds)
  done (took 1.30128054 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.125349135 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.162571458 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.213449463 seconds)
  done (took 1.671035023 seconds)
done (took 11.170566914 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149541135 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.553743986 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.441559749 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137011285 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.750650358 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.432822528 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.066697393 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155760598 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.195033789 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.144560447 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164645245 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.696408288 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.050647544 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.458169502 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.034430252 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.484577745 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.700206938 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.147323828 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.151559332 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.136703886 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.042424133 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114847114 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.146318419 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117814878 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.725238349 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.450068806 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116742196 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.498784938 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.14343116 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122691916 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.434315233 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116077311 seconds)
  done (took 18.236813682 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.163950149 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.210862512 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.155203811 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118244424 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.149812894 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.145049219 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.128101034 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160191561 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.212529255 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.14419935 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138296595 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.144632546 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122651551 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.146730056 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.168381051 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116352899 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.148813293 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12017728 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.153524667 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.146223724 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138432077 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.144551217 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119126806 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.148032726 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116402456 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159219374 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.145019357 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.1311498 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.145410167 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.149808485 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.123668745 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.14552534 seconds)
  done (took 5.837745143 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.168654475 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.220846289 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.155320788 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.181800132 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.200486846 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119268655 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.238174902 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.185980322 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.214866375 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.145558202 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138316888 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.144426894 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.18643649 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118108225 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.170088896 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.144583573 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.120722363 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.148314158 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125251045 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.147643821 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.166693102 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117161897 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.148540602 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119584511 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.145420871 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159945843 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.119139997 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.161133988 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.143874062 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124477483 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.152586088 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117958589 seconds)
  done (took 6.129194381 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.130736232 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.160521624 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.139721904 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.169180277 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.154619657 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.131091408 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.159104375 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125027107 seconds)
  done (took 2.354464594 seconds)
done (took 33.725592794 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.144846032 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.165605619 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13812016 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.160145442 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.221139699 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120233103 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.16390858 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119834275 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.160737019 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.167574977 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116976059 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.151352336 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.138413713 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.154320263 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.206202988 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.131331326 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.239341543 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.205219429 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.123721417 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.159596118 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123657159 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.212502862 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.158607245 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.123209768 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.216356598 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.150452213 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.201645189 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126751888 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.156057986 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.14802937 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.204432435 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.130856825 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.152232831 seconds)
  done (took 6.463725693 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.223104362 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.232692093 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.1196501 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.149695608 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.23411488 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.119422395 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.24835715 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.120176939 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.14813859 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120067399 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.147846936 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.223181034 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.2324674 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.245610054 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.261639818 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.23039604 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.222233342 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.230898812 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.215825071 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.235134769 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.221014499 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.148255607 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.233087684 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.235675668 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.119565686 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.149370692 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.257417263 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.230646942 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.257699576 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.219679992 seconds)
  done (took 7.216812922 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131527369 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.164039329 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.144445321 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.219283464 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.191346079 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161781926 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131954992 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.171919602 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172416198 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119159718 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.157330862 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.156384144 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.165404327 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.157617371 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.124265547 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.167212917 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.144689446 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.150714271 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.154942663 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139872377 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.167797544 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.165507185 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134621324 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.158824776 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118656255 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.159050902 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152742964 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134868894 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.155846412 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.127625772 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.152619369 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.151809749 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123534532 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.158286881 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125198462 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.162331189 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.175082653 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12890782 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.160959812 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.183465744 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128588447 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.154384198 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138878605 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.200122955 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.150598232 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131191712 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.161540251 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.157030238 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118046429 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.168399473 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135404708 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.149526007 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.172110247 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.119591496 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.147709289 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125989262 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.149984782 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.121457755 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.157643108 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.152809974 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.145756706 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.156484443 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.154870721 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121922745 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.153389268 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119177847 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.149056076 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.126015918 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.173323409 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.154082688 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.153928597 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.149879523 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.129967665 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.15754366 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.154211113 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128261928 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.149091051 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125097911 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.157848186 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.155111564 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129194723 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.1517744 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.123727706 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.168012378 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.169683083 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.132567572 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.159495182 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.158527545 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123982114 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.150438408 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132989515 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.151136351 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123365879 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.15977163 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.149674332 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123139908 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.160671416 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129203878 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.14744852 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.166754686 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.125423454 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.147708516 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.136901822 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.151215455 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124037951 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.160189685 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.160701803 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.120149833 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.157769394 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.130415839 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.148874035 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.154207493 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124628401 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.149165129 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.137092162 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.160502461 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125957307 seconds)
  done (took 18.51206378 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.324039767 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.335669029 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.231368321 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.426601402 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.145216986 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.219764321 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.333227612 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.250897392 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.15192088 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.195644288 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.213183629 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.26001778 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.151117971 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.182625082 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.30268967 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.428138913 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.153567352 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.196744271 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.193938925 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.17602428 seconds)
  done (took 6.089078476 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.143862816 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.193632686 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.182369871 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.18343489 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125879745 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164434651 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.149542285 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.147406318 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157385524 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.155402772 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.120441634 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.1642821 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128964049 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.159553767 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.169085444 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.169763537 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.155725303 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.155734935 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.144163135 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.156850765 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.157256915 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.149981398 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.161898334 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.179498891 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.161314796 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136949407 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.148882199 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.127966931 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.15368138 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.126090146 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.156676902 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.17238255 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127106425 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.15653363 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.159501994 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.134140842 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.152335282 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.122963013 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.153389979 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.124521078 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.167579806 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.160687414 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125041348 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.146332808 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134375598 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.152989781 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.133658614 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.161870785 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.1332539 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.166497995 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.159367186 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.133187239 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.157302971 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.170701081 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.124832817 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.166961836 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.134950478 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.162497345 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.159145979 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.118887077 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.148647527 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124213359 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.15564696 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.162148057 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131281936 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.174065912 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.166023216 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120923513 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.160420546 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.124304195 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.153960017 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.171249534 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.177180942 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.127020698 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.153161616 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.142628481 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.154900282 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.113922077 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.162257906 seconds)
  done (took 13.109991556 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.150819713 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.156189527 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142185619 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.189083391 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.172779333 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.126697565 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.156029609 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.140878924 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.164669779 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.16572754 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.133725571 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.164016164 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.175776706 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.133328305 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.156116891 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.164155435 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132577825 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.195940049 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.168835471 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.156475187 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.16849754 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.155214324 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.135554676 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.164173829 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.186119915 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.134016755 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.186573705 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.131132856 seconds)
  done (took 5.636043609 seconds)
done (took 58.211903615 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.417667903 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.496270984 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.281614145 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.281160202 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.311913471 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.30947295 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.279066671 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.47262266 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.996076675 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.272021676 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.281367369 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.28019107 seconds)
done (took 28.928048465 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.281225082 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.94857005 seconds)
    (2/2) benchmarking "String"...
    done (took 1.593999633 seconds)
  done (took 4.759552469 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.275775799 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.274129554 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.518195318 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.280456486 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.274673968 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.28867571 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.283889237 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.282710545 seconds)
  done (took 16.417806845 seconds)
done (took 26.954559325 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.324191834 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.495358375 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.585738428 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.290284051 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.28017057 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.276334538 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.284910415 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.307793631 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.279686798 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.27726799 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.275131125 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.542001119 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.268066304 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.662188928 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.279214483 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.283361164 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.288436849 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.525082672 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.274301095 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.270005007 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.28258749 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.265126455 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.284755694 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.310078505 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.283132388 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.277185254 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.281225221 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.266402071 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.496126493 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.305881794 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.320535422 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.272372911 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.283882984 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.274525452 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.377799307 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.301666409 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.476241916 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.273125447 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.265938222 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.280575466 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.469689931 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.6517012 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.278334794 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.272146933 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.278493521 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.323396457 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.272343219 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.059755154 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.279841542 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.282220244 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.286382109 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.672277969 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.284717938 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.274141309 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.291879941 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.525194531 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.295847073 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.297469495 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.313325277 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.282124483 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.289471266 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.273729854 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.307586886 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.277954097 seconds)
  done (took 148.306988871 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.273976244 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.277287244 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.273911954 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.33625353 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.278432798 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.278459808 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.274660942 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.274562028 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.278324323 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.302507603 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.277283098 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.274006341 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.287611219 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.239828392 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.277047042 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.289682511 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.273352883 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.284539676 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.277737399 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.274991225 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.276389862 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.279633243 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.288548436 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.273412682 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.305719247 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.360293335 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.294822634 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.297040155 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.285241532 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.274185993 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.307287541 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.338746676 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.828380029 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.138217105 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.272738823 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.305843485 seconds)
  done (took 82.945355672 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.272683594 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.274478406 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.27418566 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.301864074 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.273304157 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.787467462 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.792282946 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.020598654 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.783590086 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.441796446 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.276888436 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.477093335 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.272302187 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363037427 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.285843192 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.273206071 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.289007915 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.300222117 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.27234593 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.272494248 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.775794056 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.288642291 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.393611607 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.434589046 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.286678179 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299743762 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.669440304 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.272188831 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301281575 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.590638102 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.314609048 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.270363689 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.594909974 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.639107142 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.379319006 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.274250245 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299704066 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.272274513 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.543942536 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.270378388 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.270927761 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.273712986 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.897456972 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.27441245 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.766940404 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.275359391 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.155582678 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.268198975 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.270438303 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.309762941 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.788465006 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.283328571 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.270387136 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.273577601 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.269842528 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.269147158 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.295945427 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.273022734 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.376836651 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.266775971 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.267453436 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.271861628 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296620479 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.268297446 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.425146031 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.279767764 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.721818493 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.325323779 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.383288577 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.73607893 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.267074238 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.356981892 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.37910736 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.266284192 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.265526799 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.266891504 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.264245281 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.265036594 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.370068881 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.264881656 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.620575393 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.42490228 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.278593303 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.304938556 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.360839951 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.265647856 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.525115617 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.265346856 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.266428109 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.918620019 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.356251411 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.263249032 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.266009197 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.26521894 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.266098683 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.618350686 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.729846891 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.42522369 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.269061436 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.431989898 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.271151966 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.624357249 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.727204138 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.82111124 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.265731189 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.372196116 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.422896002 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.279557677 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.265209071 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.292761781 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.269392198 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.32211181 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.269549371 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.658724352 seconds)
  done (took 370.75389247 seconds)
done (took 603.222236262 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.004533946 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.957995798 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.080788877 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.980449397 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.951049947 seconds)
  done (took 11.180586492 seconds)
done (took 12.3855661 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.433091403 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.433684182 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.322067343 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.437323811 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.300169706 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.447806628 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.415856184 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.289395266 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.36281899 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.33387355 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.361828679 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.310071092 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.296824737 seconds)
  done (took 18.951143983 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.514230962 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.277749881 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.337807253 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.503670568 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.314408384 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.511463566 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.553312098 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.276284232 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420148051 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.283592086 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.282940167 seconds)
  done (took 18.482998739 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.53801311 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.277953628 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.34089011 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.500810877 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.316682115 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.532944757 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.570498628 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.277408662 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425674779 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.284483514 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.282420325 seconds)
  done (took 18.5545246 seconds)
done (took 57.194621644 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.307860041 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.428217614 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.293689324 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.284628198 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.280313038 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.281084691 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.285459398 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.281165712 seconds)
  done (took 11.64934915 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.279618566 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.277446141 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.277988312 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.27736057 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.277215094 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.278635316 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.278905269 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.27722332 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.277827973 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.278147471 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.276446344 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.277793922 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.279146926 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.278396637 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.279225392 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.27774597 seconds)
  done (took 21.655727378 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.281062321 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.277471978 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.280476825 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.277810781 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.278371803 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.27951319 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.27964926 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.277774332 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.278508209 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.278828426 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.279524621 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.278798502 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.278022509 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.278825204 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.278498367 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.279759657 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.278956978 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.279344458 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.283858283 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.279166318 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.278728447 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.278846107 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.278470616 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.278410021 seconds)
  done (took 31.910044143 seconds)
done (took 66.422656219 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.269554978 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.269994765 seconds)
  done (took 5.748216005 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.339953736 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.342679683 seconds)
  done (took 3.892717933 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.281897949 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.279129143 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.280565435 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.279505804 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.27893165 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.280276444 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.279310862 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.278917607 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.280006641 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.279869213 seconds)
  done (took 14.006703858 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.280099199 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.280649424 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.280637357 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.278614168 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.281410088 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.279055121 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.279915519 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.279018034 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.279463085 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.279741472 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.279817835 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.279606808 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.279518117 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.279189379 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.278887361 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.279388642 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.278459052 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.279500576 seconds)
  done (took 24.24123582 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.292708378 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.300338593 seconds)
  done (took 3.801992223 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.420635702 seconds)
    (2/7) benchmarking "second"...
    done (took 1.322400067 seconds)
    (3/7) benchmarking "month"...
    done (took 1.396096082 seconds)
    (4/7) benchmarking "year"...
    done (took 1.386734517 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.321293562 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.300464597 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.323671029 seconds)
  done (took 10.680393696 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.281882605 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.483464847 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.585983888 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.820629205 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.281135186 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.326987727 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.134733848 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.327612137 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.315968446 seconds)
  done (took 14.766370087 seconds)
done (took 78.347541369 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.270065415 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.290486024 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.294844155 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.291055379 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.619873241 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.284281973 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.274964139 seconds)
done (took 16.535626998 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.269474353 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.276012943 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.263767546 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.245919189 seconds)
  done (took 10.264022155 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.197045021 seconds)
    (2/2) benchmarking "read"...
    done (took 1.645845997 seconds)
  done (took 5.053032963 seconds)
done (took 16.526228417 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282219113 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.281896495 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.281727998 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.2806672 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.281776436 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.280297109 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.281223442 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.282662673 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.280454867 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.28054595 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.282045536 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.282366049 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.281301567 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.281428586 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281885519 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281447027 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282001866 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281590355 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.281639444 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281879044 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281685388 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281464253 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.281566804 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.28202106 seconds)
  done (took 31.968414254 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.282011551 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.283351177 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.281702994 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.281899286 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.282204084 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.279910751 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.281282329 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.281165596 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.28189994 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.282373239 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282436235 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.282450037 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.28181774 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.282897459 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280258142 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.283264827 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.283225883 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280202119 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281134682 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.283459107 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.281297138 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280830491 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.282456102 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282018784 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.281825907 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282561813 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.281820848 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.283892963 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282531975 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.283487239 seconds)
  done (took 39.673138502 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.286942919 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.289916974 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.28211658 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.283221759 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.284472767 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.283144283 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.282415307 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.283638264 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.282107405 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.283794747 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.282849558 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.282983771 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.282039425 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.282612555 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.282164702 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.28327808 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.283220339 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.282174276 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.283548326 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.282652981 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.283480812 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.283416094 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.282926027 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.284878397 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.28271762 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.283567684 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.284753465 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.283368524 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.283437554 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.282461185 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.28244676 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.282948133 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.283761502 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.283423597 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.283333794 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.284216475 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.287693625 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.290414141 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.283576713 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.28330907 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.283408246 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.284165771 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.284417509 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.284165233 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.283817024 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.2834369 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.285190399 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.283322394 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.283723171 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.282698447 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.28495977 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.283430052 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.284960097 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.284422985 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.285782459 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.284490514 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.284538817 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.284572033 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.283756851 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.283699721 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.284183841 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.284213651 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.283637908 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.284142154 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.283720579 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.284215827 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.284349544 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.285124252 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.284967375 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.285193488 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.284902453 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.28540553 seconds)
  done (took 93.662011282 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.285060667 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284490277 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284871087 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.285623197 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285566505 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.285609319 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.286827198 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283315912 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284504863 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.286882343 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28446211 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.285628548 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286616671 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286163959 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2851843 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.285542642 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.284979228 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286523335 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.285505847 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.28671948 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285761337 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.28541296 seconds)
  done (took 29.495094373 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285958504 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.287267139 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.287196188 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.286514773 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.288869516 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288506168 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.286248867 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.286815759 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286595997 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286332714 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286271607 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286399052 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288157896 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28712185 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286120557 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.286321934 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280315151 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.283146441 seconds)
  done (took 24.370345669 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.283571207 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.281001288 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.281157845 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.280885761 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.277561621 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.273714535 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273626293 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.274284184 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.273767338 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.274325514 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.273442633 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275039552 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.266008148 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265730095 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265847339 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.26763403 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.267770953 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2662809 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268810626 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26837777 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.258949891 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260764704 seconds)
  done (took 29.188516801 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259916898 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.257508975 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.25874782 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.260230127 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.261576799 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.254005783 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.253164975 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.251506669 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.253010411 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.252089183 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252819129 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.253625111 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.256631146 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.247125686 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.249432602 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247049562 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.247945426 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.248573196 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247890024 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.248705502 seconds)
  done (took 26.250541561 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246657029 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248275198 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247157022 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247940976 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247538944 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.247097577 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246958099 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.24942486 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.245930683 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.245583436 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.244875911 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.246392118 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244393793 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.246892895 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.245822972 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246957372 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236777879 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240356814 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.239592973 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239266545 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.242492436 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240189093 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237391523 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.239053989 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.240785023 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240148526 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240818395 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.240244596 seconds)
  done (took 36.005932863 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236625342 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237226498 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.23905309 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.240415169 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.235207593 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.236148682 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.232850189 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.237870611 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234964934 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.240874449 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.235243705 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.239102531 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.241395384 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.236408061 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.239202309 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.236833013 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238267616 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.237591613 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23649839 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243478712 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.239014989 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240634886 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.241486781 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.239795567 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236448966 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.238306517 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236363 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.241188305 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238791939 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238722053 seconds)
  done (took 38.309005269 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.27877535 seconds)
    (2/2) benchmarking "in"...
    done (took 1.28566707 seconds)
  done (took 3.732154029 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.237983751 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236490261 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.238365533 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.236840579 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.237896141 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236214555 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23843579 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237072267 seconds)
  done (took 11.064874844 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.233194357 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.237467233 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.236819659 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.237487533 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.237297416 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.232210346 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238240634 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.257364141 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.238517859 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.238684273 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.242710795 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.244881612 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.239227465 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237358307 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.23790814 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238939187 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.243510574 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.243272683 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.241878405 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.243334109 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244022015 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241420546 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243577275 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.244282926 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.238913881 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.247497867 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.242659546 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.243705827 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236881097 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.240961485 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.237973362 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.243607991 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.243044685 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.242898966 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.242867342 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.243403247 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24871117 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255892369 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.24281593 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244023438 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243701042 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.242457558 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.240640523 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.239643904 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240301368 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.244684028 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.244773217 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.242967601 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.240483628 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.242267915 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.249513209 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238748054 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.243833721 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241222066 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.241334074 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247256308 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.263846241 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.242422318 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.247220894 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.249331504 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.251357577 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.248222442 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240540702 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.244112281 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24509549 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.253761239 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247682429 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.259645722 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.244787653 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.245455902 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.245132871 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251303683 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.261227582 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.245185847 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245146002 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.24439799 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240601147 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244572292 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248813263 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.257807384 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.245180357 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245113995 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.244983852 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253222315 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.239919857 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.246324572 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.244694289 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.245016777 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.241777222 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250672845 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.259588055 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.244305926 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.239704115 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.240654768 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.240887185 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.246625562 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.238622661 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241716252 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.246421277 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.245573233 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244864346 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241725044 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.247040075 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243079334 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244213663 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.246366937 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.246954535 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239777287 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.247544628 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.244649835 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244914423 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.242018081 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.245743032 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.241868889 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243930721 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.24466974 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.244276545 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.242475583 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.243482871 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.244807397 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245163822 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.256313604 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.247161718 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.244450984 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.24474622 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.253785308 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245375118 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.244066148 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.245606305 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.245949798 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.244455362 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.244224739 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.246509908 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.242109117 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246594834 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240617811 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.245515372 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.245759506 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.246971201 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.241130954 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.242385408 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.242588793 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.242062724 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.243482566 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.246466288 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.240952121 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.245505927 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.234682289 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.236498567 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.237018371 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.239614658 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240433829 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.236690126 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.24276282 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.234436208 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239402053 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.236150664 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.234030532 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238948434 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.238182169 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240333804 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.238978865 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238959897 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.237687085 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.236864472 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.232768679 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.241332764 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.240081747 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.238346207 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.234962395 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.238791416 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.233774961 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.235941857 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.24488308 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.23966807 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.240255622 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.236076545 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237766396 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238863896 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239260316 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.234484664 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.240529725 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.238544687 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.242147125 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.238637154 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240980106 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.239674605 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.236351983 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.233711385 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238549616 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.238602323 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.246848337 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.246018908 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25716757 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.236829126 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.241950302 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.236687428 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.242890358 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.239084662 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.241714081 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.239858083 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239048358 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233038135 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239383835 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.236132183 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.238265022 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.234128022 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.238965533 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.242141597 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.241613643 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238862958 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.236438938 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.235546809 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.239196956 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239167677 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.241144038 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.234878353 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.240129548 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.234769846 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.236087633 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.240649482 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.239955898 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.243443978 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.239001925 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235355277 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238438281 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.235150803 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.233509258 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.241715402 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.236385577 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.234674246 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245385171 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.251149898 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.237581255 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243595214 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.252705591 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.236995166 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.242250061 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.241110579 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.240310455 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.241414034 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.246789301 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.241711641 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.241095789 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.240585497 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235705794 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239871949 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.245951095 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.242365135 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.237531424 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.240799221 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.238518171 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.241822157 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.24108925 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.239349754 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.236778541 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237792649 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243131537 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.245216907 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.238814348 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.241603621 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.240972739 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.240757412 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.239817657 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.252536149 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.239165904 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.236253079 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.241501315 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.239340451 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.246687268 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.236370762 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.241973267 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.238379367 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245733713 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.263443385 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245480522 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.239652095 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.238582917 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244651041 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.240811136 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.242819282 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237352808 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243045 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.23889243 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.240714122 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.242720389 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237756383 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.243280044 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238342241 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.237385093 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.245471014 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.241836178 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.236508366 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.241426862 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.240764401 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.242396819 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.238239896 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.245019141 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.241681346 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240418548 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.237474833 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.239183173 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.245884151 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254914375 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.241295202 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.237698946 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.237750791 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.238773572 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.239910805 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.243083562 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.241660617 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.245901422 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.240989239 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.243171894 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.237912851 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246434004 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.240787703 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.239943124 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.24534588 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.24251532 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.237130219 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.239354992 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.241684091 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245940185 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.259141334 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.240376293 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.246530179 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243262715 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.242520918 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.244114563 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.243414525 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240900081 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.24524901 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249313309 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.25746017 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.24105227 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24213413 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.243969556 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.243952205 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.244413336 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.238857843 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243294941 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.243140977 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.239276484 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.239555605 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.242007577 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.245272376 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.24401874 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.243491891 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.244616786 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.243674645 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250731788 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.252425368 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248038427 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.243966262 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.246715107 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240538379 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245196433 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.258712426 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.240371304 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.242836718 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.242637194 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.24056818 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.239511434 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.239620416 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.245322137 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.239826924 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.248354197 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.242981578 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.240780344 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.240522447 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.244507192 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.239593904 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.246858549 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255850825 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.240073186 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247241256 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.243785573 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.240898848 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.248199823 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.245450583 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.238018327 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.242232144 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241169632 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244973167 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.240405701 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.243600746 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240519459 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243699657 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.245484266 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.244574291 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.244771488 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.242381912 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.240016977 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.242155282 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243433658 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.243069858 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.239442284 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242010029 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.240870794 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.248796669 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.240481348 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.23692295 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246595075 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.248180635 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.239204894 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.239774808 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.245751944 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24122483 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245764598 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.241256808 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24609013 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.246631055 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.241583189 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.23847643 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.244753606 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.241352452 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.242659433 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24623271 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.243082923 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248288349 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.241745378 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.24522812 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.239436847 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.240863427 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.247350738 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.239886229 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241478227 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243540344 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.244428533 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241667813 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.248288701 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.241766596 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246981886 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.239831528 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.238894376 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.249473608 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240998362 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.245557452 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.246098097 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.249614549 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.241547178 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.242844287 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.246159049 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.243630092 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.242615356 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.241774549 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.239033182 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.242173093 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.246387336 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244578885 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.245256595 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.241920944 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.239601069 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249607422 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.258480769 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242033062 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.241088615 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.238306556 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.243726253 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.243308429 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.24925479 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.237916089 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247066483 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.254446525 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247510677 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.242071599 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.243572745 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.242266681 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246696773 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245726196 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.243479829 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.247449319 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.244393004 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242865241 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241498939 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.243217437 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.239191129 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.24239878 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.240850755 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.24713095 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.246344118 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.240797881 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.242704178 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.240548993 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245200143 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244466973 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.24572097 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.24708046 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.242074557 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245379917 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.240222226 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.245186707 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.242068241 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.242488931 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.247593243 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248681398 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243648689 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.246718008 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.249466543 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.249043401 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.242053621 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.243539486 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.245063761 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.241480602 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.242699263 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243599117 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.243354962 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.247913392 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245717929 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.248430205 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.246643054 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251353304 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.258015578 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245142167 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.242421404 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.243455113 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.24707395 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.245862307 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.246740853 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.244177415 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.242347523 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.250144464 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.242565412 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.249448403 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258278845 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.241692915 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.247596485 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.246554276 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.243268413 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.244377546 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.242555508 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.245713077 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.247125981 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.253395373 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244410696 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244729596 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260855564 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.255379247 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.240978074 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.244469718 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24326702 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.247703514 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.243248317 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.24230013 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.240897734 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.2443957 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.246540054 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.241617031 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246216984 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.243029795 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.249160366 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.243057994 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.245609854 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.247715272 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.248340598 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.24780241 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.246494238 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.244150874 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.246872294 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.249925002 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.243600645 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250344077 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.26066768 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.244603801 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.247850348 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.247431147 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.245784114 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.241666882 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250702608 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.250432878 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.246072025 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.244565483 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.243310004 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243790821 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.245929129 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.24254923 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.242446017 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240571627 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.248026449 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.249778122 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251706404 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.244403652 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.245033902 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245666298 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.246404431 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239061727 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247059992 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244679876 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.244629386 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.243853127 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248762811 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.244779409 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.248533905 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.243491061 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.256179062 seconds)
  done (took 742.228027702 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.247732179 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247570356 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.249211225 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.24689678 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248553669 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24203634 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245829074 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.247484371 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.24646647 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.245000313 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.249454327 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246296218 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247086372 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.251377455 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247305628 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248929212 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249283987 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24819671 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248489348 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250420505 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.246240019 seconds)
  done (took 27.378503841 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.250266936 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.246656565 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.246998089 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.245983346 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249701502 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.247819306 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.247722816 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243035946 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.249377046 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24718684 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.246027959 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249227028 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.247984513 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.250599113 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247262804 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24314008 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.247177388 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250093078 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.249382657 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.249765008 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247160413 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.250163273 seconds)
  done (took 28.633060572 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.248327117 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.250549758 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.245584443 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.249915294 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.243276905 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.245745723 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.2476402 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.246718887 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.251419929 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.243766857 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.245730976 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.242710532 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.250728176 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.253186652 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.245426403 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.248083941 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.248259839 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.248849748 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.249218437 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.25011191 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.250564102 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.250560497 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.249876613 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.241825209 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.250329036 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.250308539 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.248107018 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.251536876 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.24265987 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.253224981 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.247603426 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.245978544 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.247440466 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.244642208 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.246631261 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.253000124 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.250925849 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.250496852 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.249518198 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.250957577 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.261811001 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.250085096 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.251194341 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.251409801 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.249250267 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.249164798 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.258407923 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.25121261 seconds)
  done (took 61.130582986 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.865595124 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.87631821 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.871513192 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.869071819 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.871026238 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.874402142 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.876460155 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.869575651 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.872090393 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.86944053 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.880312549 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.869213799 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.869461344 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.871029324 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.874138107 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.885010888 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.87533961 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.873542146 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.874916405 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.882703682 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.878136109 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.874544412 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.874166201 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.878962813 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.880858832 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.87018274 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.870831329 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.874741375 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.888550742 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.87140813 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.873799449 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.876354026 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.874551196 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.880738666 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.870634009 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.871503507 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.88109781 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.880611441 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.873367304 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.870623424 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.881355898 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.874144498 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.881277053 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.871039354 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.877542076 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.876023054 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.883474604 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.874028209 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.876523972 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.875436854 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.87347224 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.880989975 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.877394686 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.872346956 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.875488517 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.88020133 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.875879129 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.876468336 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.872128913 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.879770991 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.88449703 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.879242594 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.877689095 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.877643693 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.877926873 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.877657559 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.872600641 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.876438657 seconds)
  done (took 128.722020041 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.25468024 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.253564605 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254158733 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254067173 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253588191 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.254179225 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.250990363 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.253063263 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.253598428 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.253086468 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2512006 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.253436993 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.252509138 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.254141075 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.252384258 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255348709 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.252911625 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.253413865 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.254019611 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253579538 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.254158451 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.254061805 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.25306967 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.252747863 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.253741 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.255254673 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.253830962 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.255335086 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25495547 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.254812993 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254422106 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.254646565 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.25399737 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.255550231 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.25545146 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.25425462 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.253825408 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254176744 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.254678953 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.254997755 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.25465988 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.255497211 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.254207488 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.25454586 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255304265 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.254264084 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.255657493 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.256251215 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.255012749 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.254541769 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.255007639 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255761405 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25414703 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.254299031 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.255496409 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.251911603 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254019911 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.255549185 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255276475 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.255229209 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.255025881 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.254135393 seconds)
  done (took 78.940140654 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254943651 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.255736662 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.254054233 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.255104161 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.25489494 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.254854928 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.255830768 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.257548711 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.254898789 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.256134175 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257310459 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25544263 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256345762 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255611854 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.255369454 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256926159 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256284285 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.255295657 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255806187 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.256447548 seconds)
  done (took 26.29725611 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.256251311 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.256005699 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.256008352 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.255646171 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.255463864 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.25657387 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.257171278 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255113771 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257137981 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255092602 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.256788454 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.255654678 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256745506 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.255429386 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.25638181 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.256644066 seconds)
  done (took 21.282079451 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.256351041 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.256681222 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.257304672 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.257037433 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.256521426 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.255670947 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.257084911 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.257397072 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.25769038 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.258115172 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.255775219 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.257094693 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.256161619 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.256843073 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.256523985 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.25661255 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.257068944 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.256904902 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.257728562 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.258294964 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.257255725 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.257053513 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.255669384 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.257514345 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.258273254 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.258557294 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.256427593 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.257407927 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.257078767 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.257165273 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.257850075 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.258695006 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.256212427 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.256889065 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.256946101 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.257728446 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.255783181 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.25791672 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.257429878 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.258564069 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.257434463 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.258333664 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.258013582 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.257661691 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.258427366 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.258200455 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.256611985 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.258689682 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.256333048 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.25783181 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.258257278 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.257217076 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.259021372 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.259434613 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.257336496 seconds)
  done (took 70.339421286 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259701416 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.258440238 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.257038294 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.257710072 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.257278495 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.257958026 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.257929353 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.259286497 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257697926 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.258941247 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.258906972 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.259357513 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257365972 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.257974384 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.258414672 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258695346 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.257461871 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.257875509 seconds)
  done (took 23.832386637 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.259496129 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.259131911 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.259286455 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.259883851 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.259645268 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259822635 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259285071 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.259641129 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258921905 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.260192257 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259130938 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.259749945 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260127032 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.259869448 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.260506319 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259487038 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.257948611 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260881763 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.258994028 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260627835 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.260245646 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.258911724 seconds)
  done (took 28.896962555 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.255128396 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.254809307 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.254374612 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.265465627 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.26980679 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.255048543 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.255445429 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.253720783 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.269886442 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.290081635 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.28826387 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.269335055 seconds)
  done (took 16.36641645 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260324187 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26085177 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258858213 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260144563 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258896457 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261329102 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259976675 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2599831 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261810078 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260213956 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260171997 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261145572 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260969736 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260399611 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261427311 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259709421 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261277411 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260154509 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261326131 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259863586 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258069517 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260908088 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261664947 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26095145 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261404214 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26145768 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260775331 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262427531 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261190088 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261151357 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260253403 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260774411 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261177811 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261561436 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261238432 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261376053 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260704672 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26176378 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261391359 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261630731 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.260371011 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261658277 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261856028 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262143236 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261305441 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261690549 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261288234 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262183619 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261642514 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262466196 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262012903 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262276838 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261163553 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261980911 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262360727 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261556775 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261492314 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260888539 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262284322 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261701908 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262707991 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262240216 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262048899 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26324698 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261398772 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262700418 seconds)
  done (took 84.429059164 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262142507 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262399896 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262275274 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263523671 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263305413 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262334628 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263339286 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26293301 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262430498 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262081488 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26237912 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261566876 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261375698 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263063653 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26155575 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26231734 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263257973 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263013285 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263348543 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261741195 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262369938 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263377229 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263011211 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263025669 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262665873 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264311513 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262620927 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263838393 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263201004 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263126959 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262178325 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262965013 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265096532 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.263443495 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263422668 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263733459 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263993792 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263055387 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263805964 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263922585 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263066946 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265140299 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26277373 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263969434 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263411455 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262907649 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26395271 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264936625 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264446889 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262319239 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265387199 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264069986 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26395002 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262879471 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265134023 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264517689 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264077261 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264375197 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264469935 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265443627 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264929403 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264175287 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265029406 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26551206 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263968548 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264624621 seconds)
  done (took 84.578408222 seconds)
done (took 1787.986012595 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.425916302 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.37747208 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.25984394 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.270853032 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.260207832 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.28487752 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.273367663 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.258838316 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.259504394 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.258419652 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.259257751 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.448066744 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.252784255 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.260075961 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.25977008 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.359958025 seconds)
  done (took 25.959945106 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.283250235 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.272693671 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.36594012 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.285361063 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.289833819 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.438942152 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.322582943 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.267927734 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.413000864 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.284039722 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.259375952 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.287938873 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.267047045 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.232583051 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.283393308 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.440492776 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.483439953 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.261770042 seconds)
  done (took 27.929586547 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.64478146 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.266933181 seconds)
  done (took 5.107021141 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.285709346 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.269071618 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.269773862 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.265403309 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.258425118 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.258798228 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.265953974 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.258731445 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.265468414 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.380175413 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.268351015 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.281983293 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.285411131 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.268396964 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.272122727 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.309430982 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.433396211 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.275678142 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.271448242 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.274003333 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.267063257 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.366707414 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.306446483 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.274512899 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.37441407 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.271541508 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.27589299 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.277752444 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.406004579 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.274967025 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.268589363 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.269085566 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.270190441 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.261813081 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.705323394 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.285725025 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.275687791 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.29379873 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.272306772 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.408174448 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.270880292 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.274283476 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.260441244 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.693294062 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.385882924 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.374096707 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.279730054 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.287204668 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.269797028 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.328213954 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.273350787 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.269607517 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.326397514 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.025931481 seconds)
  done (took 81.64156604 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.321916895 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.260888319 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.438996612 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.280377551 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.26113885 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.264385543 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.262658718 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.504514614 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.281184631 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.264655112 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.527523347 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.79492546 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.281688972 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.311759192 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.163994794 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.333038622 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.262707404 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.274281515 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.267685096 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.261597715 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.789503071 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.264189458 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.262756275 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.336455551 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.300834781 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.734507683 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.26317162 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.277025879 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.265167816 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.262476992 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.747140126 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.285107992 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.328509101 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.266048961 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.513909604 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.591958811 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.558004737 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.265391749 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.314248172 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.261614008 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.29027819 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.718797356 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.576784308 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.263778137 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.263091661 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.74570417 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.267362047 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.272804807 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.268718366 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.510296629 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.262584296 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.264762886 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.290935658 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.268202664 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.263668114 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.273451917 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.349936293 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.737147267 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.263162529 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.263833054 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.293105867 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.266175467 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.271097974 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.267759292 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.270174989 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.585468069 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.47539363 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.273268081 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.584902614 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.747544966 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.283435149 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.818698679 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.283543023 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.285490302 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.45543434 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.264528382 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.267905489 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.751536465 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.280680173 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.264638436 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.570037654 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.271539623 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.53382369 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.279949047 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.270322987 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.808871683 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.27765672 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.269123384 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.266154402 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.282495793 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.270023919 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.270369714 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.540923876 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.297807455 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.265634215 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.265228793 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.314714631 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.264144299 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.271545039 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.265914495 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.805087384 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.285947105 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.266359084 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.267590874 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.269944596 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.269649386 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.267581072 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.265492473 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.529707582 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.271300449 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.275638837 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.265783529 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.264793113 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.271611121 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.343142029 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.272437811 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.536155294 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.273731191 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.266444143 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.266771571 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.265543394 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.317697191 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.26715056 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.272032991 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.132433067 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.573408185 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.280147189 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.286598335 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.268053831 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.266220814 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.271461277 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.281628495 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.307565758 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.27130558 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021299592 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.290400096 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.274200792 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.266267742 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.271873498 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.266793697 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.28663296 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.26673408 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.550268445 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.52194165 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.482571823 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.269064328 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.271358643 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.000253061 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.317409117 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.444597414 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.282058751 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.266683295 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.51854339 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.457266269 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.267118764 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.26743405 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.268805666 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.522360507 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.271914016 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.578246064 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.779156246 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.286869805 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.276221632 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.024556551 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.975725233 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.273009822 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.270238374 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.532016512 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.281951062 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.267595574 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.267186502 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.268828455 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.281453453 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.286848738 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.273970693 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.268474931 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.268511313 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.592308964 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.458262189 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.278707876 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.271575773 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.739997238 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.288796922 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.277498478 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.277589233 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.272665856 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.26957312 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.335879608 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.274628539 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.29304357 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.272150059 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.275671667 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.800069375 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.273719689 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.274100567 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.458331548 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.924153257 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.28806235 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.27118374 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.281866781 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.174476832 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.796501962 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.309797911 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.540210775 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.277518548 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.306478005 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.270802733 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.358377111 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.764140546 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.27787941 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.282481373 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.886248277 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.285596 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.68045476 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.269485316 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.27038512 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.837996129 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.287934763 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.269907664 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.268136726 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.285128862 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.56329379 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.274579867 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.280153607 seconds)
  done (took 482.530478425 seconds)
done (took 624.358979404 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.270754943 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.274026735 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.266356098 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.276677667 seconds)
  done (took 10.293467675 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.286170523 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.2748428 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.282256725 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.275826934 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.283117574 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.276499962 seconds)
  done (took 8.879642157 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.26975137 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.275814496 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.274648983 seconds)
  done (took 8.016160411 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.456386927 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.297525089 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.561820615 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.300547017 seconds)
  done (took 8.82206176 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.28422736 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.281283061 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.281759517 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.282410907 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.285316465 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.28819968 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.282485168 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.284700373 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.284048759 seconds)
  done (took 12.76091344 seconds)
done (took 49.977108572 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.318572579 seconds)
    (2/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.568863494 seconds)
    (3/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.314521763 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.361731362 seconds)
    (5/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.26100245 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.350501102 seconds)
    (7/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.264051267 seconds)
    (8/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.41437514 seconds)
    (9/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.477685819 seconds)
    (10/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.602697559 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.309749227 seconds)
    (12/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.270379192 seconds)
    (13/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.470518574 seconds)
    (14/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.35505252 seconds)
    (15/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.33989976 seconds)
    (16/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.449639321 seconds)
    (17/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.41306586 seconds)
    (18/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.46540375 seconds)
    (19/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.929000909 seconds)
    (20/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.302502069 seconds)
    (21/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.29262074 seconds)
    (22/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.312081179 seconds)
    (23/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.317111233 seconds)
    (24/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.117121114 seconds)
    (25/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.351573169 seconds)
    (26/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.314570647 seconds)
    (27/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.350995885 seconds)
    (28/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.27832609 seconds)
    (29/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.314241695 seconds)
    (30/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.355782034 seconds)
    (31/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.046118892 seconds)
    (32/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.085917623 seconds)
    (33/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.401967259 seconds)
    (34/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.416740403 seconds)
    (35/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.290717663 seconds)
    (36/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.411098904 seconds)
    (37/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.453341799 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.486653338 seconds)
    (39/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.313140247 seconds)
    (40/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.305073014 seconds)
    (41/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.413735378 seconds)
    (42/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.269621235 seconds)
    (43/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.323807597 seconds)
    (44/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.463770971 seconds)
    (45/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.972475779 seconds)
    (46/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.299865415 seconds)
    (47/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.380712793 seconds)
    (48/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.93216839 seconds)
    (49/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.932143067 seconds)
    (50/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.303466814 seconds)
    (51/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.364577586 seconds)
    (52/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.539770438 seconds)
    (53/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.450375277 seconds)
    (54/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.06891068 seconds)
    (55/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.423087885 seconds)
    (56/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.4183155 seconds)
    (57/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.473614324 seconds)
    (58/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.986896303 seconds)
    (59/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.315596703 seconds)
    (60/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.319372455 seconds)
    (61/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.351643519 seconds)
    (62/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.368469051 seconds)
    (63/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.273728692 seconds)
    (64/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.384737199 seconds)
    (65/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.324162091 seconds)
    (66/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.354968664 seconds)
    (67/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.352257757 seconds)
    (68/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.26404406 seconds)
    (69/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.330600265 seconds)
    (70/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.307326377 seconds)
    (71/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.379594959 seconds)
    (72/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.163703787 seconds)
    (73/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.476687065 seconds)
    (74/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.422144531 seconds)
    (75/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.314981799 seconds)
    (76/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.273650391 seconds)
    (77/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.065645415 seconds)
    (78/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.294858698 seconds)
    (79/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.433563064 seconds)
    (80/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.516925272 seconds)
    (81/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.38338978 seconds)
    (82/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.352875418 seconds)
    (83/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.379359456 seconds)
    (84/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.269337723 seconds)
    (85/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.388132131 seconds)
    (86/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.017931914 seconds)
    (87/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.294538044 seconds)
    (88/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.095578003 seconds)
    (89/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.365237743 seconds)
    (90/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.364111188 seconds)
    (91/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.368400442 seconds)
    (92/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.357945524 seconds)
    (93/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.294288421 seconds)
    (94/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.435715151 seconds)
    (95/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.355822359 seconds)
    (96/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.277100316 seconds)
    (97/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.387876352 seconds)
    (98/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.267458292 seconds)
    (99/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.349163501 seconds)
    (100/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.392593449 seconds)
    (101/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.308839022 seconds)
    (102/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.31131128 seconds)
    (103/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.306499772 seconds)
    (104/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.5035498 seconds)
    (105/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.966725225 seconds)
    (106/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.312451785 seconds)
    (107/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.277561576 seconds)
    (108/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.282641779 seconds)
    (109/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.409120827 seconds)
    (110/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.171667925 seconds)
    (111/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.2736681 seconds)
    (112/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.187749296 seconds)
    (113/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.337948769 seconds)
    (114/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.05890416 seconds)
    (115/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.287536627 seconds)
    (116/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.433376598 seconds)
    (117/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.442671591 seconds)
    (118/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.268468839 seconds)
    (119/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.374182056 seconds)
    (120/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.304763247 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.408893576 seconds)
    (122/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.983305305 seconds)
    (123/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.415853679 seconds)
    (124/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.315554101 seconds)
    (125/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.283710601 seconds)
    (126/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.329840434 seconds)
    (127/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.325482129 seconds)
    (128/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.353850224 seconds)
    (129/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.339080447 seconds)
    (130/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.370750021 seconds)
    (131/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.308637421 seconds)
    (132/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.340344446 seconds)
    (133/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.413871658 seconds)
    (134/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.012584285 seconds)
    (135/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.287923614 seconds)
    (136/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.366379935 seconds)
    (137/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.317319339 seconds)
    (138/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.276010737 seconds)
    (139/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.39165294 seconds)
    (140/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.462370042 seconds)
    (141/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.312622993 seconds)
    (142/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.267440132 seconds)
    (143/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.443244433 seconds)
    (144/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.354304379 seconds)
    (145/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.974567471 seconds)
    (146/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.376832346 seconds)
    (147/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.305699419 seconds)
    (148/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.334722963 seconds)
    (149/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.309560564 seconds)
    (150/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.932817747 seconds)
    (151/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.017702333 seconds)
    (152/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.326786244 seconds)
    (153/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.364246458 seconds)
    (154/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.385480814 seconds)
    (155/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.463699354 seconds)
    (156/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.468643065 seconds)
    (157/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.421093476 seconds)
    (158/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.336907669 seconds)
    (159/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.428546183 seconds)
    (160/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.367603344 seconds)
    (161/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.416666 seconds)
    (162/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.314305752 seconds)
    (163/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.46635681 seconds)
    (164/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.406307103 seconds)
    (165/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.373061736 seconds)
    (166/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.442072594 seconds)
    (167/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.314821552 seconds)
    (168/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.375264289 seconds)
    (169/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.44224745 seconds)
    (170/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.436348696 seconds)
    (171/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.296408718 seconds)
    (172/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.331546191 seconds)
    (173/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.328344112 seconds)
    (174/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.605530888 seconds)
    (175/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.487455739 seconds)
    (176/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.360332699 seconds)
    (177/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.326975536 seconds)
    (178/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.356184703 seconds)
    (179/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.332264708 seconds)
    (180/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.446204937 seconds)
    (181/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.473418979 seconds)
    (182/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.39923355 seconds)
    (183/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.364420847 seconds)
    (184/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.017071719 seconds)
    (185/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.387990818 seconds)
    (186/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.296890453 seconds)
    (187/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.287681445 seconds)
    (188/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.429653693 seconds)
    (189/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.311917617 seconds)
    (190/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.416876453 seconds)
    (191/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.438681438 seconds)
    (192/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.432010958 seconds)
    (193/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.478421413 seconds)
    (194/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.411329982 seconds)
    (195/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.403410791 seconds)
    (196/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.370059688 seconds)
    (197/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.346143621 seconds)
    (198/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.966409083 seconds)
    (199/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.407701497 seconds)
    (200/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.341109789 seconds)
    (201/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.42705199 seconds)
    (202/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.285770221 seconds)
    (203/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.403378755 seconds)
    (204/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.321419611 seconds)
    (205/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.316035606 seconds)
    (206/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.063266624 seconds)
    (207/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.408552506 seconds)
    (208/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.509262695 seconds)
    (209/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.418835487 seconds)
    (210/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.276260832 seconds)
    (211/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.420193411 seconds)
    (212/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.301140193 seconds)
    (213/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.281733496 seconds)
    (214/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.388617581 seconds)
    (215/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.272487085 seconds)
    (216/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.405364283 seconds)
    (217/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.342977143 seconds)
    (218/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.316858568 seconds)
    (219/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.426789181 seconds)
    (220/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.511122676 seconds)
    (221/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.285021404 seconds)
    (222/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.486628985 seconds)
    (223/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.021356493 seconds)
    (224/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.489789622 seconds)
  done (took 358.916271124 seconds)
done (took 360.120398071 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.337660636 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.470224315 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.287608772 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.287584942 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.332426155 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.223915285 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.332088632 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.296380477 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.298596776 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.298180311 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.22395884 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.301013912 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.301451353 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.328171264 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.401947076 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.295587448 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.289126841 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.295392759 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.335892937 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.353824742 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.332995379 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.333061531 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.307905323 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.289270618 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.33901174 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.336569498 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.295659992 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.290142363 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.295779259 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.337028329 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.290224087 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.296027827 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.34661212 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.344765488 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.333084865 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.295015657 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.332945499 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.468933858 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.332905119 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.329361253 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.301515098 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.346335448 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.30159794 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.301831901 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.347695228 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.309485589 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.339330784 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.415783505 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.291687971 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.218039138 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.339188389 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.357515249 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.302444689 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.216850245 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.282268239 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.413366936 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.294991162 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.337525054 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.29873143 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.334440196 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.402887756 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.338344623 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.35652251 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.337086225 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.297250548 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.304985732 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.297733382 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.358284679 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.298642706 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.335678578 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.333747625 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.300913854 seconds)
done (took 104.347265108 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.421190643 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.286678441 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.437268385 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.296491282 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.455800278 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.436304804 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.299499579 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.297982189 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.293969738 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.130259561 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.297121233 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.297316327 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.289361022 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.294864986 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.422216481 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.29754375 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.293397818 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.025946439 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.295845358 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.435329324 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.288687116 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.296612559 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.294312936 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.111149268 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.290096598 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.287582792 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.434457887 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.294629501 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.005256572 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.286192206 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.288965485 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.00719827 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.432847737 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.315677896 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.30559499 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.306700068 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.451548581 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.309555464 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.427444425 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.426206457 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.43670182 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.335954844 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.285793529 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.292952643 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.296185156 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.298110155 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.295498221 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.323569201 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.292764865 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.298027753 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.024976188 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.305655343 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.30424643 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.297947217 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.296223331 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.316592221 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.296029021 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.298903157 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.433740629 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.298590701 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.418557123 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.118912395 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.132035274 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.297768325 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.291726045 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.297729172 seconds)
  done (took 105.9655346 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.36093034 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.369368976 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.398314951 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.292935452 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.344499464 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.401875572 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.289512407 seconds)
  done (took 10.674008266 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.297142964 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.294837848 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.347087826 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.34619857 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.293793046 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.445804214 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.300079265 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.303131987 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.299318512 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.344933188 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.297680934 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.297689114 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.305220721 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.288603309 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.344489224 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.308036822 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.407136294 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.292972584 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.294504912 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.44841613 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.298002021 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.309114164 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.346438825 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.304660338 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.297580841 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.29621075 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.081763045 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.297749692 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.297836293 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.297638522 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.297070379 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.345670767 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.298814242 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.29222749 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.297331973 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.430201103 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.295030688 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.29746804 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.297039643 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.293612653 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.298072128 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.297269377 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.297453048 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.296086197 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.299042744 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.317201353 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.299027939 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.298739892 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.299810013 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.300674094 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.345999371 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.298393688 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.297620203 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.296720576 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.349756417 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.308198439 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.299155773 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.29680469 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.299478173 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.298450308 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.450241331 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.346552663 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.295607248 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.345768359 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.29842705 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.298259523 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.298861135 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.298661673 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.38540208 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.299381717 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.34892231 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.298409108 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.510217303 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.317615122 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.30132554 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.295174907 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.297651504 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.299107198 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.290636059 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.302125871 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.300233626 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.295197445 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.301588143 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.299518774 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.298439867 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.472841637 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.419995008 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.296826525 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.309323133 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.300156393 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.300442363 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.347695423 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.300232485 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.299958151 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358402485 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.410360394 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.347925532 seconds)
  done (took 134.084679561 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.307334096 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.306564213 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.300406709 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.322915991 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.298299381 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.29201752 seconds)
  done (took 9.053614614 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.298434273 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.306572 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.301604658 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.300385987 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.29873984 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.303609143 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.303054031 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.299430875 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.302994368 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.299571887 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.302113885 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.301788189 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.306320072 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.302864196 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.298427045 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.298870635 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.301379867 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.301444419 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.300553661 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302616118 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.297502634 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.300471253 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.300971606 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.297566191 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.305407834 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.303084263 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.317433807 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.301574227 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.300689018 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.304717794 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.302922974 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.304954065 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.30090091 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.299704964 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.305542496 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.298323739 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.305293123 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.303190594 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.302519058 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.300794804 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.302947507 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.302989268 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.304012336 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.303451127 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.297886192 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.301969033 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.306841909 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.323963374 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.302586704 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.305335929 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.306784225 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.305055912 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.303732407 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.303916066 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.304230036 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.31704621 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.307803062 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.306093426 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.302180542 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.300055985 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.30625339 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.304301653 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.300344829 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.304340215 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.303335813 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.303702121 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.301040651 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.306242393 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.305205222 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.305552108 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.303794196 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.301329533 seconds)
  done (took 96.066620736 seconds)
done (took 357.061103546 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.298610374 seconds)
  done (took 3.522913236 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.552111531 seconds)
  done (took 3.778481542 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.43370609 seconds)
  done (took 20.919550113 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.317921858 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.323467407 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.315975156 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.296727748 seconds)
  done (took 10.47866265 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.560144005 seconds)
  done (took 3.783959805 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.299634355 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.306685605 seconds)
  done (took 5.83348974 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.477353494 seconds)
  done (took 3.699453177 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.758389597 seconds)
  done (took 3.984203 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.301284118 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.312063859 seconds)
  done (took 5.846503185 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.291729578 seconds)
  done (took 3.516344082 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.141512308 seconds)
  done (took 37.369838567 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.310563574 seconds)
  done (took 3.538915978 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.320133054 seconds)
  done (took 3.545572492 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.541479703 seconds)
  done (took 5.766046301 seconds)
done (took 116.809089383 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.295200519 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.299731691 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.293699866 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.299899869 seconds)
  done (took 10.407670971 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.356372203 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.356710776 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.362566366 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.355198534 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.357243305 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.357814002 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.330694191 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.329778949 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.356222613 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.357305838 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.356859896 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.355061597 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.356795699 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.32996538 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.355492076 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.356924854 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.357223174 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.363177999 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.331026326 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.354954665 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.305991436 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.355243299 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.355872812 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.306010738 seconds)
  done (took 33.583710806 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.795010899 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.37263031 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.456343844 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.353405619 seconds)
  done (took 7.202519512 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.384372135 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.384504392 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.407141481 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.435576059 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.44647894 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.395329762 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.330782686 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.327075785 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.312510673 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.383485166 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.434189829 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.375413467 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.46031175 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.304646014 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.512702773 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.304421268 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.304944714 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.383665845 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.435090414 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.447787682 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.305964304 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.383450294 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.383822832 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.384837401 seconds)
  done (took 34.457173638 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.317633723 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.322251442 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.308378464 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.323127107 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.308690824 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.309645016 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.308571842 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.314487457 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.307568993 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.30719353 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.308871574 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.322168476 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.310995943 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.308397146 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.31702912 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.309180316 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.316235069 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.311977926 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.309473253 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.313255616 seconds)
  done (took 27.481062432 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.296747069 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.296349494 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.648278786 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.552800184 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.297025379 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.302096977 seconds)
  done (took 13.622804196 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.366009078 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.496610579 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.309145212 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.607573543 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.692567466 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.308278684 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.303716232 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.527073069 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.798857404 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.767077933 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.362421761 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.366699738 seconds)
  done (took 19.131824072 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.304097309 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.304181378 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.30629087 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.317549291 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.350821691 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.306925306 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.309956241 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.298886648 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.357879095 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.356003329 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.308061055 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.350104306 seconds)
  done (took 21.101137527 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396796778 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301579748 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301457908 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376466126 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322753852 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.17488134 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.359964064 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.983368271 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.308727167 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578212869 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306841527 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404900345 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.556981864 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302184713 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.324709383 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.233132143 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53667631 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773409942 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310352995 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303694016 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33634123 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312779255 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310227082 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.511906766 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.31090365 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303265033 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.568125683 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304504033 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557469687 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.323937667 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31531637 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304025251 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579593564 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918620087 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407817545 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489291405 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309257835 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310729297 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.302981418 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.326171439 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313769434 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306215578 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310742307 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304952047 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.303967201 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306921028 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999797024 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.31998216 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.30531853 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.305249194 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533415612 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407722519 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.310336728 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.30414864 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347024991 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311571417 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.312463888 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42762177 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907542862 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304681603 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321999574 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.31056499 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312314971 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312628982 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867228646 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.318973903 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.310883673 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.311636944 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306012346 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.305271742 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.33050796 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306973082 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.330864188 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306407641 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950209832 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315740678 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30780295 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836299962 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313144155 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.312397695 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.536887296 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305046865 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306516648 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.304516801 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307806746 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981973242 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320996588 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.30466639 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355140199 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.009611526 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.497186274 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332430428 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3359085 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.529869278 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.291778882 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306149532 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.314578826 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30791458 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327989831 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.990661364 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310817992 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.312754151 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564171853 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.518077891 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307726805 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.240665487 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.749660762 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313707934 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.331772542 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.316771294 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.497382738 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.835070364 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331355027 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310283313 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330106678 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.306820504 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027490433 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316622023 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.416433525 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.306789193 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.561989167 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.079974074 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316879275 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375731648 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311066305 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.308599436 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311665749 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316606051 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307282413 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.484162888 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340162129 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.323568495 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.308048579 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308600577 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.319460498 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318568186 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.309832997 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.532000751 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309518497 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591840304 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307739365 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30805954 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307593073 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.531468555 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.307590593 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.65050002 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572821351 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317842332 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.324199999 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.326149603 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326480287 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411263587 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329860895 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.32041177 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.570258382 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.31313879 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.313545817 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30747475 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.310590492 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313270833 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.316740906 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307270894 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855103895 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292460314 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314734259 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.231274109 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.325518018 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37804073 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.319567049 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.49515594 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.318078163 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312699624 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.321605959 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.31999184 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541139653 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.32090642 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.309087624 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396607483 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.742459947 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.8372663 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332291155 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.310469431 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.313601732 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.317543885 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31668922 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315961339 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.313914067 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497494474 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.334124273 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309953698 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.845877468 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317925533 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309120628 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.324114847 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.323079415 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.318180234 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313040067 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.316337056 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322261103 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319472025 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.329638964 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454891857 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.33323949 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315290021 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.830353277 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.324090204 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313749463 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.312393838 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348830427 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.313355606 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074468576 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573602006 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311336497 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557906261 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.31881218 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.330531962 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.311939452 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326374415 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318153144 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.343133514 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327882265 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.323864768 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313690605 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319977272 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889295361 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986595511 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795038473 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320063375 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.317807624 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.317653858 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.007274352 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317820707 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312197883 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.531076594 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.008039696 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322294589 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.747956192 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.317423603 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.996818879 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546719248 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550292002 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311756408 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.330377907 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.54237426 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.532355693 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346809536 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315143432 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316525117 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.299026541 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817828605 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318469141 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399248613 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009247133 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328127701 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313831455 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.323146101 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.320584502 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.678168761 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319319989 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315839358 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.316961402 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323603875 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073237553 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.321014012 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316844519 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876833097 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335395158 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.753982236 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318210314 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.499859433 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.334497579 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.321687922 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.316077949 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.342603048 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.575808304 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546124546 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320134608 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328404362 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803086009 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.192914035 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.325988437 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316335778 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035908356 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328222737 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57478581 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.324084715 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.320056371 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321721782 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.314976002 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315601918 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.315894535 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322481388 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290427083 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779930563 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.319781989 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323725949 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322817355 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319048362 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.570517428 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.332667802 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.843433093 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548463633 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325308192 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344778478 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.322529931 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312682061 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.310159342 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.31779488 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320661274 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338316265 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.543765025 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.322351446 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.307361002 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340807715 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.550649043 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.316400837 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322512739 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53673721 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.322540458 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.337395114 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982663676 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354446973 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.320162864 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32403381 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.315409783 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365355795 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389331228 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50094434 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.334227719 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.329298191 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.67529925 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326302603 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324594345 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.332700401 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412432925 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321022174 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.325769581 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.098332756 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847405077 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988188237 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.855378554 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556090134 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.323540673 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327280435 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320147863 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482117023 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319000982 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592549373 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316818795 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.311538399 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343391005 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318597975 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319683033 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534629911 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593865905 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318954127 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328098417 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322713397 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.316884233 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.329075816 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.528938286 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788285552 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859629373 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325898827 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.322954551 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.015014843 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599290432 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316986532 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316767674 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315876049 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.339087977 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.324181003 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.334607 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3288115 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467514751 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548421221 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942891469 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.335398897 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.348182418 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.840413621 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32070297 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.579346511 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318593764 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.526350936 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852682338 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.959200006 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590013753 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390333985 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.506921642 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.327335162 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485034036 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.327898046 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326965461 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322667943 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32023235 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.319517553 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.332287371 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85376242 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590788151 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.323625992 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.327194809 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356319517 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.331483758 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.545430927 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006794381 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.54899024 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.3307482 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326130804 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322176232 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855683112 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557499199 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328602619 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.327693943 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536907627 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.328747671 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345493417 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.839337456 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.321501168 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862522891 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.300712391 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344262548 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3326063 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.961000548 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857079781 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.333200616 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799723635 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327499246 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32436413 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61674207 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.333127959 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333149058 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607137979 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.326852472 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334534483 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51173434 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.855364132 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.016276581 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.342878243 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332837971 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.33012289 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322659828 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392716456 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345580354 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323637059 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.69159742 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346952599 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320371242 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335417529 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.329184643 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337508484 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.323714071 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326271795 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.329449141 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.331467829 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.32982184 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340311689 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449668833 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861172523 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329313515 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.002040801 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.644692201 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.580121196 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333080125 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.31451319 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.331404752 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324371588 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324406879 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323042446 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.337089084 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859211471 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.341818841 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.338295609 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.32967932 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.323474254 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531869443 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328995844 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.513959289 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342078492 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347772128 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.310269564 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323012564 seconds)
  done (took 944.610233079 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.349217099 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.334773275 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.347679082 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.387375536 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.32204484 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.319455567 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.395001785 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.331519465 seconds)
  done (took 20.033017398 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.318400214 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.336901162 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.331927569 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.335396098 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.33241095 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.765703306 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.338650844 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.324869936 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.345157104 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.334612418 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.330520628 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.332546939 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.334216777 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.324298884 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.320851712 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.327354122 seconds)
  done (took 31.98581971 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.065012924 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.36750257 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.739730158 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.326241533 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.326240471 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.321907505 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.4222633 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.334122131 seconds)
  done (took 25.155646695 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.335819626 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.329717646 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.330387755 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.333214778 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.331318661 seconds)
  done (took 7.916557263 seconds)
done (took 1197.91324291 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.330293361 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.336590785 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.330219589 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.33309227 seconds)
  done (took 6.585433 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.313386308 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.312461647 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.313295058 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.325749349 seconds)
  done (took 9.516293275 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.94361716 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.901808495 seconds)
  done (took 5.097795561 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.867108504 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.85371612 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.848332554 seconds)
  done (took 6.828111013 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.611465195 seconds)
  done (took 2.870591149 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.269566128 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.332511055 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.059482031 seconds)
  done (took 7.921744665 seconds)
done (took 40.075571285 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.333139958 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.664420341 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.52684267 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.322352392 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.478204095 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.480221711 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.059773463 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.326734245 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.32089358 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.325204276 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.318698977 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.478743481 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.045206493 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.659180949 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.038821738 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.659388325 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.481417446 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.329917514 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.327560869 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.330844377 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.063498727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.335968166 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.333329274 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.328386269 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.490063316 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.466179524 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.321393435 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.658714078 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.322625275 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.323924332 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.466613311 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.322749626 seconds)
  done (took 81.199671657 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.331829768 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.324773256 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.341016883 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.323550641 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.326901664 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.325329742 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.325799895 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.325396484 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.333743421 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.326947589 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.32310193 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.340982169 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.326820752 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.320605445 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.322137858 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.321210357 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.337287726 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.330922221 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.320747418 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.320928221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.339388903 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.32734328 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.339557365 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.323959915 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.341118759 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.326226865 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.321711501 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.326078028 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.33409649 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.339461775 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.335480799 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.327539888 seconds)
  done (took 75.785841063 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.321904452 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.326325307 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.322262979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.325667065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.338406383 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.344622036 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.325852809 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.327250774 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.320373063 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.327154733 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.352219376 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.325278138 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.321101329 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.321016227 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.326962585 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.324442266 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.320786546 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.333101344 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.32291439 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.332823549 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.321420757 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.324313284 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.321509887 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.328880197 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.324759075 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.345246502 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.32059659 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.325528106 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.341056311 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.326584911 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.326268367 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.327218758 seconds)
  done (took 75.750245657 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.612530784 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.340260845 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.340215714 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.334542791 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.347976703 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.347152966 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.33791132 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.618475084 seconds)
  done (took 14.536751663 seconds)
done (took 248.533888424 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.329864559 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.821360673 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.365732742 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.329902352 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.361257455 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.359105293 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.53474642 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.362757194 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.538971856 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.351804052 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.347795602 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.329360317 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.046609169 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.480608701 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.151424296 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.266475465 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.120010412 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.327102736 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.884397445 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.591765448 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.369680661 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.330769768 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.146654902 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.129612517 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.330970573 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.407730453 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.428149374 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.547433969 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.481466818 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.408981637 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.817258186 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.338002889 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.344795455 seconds)
  done (took 62.241326656 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.334897531 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.454542057 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.339027312 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.341007465 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.462529893 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.340101823 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.332324588 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.335283877 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.339134088 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.334249766 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.33872934 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.339516856 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.340927182 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.38823668 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.464946132 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.328948929 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.331691589 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.455897776 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.333943428 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.334565432 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.388906137 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.33699637 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.343658579 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.386626675 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.340130175 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.339727583 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.45998275 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.339763946 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.344162906 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.455689084 seconds)
  done (took 42.265192773 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.340455214 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.902392825 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.023410571 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.346465968 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.333962276 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.34123748 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.577304303 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.34756521 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.340752672 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.335867838 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.791489548 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.344748485 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.372389429 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.04456883 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.339936632 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.341654522 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.340203148 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.342444842 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.899029381 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.351312765 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.599723896 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.343074304 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.578311142 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.348564242 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.358491778 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.337135895 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.342442378 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.125610135 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.355812951 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.785648401 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.981751512 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.5833142 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.059481995 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.053334121 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.987579477 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.350013246 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.343853822 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.795143196 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.342698006 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.339720584 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.580820519 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.34210086 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.039478027 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.031239859 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.361838423 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.342170018 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.146197525 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.809859989 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.543631137 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.344094678 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.065865004 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.337733085 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.344895569 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.339915933 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.547293332 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.345410707 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.33825807 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.140551282 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.350264699 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.583138041 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.343067577 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.335619527 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.8964459 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.337785391 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.906059612 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.344278726 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.350205685 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.362272431 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.043270704 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.347067816 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.048696764 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.355623705 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.34323288 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.787132484 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.903710621 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.206751647 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.338495061 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.905074739 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.092860457 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.596232097 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.349474064 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.098863007 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.604304022 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.348809585 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.346571042 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.344155032 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.348204956 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.422415611 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.580192192 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.976125855 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.041192414 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.177671286 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.602966534 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.352309597 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.33743053 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.16191446 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.358330241 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.346816163 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.036059718 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.047049064 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.361471359 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.350438849 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.058181372 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.36107437 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.588794803 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.349036143 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.053003555 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.344195224 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.425766034 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.348037456 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.349692686 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.367826272 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.58402461 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.350701336 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.346645204 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.029613859 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.820747268 seconds)
  done (took 187.088001657 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.33241194 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.346738771 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.338160279 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.35043677 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.329727683 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.342479265 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.335433016 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.339135073 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.342442789 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.334732356 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.331502117 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.345344857 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.344454202 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.335939054 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.335036693 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.350161461 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.336510061 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.334019509 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.357211137 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.334208508 seconds)
  done (took 44.05740033 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.344618696 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.821873834 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.785237016 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.346552588 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.34633147 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.342923768 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.392302666 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.344259213 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.34686499 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.597320682 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.49163056 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.342774323 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.344759575 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.348783658 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.783132841 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.336865809 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.59949227 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.827341981 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.352008803 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.825517374 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.338087458 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.346405656 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.343316058 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.823275946 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.610386646 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.581492722 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.395146617 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.825448847 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.353726289 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.349172103 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.824693445 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.350975331 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.3452369 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.831947692 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.371197431 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.363026772 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.351229007 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.393040774 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.387589044 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.604295542 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.907728566 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.597152881 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.362139565 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.514817772 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.354256411 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.334430075 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.836268664 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.36408635 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.332817553 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.348313897 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.34940681 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.801339805 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.367150123 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.796405574 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.368987802 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.347670707 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.828444136 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.801770875 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.809081672 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.487041324 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.346250799 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.584131801 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.352067447 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.836192245 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.367907351 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.348837636 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.347443418 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.49142548 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.831921388 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.584439515 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.605203445 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.609613139 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.349828733 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.398858824 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.365553193 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.67424996 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.401307874 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.728426318 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.60786137 seconds)
  done (took 120.721918869 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.588331875 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.453147949 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.707030963 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.912795946 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.345222725 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.470323029 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.449869712 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.580959978 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.344714455 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.419863019 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.911724861 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.453281782 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.05101086 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.421645697 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.439881532 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.475506589 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.700137077 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.263412076 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.001202229 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.883895825 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.339925123 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.452641911 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.868975042 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.546088551 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.325606341 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.929247346 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.217961558 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.95355354 seconds)
  done (took 51.780821378 seconds)
done (took 509.416487051 seconds)
SAVING RESULT...
DONE!
