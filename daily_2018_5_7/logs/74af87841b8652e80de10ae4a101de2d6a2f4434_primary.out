cset: moving following pidspec: 22103
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.536688685 seconds)
loading group "string"... done (took 0.525215824 seconds)
loading group "linalg"... done (took 9.095239208 seconds)
loading group "parallel"... done (took 0.181262001 seconds)
loading group "find"... done (took 1.319809664 seconds)
loading group "tuple"... done (took 1.960044293 seconds)
loading group "dates"... done (took 1.390433849 seconds)
loading group "micro"... done (took 0.201123545 seconds)
loading group "io"... done (took 0.518106202 seconds)
loading group "scalar"... done (took 53.980027435 seconds)
loading group "sparse"... done (took 15.372860422 seconds)
loading group "broadcast"... done (took 1.437154022 seconds)
loading group "union"... done (took 11.328202984 seconds)
loading group "simd"... done (took 3.43361942 seconds)
loading group "random"... done (took 12.777158689 seconds)
loading group "problem"... done (took 2.351008072 seconds)
loading group "array"... done (took 26.985654321 seconds)
loading group "misc"... done (took 1.229504138 seconds)
loading group "sort"... done (took 4.115565355 seconds)
loading group "collection"... done (took 20.88828538 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.630355888 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13319523 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.274111062 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.291889637 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.250183721 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.17284239 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.148094912 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.274922411 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.700341813 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.212644523 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139192793 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.507262126 seconds)
done (took 6.565311263 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.259271223 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.182023656 seconds)
    (2/2) benchmarking "String"...
    done (took 0.174244542 seconds)
  done (took 1.131434438 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079334967 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156308651 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112088584 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097999079 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098413063 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.114079465 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096351628 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113106487 seconds)
  done (took 1.564762778 seconds)
done (took 3.813540887 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.518748737 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.886871824 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.521766492 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.165567501 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.305016067 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.303170238 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.322181113 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.206522935 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.108703265 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.093222321 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.179962233 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.388923196 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.440779223 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.941989946 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.0954405 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.10332487 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.140188492 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.773790749 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081545901 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.133200163 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.507222971 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.200385928 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.100779481 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.127902229 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.189436371 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140341517 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.168123795 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105515808 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664211155 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134430711 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.187867908 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.102364656 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.16598403 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.199599656 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.216950139 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.096702236 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.690520798 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.204472571 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.090592447 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102725071 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670669459 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.122044399 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.191053804 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106391642 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.096452428 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.189484194 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.094316925 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079540752 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.121799706 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.088680309 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.17443786 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.484308094 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.112209232 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.18013994 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095141994 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.691875891 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.105286348 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.284086944 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128391087 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096604657 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092616049 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089960239 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.169598257 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095567373 seconds)
  done (took 20.479931097 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.14921985 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.167537825 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.080079818 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.160220407 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.126192038 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081384734 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.104157221 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080148526 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128974567 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.226060432 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140126577 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.156871487 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094572367 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091227157 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.149529948 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23378619 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107418479 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125786366 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.092191825 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.109044446 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126144472 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096330647 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110036028 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094844977 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.175708888 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206962165 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109068471 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125563903 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095139397 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101101791 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146594746 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.152297744 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094431702 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.092314172 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.19540901 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108021859 seconds)
  done (took 5.429856374 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.209481219 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.130532295 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.223536969 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.170362569 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152553999 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.177209144 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.158651403 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.291368033 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.245906601 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164269667 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133600979 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107733979 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101538217 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085334059 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.081899668 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.513320351 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.142160224 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.179622735 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.141042261 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112513649 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086644417 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.390473807 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087882216 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.103507541 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091648418 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068864205 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.206407295 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108948738 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.08655648 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10874109 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.092103302 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138037742 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200201793 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.118327816 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.1412788 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088231594 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08157075 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.220652733 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113183835 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.191983202 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080500713 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.109196094 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138430428 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117072186 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.105836712 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.114017027 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225065061 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085347685 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.106457182 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.074706926 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.088166817 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198555016 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.126469485 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101798596 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.295226239 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10132171 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087270866 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.104760496 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.086533955 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.268542154 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.119323882 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085339773 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.102231679 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091966164 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081516093 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.497512244 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11129222 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.668925078 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090287076 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.16816925 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085134906 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103567498 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096295231 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089398488 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107852643 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10746234 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084885445 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100363208 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086204562 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082436896 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.105248071 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.099139698 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089376112 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.102028473 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152018598 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.105113295 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.124486427 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115023428 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.107617099 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084825881 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132202005 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084335342 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085799483 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.169735672 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088758431 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110143797 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087670194 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146797829 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083354521 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.22949398 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.085698724 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111865109 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.108412936 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134656667 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.106855226 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082526517 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104341833 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081399605 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081691266 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163621595 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083918851 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084906756 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084722151 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113776212 seconds)
  done (took 23.474062353 seconds)
done (took 50.156550767 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.477056748 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09285753 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.090403301 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.110716575 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.088793574 seconds)
  done (took 1.715522762 seconds)
done (took 2.545718228 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.33040638 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198634613 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100820429 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195299082 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087557947 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.201403348 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.187771365 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094937363 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.213100213 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085646777 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.196649621 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085151822 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106078827 seconds)
  done (took 2.939724528 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103625259 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113454508 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.124380491 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106839428 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088296498 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10281474 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.124108582 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116503396 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103491889 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.117494353 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088415134 seconds)
  done (took 2.020574048 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102631537 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110532328 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101459325 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.123714181 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088104479 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101880271 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.122459492 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114430812 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103385773 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.118069284 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08917764 seconds)
  done (took 2.00860767 seconds)
done (took 7.797354379 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.104663621 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.673006893 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.148637435 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.213926203 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.364066215 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.248303595 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.574716467 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.156470176 seconds)
  done (took 14.471547306 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.181195738 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.121036303 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.096991212 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098219644 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100819258 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.118054812 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099348363 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099960699 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.117508594 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100945871 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096650414 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.11918008 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100559852 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096612246 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.113351701 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097935627 seconds)
  done (took 2.653277482 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.148828037 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.14919094 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.100073647 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.102271856 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.118544355 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103594797 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104903089 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.12113058 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.098543768 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09854248 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.125108064 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102256561 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100619634 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.115720671 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102015913 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119046723 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.115553624 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10295815 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117195072 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.121786543 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105351175 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099616557 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.120639814 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103295883 seconds)
  done (took 3.617033451 seconds)
done (took 21.575809137 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.155854842 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107409254 seconds)
  done (took 1.098267537 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.148875342 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.170012574 seconds)
  done (took 1.155990325 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114462568 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091629454 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.145695703 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10899974 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094170737 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.114684721 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123380475 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.1145912 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096832065 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095964536 seconds)
  done (took 1.939728948 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09606056 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094954814 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.1264761 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.140477978 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118268417 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095157914 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096831784 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.117170015 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.09871016 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093066508 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.118628487 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115224864 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100590529 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.134921011 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102085274 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101499241 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.123672459 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099737933 seconds)
  done (took 2.820032092 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093140397 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095076954 seconds)
  done (took 1.033857224 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095799309 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092984923 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095211417 seconds)
    (4/7) benchmarking "year"...
    done (took 0.116378263 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094762589 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093376594 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.113460154 seconds)
  done (took 1.547743731 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.506077002 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.270119931 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.380631161 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108907756 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.148528699 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.357038285 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.150357606 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104181279 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103757652 seconds)
  done (took 3.009179695 seconds)
done (took 13.44773015 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095527112 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.223065027 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.642543143 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.115462278 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.212210762 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.167321587 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.296346345 seconds)
done (took 2.604773527 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355199387 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.155488467 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090341047 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09440698 seconds)
  done (took 1.543525918 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082662027 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10028697 seconds)
  done (took 1.038486914 seconds)
done (took 3.4357098 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089684252 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.126718161 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.111881066 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092271795 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.093289826 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091790656 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.114548576 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.092006371 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091761444 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.113154793 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094165733 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.092259629 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.090890786 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112819023 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09393856 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091843875 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110606809 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093285421 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092403748 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091693776 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112912322 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093873364 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09300414 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.109837256 seconds)
  done (took 3.276582021 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.114720388 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094591919 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.116877036 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099530245 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.098211567 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.115768098 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098014002 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094017783 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.116916581 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09619687 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098407352 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.114607659 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.095392049 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098001375 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112514812 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099674608 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.098088626 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094215748 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113653289 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097407362 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.096076749 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115708711 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.097969732 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09749972 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.117224789 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098570065 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.094824968 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.114541254 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097982902 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.098108412 seconds)
  done (took 3.950073104 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099516624 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087538482 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092809531 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.12234738 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091969033 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.093921035 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.109548039 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091808593 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094931872 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092063185 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.115235771 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093719331 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090281022 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.113620017 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096757427 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097340486 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.121681099 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092326252 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091062053 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094723358 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.116739857 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09095756 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.092545949 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.113559599 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095674748 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.091325334 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092626901 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.113758397 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094896997 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093205319 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.116449284 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099072997 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093122528 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.122517608 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098676371 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093863803 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099317005 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.111511874 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096498689 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09110964 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.110427555 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095824685 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090865546 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.118254159 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095582278 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093961638 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090802049 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.115420718 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.096307192 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096869722 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.109349005 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092307083 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096944551 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095527228 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.116893893 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09220145 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093884935 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.110268936 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096501682 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092469276 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.10879895 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.092590822 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.1002668 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094966581 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.129968239 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100667271 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091445357 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.116107736 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097291138 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.100311373 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.11651366 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.105195669 seconds)
  done (took 8.117036378 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.106079654 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102308469 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.096139713 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.115345856 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095486572 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094669703 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.120973851 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096756888 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095924693 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.12129075 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095548751 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096140196 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114909368 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098049958 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095316839 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095934657 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120686785 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096409763 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.095136936 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116287888 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096148515 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099664078 seconds)
  done (took 3.130594097 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.241198858 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102145762 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144699305 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.128170612 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114303935 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.127184642 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10086271 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100772843 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117886602 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106428345 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104253115 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119315422 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114226483 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121843597 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105973266 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10523459 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122271079 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107202029 seconds)
  done (took 3.047226663 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106635009 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093771215 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.137268227 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098508067 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097627403 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096705188 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123753814 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116868605 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.115545028 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098420505 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.103420165 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115871167 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09833107 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098237177 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097454717 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.119310791 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099095752 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097408568 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124616703 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102169037 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.122024587 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105764094 seconds)
  done (took 3.236888947 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108247228 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095786236 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.134034706 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101448293 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095934917 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.114974307 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10392903 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096529784 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.121244519 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097391696 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098146196 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096009761 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.134092879 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096611271 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.101970601 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117344935 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0983401 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097954502 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117558072 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.097331776 seconds)
  done (took 2.994158271 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.176708585 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12744388 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111387894 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115903703 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12889263 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110994851 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136644734 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109882897 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110788022 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142546001 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114550671 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113757191 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.14202989 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118308122 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132985052 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12355563 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121336489 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.141675989 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113235128 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132626681 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127415443 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112988257 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.141685223 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115465417 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.133956059 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115896073 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11325054 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.139074902 seconds)
  done (took 4.39590788 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092690046 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093631809 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095275133 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.114904729 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096230544 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096746588 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095436112 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.116506745 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097164454 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094056412 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.115956232 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096696247 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095764997 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.114634187 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097725256 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096436316 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094662033 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.116946732 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096652884 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095271539 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.112556171 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096945928 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095405908 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095669828 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115930984 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097947578 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094196945 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113546876 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096981945 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097414177 seconds)
  done (took 3.900195329 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104175175 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100892718 seconds)
  done (took 1.079831452 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100206119 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107657311 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.094633788 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.117332558 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103221926 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095838585 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.124751561 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1031175 seconds)
  done (took 1.721771364 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.147561643 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.169036281 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.098093265 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.103794469 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.168893991 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.158942308 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137692538 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.097848158 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.11184704 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08661772 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.161182416 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085041404 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093946532 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11071521 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.095257516 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099538575 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.113641507 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104781926 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100169933 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.113004784 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09921104 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099191918 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119200028 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.108122089 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.090589395 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.121226763 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.103739716 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108828357 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115821824 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.101853303 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.096605906 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.118528659 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.102685921 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101975814 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.116884997 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.156370849 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.126206739 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093677805 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094288822 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119842498 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.135245732 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097815051 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.119443575 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.098813114 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101711242 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.122059437 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10255596 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094328976 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.090403128 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.114516572 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098327625 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093485566 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.117708514 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101050526 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.09476469 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120642572 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095407353 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089309428 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.10912617 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089568507 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09227345 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.108624378 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097078717 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100586613 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.120110697 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.100633423 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098678833 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.118605762 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.101544047 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098791899 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.117757248 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11511977 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.096376042 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.118152692 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100720833 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094055666 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109644175 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09995887 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091551852 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11458299 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098699065 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124098701 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11982303 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095236021 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.092930719 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.120563974 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096568811 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097961154 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086732605 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124080267 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097959156 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096910073 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.111575191 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.098128465 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.093724135 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.121813439 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.092740729 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099897452 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.117096101 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105573394 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103788338 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117053887 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.102270461 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102329676 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122889499 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.097007618 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.14091066 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113746904 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091512695 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097450791 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121032406 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.09172381 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.099236311 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.119000566 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097377642 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.094034948 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.12399756 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.099785105 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099091959 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.122407893 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100278036 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09533064 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.11478261 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09456229 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.0904391 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096448259 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.122407909 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095987148 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097081216 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.114043816 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094528356 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092488971 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.118131236 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092347442 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098468526 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111577825 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094574432 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095876156 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.116774148 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09533568 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08964393 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111275035 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096450479 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092906296 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.11547116 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.096537522 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089781732 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10604465 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.096790792 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089959349 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.11340491 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104676955 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091945099 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.120134888 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.093777186 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103670393 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092408336 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.125593922 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099577382 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104155929 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121727887 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.091499582 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096386274 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.122071658 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.103358202 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.096106242 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.121042779 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100046705 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104902186 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.108376936 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099367774 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085714769 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089701972 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.11887605 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094504637 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096321188 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.110212851 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135808558 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106284631 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119195928 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094468992 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096064015 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.118213276 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094051758 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09829207 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119811821 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099445372 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093861642 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.116047808 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103930806 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.095559853 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.117478567 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09420158 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096510394 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10606537 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096542985 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086458266 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098280436 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.116506155 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099724942 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10115074 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115889255 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094395997 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101276265 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109905128 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098536336 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.089587789 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.126636945 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105847839 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.102563547 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120582324 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096721322 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092411733 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.113941982 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104724629 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096479592 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113311746 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096253423 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087260109 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08764952 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.12078216 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098067782 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090085132 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.113239891 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098669937 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097341069 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.112397932 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087683468 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098618829 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118723171 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090761606 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093826566 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.110682862 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093376404 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102421718 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106818042 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.093333799 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.101583162 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.123601433 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097697946 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.095901821 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.118044622 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100266218 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098102654 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099681779 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114437412 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104924298 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092601292 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.115035416 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.093691794 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099785092 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.110617395 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096735801 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095109727 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111541138 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091397828 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098743324 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120775469 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10039893 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095839934 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.124671972 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104944154 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105013881 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116811522 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.107029431 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.095898253 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.090875261 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.112954087 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.089251017 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.100557229 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.118334432 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105805677 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.099076961 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1202453 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105306218 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102627179 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.11319784 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102858197 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110349442 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.115754795 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.095000983 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098798352 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.122072509 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.095783537 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.095875361 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.117857888 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103821366 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105325594 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.12548061 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.098566744 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100298388 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.129099753 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.094231454 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100933858 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.1196897 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102608697 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091004694 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098554686 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.121531659 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100185224 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088673258 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.123415493 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09455624 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095411515 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.112338696 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093296084 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089923226 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.108202316 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092147586 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100036345 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.112932932 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10081586 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094545805 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112498268 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091943897 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090526146 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.118792309 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094607682 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100945214 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.118332365 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.094716961 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.094749019 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104427216 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.122374716 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107472139 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.095569882 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.127280077 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108946912 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104304378 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.120029625 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.106385622 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104740311 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121989056 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102370092 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089183692 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.118976199 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107604803 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099709185 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.124553202 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100686385 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090498564 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102101754 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.125331237 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.098622219 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093965402 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.108151716 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097133406 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102442656 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.120124698 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100660418 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096081011 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115503564 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090791603 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098626055 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.120310942 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096512575 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102765484 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115156571 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099519541 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.094076359 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106287654 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.118793973 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090481741 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.092745294 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112991594 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102066701 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089061573 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.117726362 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099987775 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091587663 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.111552314 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101455853 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090271167 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116388885 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101919445 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093396338 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103628692 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.115219899 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094075409 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099905684 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.120191432 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089353199 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092559886 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113406235 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101839252 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094546225 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.11958942 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095826998 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100460336 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.116857149 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101065288 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100309406 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.0997032 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.109197687 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102072905 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098966591 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.11706858 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092925174 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092725476 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.109959897 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094439976 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100850827 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.112339683 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104404415 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.099419327 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.112958249 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094809317 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100793778 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113926542 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10369432 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092615783 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118308922 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090267206 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09873776 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.116534543 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105087609 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093748224 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089144227 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121310898 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101242314 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098887599 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.118337362 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101009975 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088919334 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.108732174 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098036757 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092319646 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125615357 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09933172 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093104448 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114482106 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097658682 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096093858 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122539891 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091259164 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092493758 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095401754 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118479674 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094052025 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090001882 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.119510091 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094645904 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096272534 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.115521794 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091603117 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094867947 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.123743029 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094423228 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091198442 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.113008573 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103161099 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093893721 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.112240534 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090193692 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100797784 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.117266048 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102961477 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092334121 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.116096787 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093942766 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09674818 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.121914938 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094846927 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095565679 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.11326115 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101529796 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100684315 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.107385008 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093489966 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103962062 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099698624 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.119776201 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.09785723 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094294466 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122964557 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103045631 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096733069 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.110289647 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091095214 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094493316 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.109303955 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09887561 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101721772 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114184738 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094677539 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099747937 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119228599 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099405894 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097972148 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089775316 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122791294 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093179108 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098755303 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.110410626 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090180003 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097805388 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121962032 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096346476 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096578265 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.116080883 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098486034 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090408589 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092819125 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.12016399 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100715855 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100642494 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11541923 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094867846 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097061116 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126384909 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09773029 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094044369 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123713473 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103206661 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096589347 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.117247852 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101374006 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101689334 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.117924769 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102959499 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093209136 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.11550646 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104156743 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10069931 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126049086 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096013357 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089656284 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.120646511 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.095245644 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.09041657 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.119861591 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105135595 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101286831 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.114474977 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.09435251 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105755174 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.120468675 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098008101 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093361857 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092792107 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.122497547 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094361203 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098914732 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113069442 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103203123 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102307923 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123118877 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.105534118 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090127442 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123224793 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.100015711 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104291866 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.117428432 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.092381029 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090184123 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098635545 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.124234179 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10221253 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099955335 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.120875321 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101943166 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.09659385 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116913359 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094271477 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103353044 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.122343341 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099007922 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098006082 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.114157053 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098386551 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098307028 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101498613 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.123520495 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.098321138 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10605738 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.124041627 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095226131 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093187239 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119424627 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100455091 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.099961048 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121531308 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.096091281 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092912748 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122555129 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105953249 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097101551 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122170515 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104596716 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095018656 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118883414 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105686416 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102191565 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097333754 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.118895023 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100019872 seconds)
  done (took 63.294710784 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149475075 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106364613 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122190185 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099869715 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117946169 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120882046 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099388983 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10006183 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121414121 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109421156 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09891462 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119285767 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115572748 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140548226 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12034068 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109151245 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120534796 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100685401 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099485617 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120949356 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116197968 seconds)
  done (took 3.335627877 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116959186 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113092653 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130173648 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114057112 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10517966 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132481198 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109510798 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130466869 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113914025 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108278998 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135107101 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111133282 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127456437 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107751339 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108348471 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129485727 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113909233 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.12606123 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116214111 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111409002 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.129701744 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111315524 seconds)
  done (took 3.529529792 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.108174455 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102608893 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.101014233 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119476319 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103438246 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.100707981 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.127450487 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099724716 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10847539 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.117469649 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.094610473 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.101760781 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.124052523 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.101847298 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093127473 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.0982959 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.130270843 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103424638 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103212746 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.119715576 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110328552 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097178566 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.120768314 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.092849107 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.111225665 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.125352428 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.100281166 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101790345 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.112033851 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103806283 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.099221961 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.096382736 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.119915563 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.092752301 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091314066 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.12510574 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105974513 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.100766449 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.119741468 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09935444 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098541042 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.123318637 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.102290383 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099295833 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.119245233 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.099171047 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102661526 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098784958 seconds)
  done (took 6.058294615 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130268226 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168508468 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102978195 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.147804635 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136444975 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109494141 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.123846429 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140164241 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100040039 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.12497088 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115247611 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.135214666 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104367177 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107149936 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.126798217 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105219514 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105178112 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.122438051 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108982299 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103300616 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.128803459 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106683401 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113104986 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.134639001 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106253791 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102268758 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124277398 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.1065027 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.132453707 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11024382 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105819691 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128862073 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.35784324 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102447211 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124402529 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104374872 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114506416 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.12641023 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106083134 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102345921 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.125450756 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107504137 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104432662 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137127062 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104137742 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.125266516 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104712618 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101818677 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.132875691 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.106063851 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111267268 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134766502 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105720179 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104807053 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128393297 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.113378355 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.122267 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103476406 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106008382 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.133249091 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103994508 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10519665 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.134015186 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104490543 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107811075 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.135267193 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106477092 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104932094 seconds)
  done (took 9.218783263 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.138724096 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105912785 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13565859 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116860271 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105586707 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127737427 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107904653 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.127494519 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109281814 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112647737 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126732464 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.204679774 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126464506 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111811881 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105311223 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128427911 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107605555 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127390954 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107954871 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10794208 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.127219276 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115869501 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105886776 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134689385 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117733945 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12348341 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108336512 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106741939 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135408175 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107073228 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117586707 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.129290001 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106852971 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.13586969 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.120703736 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107481396 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124220891 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107326618 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106921898 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.130063055 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104085956 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114943852 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129134696 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103514113 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10701306 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129552937 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11668304 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138672424 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112981956 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133176347 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109737992 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115437743 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128522985 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108954487 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116086126 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144035964 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116669842 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137551929 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107524668 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114196299 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137946252 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121797347 seconds)
  done (took 8.400049864 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103765972 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102553715 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099703349 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120550991 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102256989 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100857051 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120950336 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102363327 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099931025 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099231901 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121583806 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101368963 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101074182 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120274066 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.100734915 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100821262 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099885533 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121309204 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101590626 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09994521 seconds)
  done (took 3.06507604 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.1104577 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117443767 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123045928 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109782739 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103476744 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127911154 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103435013 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103425447 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123560486 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104218625 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111725891 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131685872 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103838682 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108091945 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132972497 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109281913 seconds)
  done (took 2.769409921 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122134355 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118885395 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.195961396 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104808578 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.126101462 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110482598 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102610261 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127794295 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.1033691 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.10926135 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128186216 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106419733 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103294105 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10374271 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.125725909 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107678974 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100918329 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128776847 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103488479 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.194670889 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107990655 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104748387 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126416961 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107251686 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104667587 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.13046405 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111481896 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102789719 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127726157 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104176873 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105215209 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.134088062 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10458546 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107400571 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.125525736 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105875412 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103532436 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.125641296 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106975759 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10366178 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.126790816 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106714541 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104256097 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10649333 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123646917 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105136596 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101348817 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.131948271 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106785791 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106057305 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.125012073 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112584539 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108647852 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.133095698 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.1113584 seconds)
  done (took 7.332985303 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115857204 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105506073 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136756187 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10298802 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104002372 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102829791 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126820654 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105595929 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104367439 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123635446 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106153835 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103870574 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125375709 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106196322 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105659635 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12677522 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103003291 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104602572 seconds)
  done (took 2.960242853 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109543331 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103516665 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107678495 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125604242 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103681084 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102980819 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124620578 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103968463 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103123554 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.124796785 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105081895 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102976952 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102289737 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.126679285 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10368497 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103005375 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125054657 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103861541 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103445296 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.123532822 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10464519 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102748542 seconds)
  done (took 3.369109 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114914925 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.185382088 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.110085502 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.1958767 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101067215 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.098455939 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.132680622 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101030564 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.116167255 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.121708941 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099457268 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09803267 seconds)
  done (took 2.428856685 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134415189 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141758217 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126551084 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105297182 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110999528 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131108284 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109808835 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107543602 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139319038 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120112602 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129439297 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118012513 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114311943 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138682826 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111939853 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133618379 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109802419 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108246347 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125982844 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125301516 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106737884 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139396854 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107497627 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129498735 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109831754 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115382489 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137448625 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120398309 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129384158 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117070601 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112819557 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129581841 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117322152 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140227922 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105524835 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116488396 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130394663 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123842574 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111536464 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139637266 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104304039 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135050337 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11686063 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112391832 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138214381 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108526826 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133966056 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110410701 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108719689 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149925076 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112885617 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138735566 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114671 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116114477 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138408312 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128985239 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140639797 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11738771 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134868538 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120420705 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115362429 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134971171 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117012585 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142103569 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113930608 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137721354 seconds)
  done (took 9.083691688 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147564268 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104946632 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131243874 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12131412 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136736123 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110277688 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110299378 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131011555 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110854575 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105137339 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175480365 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109421057 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141037412 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119388985 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108300903 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130802853 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110606469 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115706964 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128544584 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13007953 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130525053 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117886705 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13832686 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119102168 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120300268 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135849137 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108647162 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107782221 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132291621 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110248627 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135466445 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110123835 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117198183 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127633936 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118112305 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109193677 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132391087 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115822632 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107417878 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135387895 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117475638 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147125325 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109944316 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107432821 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14273283 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110169687 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131549314 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10799784 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109103094 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127578777 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122952074 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14188728 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122257191 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117401802 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131655634 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109976475 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109133684 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132462784 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110502604 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112595385 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140002626 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109056715 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15206458 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110322616 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13076053 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118327266 seconds)
  done (took 9.048227592 seconds)
done (took 173.599624736 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.152777643 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.193805176 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.148025521 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.18219536 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096789455 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.131891553 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.153947371 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.150637154 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094379389 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.118928839 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.096214089 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.098991589 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.187346171 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096758538 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094920412 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.121880711 seconds)
  done (took 3.07498161 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195691045 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.31241259 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114529069 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122367402 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10592232 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.102423552 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121989339 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102367096 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100195952 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130779206 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103901094 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098776766 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.130490039 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099588794 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099787064 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.126206265 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108206214 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101733896 seconds)
  done (took 3.24215714 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121705903 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156377573 seconds)
  done (took 1.246649524 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134291668 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.201549623 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27738642 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.17397377 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.124865373 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140960536 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153945667 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13769677 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.183268323 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136671379 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114906264 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100762938 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149131922 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10619838 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.140101119 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.103689724 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128829888 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.137677254 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115978327 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102569148 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145622755 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104553315 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10640557 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.138497091 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.172097526 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136765161 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104635471 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102730926 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125479917 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114912939 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.128176929 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118961781 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113084086 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176978037 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.127520088 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.151991558 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131042991 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102363932 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11506049 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.1234859 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.106507107 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105375826 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138637008 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.102240251 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103539306 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.132377338 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104353667 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.125471415 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11072649 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.11004567 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.13119885 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107958745 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.170843483 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.110773662 seconds)
  done (took 8.033548067 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.862241923 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148363888 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102000148 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.010061343 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151010573 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116297772 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.867709035 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147801078 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255365952 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.876866247 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11745358 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.13634609 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242868367 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256290406 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.98818735 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.331332758 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.709913519 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116316657 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128594242 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.166534865 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109447167 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.151216231 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12151481 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.421870657 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101381448 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123533876 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109147038 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134260596 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158908618 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.123893958 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105528261 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.198439971 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.266446532 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210276811 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103344177 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099472063 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122389456 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.163519254 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272514394 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220418736 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.186822611 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097677015 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123283084 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110102213 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.142061849 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100469897 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182020903 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.168558076 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190483315 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127069337 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11485951 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110416162 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131523797 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180774601 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100398469 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.326617552 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.334743406 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.124091993 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11032266 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137864353 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270569765 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10301601 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234719073 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148356105 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217545342 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10247182 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812535527 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184902849 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101720401 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107127551 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.131074592 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10703188 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130586377 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162050519 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.398664638 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113327323 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12687785 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101767218 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.246982505 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101582419 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09994535 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184243275 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123795809 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110823882 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11443316 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136923928 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188406938 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.225560142 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136724717 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109812672 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127665696 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114577556 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102070867 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235187668 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231107036 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.178866514 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.238070168 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110017082 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185120842 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184763131 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109067324 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189552465 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107780898 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.140140733 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110596565 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226392452 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159194171 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102324844 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127828108 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110940371 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160105945 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106054549 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110138971 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188038015 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458038321 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185348922 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099068573 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104182293 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133183036 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161149866 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132348505 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265261885 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110897599 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186622519 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108257728 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.121808746 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110954589 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.184851021 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110468246 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132549242 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110729054 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111762844 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.257368073 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224379831 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.138506174 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24435707 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.169665302 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.132264754 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190258394 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112687972 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189805645 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11161254 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129801175 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104962905 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801797862 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114462826 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.132649738 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108124818 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.208863423 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102265582 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103282425 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123892103 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10003653 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805032405 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104311952 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121003003 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104702088 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109273483 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.132088823 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110752549 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106149588 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183316366 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242844486 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.138088559 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109338949 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123358946 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160259497 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125113104 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103322729 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101582227 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124763287 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112235176 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105609222 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126466524 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170310676 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178912443 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230996802 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.525155808 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125502214 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10318323 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239778209 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124187746 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.304026879 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11075623 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233960816 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189507555 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099005182 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.354726248 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168560895 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.210136828 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105259814 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190906696 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099090102 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134024581 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.160042018 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125362281 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108933345 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179791648 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.115277924 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137763229 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.019519087 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102222184 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252076795 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098314585 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190531285 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102565171 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133826821 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.304610721 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101485953 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143165782 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181981816 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108244018 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102988434 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.604492584 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102007015 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139363846 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109271089 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.258504444 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165261682 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132739459 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113677165 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13642816 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161134947 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.236932812 seconds)
  done (took 45.824952677 seconds)
done (took 62.387203427 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301874667 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.26300209 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.305112642 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.212835884 seconds)
  done (took 2.144656059 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.269099949 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.164765345 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.237238811 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.100360299 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.25048447 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099947326 seconds)
  done (took 2.115990408 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.497272701 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.375156114 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.31054897 seconds)
  done (took 2.181489692 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.26127544 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248066407 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.355625255 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.412727626 seconds)
  done (took 2.389650431 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.308608223 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13338462 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128926123 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.216979729 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.258762402 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.235059928 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.152572841 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.198781022 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.156914652 seconds)
  done (took 2.832081724 seconds)
done (took 12.654830251 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.37333649 seconds)
    (2/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.20638137 seconds)
    (3/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.142428222 seconds)
    (4/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.378557829 seconds)
    (5/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.333173659 seconds)
    (6/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.204623429 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.241612193 seconds)
    (8/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.111151253 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.143719318 seconds)
    (10/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.274038468 seconds)
    (11/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.138826304 seconds)
    (12/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.199958491 seconds)
    (13/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.333980481 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.140811957 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.159876687 seconds)
    (16/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.245748859 seconds)
    (17/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.271865122 seconds)
    (18/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.254998982 seconds)
    (19/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.303541793 seconds)
    (20/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.256815658 seconds)
    (21/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.232435549 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.13198473 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.164295778 seconds)
    (24/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.134408782 seconds)
    (25/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.162328884 seconds)
    (26/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110727924 seconds)
    (27/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.116763377 seconds)
    (28/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.234267255 seconds)
    (29/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.292318546 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.146454665 seconds)
    (31/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.212897848 seconds)
    (32/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.083365776 seconds)
    (33/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.163253384 seconds)
    (34/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.205400556 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113740852 seconds)
    (36/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.16235376 seconds)
    (37/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.082371623 seconds)
    (38/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.088272302 seconds)
    (39/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.212125106 seconds)
    (40/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.21400239 seconds)
    (41/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.240236051 seconds)
    (42/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.192795559 seconds)
    (43/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082278886 seconds)
    (44/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.137615408 seconds)
    (45/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.294727403 seconds)
    (46/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.217919946 seconds)
    (47/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.216845937 seconds)
    (48/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.241444711 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.083965861 seconds)
    (50/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.233598995 seconds)
    (51/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.13025105 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.133027413 seconds)
    (53/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.241647774 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.117207103 seconds)
    (55/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.135732582 seconds)
    (56/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.180374726 seconds)
    (57/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.106920798 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.132144301 seconds)
    (59/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.118698901 seconds)
    (60/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.202915482 seconds)
    (61/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113894168 seconds)
    (62/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.17656648 seconds)
    (63/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.212940983 seconds)
    (64/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.187663008 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.161354769 seconds)
    (66/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.156047572 seconds)
    (67/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.0839778 seconds)
    (68/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110897592 seconds)
    (69/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.216091917 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.128382691 seconds)
    (71/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.134656567 seconds)
    (72/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.084453407 seconds)
    (73/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.082761157 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.104701821 seconds)
    (75/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.161569105 seconds)
    (76/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.084226653 seconds)
    (77/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.151421454 seconds)
    (78/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082126888 seconds)
    (79/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.175703294 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.127107398 seconds)
    (81/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.082037927 seconds)
    (82/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.08813985 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.135136566 seconds)
    (84/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11199717 seconds)
    (85/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088779891 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.154627781 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.136928995 seconds)
    (88/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.083842937 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.129349737 seconds)
    (90/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.084946743 seconds)
    (91/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.088371854 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.107396285 seconds)
    (93/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.154707331 seconds)
    (94/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.148904373 seconds)
    (95/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114413523 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.126086218 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11422271 seconds)
    (98/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.218733505 seconds)
    (99/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.08528922 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.129430903 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.106763872 seconds)
    (102/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.233145382 seconds)
    (103/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.114053942 seconds)
    (104/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.235983154 seconds)
    (105/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.102426332 seconds)
    (106/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.155184503 seconds)
    (107/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.118944023 seconds)
    (108/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.145684509 seconds)
    (109/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.082575495 seconds)
    (110/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.214043595 seconds)
    (111/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.083683553 seconds)
    (112/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.16842637 seconds)
    (113/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.094148065 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.138079101 seconds)
    (115/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.084251781 seconds)
    (116/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.083107788 seconds)
    (117/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.082674927 seconds)
    (118/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.136991051 seconds)
    (119/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.085656176 seconds)
    (120/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.150136243 seconds)
    (121/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.083110465 seconds)
    (122/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.109069565 seconds)
    (123/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109148856 seconds)
    (124/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127973476 seconds)
    (125/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.154328163 seconds)
    (126/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.084985239 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084768027 seconds)
    (128/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.104663399 seconds)
    (129/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.106345464 seconds)
    (130/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.147254321 seconds)
    (131/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102139978 seconds)
    (132/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.214103551 seconds)
    (133/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114170688 seconds)
    (134/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.084710871 seconds)
    (135/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.082009491 seconds)
    (136/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.169213322 seconds)
    (137/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.103091292 seconds)
    (138/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084603158 seconds)
    (139/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.083010102 seconds)
    (140/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.106808169 seconds)
    (141/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110093193 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107132907 seconds)
    (143/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083749346 seconds)
    (144/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.168858507 seconds)
    (145/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10339499 seconds)
    (146/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107461834 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.131102491 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107834584 seconds)
    (149/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084685767 seconds)
    (150/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.089071796 seconds)
    (151/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.108672629 seconds)
    (152/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.108286242 seconds)
    (153/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.08703976 seconds)
    (154/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.083933121 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.127098471 seconds)
    (156/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.084743732 seconds)
    (157/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.088416922 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.106513938 seconds)
    (159/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.132774882 seconds)
    (160/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.089148646 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111516288 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.130980717 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.132700453 seconds)
    (164/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.084717233 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106190329 seconds)
    (166/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.127839018 seconds)
    (167/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.090758486 seconds)
    (168/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.084553401 seconds)
    (169/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082950714 seconds)
    (170/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.082620917 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.134120359 seconds)
    (172/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.089344688 seconds)
    (173/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.084095649 seconds)
    (174/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.088250696 seconds)
    (175/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.108326923 seconds)
    (176/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120460792 seconds)
    (177/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.113059863 seconds)
    (178/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083096691 seconds)
    (179/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.109478589 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.127613396 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10560656 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.132093154 seconds)
    (183/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084684192 seconds)
    (184/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.083728104 seconds)
    (185/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.083267561 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.132119746 seconds)
    (187/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113467487 seconds)
    (188/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114625554 seconds)
    (189/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.128728885 seconds)
    (190/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.084615831 seconds)
    (191/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102476795 seconds)
    (192/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.084673006 seconds)
  done (took 28.082300299 seconds)
done (took 29.078978479 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.217963146 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.13010496 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112000846 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109950675 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.208004873 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118494847 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.150200139 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114143654 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118857407 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137168693 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103025456 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121232565 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.134167465 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.183375115 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.138499122 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105491483 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103016014 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.144206376 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.125237369 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124747509 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.208954632 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105853101 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.143667516 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105621124 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.181959018 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.132216606 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110260674 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110194772 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.14779329 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113698499 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110176337 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.129580708 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.124351405 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.12303174 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.128748053 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113796965 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103151131 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.113105798 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113806176 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112832368 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.144886284 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115297258 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111535316 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.127685387 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114696014 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11194922 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102781689 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.140703342 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101881566 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.109840019 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131828182 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.125048123 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110858874 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.127668809 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102716608 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103749649 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.144024198 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10436655 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123347638 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.128361657 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105058175 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103596714 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.13896153 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105195377 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113056844 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102895806 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.138896635 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115391885 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110532067 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.132038134 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103982374 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111668176 seconds)
done (took 10.03758184 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109555639 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.149749973 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.204380492 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.217756813 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130846403 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142977521 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117620805 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127498562 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.141382829 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123621552 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141378063 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160935609 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.185254528 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.144918926 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118960799 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114392842 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.142064548 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.1126388 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.215573455 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128455796 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.155451309 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.12019708 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.130647237 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.148058569 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107717841 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.152455665 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113363325 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.118070601 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.10522622 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.151521786 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127539757 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.130680303 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11279361 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129150881 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.15095114 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119176766 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119969804 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.140635789 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109367984 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107811456 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14180703 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125249517 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108003729 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.144608615 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117450183 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122587168 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.140519367 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122192557 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108009981 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.140884233 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109869685 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133711308 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.145795675 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124618684 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.14346164 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123051159 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120605066 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.145526821 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111811614 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121600547 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.132268928 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108963263 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108822078 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153990391 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111486179 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120581865 seconds)
  done (took 9.798082784 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.131569508 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138514038 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143300042 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119002716 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112589615 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127678419 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101580835 seconds)
  done (took 1.928552522 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.106829463 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.191532831 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.212688141 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212890113 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.212251926 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.197080682 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.153019874 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104414557 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137126018 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.139328315 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.191395341 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.245667829 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113023969 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.146376326 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.215260652 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.10367757 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.218118775 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.105142521 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117719084 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.2144152 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120221763 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160829431 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115958039 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103211191 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211606194 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104098171 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.267611606 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148539882 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114285485 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118467116 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.1418688 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.182068878 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.21542957 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116172634 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110541498 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.213923898 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.213305986 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116431914 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.227877643 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107042193 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.215125638 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116877399 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.145879827 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.118971161 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117971082 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.199451469 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121577746 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.145310383 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118951029 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.223135035 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.11494788 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.21651392 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115612581 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117820268 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.140481517 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119774244 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124940003 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.144996239 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.197257437 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.148802244 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185635468 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.213843397 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.213915743 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.186916135 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.156213614 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.191188876 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.211088924 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115610957 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139478146 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118965305 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.216551528 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.117010826 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.140125076 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.177724053 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147822164 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.191277394 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.21563322 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11576327 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.142027249 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.108646159 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116386373 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.10352386 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.205314651 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117538283 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141606088 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122377705 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141764605 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120226264 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109016317 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.151642121 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.120162895 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115271952 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.147549722 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118556942 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119435008 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.218755909 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113867658 seconds)
  done (took 16.054273073 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.113615989 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106282956 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108868794 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131932704 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105592927 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105739063 seconds)
  done (took 1.749855438 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.148132288 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118437975 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15426264 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121111287 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.19699844 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.198999904 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.226329911 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112793079 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.163595601 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129599285 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.225362932 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.199741509 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.225718343 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.147156756 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.202603195 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.147491858 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.201172107 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.144124259 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128448201 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116871248 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.146047849 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123740458 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116731936 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.215876033 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118871731 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.148936843 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1133985 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127915446 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154847037 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113368484 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.148402738 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.121332613 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111718203 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.138395016 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.203357933 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.138827422 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116725715 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121552643 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.149645239 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121713981 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.228398157 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117699809 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125003116 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.150120673 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.114108781 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.138088544 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.124142957 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113018419 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.228536615 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120405636 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.150028396 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.11982004 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119909093 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.150230047 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.112640319 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113413475 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.150477128 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.231876772 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124670154 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111755603 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.147554086 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121660306 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113151882 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.151862 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121605792 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.1217977 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.138777382 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121991132 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117691032 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.146688759 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123690774 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.144378242 seconds)
  done (took 11.554536863 seconds)
done (took 42.1263092 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.591260266 seconds)
  done (took 2.659673811 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.922454526 seconds)
  done (took 1.984989376 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.58484338 seconds)
  done (took 19.68596827 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.537498803 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.618144782 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.03354785 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156641017 seconds)
  done (took 3.41430693 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.034305121 seconds)
  done (took 2.122132312 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.300169418 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.271640274 seconds)
  done (took 1.646746166 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.766258446 seconds)
  done (took 1.855354131 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.561827108 seconds)
  done (took 2.637302606 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.356946801 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181468782 seconds)
  done (took 1.62639328 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.642056913 seconds)
  done (took 1.735107162 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.864912209 seconds)
  done (took 20.956133382 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.244899202 seconds)
  done (took 1.339232593 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.287265881 seconds)
  done (took 1.38233079 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.786416277 seconds)
  done (took 4.879011024 seconds)
done (took 69.002193461 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.11934615 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.119142847 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.143114408 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.117523902 seconds)
  done (took 1.576241422 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.128254996 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121254217 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.14879624 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120588688 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126058726 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119284761 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.146389361 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121420397 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11730683 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148291441 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121300617 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118494897 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.14939569 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119992536 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117234726 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147992032 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123448306 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118760541 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145793108 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121365245 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119867772 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147353517 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124179781 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121787679 seconds)
  done (took 4.193353336 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.119690218 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109569937 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110352303 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134236635 seconds)
  done (took 1.577239125 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.13374882 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132628317 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156018398 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127183683 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131614106 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157781052 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118994066 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115490846 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145420585 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128801891 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134658699 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160348323 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131169717 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.146009035 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.131528743 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113722263 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120749924 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157348356 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125921002 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.154337105 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.12108331 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126163112 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149985509 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129017805 seconds)
  done (took 4.345498167 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.196642914 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130373269 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.171922564 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164040578 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.172011267 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117651604 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.140539794 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.15140506 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124637281 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.145713875 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.122484493 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.164887393 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.152785901 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121315876 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119929384 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152001498 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.13096246 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123611851 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.187162376 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121807251 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.151603774 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131118998 seconds)
  done (took 4.297382313 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.126284817 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110136746 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.131656467 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.112267539 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121070183 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137822408 seconds)
  done (took 1.847252189 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.112119414 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104221579 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103739781 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130146084 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109486484 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103270069 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.128693613 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.106649366 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103679958 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103743243 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130186296 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104619405 seconds)
  done (took 2.441685531 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.340764728 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.110657735 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.137388229 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112711864 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.11608008 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.107008993 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.149558192 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.10917331 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.274868782 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103930572 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.146692834 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19971405 seconds)
  done (took 3.017692058 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21379889 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145485593 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.302068263 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.372799254 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167098013 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190145513 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272859621 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19375917 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.209418651 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139928436 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248950138 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156422263 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179598693 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176559974 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16637705 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157083801 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197597367 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191929704 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177321564 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229375496 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157266346 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195491861 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181100004 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177806246 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135261246 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191850136 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119543667 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154582517 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169611083 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192455287 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196174989 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149160282 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142555996 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222351294 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262783292 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198909865 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288216037 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134969179 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.202734163 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.183905878 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259155737 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167675499 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214720954 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154937146 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128267672 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20784506 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179160148 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177691796 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.156658765 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143315239 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207594386 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176575671 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.205711671 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135514456 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316708857 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195037174 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143348377 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197741047 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185560269 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219458343 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19048204 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.125550831 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207262413 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183230824 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208692148 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141136924 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.19384841 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124766079 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195088317 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220705212 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181400301 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186312437 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.227838531 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131519551 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186115635 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173840156 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20652623 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177091687 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187500711 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120374346 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177353514 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135476298 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1273839 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.230860914 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121943682 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228387006 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131052365 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342951645 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216125123 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156491141 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187402297 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185084186 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161659849 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172539107 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.106424387 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145671518 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.192559383 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156083673 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161108546 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157032991 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16609394 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128778151 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17674848 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123336191 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158159475 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.156018166 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164579307 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186953462 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132745939 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193539569 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149435808 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.182318269 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167839673 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213015671 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132013414 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159860393 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190696178 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187251791 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133158546 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207459032 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213153239 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144593582 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135339167 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194189785 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216308744 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142216296 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215857982 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139625678 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160973012 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.141603189 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186325358 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160121812 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.17983971 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131016796 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.151757888 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226484768 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126474747 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165863584 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169156662 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161921146 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125279368 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164565403 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136989125 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.14129345 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.173650764 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133997895 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180867504 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157633095 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184162149 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156170283 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16251581 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178227386 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160740526 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.160716769 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172610255 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119193494 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.202989719 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185312373 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159184468 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201293666 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.191711631 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217835612 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159817737 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160793974 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177427787 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156627067 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120647624 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18942933 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15803172 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188748136 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.181228171 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215531064 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.197238618 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152548667 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176120217 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16731651 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.20635366 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180753613 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.146093457 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157445876 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194003683 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120695152 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.152254255 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128805929 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136971096 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159153954 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13532298 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205587179 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16248152 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213642268 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187394082 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138818173 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213134564 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127213407 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188977621 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.164981085 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167359911 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.181780819 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211181039 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194361916 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141274516 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188660774 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123125122 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126492641 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.16090365 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164616927 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162634589 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136534617 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140168498 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212506347 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201154687 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147816948 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226392487 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194953962 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19329011 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.149069242 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16785128 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199543625 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156908926 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.212094701 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139426375 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.185900458 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181832479 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168143534 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188458796 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186810541 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161009869 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218095683 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154720901 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161925371 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149071339 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188311367 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13586889 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194178109 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144943698 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158829942 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153169592 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.164939843 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127442612 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210755573 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143416859 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198908365 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.159709123 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197349723 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125066198 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170455112 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160957348 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172288242 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.110061364 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169404179 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213401043 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173540391 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157575445 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204061031 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131343718 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.344803646 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189441118 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206444407 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133935478 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172274509 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162829251 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191778041 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161327401 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208152509 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140252868 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208638644 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184469079 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.14497262 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129826393 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177873627 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151109315 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170817575 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.13208683 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.186469176 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143257698 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214821098 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139383802 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188920346 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16017395 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.17773324 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145818029 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139276771 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226166847 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184929459 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17550202 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.18371516 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.167572512 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221690027 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123632601 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157705075 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132282274 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209216668 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131450951 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161197173 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.208050298 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220854239 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19316426 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161699687 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168156083 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127974023 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185720434 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149586975 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219705315 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135623757 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.167492736 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192792419 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.159381199 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132367457 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189272686 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280650037 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175709958 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202081842 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.11674742 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.298172709 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130203293 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132078144 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192941859 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171116627 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.163119736 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184989919 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192067963 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142964281 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192954853 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137311296 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213126423 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220663561 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169809951 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202228869 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.144322726 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189246613 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160471933 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206698251 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142692191 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.175156338 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162674373 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21271557 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.211545354 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.134780718 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157465349 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187692341 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157821405 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20170292 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136629996 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220411228 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128452842 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192392635 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137162184 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155132589 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158144986 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.208452089 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131737608 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208690308 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18776361 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134499447 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127101954 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175315525 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157895661 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169133129 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130964932 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212728753 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.130089076 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193834732 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181282367 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157410377 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159579516 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14492606 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160878277 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140891998 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171538751 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131520432 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.171406933 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211819825 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130420805 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208302639 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190725391 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16545031 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185102147 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142666811 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.700224512 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128478026 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211717661 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149750893 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219269989 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151248482 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192062247 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160571275 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177368925 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165719554 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177240765 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.241040387 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191876168 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.159140745 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160648297 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142639215 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138987651 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.163031214 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150906889 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188513284 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14214549 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.165158581 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156890487 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168697183 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.147994393 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139301448 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215079561 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146823731 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212593989 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212220115 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138135286 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191567123 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173138625 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160501571 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.165452357 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203778667 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140402066 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179590977 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133651804 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136827402 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214085258 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123497069 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18801602 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16299412 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189454025 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158825868 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.165046585 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162786454 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169806336 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161305328 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15574851 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.155009968 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187196439 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137040685 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12720462 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187659038 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158620127 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.184944699 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126909379 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173088326 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211897878 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123680676 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162248847 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2791273 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188651487 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217884834 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.142077485 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13483973 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174232532 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154784751 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.186030201 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161396748 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159257989 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132299838 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.129804046 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.194992465 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.149148578 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189774778 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177493535 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191290675 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220056087 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136750993 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.321229161 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142377892 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15838224 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.150028527 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128590685 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14035546 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164292155 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139837825 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216799002 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212529338 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.156588502 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.174753005 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136883589 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12485257 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16113342 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168127219 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182041948 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160037465 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17503102 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.107453042 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143671663 seconds)
  done (took 84.979042452 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.185953803 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.154718039 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.169718272 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.227095083 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19860814 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.300685489 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.236828241 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264612181 seconds)
  done (took 2.93389699 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.127286788 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160693271 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142534407 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.148244276 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.120396797 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.451235621 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.161548966 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122144267 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.166551903 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.162641322 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.144937809 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.631012819 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.121931323 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.148631779 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.129571012 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.120602552 seconds)
  done (took 4.246492204 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.590942633 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.603218467 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.394455258 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.286491403 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.23916756 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.18384927 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.822504817 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.708393961 seconds)
  done (took 14.027724446 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.152490265 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.138447402 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.321352446 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.265786741 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152850889 seconds)
  done (took 2.225668472 seconds)
done (took 132.790965134 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.128607918 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125028699 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.125189818 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156326938 seconds)
  done (took 1.709999403 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.186612997 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.094173317 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096453273 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122303762 seconds)
  done (took 1.691800319 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.454292745 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09386011 seconds)
  done (took 1.766032245 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.154488867 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.147620475 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.170475543 seconds)
  done (took 1.685547485 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.149518994 seconds)
  done (took 1.348551523 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.133935249 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.123110921 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.243024825 seconds)
  done (took 1.708041125 seconds)
done (took 11.108362793 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125823334 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.420616987 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435041815 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136321961 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71181173 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.430284041 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.039741647 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177115864 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176609232 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140589882 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135396876 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.689229769 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.060336258 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.366397723 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.015280059 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.484252325 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69393719 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112405344 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.148614552 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113234673 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.049347757 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11123141 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113824469 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111718586 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.720129372 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421558855 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110495163 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.501544723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111465453 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114634003 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.431664162 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111508781 seconds)
  done (took 17.712527288 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122185823 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174500883 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148158492 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11422325 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115050014 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141617124 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124476837 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123399833 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207507112 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11128295 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.165425556 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111503266 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115998932 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142271674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139304677 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110575447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.145590148 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114999576 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11923878 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143560007 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136751496 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110093242 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.143398384 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114754923 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111257112 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.163235515 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112728506 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123752099 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140946312 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116239826 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11601428 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141520476 seconds)
  done (took 5.43098567 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.163786215 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182187138 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150189822 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150062835 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188201741 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113361564 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225681307 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149955647 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20728785 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112228189 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134182366 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.140619322 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152131791 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111783621 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167774681 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111799227 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114337709 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143993943 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120398495 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140722164 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136770301 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111387924 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141181038 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115767435 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111396211 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.163929677 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113525901 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123437407 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139078016 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116123277 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117267923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141470968 seconds)
  done (took 5.717531916 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.130163393 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126689333 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134655957 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.16668127 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122164066 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126425875 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.156831596 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122690037 seconds)
  done (took 2.287500857 seconds)
done (took 32.353479076 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.142387885 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132718157 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131360867 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.156801958 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.194626438 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.148719483 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.131292071 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118818289 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.156867937 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13496372 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110744561 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.149114571 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133430688 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122539827 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.22814838 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127060012 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.233003344 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.196229618 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.14984948 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126448422 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.119589118 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.232926135 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123313662 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.148904223 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.203092876 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.144475718 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.1878914 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.151547181 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.124377367 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113028886 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.228507177 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123304804 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117747727 seconds)
  done (took 6.237907094 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.216901196 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.121156223 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.152128432 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121035556 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.11983503 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.150029762 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.216640337 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.150045603 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121721381 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119442546 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.119773999 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.232077793 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.124832195 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.146709537 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122142012 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.114428962 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.247096135 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121247631 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.141423349 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096270705 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115651999 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119543892 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.258884571 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.114943831 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.150005224 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.12164879 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123143561 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.124084667 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.153413431 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123108095 seconds)
  done (took 5.57635987 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.132130033 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13372618 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.166800689 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.188702877 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147014925 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164219094 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143375295 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134534929 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.17471647 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114512257 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129210677 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.183310172 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131415905 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.154315014 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119583625 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133416582 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136765299 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145231315 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122636015 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132579477 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.166842986 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132357248 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141291398 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153265445 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113414351 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120511436 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.155372357 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.129674528 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.1210102 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.160000166 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115793016 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117267003 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.146691184 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.1497378 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.118960249 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.157555744 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140029973 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125266774 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.1595778 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144481162 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.1477198 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.118328642 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141208836 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.199042005 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.116699056 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127983074 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.155027262 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.130455141 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112569385 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132039468 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.189226479 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114879394 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.164172009 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117046746 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11322335 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.15174315 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11765044 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.1180155 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128196889 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.149060122 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.139817726 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121784786 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.157033434 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117368023 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124760462 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.144795977 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114788663 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117976325 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.170712789 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123012181 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150667401 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.14336209 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.128298296 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126716101 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.153971454 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1274139 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113794639 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124274605 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.15584793 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120704862 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126213402 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147095239 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119355414 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130597395 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.166273755 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128157425 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125615718 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.158841286 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118556342 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115919541 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.162626256 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115306641 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120467424 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.157661985 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116221504 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118090267 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.157342909 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127649567 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.11311727 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.17002584 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.120221186 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114321582 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138787732 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.151842788 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121150234 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123627014 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.188816418 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.118536777 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12502548 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.16015947 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114657097 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121362932 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.150975403 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114822494 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132492773 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.161302139 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122466394 seconds)
  done (took 17.280352213 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.335977815 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.316283525 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.183285608 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.316557569 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.159534741 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.210270584 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.310992075 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.313511823 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115083698 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183827511 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.198774376 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.281512092 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.11727211 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143687485 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.315765683 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.367155316 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.176776518 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152040823 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.186089321 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.12914224 seconds)
  done (took 5.75165962 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.139158247 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150364312 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.170033919 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144569705 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125310593 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161117007 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115089475 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13626566 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157740929 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125575617 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117018919 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.162374009 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126336374 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131201569 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.162227373 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.154696708 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122385988 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151303716 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138085361 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118631068 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137120862 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140618702 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123875296 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.170181833 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133880994 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.156331397 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.116118817 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119783212 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121259704 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.155656706 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119513472 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132798571 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153198368 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109343878 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125909858 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.162378052 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.122476078 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117962309 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119822118 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.151450633 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129004585 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127760477 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.153806929 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103140874 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133817838 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.114390275 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.160616051 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128705089 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.109506587 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.164817926 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128438833 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12862696 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.153613466 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.138580358 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121767195 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.162100255 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127152656 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129068365 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.151043865 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114654524 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113724671 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.150340736 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.126558828 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129482321 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127573889 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.167556495 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131433227 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.145247436 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121083108 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.119485749 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.147531633 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.133093701 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136315766 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.153680157 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.123746694 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127829346 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122734465 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.129058036 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.126449703 seconds)
  done (took 11.959664296 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.147049283 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12374954 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.164239358 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.154762498 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128310729 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.150948724 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.126791896 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135522439 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128155196 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.16495013 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128978789 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128566381 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169706367 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125486016 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123488434 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.16322445 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128645156 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.184979158 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.136791242 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143599018 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.159521094 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122095119 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128166445 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.157912761 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.146800029 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126139884 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.175199496 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.129805023 seconds)
  done (took 5.253653351 seconds)
done (took 53.272149512 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.392843901 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.575665673 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.336981851 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.341791789 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.379066013 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.346916814 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.337431816 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.341937262 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.889128299 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.310602587 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.340052137 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.359284523 seconds)
done (took 30.191155015 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.409356581 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.876055046 seconds)
    (2/2) benchmarking "String"...
    done (took 1.629470129 seconds)
  done (took 4.736817684 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.332187524 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.333679627 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.552529518 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.331709932 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.331949932 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.332025893 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.342565402 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.33165621 seconds)
  done (took 16.786169549 seconds)
done (took 27.49047335 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.419230525 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.521899721 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.564336997 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.336846568 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.336907471 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.338880564 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.337349009 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.358154632 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.334801583 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.342940557 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.770281303 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.586284366 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.343574819 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.698666811 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.334029882 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.358150108 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.348175254 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.583050123 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.333867275 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.368200615 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.319010109 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.338776143 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.350880156 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.338343867 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.345876166 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.341731962 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.333589966 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.338431863 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.531631135 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.33977161 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.367475299 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.336538525 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.382865755 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.347944115 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.333535308 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.350138796 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.529860369 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.345008078 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.324055445 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.343178038 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.53287732 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.348351188 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.348700826 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.33850823 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.341115536 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.403962721 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.3230569 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.451767524 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.362660047 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.342582123 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.360416092 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.70460074 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.346872672 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.337023202 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.341662828 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.561438156 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.357411755 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.402908695 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.36274698 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.35147255 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.349913566 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.339257461 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.356996863 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.350195025 seconds)
  done (took 152.401528359 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.338904736 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.339575983 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.333281875 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.344069179 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.336372898 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.340994676 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.338758774 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.337857189 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.339822697 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.362338168 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.337662749 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.337822095 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.340726706 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.283979217 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.346068502 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.349663266 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.337413233 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.354043415 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.360630796 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.338617183 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.356060827 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.338065678 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.338547131 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.338440299 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.339823032 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.41645986 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.346569124 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.341628832 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.347396256 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.33786563 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.336747299 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.340929348 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.990817578 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.207278367 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.346001719 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.375348348 seconds)
  done (took 85.131387729 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.340615863 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.338684697 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.338653065 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.373769056 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.338448851 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.957976917 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.960148887 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.882050658 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.831893549 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.815851238 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.678657708 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.341105579 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.437230912 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.351170762 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.343519061 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.356281403 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.368476686 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.341724466 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.340752417 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.959571579 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.356047895 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.495734566 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.525346628 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.354929247 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.375376232 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.742040988 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.341163319 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.377600983 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.682461504 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.392587178 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.340731657 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.766317094 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.466515815 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.459904151 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.343497395 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.377847742 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.346352319 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.633154681 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.345411671 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.343256577 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.343629875 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.347347281 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.06816798 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.346782785 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.962718993 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.345174864 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.314419938 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.342564637 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.343844148 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.408372928 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.348434919 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.044089797 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.34154453 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.345047569 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.346739454 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.343287245 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.342058142 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.344649572 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.378856512 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.366930712 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.444004533 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.348602569 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.349800819 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.381156591 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.347560525 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.54173652 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.34496187 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.763711813 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.34795805 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.472519178 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.399485845 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.966930747 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.346909928 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.445254625 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.466042784 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.344518895 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.345185005 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.347062277 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.346223464 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.45962237 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.343720787 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.781190071 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.527480989 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.361210464 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.827492311 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.447725385 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.345294327 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.79760892 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.350433373 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.344821959 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.121191943 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.444581359 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.343025192 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.344710232 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.345446067 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.788350596 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.965221068 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.637760427 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.34816291 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.47017226 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.347813113 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.797165959 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.940562006 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.096068192 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.348701 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.46275715 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.526472634 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.360796272 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.346105383 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.83014232 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.346197186 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.405924711 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.348967463 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.752765956 seconds)
  done (took 382.681681773 seconds)
done (took 621.442697876 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.240775472 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.178799568 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.330423393 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.192380814 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.168957677 seconds)
  done (took 12.35294726 seconds)
done (took 13.593385256 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.552523275 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.553824606 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.414830522 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.553755309 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.384636477 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.57011506 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.53823074 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.371519155 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.465498589 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.437080494 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.466289791 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.404919194 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.382630369 seconds)
  done (took 20.337047018 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.64441848 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.354932 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.42071371 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.63863469 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.3939612 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.650146402 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.679279216 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.35839513 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.542461283 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.371084418 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.371092353 seconds)
  done (took 19.668174204 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.64653412 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.35789212 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.411440945 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.625119519 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.392406278 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.640065704 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.712345963 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.359161608 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.541261982 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.370326977 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.369961851 seconds)
  done (took 19.66860409 seconds)
done (took 60.917105942 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.391055961 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.45211137 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.384241439 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.367441576 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.363514231 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.366177405 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.368366129 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.366297983 seconds)
  done (took 12.302562778 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.366346708 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.36567455 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.364381454 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.364746164 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.365004365 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.363959795 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.36557703 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.364920209 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.366142353 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.365084057 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.365813998 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.364664293 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.365672168 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.36411255 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.365789446 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.365286966 seconds)
  done (took 23.088976245 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.366430895 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.363966974 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.36596573 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.366259289 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.368356121 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.365650329 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.368273563 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.366233553 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.366939207 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.366454775 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.365901511 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.366906682 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.368117437 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.365866099 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.367098238 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.367272147 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.366292498 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.367576139 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.371081518 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.367420733 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.367424038 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.366073638 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.367258721 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.36493108 seconds)
  done (took 34.049623733 seconds)
done (took 70.683957886 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.361197682 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.366355506 seconds)
  done (took 5.973306248 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.426599582 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.427640082 seconds)
  done (took 4.102353883 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.368049802 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.367574833 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.367936444 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.367536342 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.367406148 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.36766821 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.368936761 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.368217431 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.366457851 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.366171585 seconds)
  done (took 14.923871549 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.369050976 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.369002348 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.367713251 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.36880364 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.367207392 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.369756061 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.366087483 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.370443858 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.368720317 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.369360363 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.367886915 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.36745743 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.369129474 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.368202728 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.367425851 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.368853427 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.36789889 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.368988773 seconds)
  done (took 25.880429968 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.382957782 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.389377114 seconds)
  done (took 4.020142631 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.509482904 seconds)
    (2/7) benchmarking "second"...
    done (took 1.409838489 seconds)
    (3/7) benchmarking "month"...
    done (took 1.485486994 seconds)
    (4/7) benchmarking "year"...
    done (took 1.477510672 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.411277503 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.392200089 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.412542548 seconds)
  done (took 11.345993347 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.371105498 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.580478186 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.710210705 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.928106088 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.370846648 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.37325595 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.179304395 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.374573065 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.375549855 seconds)
  done (took 15.514593291 seconds)
done (took 83.00818688 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.356709096 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.385478947 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.368933522 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.382543076 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.669223562 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.39173195 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.359226833 seconds)
done (took 17.170496605 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.34862712 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.345880584 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.341077577 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.367717439 seconds)
  done (took 10.652649542 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.362382079 seconds)
    (2/2) benchmarking "read"...
    done (took 1.646970797 seconds)
  done (took 5.26024026 seconds)
done (took 17.164469922 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.373410105 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.369809232 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.374897201 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.370291119 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.370589867 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.369659823 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.370182801 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.370863064 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.371122997 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.371508713 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.373219084 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.369353652 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.370599567 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3712926 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.37111649 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.370396852 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.370997543 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.369763241 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.366754405 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365293126 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.365382725 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.365568604 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.365001621 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.36523341 seconds)
  done (took 34.124052259 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.366864553 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.364033738 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.365357685 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.365919941 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.366358522 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.365896442 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.366142633 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.367957282 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.36529788 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.367503664 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.366797132 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.365020231 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.365387907 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.366117966 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366291205 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.360876917 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.361133143 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.36065879 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.363068881 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.364392135 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.362961176 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.368248661 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.361297823 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.361260579 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.359821536 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.35989953 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.361302654 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.362432837 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.360239319 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.364263337 seconds)
  done (took 42.171369641 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.36615373 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.367080336 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.359759775 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.36034012 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.360576954 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.365356575 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.358525014 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.359053809 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.359414958 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.359702826 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.35767437 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.357712356 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.35871891 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.364106366 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.357124718 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.359324247 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.36035963 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.358220488 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.359395318 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.358179698 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.362478624 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.359052121 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.359204407 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.35896034 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.359181807 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.360512434 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.360530959 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.360875244 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.360651533 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.358743875 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.359837631 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.357823458 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.358419265 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.359676825 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.359319501 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.359892658 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.36140826 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.365320841 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.358888673 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.358918921 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.35727177 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.358555947 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.362927613 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.35872701 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.357772078 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.357798452 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.360909509 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.357925313 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.359851922 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.35796576 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.357585808 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.359129338 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.359835713 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.359754183 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.361331266 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.36248761 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.359669592 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.360005328 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.360148833 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.361068215 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.360857672 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.360528878 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.360354757 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.360747106 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.361238069 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.359077189 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.359754533 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.36117873 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.362862939 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.361842446 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.360525301 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.362050233 seconds)
  done (took 99.171072637 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.360810518 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.360572999 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.36104256 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.359972221 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.359304285 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.359103552 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.361719621 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.360555696 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360513853 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.359556193 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.362116144 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.36214473 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.363333711 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.361364073 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.361939451 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.362646868 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.362132942 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.362025334 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.360622883 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.362550914 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.363633022 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.360576873 seconds)
  done (took 31.191370531 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.362442138 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.364017525 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.363970194 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.362489635 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.364969135 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.362514681 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.362534538 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.362506978 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.361916863 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.363666599 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360782464 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.363308502 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.364696286 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.361290641 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.365204716 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.364056545 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.363886663 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.365242579 seconds)
  done (took 25.78126395 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.364927979 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.363990151 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.363230461 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.364435256 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.365895178 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.364699268 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.363189602 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.363499213 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.362312372 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.366246172 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.364976268 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.367413332 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.364348693 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.365647391 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364055205 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.365693987 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.362223069 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.363858088 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.36478792 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.365967738 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.364231284 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.365839906 seconds)
  done (took 31.265958552 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.366034975 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.368037561 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.364909843 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.366289548 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.366360545 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.365334009 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.364255319 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.368248441 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.366994017 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.366578968 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.364876995 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.366110807 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.366002655 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.366428351 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.366663793 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.365849523 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.36645453 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.365876095 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.367346517 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.36587993 seconds)
  done (took 28.571091336 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.368685969 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.368651462 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.367175658 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.366732189 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.366811034 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.367713672 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.366975295 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.36723264 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.36762327 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.367329331 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.371210772 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.368651935 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.369702876 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.370297296 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.378012556 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368051064 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.366627816 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.366943752 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.367533867 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.370416991 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.37023376 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.367690896 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.368260406 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.370334556 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.368546407 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.369356999 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.369534807 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.366427397 seconds)
  done (took 39.571698402 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.36838771 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.369283466 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.368651904 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.367861176 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.368877674 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.367796893 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.368111339 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.369687348 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.36802725 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.369120108 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.368458656 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.369029101 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.36975077 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.367060481 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.370710264 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.369540232 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3721931 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.369295831 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.368166647 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.371242297 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.369415742 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.368858491 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.370753478 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.370256812 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.370283119 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.37002509 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.37021169 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.37010593 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.370405062 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.370337736 seconds)
  done (took 42.332531751 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.392538172 seconds)
    (2/2) benchmarking "in"...
    done (took 1.391618138 seconds)
  done (took 4.033025708 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.373189915 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.370983923 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.371850551 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.373591917 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.373742855 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.373205081 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.37341905 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.372576949 seconds)
  done (took 12.234183189 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.365346613 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.374224743 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.375256284 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.372669058 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.371710868 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.362819609 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.372075025 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.375947851 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.365314495 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.367163161 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.374307337 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.371640059 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.369331692 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.369626735 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.367620637 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.370749575 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.375609132 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.373688339 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.371852283 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.375116365 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.373833355 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.367830469 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.372276492 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.376561177 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.371726977 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.376991339 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.374791401 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.377046667 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.367273306 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.372001042 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.369101804 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.37764065 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.37610892 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.375506525 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.3752255 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.375941436 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.375873778 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.372539386 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.377920321 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.378803525 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.375284153 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.374938005 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.370257287 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.372135667 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.370680504 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.377550454 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.376345307 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.375401533 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.368190136 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.371002598 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.381467111 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.366785939 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.375814467 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.376092058 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.370522776 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.376629319 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.380341002 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.370453395 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.374736295 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.37894636 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.386277663 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.379032389 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.371401335 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.379128469 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.379590041 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.385726353 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.377689625 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.379727647 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.379651461 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.377387562 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.375430916 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.384358711 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.381006396 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.378632668 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.377636592 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.374068218 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.370283371 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.373600207 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.372369341 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.378081165 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.377613965 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.376092464 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.378990916 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.37994695 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.367438431 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.374401454 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.374815987 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.375091657 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.369021326 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.377631447 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.38053081 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.371568775 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.367295837 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.368889635 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.369449575 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.374210031 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.365140134 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.369432073 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.375966596 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.374061203 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.371403264 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.371236363 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.372302387 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.374484211 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.376722532 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.373948407 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.376762265 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.366677636 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.37439146 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.378565087 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.37397728 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.370310856 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.369439391 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.375042501 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.369269256 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.37319036 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.377500622 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.36941599 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.37674582 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.377720794 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.376699693 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.384522207 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.378047331 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.374436834 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.373393815 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.383258884 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.378282972 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.371676484 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.379432466 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.375372479 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.376025282 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.369451309 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.375677197 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.37040736 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.37649225 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.367690523 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.376182555 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.378309753 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.377283443 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.369696461 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.369446882 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.370786372 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.371927213 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.373818068 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.37712403 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.371677718 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.380984982 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.3736046 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.369789221 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.37311223 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.378357252 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.377766331 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.373751478 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.377622172 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.372764648 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.379535271 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.371093405 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.376719519 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.37815746 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.376581077 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.37607789 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.371618277 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.373151883 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.377233685 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.374993784 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.370795749 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.377339262 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.377374318 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.377115786 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.369223326 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.377269319 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.366457871 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.371960929 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.380832166 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.377484524 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.380200957 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.374817191 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.377656105 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.376418588 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.37535872 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.375382346 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.374892645 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.37561182 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.376542812 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.379322952 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.379208082 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.37643242 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.370877766 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.370822582 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.37846952 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.37432051 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.383082655 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.379976658 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.380962122 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.371410667 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.379334444 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.371356147 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.381442145 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.37422186 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.380134606 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.380713355 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.376115197 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.370504904 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.377672576 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.371534752 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.379683566 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.369815595 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.380205387 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.380414404 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.379313536 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.377825818 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.371365866 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.37330591 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.379726036 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.377556334 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.37767925 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.371402201 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.37967 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.36959409 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.372001471 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.378672038 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.378649374 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.380568303 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.379486494 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.373734149 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.374559384 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.37368486 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.372292552 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.383652442 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.3754467 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.373527742 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.381861773 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.37536404 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.374145223 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.381724722 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.379299646 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.373314417 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.379839996 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.385251026 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.380266549 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.37482468 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.38396306 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.380443503 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.381450344 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.378662251 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.372859791 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.380697355 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.380783483 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.382781612 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.37105735 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.381201164 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.376165175 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.381436175 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.373111632 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.376002623 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.374398453 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.377008035 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.384051263 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.382411423 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.374627321 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.381455611 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.382478175 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.382088846 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.377273554 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.388298365 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.381296751 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.377024082 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.378970859 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.376011646 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.386209621 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.37461057 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.382233451 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.375471201 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.3874765 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.392002876 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.382708932 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.380265408 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.383967232 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.381714064 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.38020871 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.376914378 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.375601919 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.378119055 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.375398638 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.377355468 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.386341826 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.375266804 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.383816789 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.380137565 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.379679925 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.386309215 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.3834341 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.378101702 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.384160208 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.382739417 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.383243582 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.375224045 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.382855584 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.377954982 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.377978945 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.379719832 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.377067831 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.385365783 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.383614882 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.379457222 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.378628126 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.378579589 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.379391608 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.379816422 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.385141746 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.380170031 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.386997708 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.380882194 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.386494305 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.380683463 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.386477759 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.388860592 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.38010694 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.388564078 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.383320102 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.375859362 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.377180856 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.385620335 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.381955837 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.388226424 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.376070825 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.383753947 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.383243859 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.384259656 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.386582769 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.38302481 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.384029032 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.382572998 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.384528776 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.379948218 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.380305515 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.380435329 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.385496002 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.383991812 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.385708666 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.376533979 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.380623458 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.387188724 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.37864068 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.379903558 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.379275595 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.38485199 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.381199345 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.385523731 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.382408829 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.38250204 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.383917807 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.381917131 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.387097296 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.384496607 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.383898477 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.38623156 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.384371996 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.391524403 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.379241258 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.386451622 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.386832176 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.377930738 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.377564596 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.379571072 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.389050846 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.378316221 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.389636962 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.384136756 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.381703505 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.379281578 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.386052402 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.378557232 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.388702177 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.399032752 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.379561925 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.388754442 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.383596782 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.37705755 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.388560686 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.386544735 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.37892158 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.378592123 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.384940309 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.388635759 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.37721013 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.385387446 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.383179634 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38440043 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.388129228 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.38397624 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.383299128 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.386895305 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.376806586 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.389106027 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.382568269 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.386672256 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.378411807 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.380682853 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.380420588 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.387791427 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.388705493 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.379288844 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.384986651 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.38861226 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.378377487 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.380080527 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.383808725 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.38140379 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.392079951 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.381824515 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.387132898 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.386515825 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.383717934 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.38463179 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.391105506 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.385072801 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.381807442 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.388384307 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.39024169 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.390711921 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.384557601 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.391908923 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.384721165 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.384783366 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.392031318 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.383807558 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.395417411 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.385289902 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.390143309 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.386618077 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.39290008 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.392114779 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.392452023 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.383822039 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.382926114 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.392515737 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.390486444 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.391592614 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.388482701 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.394737978 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.384083604 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.387461643 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.388008829 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.38700091 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.387086565 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.392593692 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.386898685 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.386433542 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.386377218 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.395486379 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.393671179 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.387462572 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.384879909 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.388753052 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.389701681 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.390862272 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.381827823 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.385221158 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.385221756 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.391719224 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.387095756 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.383278473 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.3895614 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.386710178 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.387632053 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.383252467 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.382036792 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.386421321 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.392746603 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.388810249 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.383905495 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.391303088 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.382000149 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.391891898 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.393047362 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.3886975 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.381709412 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.386116598 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.387226071 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.388331087 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.391375292 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.385939466 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.385986475 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.386772956 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.392589511 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.390059973 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.393797515 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.397430155 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.383958362 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.39008942 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.384993855 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.387538841 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.384401008 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.384676595 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.398871655 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.390864393 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.387305018 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.39072171 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.397638012 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.392324585 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.381040463 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.3849186 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.388603665 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.393235113 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.390341996 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.382676544 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.387576249 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.389807295 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.390783792 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.394878778 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.384811462 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.400314054 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.398420115 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.387857182 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.387532892 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.390094185 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.391818171 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.390556842 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.391533487 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.381816509 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.385538628 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.395030977 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.393757385 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.394600462 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.389154482 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.386691951 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.392943157 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.386491015 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.386561036 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.386153611 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.394661087 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.389064241 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.389219227 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.398002456 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.394897423 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.39093004 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.409213219 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.389904138 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.383351996 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.391849196 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.380291281 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.390093169 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.386160775 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.388316002 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.392525614 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.395607925 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.389305264 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.382254388 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.388429199 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.385324701 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.39077994 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.392577361 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.381037687 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.385314443 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.391550305 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.388866051 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.391903676 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.388438864 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.388595659 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.391535868 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.384873976 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.394410044 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.396127814 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.393011059 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.390417475 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.393077363 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.385051572 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.391241977 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.393754814 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.396011768 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.388798989 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.393406273 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.386712863 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.398176458 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.395192813 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.380604364 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.383802931 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.386224609 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.39620194 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.396465025 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.403220423 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.391150685 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.390435338 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.394839474 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.395287232 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.38552342 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.391384918 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.394586263 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.38546756 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.386239447 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.394151616 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.395020519 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.392076969 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.388672654 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.397659271 seconds)
  done (took 824.662412951 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.393592371 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.392888277 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.389255173 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.394118511 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.391032591 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.391544174 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.391269561 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.393858802 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.390512212 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.390278692 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.390660378 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.392207554 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.393464579 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.391655894 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.393566221 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.393090759 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.391968442 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.393467322 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.393996287 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.393405087 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.3935734 seconds)
  done (took 30.50427424 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.394351331 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.388381582 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.395045068 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.396051476 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.395068809 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.393798358 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.396092472 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.391814803 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.393854482 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395481746 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.394112428 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.393352597 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.393349386 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.395503463 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.396639324 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.394115235 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.397017771 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.395846078 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.396358459 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.394943615 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.396428744 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.398213456 seconds)
  done (took 31.950209759 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.393948021 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.394580593 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.388885099 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.397587213 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.399578228 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.398879544 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.396022665 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.398108456 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.394619787 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.386840191 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.385296027 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.388437013 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.392627796 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.402267991 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.390773824 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.397171856 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.395915548 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.396344105 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.393991523 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.396976025 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.396532109 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.400234925 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.396142777 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.38807967 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.397276925 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.399418907 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.39594523 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.395057479 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.389924046 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.399096963 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.398060922 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.389217993 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.394250675 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.394599162 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.390157538 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.400614994 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.396933354 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.397396253 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.396579055 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.399065153 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.413245177 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.395468309 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.40122564 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.402949748 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.39612768 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.394279443 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.403300602 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.400075856 seconds)
  done (took 68.276216841 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.398473424 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.398415672 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.39632677 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.39986091 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.398754263 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.397147061 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.399314017 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.397138001 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.397131495 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.397451365 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.398149785 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.396053375 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.397665213 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.397467582 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.397866117 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.399055548 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.399074354 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.398730512 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.398561209 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.39731673 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.398865549 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.399240269 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.398889918 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.400359287 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.401222785 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.401550111 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.397720784 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.398508985 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.400495525 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.397667928 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.399076173 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.401821188 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.400026102 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.401181572 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.399271855 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.398296248 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.399306471 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.4001853 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.398495119 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.400307114 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.398740423 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.400174067 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.400156777 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.399492956 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.400124234 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.400593825 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.39995514 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.399971955 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.403071817 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.399765213 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.400353154 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.401016401 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.400205614 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.397222826 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.401895151 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.400631907 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.40053984 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.399235221 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.403796849 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.399665113 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.402106204 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.401981235 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.400369693 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.403480264 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.402756999 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.402987283 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.402216114 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.400623719 seconds)
  done (took 96.447240039 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.403954938 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.402224647 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.400478833 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.401778168 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.40430182 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.402687064 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.40182308 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.401402114 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.402995109 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.402917571 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.407850848 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.40372144 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.401216315 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.405802229 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.400403393 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.403078462 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.404896708 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.405284612 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.405508086 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.406516746 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.406645267 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.405822177 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.405364707 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.405135214 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.40857966 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.405496628 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.402687594 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.405956859 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.405717635 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.406841449 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.403585715 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.408112664 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.408248542 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.405637809 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.404203655 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.407721781 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.405796482 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.406546677 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.40521733 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.40575586 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.407088969 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.407214044 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.404205411 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.40628382 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.405172426 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.405932096 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.407153488 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.405676064 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.40934585 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.403531782 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.405334593 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.403289386 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.405955818 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.40858035 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.406288105 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.405280391 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.407119332 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.407306421 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.405555155 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.407242314 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.408148915 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.409105948 seconds)
  done (took 88.4037397 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.411242574 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.406513605 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.406792694 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.405527268 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.406767901 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.405047617 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.405481375 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.407468172 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.405358555 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.40577253 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.410349491 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.40575532 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.405131175 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.408650812 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.405932238 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.406828238 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.405241772 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.409293737 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.406802833 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.407671393 seconds)
  done (took 29.416220096 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.407574387 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.408062837 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.408996487 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.407648676 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.407795846 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.409837394 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.410958154 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.410427458 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.407466306 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.408000805 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.409214278 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.409485012 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.410508957 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.410455036 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.409837603 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.40845989 seconds)
  done (took 23.823317742 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.409943463 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.40651075 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.407712957 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.410524927 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.409689156 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.408635898 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.406599569 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.411332266 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.411903644 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.410890915 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.409906384 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.409154012 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.409774994 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.407490408 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.412437164 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.408411916 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.411744266 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.412400706 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.410303155 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.410339185 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.414999463 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.413386088 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.411131023 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.413135043 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.412722132 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.41199322 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.410795933 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.409206663 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.409876272 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.411359698 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.409387845 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.409154391 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.411394871 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.410701636 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.410566245 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.412427071 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.410700556 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.41080157 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.412081292 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.409160048 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.409623721 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.410052908 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.412560667 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.412780466 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.411913348 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.411863835 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.412511793 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.413208151 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.412646451 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.411485143 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.411845892 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.411871797 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.412873027 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.412477339 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.413537327 seconds)
  done (took 78.88309887 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.411413384 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.412527221 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.414114389 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.412797148 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.41366588 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.415260991 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.411297991 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.412551604 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.415434125 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.412505341 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.417717811 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.411946899 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.414850894 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.411906602 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.417771118 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.41571984 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.411617577 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.413622357 seconds)
  done (took 26.727378365 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.414908497 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.412541581 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.414466316 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.412341109 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.414995756 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.414351634 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.414371659 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.413732219 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.413892291 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.41619631 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.41524351 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.415904988 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.415344891 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.415871247 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.413852399 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.412776296 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.416187329 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.41714536 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.412657787 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.415858125 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.413672176 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.41298318 seconds)
  done (took 32.402731827 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.407172027 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.408928911 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.409558029 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.423269515 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.419986165 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.406891983 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.410373606 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.408067171 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.431685809 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.450112441 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.446604923 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.421895925 seconds)
  done (took 18.326872859 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416867399 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418454824 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.415446178 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419139884 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418226693 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415728078 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415825564 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419261969 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419935498 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41870043 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414399566 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41901357 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417905689 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418768082 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416879694 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415514443 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418790965 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415870305 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417292805 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417861757 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418640812 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419059006 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419279985 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416982851 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41844342 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422257179 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418426969 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420200193 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419977727 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419896826 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417740266 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418402496 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417218757 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417626937 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419743348 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422403855 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418366319 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417093254 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419307642 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420865307 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.420522536 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418542814 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421852802 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418468333 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419890609 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419619991 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421649615 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420738503 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418495646 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418007566 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420638132 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419738475 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41888921 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418414527 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420234286 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420478486 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419635979 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422135106 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420708965 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420458642 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419040673 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417976553 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419220362 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423109311 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422139883 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41949385 seconds)
  done (took 94.938736073 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424179832 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.419620472 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42051422 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422110974 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42076241 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423748785 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422630399 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421222839 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422772064 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422593385 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420997353 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421733121 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422762147 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423985844 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422063826 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421044208 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423871104 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424770567 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420482666 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422273853 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419538392 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420511559 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422956471 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42445452 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425299995 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425064002 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424326438 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421879504 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420788686 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421840856 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422183802 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422970387 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422571733 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.424929395 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423880316 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423053782 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424598297 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421992778 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422147087 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423950619 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425382823 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426002149 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422207785 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427173258 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423470278 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424172883 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426235749 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428519623 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425534402 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422671814 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424532516 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423324494 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425515181 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42437177 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424596119 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423667126 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427784495 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426794492 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425398999 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425198506 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425071121 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424063203 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427977495 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426489078 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426505827 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426152301 seconds)
  done (took 95.253307628 seconds)
done (took 1931.714122132 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.586160889 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.541422771 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.414823209 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.430959744 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.413260019 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.414103269 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.428053148 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.415235954 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.417987315 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.417896107 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.419119733 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.614869719 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.449638355 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.417818731 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.41728654 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.522033579 seconds)
  done (took 28.610739886 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.448371288 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.430518528 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.534844082 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.427021473 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.448708142 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.611600915 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.482109844 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.427136064 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.587685356 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.442076737 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.420920823 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.448313067 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.422730141 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.423276441 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.44463443 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.604385699 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.669603622 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.425775066 seconds)
  done (took 30.992848645 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.851946839 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.435199389 seconds)
  done (took 5.583444241 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.444653277 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.426764975 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.424646151 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.422415809 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.417116866 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.431385565 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.423146021 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.435708253 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.419889999 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.55214077 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.432719307 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.435439123 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.423371621 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.424874644 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.431834123 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.468979578 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.564730765 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.438173186 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.432212037 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.429787117 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.423642804 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.520659331 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.470779664 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.438292135 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.548450027 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.428821586 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.434397047 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.432370679 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.553726329 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.438714847 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.42524183 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.42505967 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.428125062 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.432126296 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.90226955 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.424762595 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.446311447 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.43634516 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.432527701 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.567804515 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.432362656 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.430072191 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.41837572 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.899514523 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.576385971 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.551176627 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.424383799 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.430143744 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.427570291 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.490547981 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.429253895 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.427423066 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.481346082 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.259536743 seconds)
  done (took 90.480780604 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.446456593 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.419093475 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.588283552 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.443027847 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.424785085 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.417938221 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.418373179 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.693328707 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.466158985 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.418502198 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.729570618 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.939206479 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.424999145 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.485443114 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.016462427 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.42606255 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.419702156 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.416863478 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.418156334 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.423869388 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.929514306 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.426630069 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.420737371 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.465145758 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.458784493 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.900222421 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.423742897 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.419551266 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.441533392 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.422137733 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.896983941 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.432420693 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.49035116 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.421165306 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.69334267 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.793472695 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.76292738 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.422311372 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.42438123 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.420808264 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.451077649 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.883519306 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.768463749 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.427531393 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.437826214 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.885152716 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.421279224 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.43295159 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.42361463 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.644017349 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.427053996 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.423864482 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.435162156 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.428075273 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.440833835 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.499098434 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.422603543 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.919225837 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.420525694 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.422292104 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.460242793 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.423865825 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.42548175 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.426826211 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.424111254 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.776416418 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.616511161 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.427017135 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.771756888 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.886029853 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.426040592 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.961136867 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.426672668 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.442800839 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.626875931 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.43363916 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.423138561 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.940207374 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.428958735 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.422259621 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.759562885 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.429864954 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.719960423 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.439532639 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.426162315 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.959149754 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.435788145 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.461441991 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.424239175 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.424884924 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.424586221 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.427331138 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.699359379 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.451623658 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.424983329 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.423017386 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.4500629 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.423959601 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.43840823 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.426860666 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.964345015 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.431172927 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.423843043 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.430851358 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.424949352 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.429505247 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.427574594 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.424274903 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.668866868 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.429726286 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.431791887 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.427127287 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.425120289 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.432614734 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.47195891 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.426744531 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.730342546 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.434315316 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.426995497 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.431108281 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.426656728 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.482591943 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.427456328 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.429556447 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.299621712 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.665584829 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.44423242 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.431076424 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.425875393 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.427250949 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.426988252 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.426152937 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.460142823 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.429357297 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.172204066 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.449888663 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.450686964 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.427244466 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.432363961 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.427398399 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.429209682 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.428878142 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.728566301 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.704673173 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.604535812 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.430092676 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.436911272 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.175519893 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.449762546 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.568980068 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.450170376 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.429497764 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.648499139 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.64911074 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.428598986 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.431482419 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.432147424 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.65715477 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.435637736 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.754286893 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.934311413 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.433777703 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.432859587 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.17784126 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.149307167 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.435258083 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.42964089 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.716947918 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.444735349 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.428370936 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.428510786 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.430587474 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.435510175 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.432126605 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.439846564 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.429252364 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.430209565 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.704675448 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.60726279 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.445228502 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.429844872 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.9017873 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.504967841 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.431084055 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.436743899 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.43168663 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.4309549 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.432935107 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.42874554 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.438633677 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.434401622 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.438837505 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.92484685 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.434312063 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.439861669 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.58536549 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08566223 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.433590794 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.432556227 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.435173419 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.032232797 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.96036536 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.505990644 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.727434648 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.440524511 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.469743541 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.435451615 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.456561969 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.929846776 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.436402963 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.435414743 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.060588543 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.436350222 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.841096458 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.432846822 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.433147374 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.983874248 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.436921931 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.437112091 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.432000606 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.452373679 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.719203675 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.437096646 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.486955341 seconds)
  done (took 517.494464687 seconds)
done (took 674.450970938 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.432559674 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.433183513 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.421156697 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.437466271 seconds)
  done (took 11.038689557 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.45173726 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.440347648 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.448409838 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.439333665 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.451837155 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.439961243 seconds)
  done (took 9.987449305 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.433135964 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.433848616 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.437898906 seconds)
  done (took 8.619907465 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.652628042 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.460612968 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.791117359 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.441038289 seconds)
  done (took 9.661323988 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.447995021 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.449988817 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.446690849 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.448757088 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.451603845 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.452843566 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.454544076 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.448801841 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.449547636 seconds)
  done (took 14.368819864 seconds)
done (took 54.991094597 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.430258269 seconds)
    (2/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.507566265 seconds)
    (3/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.467909073 seconds)
    (4/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.326249721 seconds)
    (5/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.246733402 seconds)
    (6/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.423483757 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.674067845 seconds)
    (8/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.47546322 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.47270861 seconds)
    (10/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.650782872 seconds)
    (11/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.473639692 seconds)
    (12/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.51870211 seconds)
    (13/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.152128895 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.44648183 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.539595629 seconds)
    (16/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.430815494 seconds)
    (17/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.580391349 seconds)
    (18/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.422526579 seconds)
    (19/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.254457172 seconds)
    (20/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.474319819 seconds)
    (21/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.441127228 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.51287756 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.423873994 seconds)
    (24/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.550045516 seconds)
    (25/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.519218658 seconds)
    (26/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.477023522 seconds)
    (27/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.653728375 seconds)
    (28/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.098828004 seconds)
    (29/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.421547511 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.533256994 seconds)
    (31/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.579268351 seconds)
    (32/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.239060639 seconds)
    (33/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.54860231 seconds)
    (34/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.420699128 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.510301341 seconds)
    (36/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.436419044 seconds)
    (37/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.530370467 seconds)
    (38/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.420495936 seconds)
    (39/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.457767949 seconds)
    (40/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.256174075 seconds)
    (41/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.425740292 seconds)
    (42/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.103178082 seconds)
    (43/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.587783281 seconds)
    (44/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.479706375 seconds)
    (45/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.584102637 seconds)
    (46/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.419995429 seconds)
    (47/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.436660412 seconds)
    (48/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.421756647 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.420629413 seconds)
    (50/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.286229328 seconds)
    (51/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.509106579 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.59060852 seconds)
    (53/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.419791093 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.534318783 seconds)
    (55/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.473141506 seconds)
    (56/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.695796336 seconds)
    (57/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.55921576 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.659325657 seconds)
    (59/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.450587592 seconds)
    (60/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.402504812 seconds)
    (61/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.520272271 seconds)
    (62/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.418890648 seconds)
    (63/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.590112326 seconds)
    (64/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.627277955 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.563862859 seconds)
    (66/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.77447033 seconds)
    (67/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.427237002 seconds)
    (68/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.478144992 seconds)
    (69/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.385866575 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.534691648 seconds)
    (71/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.484378182 seconds)
    (72/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.4230368 seconds)
    (73/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.562323837 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.601633953 seconds)
    (75/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.610497336 seconds)
    (76/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.613188008 seconds)
    (77/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.545475808 seconds)
    (78/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.666201931 seconds)
    (79/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.512000891 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.531514819 seconds)
    (81/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.58048465 seconds)
    (82/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.623253488 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.556172432 seconds)
    (84/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.475231321 seconds)
    (85/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.686201591 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.527467415 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.599543413 seconds)
    (88/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.43084031 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.611414081 seconds)
    (90/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.430043196 seconds)
    (91/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.661597142 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.554885796 seconds)
    (93/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.520893673 seconds)
    (94/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.563218962 seconds)
    (95/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.617022789 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.558817741 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.479596288 seconds)
    (98/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.508001932 seconds)
    (99/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.58403034 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.517769316 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.501195175 seconds)
    (102/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.288004606 seconds)
    (103/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.520259852 seconds)
    (104/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.185822444 seconds)
    (105/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.561193833 seconds)
    (106/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.568265002 seconds)
    (107/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.427843017 seconds)
    (108/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.482851514 seconds)
    (109/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.475708707 seconds)
    (110/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.207610606 seconds)
    (111/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.62817823 seconds)
    (112/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.667552329 seconds)
    (113/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.442666398 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.485166787 seconds)
    (115/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.329481186 seconds)
    (116/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.586850601 seconds)
    (117/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.558867373 seconds)
    (118/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.478613995 seconds)
    (119/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.293024694 seconds)
    (120/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.664480418 seconds)
    (121/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.430656616 seconds)
    (122/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.145097402 seconds)
    (123/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.53406888 seconds)
    (124/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.579625084 seconds)
    (125/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.534387809 seconds)
    (126/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.709273949 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.430286706 seconds)
    (128/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.442918337 seconds)
    (129/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.452084043 seconds)
    (130/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.430885966 seconds)
    (131/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.582550765 seconds)
    (132/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.158162201 seconds)
    (133/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.507731725 seconds)
    (134/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.425706143 seconds)
    (135/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.59037297 seconds)
    (136/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.551761295 seconds)
    (137/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.528934625 seconds)
    (138/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.431373715 seconds)
    (139/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.20067665 seconds)
    (140/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.52956184 seconds)
    (141/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.556070831 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.67576631 seconds)
    (143/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.148421935 seconds)
    (144/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.516941149 seconds)
    (145/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.55940647 seconds)
    (146/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.627468717 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.551608865 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.549083659 seconds)
    (149/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.428372838 seconds)
    (150/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.43871663 seconds)
    (151/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.634617018 seconds)
    (152/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.449243962 seconds)
    (153/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.441112186 seconds)
    (154/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.44224498 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.506138474 seconds)
    (156/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.427444677 seconds)
    (157/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.591587346 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.578259293 seconds)
    (159/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.450933193 seconds)
    (160/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.494744132 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.484448836 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.57303559 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.56084554 seconds)
    (164/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.619142154 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.601218077 seconds)
    (166/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.620571562 seconds)
    (167/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.700329715 seconds)
    (168/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.43369025 seconds)
    (169/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.25644163 seconds)
    (170/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.550595728 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.458618588 seconds)
    (172/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.630301548 seconds)
    (173/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.30166776 seconds)
    (174/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.573570419 seconds)
    (175/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.432236437 seconds)
    (176/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.460978758 seconds)
    (177/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.512557119 seconds)
    (178/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.443146583 seconds)
    (179/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.580400944 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.65580248 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.6070735 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.556132256 seconds)
    (183/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.42986664 seconds)
    (184/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.268745559 seconds)
    (185/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.211819287 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.454740245 seconds)
    (187/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.479530462 seconds)
    (188/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.532097295 seconds)
    (189/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.483048501 seconds)
    (190/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.492636098 seconds)
    (191/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.534268832 seconds)
    (192/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.430414279 seconds)
  done (took 361.292627822 seconds)
done (took 362.60675833 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.471324035 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.544268633 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.455260622 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.454713153 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.45528995 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.448622411 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.497913978 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.456157722 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.468087373 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.468888847 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.462876024 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.469062815 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.468422564 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.466262934 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.489804075 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.455606399 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.456122389 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.466931943 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.469448924 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.470363897 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.459280339 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.457728925 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.479213498 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.454835779 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.465833811 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.463812718 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.462680582 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.448806942 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.485167309 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.472100142 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.460631024 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.470665165 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.473202513 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.469309224 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.457387763 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.465818797 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.459022897 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.547820426 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.476640869 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.467482173 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.465537437 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.473442894 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.46335436 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.46447698 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.469465854 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.481605093 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.464774314 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.47388575 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.449258427 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.462452294 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.47441332 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.469802415 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.466692188 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.462738009 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.459522228 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.474038081 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.466874646 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.473607814 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.464851104 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.461127064 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.492264223 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.47432967 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.4720345 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.469053633 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.466876058 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.472818124 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.468630374 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.474700529 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.466017661 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.461451726 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.460003146 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.467258682 seconds)
done (took 115.108381194 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.588893165 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.458893261 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.605650511 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.468619349 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.624939049 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.595712971 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.466039618 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.465051405 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.465197757 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.321891382 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.468021592 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.467538438 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.460994151 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.467651052 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.593399136 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.469025713 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.467413001 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.20977651 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.467794737 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.60515526 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.457134062 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.467510329 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.471034485 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.290111776 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.461029331 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.457941964 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.597591015 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.465548095 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.227782414 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.44956935 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.459982488 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.169083783 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.595001876 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.477698621 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.468853502 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.467149678 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.618093405 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.457697837 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.579516168 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.579005375 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.594276625 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.49366547 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.442472185 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.450118682 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.458779618 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.458474983 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.457662419 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.485388348 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.453011104 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.454893958 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.207134175 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.469030221 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.457349845 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.457195533 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.457225153 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.485663517 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.456828567 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.456273399 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.592819312 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.456097618 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.577946089 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.32389571 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.309612686 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.457418332 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.447645237 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.456509095 seconds)
  done (took 117.106595913 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.516070759 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.525604867 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.558487437 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.449569165 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.500325237 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.560694848 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.452428128 seconds)
  done (took 11.885030087 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.455673054 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.459939627 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.498836558 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.499051461 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.459161565 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.607352425 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.457617863 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.461276912 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.458241982 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.50216547 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.456711309 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.456619756 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.465364657 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.446832161 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.49703075 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.460224068 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.565157356 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.451835348 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.454417834 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.598986533 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.454529611 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.461408433 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.496635647 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.458429883 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.450236378 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.450928041 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.224452295 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.454371089 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.451246524 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.452370342 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.453206687 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.49959248 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.451782385 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.445089152 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.453206128 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.562946998 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.454566916 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.454064038 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.455138962 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.447330795 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.452554918 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.451260369 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.454186465 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.454080318 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.454784594 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.469840912 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.45415338 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.455901344 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.453601268 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.45245804 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.496697896 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.453997216 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.455065332 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.455577919 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.50337325 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.463525387 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.455185783 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.456768812 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.455922857 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.456115917 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.601520783 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.495791176 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.454925254 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.499069646 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.453037294 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.452526564 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.452174565 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.451975166 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.499432355 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.455572716 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.489579836 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.450558393 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.620348848 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.466697268 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.451229128 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.447037556 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.446756504 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44426229 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.43520546 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.443769382 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.444968164 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.437665212 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.444003463 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.435796609 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.43836158 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.592182783 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.539549938 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.441009622 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.445741582 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.43801678 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.438098379 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.487586094 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.437061192 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.43874778 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.487261302 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.548783323 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.482809525 seconds)
  done (took 148.762339205 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.446680186 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.446709643 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.43101721 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.456175391 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.434245617 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.429441072 seconds)
  done (took 9.951634877 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.435209613 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.442201172 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.443185718 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.442007978 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.436969487 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.440093748 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.441022642 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.431033101 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.443397332 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.441675506 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.440534345 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.443029509 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.438914665 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.436818399 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.437564515 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.440176473 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.441051031 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.43837544 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.444650216 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.439449289 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.432138695 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.444455135 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.443569574 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.432905138 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.443913665 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.440454121 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.457314548 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.443419671 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.442314946 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.440299785 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.444059074 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.442341975 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.439215883 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.442121869 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.446185772 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.439200931 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.446702073 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.448560905 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.444356939 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.449324203 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.438264025 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.434227052 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.436925636 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.438840838 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.429154476 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.432204681 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.441632488 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.450161322 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.437289151 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.437583249 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.43811457 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.434081436 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.438487805 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.438536106 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.425147343 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.42802908 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.436355325 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.430980533 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.43236194 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.427344926 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.432368919 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.427204562 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.420427 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.428547006 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.428726135 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.431902805 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.420531875 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.431709246 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.422684152 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.424883767 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.427367914 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.424952607 seconds)
  done (took 105.794045272 seconds)
done (took 394.832685577 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.752644733 seconds)
  done (took 4.050531349 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.453074693 seconds)
  done (took 3.750759278 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.583266641 seconds)
  done (took 22.886927779 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.445891629 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.516265754 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.439360237 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.41308245 seconds)
  done (took 11.113188003 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.723783445 seconds)
  done (took 4.024336833 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.421300845 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.423888446 seconds)
  done (took 6.146104442 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.643774818 seconds)
  done (took 3.944406239 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.649093663 seconds)
  done (took 3.949686475 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.447872825 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.433555876 seconds)
  done (took 6.187798115 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.393716571 seconds)
  done (took 3.691572543 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.383608317 seconds)
  done (took 20.682499247 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.434591906 seconds)
  done (took 3.730682671 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.482734682 seconds)
  done (took 3.772937182 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.935541637 seconds)
  done (took 6.227099584 seconds)
done (took 105.457691671 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.401131267 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.407184559 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.408033813 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.40399252 seconds)
  done (took 10.909714057 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.461878273 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.464459311 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.470081546 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.463133025 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.462924063 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.462515235 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.4367705 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.437854016 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.464741173 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.467067647 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.4685747 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.458977089 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.461954233 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.434887735 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.459988855 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.467596548 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.462281684 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.466588411 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.43534949 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.460905435 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.409591924 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.462937548 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.460158882 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.413074634 seconds)
  done (took 36.203281139 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.919880556 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.470526539 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.554197882 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.451893741 seconds)
  done (took 7.684126363 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.486937122 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.488047013 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.504439716 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.540965049 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.571049943 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.503068994 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.432400992 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.426869308 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.412969718 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.487900667 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.538394395 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.470185338 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.572242904 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.405324379 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.623753396 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.402926387 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.402763725 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.484149506 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.536675427 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.564179943 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.404056066 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.481313081 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.487524617 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.467087608 seconds)
  done (took 36.981489246 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.411686418 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.422610449 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.403179095 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.415206913 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.400855819 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.403248943 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.403568954 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.407798795 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.401687323 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.40245221 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.402243053 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.413556125 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.398674336 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.401535771 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.406127488 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.403352722 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.402914861 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.4052554 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.406975332 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.400518749 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.39902706 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.406725368 seconds)
  done (took 32.200429914 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.384521469 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.382940089 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.733042968 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.639602062 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.383095301 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.390985298 seconds)
  done (took 14.192164239 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.455878097 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.600127265 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.39381279 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.734975385 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.825854279 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.393467983 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.38964895 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.631262258 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.929817183 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.931620491 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.446360031 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.465346673 seconds)
  done (took 20.473251531 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.394930072 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.390101533 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.391526411 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.403208145 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.442997892 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.397613677 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.395561265 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.385110496 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.448901784 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.4524217 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.399957001 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.443751841 seconds)
  done (took 22.223650253 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481217785 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393143527 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.391843512 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473875181 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397651585 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.233791409 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395034832 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.130209283 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.40353957 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671337262 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395942298 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483559135 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.647102283 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408488443 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399094257 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.367568801 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623755395 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90239285 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399334638 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39257163 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445698826 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394722772 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41346832 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603693982 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.238577868 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39466713 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.657585976 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395502595 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686000306 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662727894 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.663760588 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399041463 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672919027 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035161103 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497740339 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.603393092 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403676441 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395989716 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.371623737 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.40639612 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412604151 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395747436 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.659937658 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403992941 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399502093 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396121152 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159076598 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.406474279 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.39923051 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398070191 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665335808 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497704016 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.401969303 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396474783 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463538828 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398325332 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.40366111 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518275459 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96039202 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405590951 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404368162 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.417515945 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394128874 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395345065 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063469559 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.402192958 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.404418697 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400838648 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399290802 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398308764 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419736812 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397728457 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.41694983 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400593189 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194665197 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405801854 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405185636 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966666966 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404748555 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.417494037 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633929288 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39935046 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400706746 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.399234323 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400669799 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136970344 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407417987 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.372466817 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460672815 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134924736 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.609425449 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42133307 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430861305 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620058916 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.373254409 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399777205 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.402331329 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402157207 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421677898 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140549575 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402476986 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.40271962 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656634087 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.610962622 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409723762 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.385176222 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891177785 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400102357 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.428696065 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402166287 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.627128659 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.044210796 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66478146 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415348432 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433780452 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401502806 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195521766 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402048904 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.422726714 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405613802 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676164374 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.23338299 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403674185 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46979447 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408932513 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402855425 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403040026 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403318087 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402003927 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.597603369 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405813913 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.674260755 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.409126275 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404235068 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.409089334 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413422712 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.401051211 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.624295423 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402299604 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684049157 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403628167 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405425734 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405933861 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.625067505 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.420959808 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.414387631 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667128342 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404103363 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411422661 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675912227 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442224766 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51645412 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43848232 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.415988212 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.662139614 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.411425647 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.414744113 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403294434 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411060881 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408632079 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.416195189 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420464145 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049324919 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377862991 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402971676 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403465939 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.421174371 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473784579 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413407818 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609569463 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.408366882 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418157141 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.408137065 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.409991164 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632113729 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667852319 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.418528479 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480434237 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.890484631 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052400644 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417985665 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.404446066 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.404098987 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.406946985 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410175898 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406683843 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407483732 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616896654 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679353338 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.424184664 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.046487666 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403416776 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406608006 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.414428937 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66924896 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.415886906 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409814438 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.408790456 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412374368 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412576425 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.678401768 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547497764 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.425007378 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409088348 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.925293491 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.416624652 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410392572 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411757304 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440734653 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408398997 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31089419 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672436975 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42634665 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672544372 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415553411 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.424873556 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.407989524 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409372601 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424481871 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.429676108 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420071109 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.620537348 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.410503155 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409796928 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963479213 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210347813 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007595115 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406508597 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.441048871 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414958623 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.151302268 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413366655 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413070186 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644918002 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.15083614 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41363922 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897622442 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.412471457 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170099257 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.674745993 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647943702 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41286008 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.410260518 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684582564 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626295786 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441321238 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421318535 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41534085 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.383429585 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986751891 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427507415 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490746698 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158709443 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416301121 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.417179722 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.469424199 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.430480642 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799912513 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411972487 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413326967 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412402027 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.44157342 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32495362 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415824666 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411356598 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075688192 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413950086 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.904821529 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414554187 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.623072727 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.676783168 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.663316308 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.426539931 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.412397085 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.665263809 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680480757 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419428475 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414256082 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002218172 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.284542602 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.422335421 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415755698 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21018369 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430511759 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.710521573 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.42521196 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.420540956 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418032556 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414714024 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414454237 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.412703111 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418726294 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391157452 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921949866 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.418569073 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410653486 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42325597 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417354123 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.667387587 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.431822343 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.066823136 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644963979 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405296226 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444131668 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.421121669 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417276149 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.393331198 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417326822 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416600225 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456213441 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6389179 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.416826847 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.393700495 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.42360803 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628530116 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414543164 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.4265362 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640725588 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.418512003 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.441272237 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218978053 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445680782 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.428218218 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420036572 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415436351 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457361388 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48361514 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627758232 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.68730699 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.687618842 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804882609 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428522867 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421869874 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.432260922 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512508056 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429628706 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.429541175 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.189423602 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07031812 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253296917 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.060546331 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683828644 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422159452 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423154063 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419462542 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550602261 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419054206 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694667222 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41818236 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.411023631 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439297678 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42460348 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421924899 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631626852 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695066019 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420635236 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419430799 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423494653 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.418509376 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.688042362 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.632663335 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932092879 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006990585 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422483533 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420237798 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.176552468 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695580158 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418955758 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419841451 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419095769 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.416166425 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.424792191 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.427950238 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417630234 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555522331 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688007114 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066464472 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6893936 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.461084359 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.938245965 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424030523 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.675257327 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.19058775 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.631443884 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.076200127 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.18827093 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686532331 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491784278 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630278185 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.423049619 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554704196 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.42122222 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421993436 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421676433 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420645891 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.419874889 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.68984136 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071419065 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683718082 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.428279258 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.421753363 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452589039 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.633298605 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.643803386 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169581162 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645083689 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.69019184 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.427609495 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421962855 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075428159 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.694723285 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424162348 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.427138263 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647844534 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423755344 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448162856 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.113139178 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.423300939 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990150182 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.313301399 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444286673 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434125769 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.186345127 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069268405 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.43654669 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933565347 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424183486 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437341619 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700257242 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.431308952 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421160215 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704978136 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.429808077 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.434787949 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638488795 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.07834845 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183450824 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.430028644 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426199672 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.427495011 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42478134 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438884772 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42656306 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428350798 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.81923638 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.423601421 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42600237 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43524908 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.437212268 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425801233 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.427295597 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425811124 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.428810773 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.410043809 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.412127453 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428210228 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550012061 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984859374 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429121213 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.10548447 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.774659242 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.681498086 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.43862342 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.40152695 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.433943048 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427069263 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426636817 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424423619 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416499018 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996836718 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.441941967 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.692002853 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434328319 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.636366335 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638815022 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.439523292 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639662621 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428573596 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452180332 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.402658721 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42926439 seconds)
  done (took 999.591762318 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.443278897 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.441177206 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.444130073 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.433408018 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.464140509 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.441698181 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.449612164 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.501837577 seconds)
  done (took 20.92325563 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.422333188 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.427312698 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.433774189 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.431846381 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.433085628 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.900316002 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.428567093 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.42706449 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.441942642 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.42504875 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.430921323 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.104379806 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.449896953 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.431813385 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.40237667 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.432278831 seconds)
  done (took 33.334264126 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.519885279 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.61298746 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.391908326 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.476710084 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.459785818 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.420449631 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.682994903 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.436701468 seconds)
  done (took 27.309103225 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.432430179 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.432289094 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.435315606 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.433501634 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.432363442 seconds)
  done (took 8.474390712 seconds)
done (took 1271.792494409 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.435908336 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.436766632 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.434716403 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.437038608 seconds)
  done (took 7.050653718 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.40385047 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.4020418 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.406859992 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.419147266 seconds)
  done (took 9.939014723 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.13080061 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.029383395 seconds)
  done (took 5.468418914 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.917349391 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.924587479 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.918644122 seconds)
  done (took 7.065486877 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.710509194 seconds)
  done (took 3.013494871 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.348400328 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.423798846 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.100174331 seconds)
  done (took 8.179080098 seconds)
done (took 42.02331937 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.428734201 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.669451973 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.578371132 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.421831813 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.581118008 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.58042575 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.193759157 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.421781049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.433779478 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.427625954 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.427662779 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.583987343 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.177452047 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.671362149 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.182308164 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.764668955 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.586895794 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.42227305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.420086208 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.41858886 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.205866394 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.424248566 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.427671838 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.435177008 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.586605265 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.569002569 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.421750785 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.764765232 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.423551257 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.42105789 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.562935278 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.426619414 seconds)
  done (took 84.368387343 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.424287679 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.442091243 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.435974462 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.42058797 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.436556542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.433246611 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.423622967 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.423112122 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.431871837 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.418612104 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.436322555 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.421282055 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.425048834 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.421906448 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.422576419 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.420534705 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.423047406 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.423136962 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.423637213 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.42371421 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.4234045 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.428599301 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.422960442 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.427000381 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.438508999 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.424689592 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.44242744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.428601441 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.423045909 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.432445247 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.42219886 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.451834731 seconds)
  done (took 79.004699734 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.426536345 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.420816389 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.422298547 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.423790775 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.423186215 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.439308082 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.426716883 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.422413204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.437980153 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.423850146 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.423251348 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.439088378 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.440458237 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.424026901 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.427906212 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.424248574 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.424880751 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.438632899 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.434820931 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.424875392 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.421133009 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.436085119 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.429896888 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.434926633 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.437440249 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.427299266 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.427194436 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.427420453 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.424311456 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.429219417 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.421527807 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.42295262 seconds)
  done (took 79.018941154 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.669302842 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.441231685 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.44609428 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.439512264 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.44698117 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.439931107 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.436372999 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.672482036 seconds)
  done (took 15.304475854 seconds)
done (took 259.00496868 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.443541899 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.944305453 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.468967786 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.438989938 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.451383067 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.463243833 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.659584415 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.466600011 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.664353008 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.459423246 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.449395571 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.436602836 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.260600398 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.588661948 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.279140535 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.384789566 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.312639172 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.4281172 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.016058213 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.716470283 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.460892964 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.443677834 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.279263514 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.34074288 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.414879662 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.517037168 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.533942399 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.658230206 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.601993359 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.509497937 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.95541964 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.448551131 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.441514917 seconds)
  done (took 66.251588985 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.43330192 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.443351097 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.442318427 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.445767578 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.44334421 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.446713124 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.435814402 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.443757902 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.446314012 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.445239371 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.442877446 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.445643816 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.446100756 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.445059419 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.445608125 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.425559979 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.43928533 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.447259659 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.43820907 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.422696905 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.446834655 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.446180649 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.44626657 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.448746776 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.447957539 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.447195102 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.446340252 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.445013358 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.447320373 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.447297999 seconds)
  done (took 44.608087239 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.446182026 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.00817689 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.168044977 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.448522723 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.439560886 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.441387198 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.729555241 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.450495616 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.43972944 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.439657171 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.92694073 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.454395547 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.475065285 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.175326163 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.446203054 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.446913399 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.448288989 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.440480587 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.021656093 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.454045175 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.724637631 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.451761279 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.729460181 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.454444857 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.440874409 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.442602319 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.448032262 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.257948876 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.464751137 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.925877269 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.225058109 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.723438247 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.205032172 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.228475203 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.224426208 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.452703722 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.450677546 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.934355873 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.447021801 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.4426086 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.726267443 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.445030412 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.18734555 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.111663495 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.46112999 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.451277244 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.303524564 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.931514436 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.686646975 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.450448848 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.212767097 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.448551817 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.4533596 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.442778478 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.682767681 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.447223348 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.443794838 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.312375199 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.449509407 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.725256916 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.453185134 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.444287196 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.019277708 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.445032707 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.014523578 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.4478298 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.451924655 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.441917141 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.188383917 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.449902563 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.129164979 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.463247962 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.451074567 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.926684799 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.019167127 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.341213989 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.446719882 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.027759741 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.222564421 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.745114624 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.449840726 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.258262482 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.748541219 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.450846885 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.454172462 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.454239378 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.453053313 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.515341153 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.722806671 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.065457653 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.129856012 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.320777465 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.731403689 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.454829026 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.445648996 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.314534327 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.454562382 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.453410133 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.179263673 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.134751703 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.461944504 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.455178392 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.11471099 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.466953733 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.729642455 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.454286943 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.223656076 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.449051136 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.519922338 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.455749255 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.45272074 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.448508271 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.731254375 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.45328662 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.454630539 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.114170464 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.958228289 seconds)
  done (took 200.931473999 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.440452273 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.436976387 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.442451044 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.43867317 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.439921639 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.446757722 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.442942541 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.442453969 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.446783726 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.439418977 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.44180009 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.449143872 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.448306024 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.442471928 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.441020953 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.439556399 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.443791433 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.462150623 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.439204555 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.441881574 seconds)
  done (took 46.189335253 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.455059307 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.007778639 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.972296881 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.456784388 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.456630339 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.448340408 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.505267205 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.462115144 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.45755991 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.748695204 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.62248543 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.461941234 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.455740467 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.457208289 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.972464364 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.435514841 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.74939651 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.010456757 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.46090415 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.009020878 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.440157044 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.458385035 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.448979083 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.008339184 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.763460752 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.735295815 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.512265911 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.013214467 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.461220224 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.457513146 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.011329026 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.461357246 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.450864873 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.002354476 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.46165844 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.47238227 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.459173768 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.508783614 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.512527449 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.754535652 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.018374717 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.746073978 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.471478999 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.629867666 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.459209955 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.435801784 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.022685181 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.460600824 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.435174436 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.46108509 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.463954723 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.989211308 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.455196418 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.984993717 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.461007373 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.458197348 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.011790896 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.990457489 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.976797813 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.623965831 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.453149068 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.735099587 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.4635025 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.02547436 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.462976536 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.458899062 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.459803779 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.626292641 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.017470361 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.738484408 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.758569933 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.757106685 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.462577668 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.521239273 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.462528926 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.753613784 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.518253048 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.876187597 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.751196522 seconds)
  done (took 131.184719313 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.717154619 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.568707611 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.828861335 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.046119279 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.975722989 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.590949615 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.568124341 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.690623031 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.465816323 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.548218978 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.110110643 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.557612094 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.20390151 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.522637654 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.567266583 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.580578879 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.875070128 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.429749626 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.128605863 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.069652296 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.459499518 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.558124697 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.9730997 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.64762625 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.452759723 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.009693542 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.422765812 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.982883486 seconds)
  done (took 54.882170106 seconds)
done (took 545.359744063 seconds)
SAVING RESULT...
DONE!
