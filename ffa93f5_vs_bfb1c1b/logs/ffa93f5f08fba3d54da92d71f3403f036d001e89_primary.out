cset: moving following pidspec: 7025
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.486734997 seconds)
loading group "string"... done (took 0.540634631 seconds)
loading group "linalg"... done (took 8.83641523 seconds)
loading group "parallel"... done (took 0.178527479 seconds)
loading group "find"... done (took 1.294008351 seconds)
loading group "tuple"... done (took 2.025898265 seconds)
loading group "dates"... done (took 1.493017716 seconds)
loading group "micro"... done (took 0.199479203 seconds)
loading group "io"... done (took 0.536982866 seconds)
loading group "scalar"... done (took 50.485959002 seconds)
loading group "sparse"... done (took 13.569126927 seconds)
loading group "broadcast"... done (took 1.28486396 seconds)
loading group "union"... done (took 10.094819955 seconds)
loading group "simd"... done (took 3.017619911 seconds)
loading group "random"... done (took 11.649051716 seconds)
loading group "problem"... done (took 2.202750092 seconds)
loading group "array"... done (took 23.968141216 seconds)
loading group "misc"... done (took 1.129521315 seconds)
loading group "sort"... done (took 3.733092958 seconds)
loading group "collection"... done (took 19.111230789 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.613219193 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.187293601 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.205229895 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.288151172 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.234586548 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159739096 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156944187 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.247084703 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.574054853 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208269147 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.132449362 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.494925204 seconds)
done (took 6.241289065 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.251851438 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.17778354 seconds)
    (2/2) benchmarking "String"...
    done (took 0.169839863 seconds)
  done (took 1.032115473 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07364551 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.151350672 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.105872071 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.091688435 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090588354 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106736939 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.090543191 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106234023 seconds)
  done (took 1.431723128 seconds)
done (took 3.480584705 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.504767661 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.868193527 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.519844659 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.162007532 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.299935373 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.295182653 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.31410781 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.203772654 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.107053995 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089856254 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176134582 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.400295145 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.429460434 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.950482123 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089421037 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.112674914 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.117269992 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.778490577 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079941464 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.125722969 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.492316156 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.190516102 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.097004558 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123075028 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184028175 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131185543 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160581319 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103653273 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.666879283 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132386205 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.188456393 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095929776 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160239179 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.196723414 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.206881494 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.091335584 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685127846 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201256564 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.090632415 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097763475 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671794121 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120417386 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.184737388 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.1018991 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090677714 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.183874611 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.093938506 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077382854 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.113726103 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083518439 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164394072 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.458066303 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105795027 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170697247 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.0909916 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.691621597 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100389807 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276751312 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123989916 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093872649 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.088378433 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086564299 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16261005 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092302959 seconds)
  done (took 20.072566454 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145956968 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.162686994 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07607335 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155131626 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.125001651 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080399526 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099933794 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076735142 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122754448 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.219573911 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134864539 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152574347 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089408564 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088412135 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.1274279 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247056428 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106792221 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12061537 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086905642 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087921053 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138305429 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093361901 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105404204 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092919836 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168361367 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202422876 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108697092 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12351989 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091144548 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096656029 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139714469 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146236643 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092124529 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085882496 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.184830527 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104637367 seconds)
  done (took 5.188102331 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.197998806 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121633991 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.211828999 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.160994359 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141654625 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166026859 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.149950249 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.280833147 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.22262484 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163699159 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127825733 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103551405 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093779911 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078899861 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076975426 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.491227422 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.136434816 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.170359391 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.133491272 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105493927 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080048232 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.383931651 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083270109 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095494501 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084739783 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066069002 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.197232197 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100534943 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.061802098 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.103451945 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088913515 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130495933 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191392766 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.118361242 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139493202 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084223036 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.0788628 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.215610975 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108586408 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076040556 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105188488 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131788785 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111604033 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099553967 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109020593 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219407079 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081759999 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102318113 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.069042339 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196885804 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.154598157 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097258745 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284998691 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097214481 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084839459 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.10029213 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.25538646 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129359463 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.0824418 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077887594 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106760584 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078573612 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.431964894 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104223062 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.960744782 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.094405303 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.15495575 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083106923 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103145033 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084233744 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08284953 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116732563 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079596452 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076018445 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094782696 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078860239 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081681045 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155990594 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.09235458 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101608456 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078467819 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145683715 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113481754 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097625378 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121550517 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085758994 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077255949 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125469353 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080432761 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080862928 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.169947453 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084808999 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109337798 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083864581 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140924569 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080040871 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097925363 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.211303762 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09572308 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084032115 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.109089809 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10285874 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079192064 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126196408 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115583303 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079995035 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081002591 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093884971 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079516397 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145320485 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092900768 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081860589 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08092205 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107899047 seconds)
  done (took 22.946673513 seconds)
done (took 48.893855547 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.455708393 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08578093 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08437438 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105669174 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085341884 seconds)
  done (took 1.584901177 seconds)
done (took 2.329580905 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.323559949 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.194886438 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097387084 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190787386 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084230997 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196606752 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184460864 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09365452 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209468427 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083896596 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.189930607 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083060616 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10265936 seconds)
  done (took 2.803079983 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102413064 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108856285 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.118095092 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102902696 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082795647 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100443036 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116227209 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111490743 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099213223 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110174025 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083365116 seconds)
  done (took 1.881329009 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098786388 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105698974 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09718365 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116022211 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083883562 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.0983411 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114491423 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108019967 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09867299 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110231626 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084601474 seconds)
  done (took 1.864207297 seconds)
done (took 7.293548752 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.096861731 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.682238603 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.145473669 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.20984368 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.352634034 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.240193091 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.578725312 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.153107805 seconds)
  done (took 14.360058146 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.169209317 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.11045623 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089429813 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094309573 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092457051 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.107227462 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091000329 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089965812 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.111774688 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092999365 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090407573 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.1086756 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090760541 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093698114 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.092464696 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.104463373 seconds)
  done (took 2.434336291 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.149444267 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121936498 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.113076764 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.096702258 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091669009 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.114464271 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098885685 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.112194392 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091679606 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.092496254 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099538593 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.111224329 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.094374746 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.089494903 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.112644056 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.121918639 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090248381 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.112374012 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.120303304 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111145581 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.098111628 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.092700982 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.109846844 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097258416 seconds)
  done (took 3.373776536 seconds)
done (took 20.917144218 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148163523 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099591387 seconds)
  done (took 0.998308974 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.143270649 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.159280978 seconds)
  done (took 1.058939201 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111716315 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.087266857 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135254099 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101381561 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089012837 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107193691 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113956623 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.104245348 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.088884045 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.087148769 seconds)
  done (took 1.785026653 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092576983 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092066236 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119748167 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.137493463 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.112166304 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.091525659 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093635229 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.089728639 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11130246 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.087735042 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093091186 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122615934 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093228239 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125474484 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097100087 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097116724 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.1169552 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095440845 seconds)
  done (took 2.629201665 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.088386725 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.089547044 seconds)
  done (took 0.939492073 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09188813 seconds)
    (2/7) benchmarking "second"...
    done (took 0.087888353 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090239972 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108250578 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090774668 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088987952 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106550436 seconds)
  done (took 1.425444809 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.492206331 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.265075296 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.366607608 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105052622 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.146418341 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.356611518 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.147337973 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103575556 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102153196 seconds)
  done (took 2.881414223 seconds)
done (took 12.475453005 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091154081 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.217393751 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.75002711 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.110431499 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089765269 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.163392683 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.294937414 seconds)
done (took 2.486543303 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344709618 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.148534466 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083320316 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090678486 seconds)
  done (took 1.427124047 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080347839 seconds)
    (2/2) benchmarking "read"...
    done (took 0.096454094 seconds)
  done (took 0.946637883 seconds)
done (took 3.142466848 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087827114 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.118867727 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.103300542 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086236475 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.086275149 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086297135 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.10499725 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.086854531 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.086184328 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085154304 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.104377559 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.087543571 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.086375771 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102294462 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085192608 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084509423 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085539709 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.101741718 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084621414 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086009598 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101427367 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086747134 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.085379189 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.08522434 seconds)
  done (took 3.000896516 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110365485 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.088339536 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.1071355 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091331766 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.090364052 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106494116 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092259809 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.088114447 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.107969825 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.088692191 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090667812 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.090266208 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.105299327 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091743597 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088587895 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.106231367 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090620476 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087480063 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104021884 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090999974 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.090482297 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107253287 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.090715342 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090715487 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.107193255 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091402674 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088557919 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.10437551 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090119839 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091053211 seconds)
  done (took 3.640199114 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096178633 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.083752008 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08625786 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111765544 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.083751972 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087275498 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.099843187 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084779134 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.088166515 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087046675 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.104619516 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086276828 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.08391462 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.104829573 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.088963384 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090216253 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095438183 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.100681862 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083661522 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088160636 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.107518059 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084709895 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.085820303 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085496419 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.105405901 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084543813 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088156198 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105954808 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.08996641 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089319816 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.088196724 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.107181553 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087342296 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.095852809 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.106332154 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.087908614 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094686631 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104185237 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091981569 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087406406 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084662466 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.105557974 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087304964 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096427627 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.107668621 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090988216 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086041704 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088793514 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.105586901 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.090758772 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082653673 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.101599039 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090608447 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088245164 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.105535303 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.084815376 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088180139 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.082897972 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.105002432 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.087244715 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.083407798 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083636958 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.109248308 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.087979927 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101983376 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.11060988 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.084469517 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.088486283 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.105089128 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.093358799 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.08897893 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115670598 seconds)
  done (took 7.502047586 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100649977 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096317225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087178095 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105934197 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087914991 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.086262183 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108647123 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087321888 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087819037 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110195825 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088920672 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.087546353 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104239767 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089710378 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087417019 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087758089 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108824157 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08734514 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087012337 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104753392 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088206856 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093136102 seconds)
  done (took 2.848521531 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.229403387 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092847243 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136734961 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11755044 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106204286 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.116951552 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092081291 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092205983 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107913007 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097791818 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096146114 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109265186 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105150826 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094846518 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114493892 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096886997 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107484278 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101640113 seconds)
  done (took 2.79600545 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101341162 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.089558344 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.12559531 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090761559 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.089449092 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088572932 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11196851 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110571994 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.105774151 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.089964146 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095843079 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089534647 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.108253763 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089921083 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088536417 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109111162 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.090558024 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088544413 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112363625 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095740514 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093458857 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114122338 seconds)
  done (took 2.961338824 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103895257 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090301829 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124688365 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.092343757 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.088623694 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.087271687 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115243102 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.089131906 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093908964 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.106139093 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089162275 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087720754 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.120892037 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090071706 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.094072496 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10565695 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08991083 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091756124 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108482359 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093355614 seconds)
  done (took 2.745094766 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.171461663 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121543383 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105504001 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112765589 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123404169 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108344955 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116635458 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12705076 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109602056 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136963009 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110436371 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109839939 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135104794 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114270971 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126690279 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119788432 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117592116 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136510743 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109519428 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109832162 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138367746 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110467672 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136833067 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108926633 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104647563 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12336213 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106141248 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127899132 seconds)
  done (took 4.166130855 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08843006 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089034751 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.087182448 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.105206799 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.088650127 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.088250033 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088923731 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.106842404 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089373929 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090384202 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109588467 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093838894 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092061907 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091970608 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109121859 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092707887 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092613797 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109642474 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093131882 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092565698 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091923779 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10963305 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092193685 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090727524 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108549865 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093142203 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092528254 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090422859 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109468894 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09285504 seconds)
  done (took 3.655392922 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.100657693 seconds)
    (2/2) benchmarking "in"...
    done (took 0.096539542 seconds)
  done (took 0.985241025 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.09808966 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103096503 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087326712 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106484054 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09436922 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089168717 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114120535 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094959396 seconds)
  done (took 1.575915241 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.143376156 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.16248866 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095279417 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101109141 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.162818176 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.154720842 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134038287 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093795126 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106874827 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082969636 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.157622826 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082047757 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09061447 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103811027 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090935348 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096809067 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.109155218 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10326203 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097494561 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.090739244 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111922207 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096005858 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109175591 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100331097 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084308783 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09146467 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112118138 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101373668 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102760094 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092649529 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088863138 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089529384 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.112950943 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094548683 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.089385954 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.164292904 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097453458 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104950642 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092066867 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093779418 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.144325815 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094321797 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095159933 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107510731 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095231083 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.094109625 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.113160255 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091438466 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082843349 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085907729 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.109198228 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086302861 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090242332 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108999281 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090496228 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096825203 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.109467497 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087653452 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086590669 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103269246 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090552577 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086165949 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110589677 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.092844337 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091715151 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.11032811 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09349947 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090667856 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.109573918 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094555553 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090026354 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122476874 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092794731 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.094888514 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.1124393 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092038048 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087746462 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094727585 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106922256 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091918821 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.092020022 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.138042261 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092489844 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085286437 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104863498 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097856498 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.091776202 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.110590142 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084222196 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099633387 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.110662893 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.091906689 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083125559 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106729915 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088144292 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09311948 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08252754 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109865706 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.08937819 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.093989324 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113410329 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089647126 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091480148 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114489707 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096340272 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089686549 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.158701214 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087233826 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104300837 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093576679 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095141295 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083531527 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109882594 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090152885 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086745119 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.105439112 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096547135 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089737174 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.110692482 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.095971058 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09291754 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.11045793 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093589951 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.089172385 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104194769 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095340759 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098579489 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110022593 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094330293 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092356809 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.090769619 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10968797 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095938848 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087148823 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115259209 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089416221 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090543043 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.109434537 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096036717 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091135099 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103523428 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.090330321 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091231779 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.107188592 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.094466655 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091787718 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.103601514 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08430385 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091456547 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086505048 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.109897772 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098743562 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086060615 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.112792622 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087699735 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0973568 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105703576 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096138217 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093798817 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.114840007 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096802757 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08288921 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105011629 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.093565719 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093888209 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086325767 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.11020144 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091241292 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09662328 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103136718 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.095352424 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08208659 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105980819 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.096248737 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.092658464 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.112461565 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088385241 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130140799 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120536041 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096261907 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092184337 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09085252 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.113963129 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09105873 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094370639 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11484059 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.096397824 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089736259 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108244797 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097103733 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087849692 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.109904467 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090860408 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092600554 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102045906 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.092784704 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082600711 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.093749185 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111477519 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096310148 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.095600863 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111387154 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091633845 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097413613 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105583116 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.094735765 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08296548 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.114678818 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102042775 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.096729939 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114379809 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093590964 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088319214 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.089920364 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117484154 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093114166 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090999488 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.110423438 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084924923 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083793818 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.115333745 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.094378303 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086500616 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.108277415 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093911281 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094058866 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.107153585 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084497896 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.095475216 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094506059 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.107659875 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091738564 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086350622 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108310998 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098992885 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083281929 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106884551 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094721908 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.09514101 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.110395657 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091930813 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.093556613 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.115444453 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.095167252 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09361443 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10700403 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099770663 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089302424 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.089901751 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106335854 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095239302 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084181557 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.111964023 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091763431 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088136805 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10534859 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096622901 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097872239 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.114300819 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09114845 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.095190604 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.11512186 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.097703904 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089282298 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.095751953 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106373889 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085796333 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087287973 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10255381 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.094080488 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086922008 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.115214499 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090062902 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090230697 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.112727448 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094409125 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089869667 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.113951583 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102710803 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085439813 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.10288885 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091189188 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090872872 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105354422 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088799262 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09266964 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09243239 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.115084204 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094692323 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086848412 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.109696534 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09748838 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087482085 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.11687029 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098290855 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.097099129 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105412702 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.096769659 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.0883778 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113813767 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086168285 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.100963721 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.117138938 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092740029 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088373109 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088801067 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.106970262 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085074522 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087329454 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.116278976 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090599581 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.094279344 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109504123 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090223272 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087852171 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106215071 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.098526115 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.089360652 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.116210373 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.091680758 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085622112 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084946066 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.116211821 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093021633 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.096085803 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106406457 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.094847263 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098230786 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.113845482 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.092926264 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100272857 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117619103 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.09789574 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097341433 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084214979 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109517286 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097796563 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.089237648 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.113034306 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.094151845 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085600668 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113393686 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.097977044 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092836364 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.109820416 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086186827 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.091383646 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.11463183 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097208641 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096211936 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.093676391 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111379283 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087899707 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095372304 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.115571881 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.093533484 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09735851 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110669102 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.09731431 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087987034 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.115353258 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.093469525 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085779501 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084693106 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108456948 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.097169641 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085315771 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.115434699 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.096754797 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088009699 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.108193601 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.097906467 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087719467 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113262443 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097376617 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08916121 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100650949 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.113713146 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089821143 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.096615783 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.115341144 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085916985 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090412738 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109774482 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100152854 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089653544 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.11452337 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092752282 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09637433 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.09298171 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.117269578 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.097434951 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.097199065 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.104902538 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.09908884 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095388385 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.113733409 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090697859 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089645376 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104975963 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092030152 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.097687616 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106639744 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101358776 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.097899694 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089359368 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109195884 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.097324161 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090309277 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118015373 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089147027 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093777955 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.104564475 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095845195 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.090223559 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.118103181 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089864494 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.086569486 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115748086 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.098025212 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09692522 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112303204 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100113481 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085763354 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086646443 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.114041499 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089494749 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1007002 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115077339 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091100833 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090587224 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.112295221 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.092637349 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098565611 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.104995572 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090596189 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092610017 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112933702 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092062616 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086737258 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.094552854 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110876068 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094880031 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090236272 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.106273775 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092147297 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.097304024 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109053791 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089348107 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088610054 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118266509 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092501973 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089166165 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104587076 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099988517 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093785929 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116960775 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090636988 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.092673338 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.108538603 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095953382 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.098893535 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089434847 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111710727 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.090672611 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09756388 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117659584 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087203253 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089171428 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.12091694 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098227352 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096544995 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.113345146 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.091441503 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098539159 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118517516 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095643072 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086571406 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087017432 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.110989285 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087352296 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.093405105 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117461739 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092831566 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089210084 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11706947 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098593059 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.094483883 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.093828513 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.106755549 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099417249 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088560333 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115690898 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086985856 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085972326 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.114562849 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098947905 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091867202 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110858781 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095283006 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.094264336 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087027803 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109874756 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.095997785 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095860537 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.117570707 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092733077 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090046837 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.115221233 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104492863 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.092316743 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110038686 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101364858 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099500922 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112181025 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09372116 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09669914 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.117976304 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096049878 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.0981668 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.108321181 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093272737 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.098265713 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.098631793 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123037525 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092402439 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085251224 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.117859547 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091616211 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086577587 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116072967 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100076765 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.098250149 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.112095725 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090452475 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101790783 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116734589 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094270776 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089371856 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10921005 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099927577 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090080957 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.095795591 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.110972898 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.100855381 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.099046313 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11890859 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.102467216 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086124637 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119505531 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097037217 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.100530289 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.113585131 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08841713 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087101297 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.113907669 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101518981 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100142437 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.095791763 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.117092231 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.097912222 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.093490238 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112220709 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091016399 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.100144948 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.117756795 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.093913639 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.095276682 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091599317 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115055887 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094880932 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.098772795 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.12032806 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09433231 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10274175 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.119385976 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092685039 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090520174 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113296835 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096049252 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094001832 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116601048 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091167167 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087401513 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098512241 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.120482926 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093714563 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099502651 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120295732 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092856896 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09539058 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12037745 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099253469 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.094460983 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112816002 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.096300701 seconds)
  done (took 60.129675623 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144632906 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101110625 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114990638 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095668985 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112807033 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11552185 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095785072 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095106008 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116901779 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107385051 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093888241 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114021561 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112892145 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116341238 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134546583 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105592885 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113860365 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096685777 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095174452 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113895406 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111918258 seconds)
  done (took 3.147450332 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113511717 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.107751035 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125142579 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10901041 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100951031 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.126737597 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.106577494 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125851628 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110476435 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102626336 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129405874 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106798382 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.121436436 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.104738685 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10279202 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122628649 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109668818 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101385574 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.12763265 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105464735 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121701953 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.1074827 seconds)
  done (took 3.328985391 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.105873653 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.098125077 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097104915 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.116528083 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099188473 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.094112696 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122369987 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.09793265 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103358038 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.113150305 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.089522677 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09337823 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097176977 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115433309 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.089354384 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.094916162 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125234898 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.099135999 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.099655433 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.114602486 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107815364 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.094597812 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.114277379 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.090286148 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105490753 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.099409942 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.116593594 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.09973163 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08841177 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.118240626 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.096744299 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093013415 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.113774958 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.089503293 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.087844678 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.118954283 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100657269 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.095716172 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.094717453 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.114587943 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096529738 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.099454566 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.117634821 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.09693485 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095377626 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.112495199 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.099676967 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095484121 seconds)
  done (took 5.762323016 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125417549 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161204027 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099172722 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.134904658 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131317593 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.104041222 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.097574045 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135609701 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.096828328 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.120385506 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.111295918 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.108360554 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123090403 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.102406021 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100290468 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122284465 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101523163 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097264154 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.124137301 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100465109 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.103070911 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.12291651 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.108222641 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.128208086 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.102897743 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098440389 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.118525763 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.103870977 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.108055498 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125100743 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.103576487 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.346878366 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.129932666 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10223812 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.119276924 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10115511 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11018771 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.119800332 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.102131003 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098837335 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.119457206 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.104131988 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.101516803 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131377328 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101430438 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.100807131 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120798822 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.09752564 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.107927791 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.12035531 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.105161176 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.110142663 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122214011 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.099341003 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101238557 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.129712717 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.09837986 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.117471824 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.102697098 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.107374838 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.116971986 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102366135 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.108465158 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.119228422 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106708103 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.109209291 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.121543898 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.101743471 seconds)
  done (took 8.810638156 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133693834 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102881494 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131889348 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11181592 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101082668 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124344427 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103148752 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.102897195 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124280948 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107407739 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121873508 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.200339474 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.120912774 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108408926 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102419695 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124479207 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103031648 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102801243 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124535253 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103111258 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.103399161 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13106555 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101464867 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130556398 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114598175 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099710387 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.123101119 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10327578 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129240157 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104886175 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113805774 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124711087 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104102782 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110040988 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136960229 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104002948 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09700543 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125164807 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103972972 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122746322 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101660549 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112016445 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124598826 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.101933058 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103899277 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123975933 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112449047 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.113637949 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.129641365 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109148728 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.122894438 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113820594 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103378965 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.124647274 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113734502 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.138465271 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112914385 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111780539 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125376458 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112161698 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131559282 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120121896 seconds)
  done (took 8.05570503 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09785704 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097104948 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096219605 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.116681973 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097520339 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095757471 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0961086 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.116570147 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097311836 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095655786 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116539884 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098319053 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096003976 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095736672 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116842496 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096966906 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096015095 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.114710001 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097943452 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096568545 seconds)
  done (took 2.888052903 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107351471 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113736916 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.118610332 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10573311 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.099263013 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.124437381 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.099361576 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099411102 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09850404 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12058807 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107350064 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.126475431 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100186716 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105381502 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.126214432 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106060067 seconds)
  done (took 2.614879528 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118928457 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.114298217 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.189374049 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.101263917 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.120178977 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107257973 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.099122534 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.122057016 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.09916985 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105333775 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103701004 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.124725458 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100576646 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100016377 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.120810244 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103419791 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.097840756 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.124405248 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.100374075 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.187564187 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104210804 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.100861509 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.122851895 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.103765123 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101233896 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.126094479 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106341706 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.099353321 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102027132 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.121620432 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.101549163 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.106295926 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.121476216 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104268972 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099520546 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.122068291 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10131781 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100499506 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.122995897 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.100121938 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101593125 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.121606756 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10051911 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101258612 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.098628058 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.122312769 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.098831878 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105033901 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.122972715 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101934554 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100245883 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129384275 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.104783303 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107677126 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.128444612 seconds)
  done (took 7.013647195 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111278078 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101337524 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13326412 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098016581 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.098818019 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.100754201 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.122485762 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101508891 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099881494 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.118739804 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102293103 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10082002 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121805238 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101545819 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101470927 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12056824 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098656131 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.099419058 seconds)
  done (took 2.793180599 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106585339 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099688928 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104336043 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.120977404 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099766339 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098774149 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120648798 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100071457 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098643656 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098505751 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120801976 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.098936516 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09732003 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.120940776 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100355805 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098648748 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.119674008 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100012891 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099924165 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098076549 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121588564 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099271974 seconds)
  done (took 3.188272576 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111037985 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.182580698 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106048833 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.192524067 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.096404063 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.094097116 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127110374 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097396676 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.111519157 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117013061 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.095918981 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09424406 seconds)
  done (took 2.292205639 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129877629 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136791598 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121362724 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10108449 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108498346 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126518238 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105127672 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103289528 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134307586 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115906925 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124545661 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113616414 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110236391 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133047876 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107868261 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129936797 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106325738 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104271701 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120623599 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119991293 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104187339 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133354364 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105401317 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103994183 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126069539 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113760611 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132940639 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116970049 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105278406 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133837164 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109685702 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12476027 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112789902 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115520418 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122081651 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113369575 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103844237 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140513939 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109251521 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1348839 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101835119 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108599343 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133791523 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110614071 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131673579 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105260454 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109514572 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126052924 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10476524 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146748798 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110137948 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111275587 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130888733 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113037528 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132564623 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127495943 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115249381 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134990383 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108771867 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139120338 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113016176 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130429875 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113856361 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115643837 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130859297 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113171087 seconds)
  done (took 8.704601483 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141857656 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101678392 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126719455 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116667979 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132796207 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106569554 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104343497 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125697682 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1062387 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101548052 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170529218 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105473329 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134222934 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114199029 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103128289 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12686509 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105902803 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11363126 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122929428 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125895408 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125914989 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114777589 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113862862 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134649717 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115864641 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130355736 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105323271 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104626372 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126462738 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106253497 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109502662 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12708834 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112386716 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101201023 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13471368 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105482248 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124794917 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112132274 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104881879 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131333329 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113727904 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14072669 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107164884 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104194298 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137519772 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105814039 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105304222 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124467118 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105904046 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101341051 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138628035 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116513994 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138367279 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115365822 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105366539 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126159783 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105780291 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104551914 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12771817 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109664631 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134372291 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106199293 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125655598 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127173074 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105477769 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134143772 seconds)
  done (took 8.670952275 seconds)
done (took 164.048254801 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.149361489 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.189332113 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144393886 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177447432 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092608921 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127617066 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.147937074 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147890003 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.090957941 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114152866 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092592158 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095755753 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183541064 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09252525 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090999238 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11656566 seconds)
  done (took 2.921466062 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.188837658 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.305000045 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108437366 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117747858 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101818586 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098643961 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117193622 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099184115 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096015659 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126047922 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099919463 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094264374 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125814016 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095808516 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096604687 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120501842 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105373092 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098146185 seconds)
  done (took 3.069956139 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118829479 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.138822599 seconds)
  done (took 1.136837662 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128657156 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.195559699 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.268094019 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170059088 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120696262 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136065 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150051926 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131230706 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.177568719 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131395129 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110523258 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097564979 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144574313 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102953093 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.134579201 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098455759 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123616061 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.132870009 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111739859 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098784965 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139604844 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103761222 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.101703677 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.132646825 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.166874387 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131085844 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10259907 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.099966215 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120914172 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111393239 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104965749 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136397683 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.108717869 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.171334319 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102582407 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.168762538 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.128226879 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.099170775 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110934971 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096889884 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124015004 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101249789 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.13526135 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098308738 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101811078 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.129613976 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102246776 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101189318 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.128230822 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107678273 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128988006 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.105445864 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.165031732 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108493552 seconds)
  done (took 7.717271072 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.840135599 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140821976 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096906432 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.991193829 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148276004 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112714749 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.836789585 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142032588 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250787052 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.864339118 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113297163 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.131853094 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237927367 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.251062551 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.188423146 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.350215621 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.698227376 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112429155 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.12520538 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163332127 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105289367 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146351001 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11765746 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428151861 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.097713967 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11814215 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106342309 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109199852 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173689195 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.096936417 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122860007 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197314273 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.259325028 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205373376 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120628253 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097406717 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095750948 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183119082 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266621976 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213353587 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.185589549 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093755725 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095673473 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128325955 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117037383 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11592925 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155658584 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188466892 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190720716 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099208441 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.132935864 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108247297 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125616286 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.155954197 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.117510694 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.353581395 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362624335 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095940911 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128087386 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112772145 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261347434 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.119651894 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23238132 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124126291 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210213452 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.118563278 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799558441 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160102901 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118964785 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105545604 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103662101 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125243564 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105514607 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179997725 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.378902983 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131827034 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101827842 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096348199 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.246586204 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.120318567 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098072562 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179467491 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098812805 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125446421 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113309904 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109260024 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187473659 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.261996486 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10974732 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1285904 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.102475391 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12951775 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099601699 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.226804777 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226955136 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.151200701 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230556214 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129338266 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.15719589 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18300601 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126057841 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.164149646 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127170393 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113977727 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126414575 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225256526 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.130780709 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122414247 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103564448 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106062697 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158098777 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101100023 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129029184 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.163287567 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.463314106 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.182999351 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.094131407 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124290348 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107589192 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178511483 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105167844 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262348081 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128338395 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162240014 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127537055 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095818128 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105555727 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179856698 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128482742 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108190025 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105523724 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1305345 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.248947274 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.240674381 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112644915 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242034196 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191337817 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106237451 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190759262 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105843238 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185513227 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107185637 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127868978 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09980878 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795146358 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133688036 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107278265 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102581983 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.201489384 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097807918 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.099188211 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.120919259 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097025577 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796524538 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101456226 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.11833775 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100918516 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105592749 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128612524 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105439212 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102279778 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177383717 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.262655575 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111770442 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104464021 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.119809633 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.154593952 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.121765191 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100602656 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.097388165 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.120133314 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108252996 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.101261203 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123214725 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166167015 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175668632 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226276696 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.55652155 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122138611 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099409325 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239345906 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118615905 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.317159132 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107493061 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232210239 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183381307 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.094796374 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.356040979 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184383231 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204492662 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10245822 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188092901 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09523123 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129293377 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.155146759 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121086923 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106015809 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177265161 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11269977 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132375977 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.2032441 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098168896 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24686818 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.095404962 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.187541495 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098864651 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128314564 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321427947 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098166337 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137909471 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.154941059 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126271949 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10014498 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.704810882 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.098521238 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131487154 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107094198 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230358426 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184733475 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10573692 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130218972 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111414534 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179902736 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23126438 seconds)
  done (took 45.485208868 seconds)
done (took 61.203080917 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.29286554 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.253710042 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.301419336 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.207036373 seconds)
  done (took 2.026891465 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.262636603 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159439443 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.240234789 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096255401 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.245400068 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.095739478 seconds)
  done (took 2.006067593 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.48750048 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.369886336 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.304436791 seconds)
  done (took 2.072658745 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251658744 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.243235849 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.344544742 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.405110834 seconds)
  done (took 2.266664838 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.299531938 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129179406 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124151858 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.2110434 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.254011194 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.229751132 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14699594 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.194651482 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.152459525 seconds)
  done (took 2.694675013 seconds)
done (took 11.970592131 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.283688056 seconds)
    (2/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.190743605 seconds)
    (3/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.111277151 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.194185711 seconds)
    (5/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.344789933 seconds)
    (6/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.256301364 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.270931044 seconds)
    (8/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.340543867 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112590772 seconds)
    (10/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.166041226 seconds)
    (11/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.132298167 seconds)
    (12/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.363156254 seconds)
    (13/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.185231759 seconds)
    (14/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.327921627 seconds)
    (15/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.163931022 seconds)
    (16/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.137946604 seconds)
    (17/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.346892551 seconds)
    (18/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.275697347 seconds)
    (19/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.335381385 seconds)
    (20/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.216209996 seconds)
    (21/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.081552557 seconds)
    (22/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.080265245 seconds)
    (23/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.216462363 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126528495 seconds)
    (25/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.207392882 seconds)
    (26/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.232856224 seconds)
    (27/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.238559323 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.133848088 seconds)
    (29/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.233340903 seconds)
    (30/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.190524655 seconds)
    (31/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.194369939 seconds)
    (32/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.219652395 seconds)
    (33/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.13114074 seconds)
    (34/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.226470642 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.150473882 seconds)
    (36/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.153552812 seconds)
    (37/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.193366603 seconds)
    (38/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.188470035 seconds)
    (39/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.150314538 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.158980559 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109565639 seconds)
    (42/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.23629618 seconds)
    (43/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.081038001 seconds)
    (44/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107890104 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.136763978 seconds)
    (46/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.238897667 seconds)
    (47/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.197321705 seconds)
    (48/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.192583078 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103781237 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.129786726 seconds)
    (51/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.09790783 seconds)
    (52/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.15138928 seconds)
    (53/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.181583012 seconds)
    (54/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.165577637 seconds)
    (55/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101977834 seconds)
    (56/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.233360533 seconds)
    (57/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.089748911 seconds)
    (58/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.080508064 seconds)
    (59/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.235524447 seconds)
    (60/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.173691503 seconds)
    (61/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.214751031 seconds)
    (62/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.15740465 seconds)
    (63/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.169831302 seconds)
    (64/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.105860968 seconds)
    (65/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090787823 seconds)
    (66/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.114485184 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.17031948 seconds)
    (68/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.086049197 seconds)
    (69/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.182534269 seconds)
    (70/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.254246289 seconds)
    (71/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.097727946 seconds)
    (72/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.255554344 seconds)
    (73/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.127026201 seconds)
    (74/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.089668673 seconds)
    (75/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.232901633 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.143321249 seconds)
    (77/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.134701716 seconds)
    (78/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.193560177 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.103909583 seconds)
    (80/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.104869994 seconds)
    (81/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.127920765 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.115630521 seconds)
    (83/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.189699931 seconds)
    (84/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.082291921 seconds)
    (85/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.149947313 seconds)
    (86/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.10775175 seconds)
    (87/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.133533153 seconds)
    (88/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.150375023 seconds)
    (89/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.081399395 seconds)
    (90/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.085187182 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.12926902 seconds)
    (92/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193269244 seconds)
    (93/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.081611575 seconds)
    (94/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.105597387 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098157578 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.108207825 seconds)
    (97/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.131641895 seconds)
    (98/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.080719719 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103841319 seconds)
    (100/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.080666182 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.149887464 seconds)
    (102/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.134793348 seconds)
    (103/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.103437464 seconds)
    (104/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.080698141 seconds)
    (105/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.218147061 seconds)
    (106/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108267589 seconds)
    (107/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.12625468 seconds)
    (108/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081640705 seconds)
    (109/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087546271 seconds)
    (110/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097718456 seconds)
    (111/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.193073493 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.082890367 seconds)
    (113/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.081331649 seconds)
    (114/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.082162489 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.139631039 seconds)
    (116/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082950836 seconds)
    (117/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.188000151 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.1319546 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.105504826 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10471061 seconds)
    (121/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.129621359 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.082475006 seconds)
    (123/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.082087783 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.1050641 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.129873312 seconds)
    (126/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.1018744 seconds)
    (127/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108276657 seconds)
    (128/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079966596 seconds)
    (129/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.10632275 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.106331116 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103555762 seconds)
    (132/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.106200336 seconds)
    (133/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.081646095 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127409634 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148979779 seconds)
    (136/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09976603 seconds)
    (137/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.082159219 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104956204 seconds)
    (139/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109990872 seconds)
    (140/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.191851717 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110067433 seconds)
    (142/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.104475845 seconds)
    (143/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10828172 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104940837 seconds)
    (145/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.213433323 seconds)
    (146/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.083072026 seconds)
    (147/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.082407291 seconds)
    (148/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.080267827 seconds)
    (149/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.081148617 seconds)
    (150/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.215201002 seconds)
    (151/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08243482 seconds)
    (152/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.081786938 seconds)
    (153/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.125108222 seconds)
    (154/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.081465334 seconds)
    (155/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.081004436 seconds)
    (156/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.086479511 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101344268 seconds)
    (158/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.141116742 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.106058201 seconds)
    (160/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.081621367 seconds)
    (161/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.104779043 seconds)
    (162/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082379581 seconds)
    (163/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.082618112 seconds)
    (164/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.08085079 seconds)
    (165/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.081287582 seconds)
    (166/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.102756539 seconds)
    (167/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083529613 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108164339 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.128854182 seconds)
    (170/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.104999113 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10636499 seconds)
    (172/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.081320135 seconds)
    (173/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.111120648 seconds)
    (174/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.131236125 seconds)
    (175/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098211201 seconds)
    (176/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101040244 seconds)
    (177/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.105870327 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.106474576 seconds)
    (179/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.082073424 seconds)
    (180/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.081478181 seconds)
    (181/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.135350929 seconds)
    (182/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.081936088 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124417646 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.128702466 seconds)
    (185/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.086906681 seconds)
    (186/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.111730536 seconds)
    (187/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.080874089 seconds)
    (188/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.104574451 seconds)
    (189/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.082420063 seconds)
    (190/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.082192775 seconds)
    (191/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.08129588 seconds)
    (192/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.106635586 seconds)
  done (took 27.724430189 seconds)
done (took 28.640270786 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.213558719 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126568591 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.1074659 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.106443168 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.203266996 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.112722378 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.143262987 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110035174 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116243789 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.130827348 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.098923899 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.11760346 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.105860937 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.202002819 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109133879 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126283931 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098908695 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115293599 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.143179725 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119778693 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.205859194 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100996451 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114495699 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.124220966 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.178014959 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125983882 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.105624456 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106622123 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.140802703 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.10913743 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.106220339 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.122869762 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.119898953 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.118471416 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121911119 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110034979 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098436765 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087807986 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.132819352 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109591659 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.116295376 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.133629279 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.109992329 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.100141196 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.134599507 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.109746232 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099261933 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.135181508 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.09980577 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.106660742 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101685215 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.145885015 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.107924984 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09771171 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.12202001 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.100381367 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114883972 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123242878 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.118127891 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099570853 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.12526171 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100622484 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110134006 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122554174 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.109006515 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100205085 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.108505052 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.135232781 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.107144776 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101817179 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.124095824 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110053712 seconds)
done (took 9.638197673 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107106858 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.155542259 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.200927685 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.212745035 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129137101 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.141130137 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124131501 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.130918537 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.146043532 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124979779 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.161525252 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131524022 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.212841788 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.114453607 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114566382 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.136876403 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117700742 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136618516 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.191970322 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.147166589 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.130357754 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.11554689 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.160139597 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122404623 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.130944648 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.128037619 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.105907628 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.136811009 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.107121361 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.123797517 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.147652844 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.107344 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.105355822 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.155354119 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120087984 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11501464 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.141297732 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111993051 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.12929621 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107183499 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11394227 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.149447699 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106799477 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.115242291 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.137359837 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116376887 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117592154 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.141804567 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.109262864 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113215225 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.13388607 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134712174 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.139635135 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.118195979 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.114975342 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.139835856 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.117444946 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115087257 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.131182586 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.116612916 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106118539 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.131552927 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108963005 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.129880492 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.131871368 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.117271333 seconds)
  done (took 9.599801236 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124543473 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135040443 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.138667773 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115263016 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.10928484 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.122091859 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098183063 seconds)
  done (took 1.812724621 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10103704 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188055069 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208235772 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.208236201 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.20834441 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.19362805 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147140401 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.099763569 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133363876 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.134805541 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.18670429 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.240682939 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109484972 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.139511675 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.210062701 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.099227321 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.212155557 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.100541412 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113913449 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.212863622 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116578959 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.155858702 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.112323935 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.099516158 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.209541095 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.100232522 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.261243735 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116872156 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.134467761 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114982709 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113518575 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.202568648 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.210323207 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.112693705 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106620723 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.209430415 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.206920793 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114028127 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.222830648 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.103520101 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.208909708 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.112717582 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114341653 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.140321244 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.114576497 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.194857747 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118409965 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113460231 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.137792239 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.191548134 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.135009082 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.185999122 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.13716107 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114296879 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.109474219 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.140811582 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12196038 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113405889 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.219363064 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117083698 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.209842333 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.208709139 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.183549407 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210688677 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147038673 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.18837271 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.204868884 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.112261583 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107692289 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.141252796 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18431872 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.13853348 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.110882655 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.198952851 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116205747 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.211895055 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.209006842 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112287951 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.111353956 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.102311135 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.139009707 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.099836935 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.20095205 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113284377 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111127026 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14368396 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112153827 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11413344 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.131732351 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.122019751 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.138145608 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.112902994 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118296897 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.137838321 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116915432 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.214751812 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11118423 seconds)
  done (took 15.536406163 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104968204 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.10120654 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.105769158 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.12696447 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102407718 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10107995 seconds)
  done (took 1.629912634 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140671059 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114807076 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150003569 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.116621093 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166221546 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.219106534 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.222129634 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108956472 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.15734445 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12520861 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.220163275 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.219898521 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.196712458 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.143359011 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.196783659 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.142672443 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.196727813 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.138484415 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.124400798 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112683886 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.14215508 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.118381058 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112844419 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.211333166 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.115001797 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.144288171 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.108444947 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124202317 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.149387138 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.109688481 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.143095386 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117095775 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.107501472 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.132930246 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.197931275 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.133419143 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113175939 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.116752819 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.143190157 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116704426 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.222864964 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113451078 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12155876 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.145063274 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10886236 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.10678055 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.14548898 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.108430888 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.223711744 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.117939197 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.144217949 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.117516839 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.115486373 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.144333261 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.108418453 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108455836 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.144625565 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.19821365 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.146525269 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.107913997 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.114871738 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.143175618 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.109951918 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.143813533 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.117859593 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118271168 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.133250755 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116894765 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112268815 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.140151209 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120998848 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.116228419 seconds)
  done (took 11.095141381 seconds)
done (took 40.636211828 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.499690338 seconds)
  done (took 2.482248634 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.892801268 seconds)
  done (took 1.877180881 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.06147433 seconds)
  done (took 19.078973883 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.516573129 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.597820534 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.016138961 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149635075 seconds)
  done (took 3.265736195 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.004922208 seconds)
  done (took 2.00713693 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295333166 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.266218443 seconds)
  done (took 1.555086987 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.717887114 seconds)
  done (took 1.722274406 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.526403014 seconds)
  done (took 2.518309899 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.348421947 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177828793 seconds)
  done (took 1.533873518 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.616056412 seconds)
  done (took 1.624568144 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.094487017 seconds)
  done (took 21.101022541 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236118098 seconds)
  done (took 1.246864996 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.285283391 seconds)
  done (took 1.297972306 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.580716676 seconds)
  done (took 4.592076533 seconds)
done (took 66.89768268 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.112515109 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.114032876 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.11371548 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138519545 seconds)
  done (took 1.480320675 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.121336631 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.114450444 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.118450648 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.140830331 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.121842331 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115463616 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141087289 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.116642823 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.114517149 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143200594 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.115701131 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114042479 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.14358633 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.11553528 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.112360485 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14353426 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.11925558 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115355683 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.142039517 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.117540735 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.114736928 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.142000197 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120020645 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118141388 seconds)
  done (took 3.99405471 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.111938289 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.105562396 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.106407523 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.129722224 seconds)
  done (took 1.470048721 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.1247586 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.127084838 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.150895171 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.122400581 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.126933812 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152235375 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115304115 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.110655585 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.139593319 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.123674795 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130904923 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.153551859 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.12706547 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.115585645 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.151994324 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110037288 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115800872 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.152408648 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122559436 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.123147443 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.140447893 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.121590146 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.120104419 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.150150703 seconds)
  done (took 4.141372713 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.188937025 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.125075145 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.16776406 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158334319 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.168345622 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.112847381 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.136004093 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.145601392 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.120399919 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.115409012 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.144282276 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.15953338 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.145560879 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.116600325 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11511534 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.145656514 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.12617069 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120266365 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.183040338 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.119306244 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.146732027 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.127090034 seconds)
  done (took 4.10316704 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.117853171 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.104854036 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.101713476 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.134682085 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.116910023 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.10705183 seconds)
  done (took 1.704067564 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10526828 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.099825694 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.099667862 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.125098102 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105152583 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.099826226 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.098896087 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127464134 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.100131137 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.099598077 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.125506886 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.099649666 seconds)
  done (took 2.30795297 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.329491675 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.10549964 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.132444661 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.107434742 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.110771584 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.102938708 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.144340867 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.10428076 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267143433 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.105329667 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.143553125 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.192241858 seconds)
  done (took 2.86771525 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203760746 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141897645 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293524963 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.362844587 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160052863 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183694306 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264542278 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186272579 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200923831 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133676701 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240995312 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150177521 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176709228 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170501335 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162786116 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.152742915 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192032974 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21353952 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145440274 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222399605 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151795048 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18927581 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175156482 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17198107 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131552856 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185719601 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11551552 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148589753 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163516722 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18800449 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166211846 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169670511 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136100536 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216576996 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255307028 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193197956 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282319586 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129927506 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.195255784 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.181010304 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252644208 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165343105 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184510683 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175713771 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12418523 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200225761 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148123837 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.198405633 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.126395918 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164161999 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175605962 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196424176 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201745161 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132387253 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309757465 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160134979 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164414157 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166073112 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205946245 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212524068 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160751285 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.145404256 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20181579 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178929811 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201608546 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.136502365 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187975854 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120787955 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187981744 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188851584 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201214705 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178607721 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.194023224 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154035542 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153095797 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193801415 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172039478 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198866387 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153596106 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.143975434 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14450261 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157029879 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12289713 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191548599 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144844322 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220363674 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129160344 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.331829354 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180198402 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179837099 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181662333 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1540874 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181722383 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141679865 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102495433 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168929553 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159621213 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178183895 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130214883 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17903494 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134913304 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.149891805 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147404695 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.11644741 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180230196 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.124948147 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185929392 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153908546 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.154226214 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159704068 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170775711 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148769227 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192135374 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178278187 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153031723 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127439646 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212062679 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152107961 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.154506465 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172770766 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206574595 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.138561579 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160270348 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159382242 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209862874 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134917859 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210538243 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130775166 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158955221 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137023813 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182334173 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15227069 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.175691183 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123171188 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.173546938 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191281337 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.150905886 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132135971 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190075616 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128220246 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120421404 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161058281 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130713479 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.162129092 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.140979312 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.156089014 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149461112 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177251416 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151297096 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178475768 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130254857 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200043869 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127902956 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.179741736 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142390531 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.115719867 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198028787 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206846856 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125255987 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223898388 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159311804 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215105062 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181557884 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127768807 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199495093 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123766347 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.115593844 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184474082 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150279975 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185668293 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.174322012 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208032566 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188699802 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.14512276 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170986264 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189298958 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.172231374 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175843009 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139296332 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179472488 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161061423 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.115708277 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.147337141 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123964339 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159914508 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127110756 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13110199 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197389112 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184924399 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178764852 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179894385 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134333196 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20707975 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122594238 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183331239 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.160135906 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163396699 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.176927692 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200917192 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18717918 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136142296 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183089402 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.117073757 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123004667 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.156290004 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159632209 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156051058 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131764516 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136476026 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20558403 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194534134 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143006469 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218617298 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189272684 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1884866 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.143134853 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16259372 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194436811 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152974909 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.204672685 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132450407 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15375176 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202156462 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135001184 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209726293 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179739381 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157396573 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212225585 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150396716 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155207777 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142196789 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182234624 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132634925 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187581057 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14141071 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12492902 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175486445 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133084063 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149089691 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178642835 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166958383 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163952347 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.183875078 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191780651 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12163939 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136501329 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182378465 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138873857 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.133077877 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164866022 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20909749 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14067883 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179977055 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170342678 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153831672 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30808761 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211793323 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201685322 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13083305 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162935736 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158622978 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184341802 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159796692 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202091089 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136513434 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201914725 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154410202 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.167103943 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126647745 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142714009 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175554785 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137702504 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.156627287 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152068454 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.164367056 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178716644 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16289527 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153315754 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183576869 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143567524 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.175693555 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136078207 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218921332 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151961104 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198110235 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149356822 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191062484 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213357441 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120257677 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122709076 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.155180083 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174912452 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152845273 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15704511 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.198637746 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21150126 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158745821 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183687675 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132677281 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.150442857 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151956192 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169914136 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210733745 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130512403 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132151717 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215776907 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125749422 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154981963 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153982274 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301944121 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14108129 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196417 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.110447718 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.294095425 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125213027 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154831428 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15816111 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194053281 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.128710346 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.204777077 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157382001 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162164929 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160982834 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131698605 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207782269 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212875624 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188450687 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169372292 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.167893455 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155509747 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18385111 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172490572 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166230328 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140803927 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184849933 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177824973 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206551672 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.128212158 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183111912 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152754151 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182234066 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165969317 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161182529 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186063348 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152955151 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157747572 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161573526 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120398424 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179348928 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.174351851 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154256203 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173630866 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185173943 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127618343 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150381767 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141435635 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178125499 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134872355 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.125608141 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205556182 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.123515619 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186636135 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173667407 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154431242 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152256412 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169790134 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126252537 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16260269 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138487992 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127370823 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.191256518 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178260123 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.152844591 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17639197 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187383445 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157805516 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181988981 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137147866 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.690614018 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.123266455 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206090683 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143627001 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211826728 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143582492 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186574014 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154361585 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173796276 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158107302 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171523967 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230133018 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187239505 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15216367 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154926161 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137742991 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134671158 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.156949211 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147317878 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181157046 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136943282 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.159604176 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154046885 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165147338 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.141715723 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134386124 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208128519 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143500797 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208690874 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205766702 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13220433 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185798851 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167146692 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155135994 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15886526 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196764002 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135671068 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173878469 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.129603225 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131655435 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20545047 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.118843062 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182095541 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156340327 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183802581 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153867135 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.159585329 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157776099 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163148311 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157289805 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1213816 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.177121142 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155941646 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160059572 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.123162769 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180042791 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154774364 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.17813473 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123087894 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.167763686 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204623508 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.118811073 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128631526 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297752806 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183949284 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184039055 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.166306885 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129069083 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16746858 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151735755 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178724322 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156604994 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.125190727 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15398694 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.126443647 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.18594906 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144522598 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181201438 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171854982 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185022977 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18736175 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.161032545 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278170744 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164247315 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153357688 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116779849 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.153033057 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136922812 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157187347 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138569686 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20787449 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176865399 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.177463244 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.142092902 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160324495 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12200765 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125551951 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189745817 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146830968 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182980495 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140238507 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.132050849 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138929851 seconds)
  done (took 82.097863373 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163869021 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149400642 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.164954684 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.218959549 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193277434 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286040744 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226892018 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251027666 seconds)
  done (took 2.763016729 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117891203 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.153671549 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.136583268 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141491352 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.115452617 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.44021736 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.155244627 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.116747976 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161700432 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154977508 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138554804 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.615205987 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.110822825 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.141991026 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.125028611 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.116623183 seconds)
  done (took 4.040696075 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.358204082 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.570540839 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.027542388 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.272188207 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.727318688 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.176421594 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.771801526 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.186557329 seconds)
  done (took 13.200095683 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.144718697 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.133482412 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.312682289 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.257645164 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.147997938 seconds)
  done (took 2.108659921 seconds)
done (took 127.281489478 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121513143 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120233033 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120200027 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150068426 seconds)
  done (took 1.612157173 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.183350285 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09217792 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094221668 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.118200851 seconds)
  done (took 1.596978245 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.442574795 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091799866 seconds)
  done (took 1.672437024 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.146773279 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.145890114 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.162553814 seconds)
  done (took 1.576807565 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.141172107 seconds)
  done (took 1.254807312 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.124925197 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.116418623 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.235398027 seconds)
  done (took 1.593139636 seconds)
done (took 10.423967033 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117301968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.409338378 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.429241466 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132429274 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.708650026 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.422723399 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.01602099 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169078942 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172534159 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.133990262 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130171793 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.685801857 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.030134288 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.351326557 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.988605034 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.379663345 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692340435 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.1075562 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14224822 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109028979 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.995653707 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.132702841 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108561651 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108445936 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716123441 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.41782581 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.105798772 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.391750109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106535543 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.109933841 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.423307683 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10837774 seconds)
  done (took 17.157297364 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11580638 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.168446029 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.142187962 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109454882 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110059582 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.135839383 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.118808756 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118534291 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199652562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.106623017 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158023042 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.107244776 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.111248015 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.134545198 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134235593 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107201143 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.136370252 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110990116 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115393409 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.135380267 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131086577 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106170578 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.135568487 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11092093 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.106825431 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.155066015 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108904585 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118850569 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.133754012 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11329964 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.111906574 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.132908771 seconds)
  done (took 5.159417872 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154763138 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176879625 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144668024 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145260319 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181827729 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.109760907 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.21643172 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144466208 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198337471 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108335419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130269045 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.13344535 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148405493 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.107964683 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.161373198 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.106975852 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.109743222 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.137698167 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116139412 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.108448599 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158548395 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10724217 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109099491 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.136986088 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108476741 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130043802 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.135332642 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.1196578 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106829708 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.139065247 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112972417 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108082792 seconds)
  done (took 5.428495027 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.123231587 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123489454 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130610615 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160182775 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117497152 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.120684355 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15115259 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118268106 seconds)
  done (took 2.167284263 seconds)
done (took 31.028087993 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135008025 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128866124 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129931068 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151516161 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.191004798 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145892363 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129695483 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116110225 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.1522162 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131336432 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107514769 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.143625146 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.130993685 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120078957 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.221840145 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.122858031 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.22644659 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.193393552 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.1465042 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123428395 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116374115 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.226966124 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121928125 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.145473809 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.200575957 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.138935122 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.18603119 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118423669 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.148185319 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.108625143 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.222169044 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.120455373 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115758947 seconds)
  done (took 6.02652285 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.208753692 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.116676885 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.145974412 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.115778845 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.116683446 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.144505684 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.211663679 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.144233296 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.115560581 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.115540294 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116063696 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.22327924 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122126203 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.141448066 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.118139596 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111875998 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.241229859 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.117052206 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.106805298 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.122221613 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.11147985 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.115611783 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.253096147 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.110021656 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.114990212 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.144821962 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.118977097 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.120115759 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.14562859 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.117579733 seconds)
  done (took 5.33880681 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.122406515 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.128891486 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.13218993 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.208187888 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.143718093 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.157720276 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137846054 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.129947059 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.16721222 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.110367556 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125076921 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.175100773 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126179542 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.119196718 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14236176 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130580841 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131861898 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.139007281 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.11779219 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126553621 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.158499274 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127321618 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13600165 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.146834145 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.107759595 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.115729994 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.148077389 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.124130287 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.117187963 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.1521358 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.111996266 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.112963951 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.137650883 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.145958496 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.110505147 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.150469002 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.135319071 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121372028 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.151989604 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.141255854 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.1129412 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.141381352 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.136487043 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165093107 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.14029698 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.122581706 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.120327965 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.151850436 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.109442373 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128438305 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.179922908 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.110254647 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.129863465 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.139108245 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.109052061 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.117724779 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.137545057 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.113933856 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.123974919 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.112778221 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.163197236 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.117232604 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.119243403 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.141572607 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.119327357 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.108627612 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.136822917 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.114643891 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.135892489 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.144591733 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.148011739 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112082041 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.147430527 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.123265559 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.120032595 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119969305 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.138292402 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120934703 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119026767 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.144697376 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.122996277 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.1118367 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.141873044 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.127509184 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.130387544 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.151465767 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122282133 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.122506266 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.13986083 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.112965011 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12552054 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.137259395 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.116767157 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.122411986 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.109667116 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.142105144 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124095826 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.120758067 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.13710133 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135895605 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.113129349 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.136514642 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.135400208 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115887904 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.143649552 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.119952844 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.151026095 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.137730902 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123225455 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.122398711 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.136873956 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.118105866 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.112954308 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.109124867 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.156589192 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.124979676 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.116292796 seconds)
  done (took 16.489112028 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.321001036 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.307085832 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.178881786 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.308091956 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.152828786 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.209285448 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.304184003 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.305161986 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.10968193 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178927386 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.191972758 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.244759051 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.141148913 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.138537443 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.305853243 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.359756271 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17001777 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.14737755 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.176760362 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.124269733 seconds)
  done (took 5.522266414 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.131603086 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.144834691 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.162190249 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.139488129 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12056043 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.153110431 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.110258178 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13132802 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.149578064 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.121485121 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.112891711 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.156187954 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123391296 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127008884 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.153550879 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150948558 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.117349771 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.144169663 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133114863 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.114747526 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131349699 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.137373557 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.118763144 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161862891 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.129825825 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12113828 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.138553011 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.115981813 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116388398 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.148241843 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.116145477 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.12865635 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.144615334 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.10673498 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123066792 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125364091 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.146184561 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.113239896 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.114633345 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.14315064 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.126190846 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.122957141 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.146336995 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100867923 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.129610724 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11228105 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.151524167 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.124031155 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106195623 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.128183165 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.152841134 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125285755 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.116683299 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.161998258 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.117619135 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.126800507 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.150443903 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125341365 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.114809479 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.137716749 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.110906155 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.114505451 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.146734763 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.126264845 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12128547 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.157175738 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.127928632 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11004361 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.141830549 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.11546778 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.114625607 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.152105163 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.133069135 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.118588275 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.116623993 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.150828076 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119002757 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096643593 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.147674658 seconds)
  done (took 11.435110724 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.136859208 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121220785 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.129278813 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.175842656 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.124703843 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.115927137 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151550641 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.130027959 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126103503 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.15931046 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126864432 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.123408577 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161545845 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12039239 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.120051691 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.156415275 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125180758 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.148636878 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.158845051 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138126685 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.155182587 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.11714028 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.123138974 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12172456 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.169883697 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.122803277 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.166315674 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.12602876 seconds)
  done (took 5.003680865 seconds)
done (took 50.93909537 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.285360069 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.464612252 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.248092269 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.24523634 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.259704412 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.266778455 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.249822343 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.250357098 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.662470492 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.220214093 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.24639134 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.246475618 seconds)
done (took 28.796605059 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.319895656 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.741783163 seconds)
    (2/2) benchmarking "String"...
    done (took 1.52751901 seconds)
  done (took 4.410224728 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.251874081 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.238590102 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.462667168 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.238461098 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.247392183 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.236943227 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.239006962 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.258676496 seconds)
  done (took 16.063503949 seconds)
done (took 26.190543202 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.281620613 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.431158794 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.473742448 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.237968177 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.241415136 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.246466928 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.237838935 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.26048042 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.247849267 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.242328512 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.638144313 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.503775895 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.240825668 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.611023379 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.240474672 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.265879876 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.240118708 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.486502125 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.244492694 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.282341339 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.221075973 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.2452931 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.242699937 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.242920899 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.241724974 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.250134173 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.283756046 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.247920728 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.422681802 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.281608885 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.269068182 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.240685028 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.278593327 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.245128516 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.238617818 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.254076886 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.427822623 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.243804831 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.225136819 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.239170398 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.418174784 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.25953435 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.239155658 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.251284105 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.243628732 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.263201037 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.22731766 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.34709607 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.260824803 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.263163995 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.294138471 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.608945662 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.25174133 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.262877971 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.243845432 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.449887608 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.245867537 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.283183096 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.261155663 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.261604288 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.239565592 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.254717907 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.288958492 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.252177911 seconds)
  done (took 146.110717737 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.239352538 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.244796983 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.242772639 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.304515718 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.243685101 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.243794158 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.238085223 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.238276417 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.242651677 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.272620948 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.242760283 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.243433205 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.244723639 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.188453557 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.248218811 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.261049516 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.242876023 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.239344456 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.248639545 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.240052861 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.240700051 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.245150863 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.255833752 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.239788967 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.275961246 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.318462692 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.256694772 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.257337672 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.253156374 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.239330712 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.26898571 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.290110342 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.806359562 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.110722005 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.244439841 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.243480066 seconds)
  done (took 81.599231149 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.23914248 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.240529221 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.239224051 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.269734808 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.241268618 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.759282611 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.764210908 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.952705487 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.846316026 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.420712851 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.442096535 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.239388241 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.329409193 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.253398507 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.240281414 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.254181003 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.265782434 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.2429802 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.23910177 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.755049633 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.250991951 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.462047451 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.405319657 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.25268294 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.267888489 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.631426775 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.239263894 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268528252 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.561087466 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.284086695 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.23960022 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.542187347 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.146710011 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.34935827 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.240927608 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268882319 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.238058454 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.514097239 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.240283175 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.240020385 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.242321167 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.841981397 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.242386781 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.755798999 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.243249388 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.120428362 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.241519167 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.239740972 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.173638917 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.783219969 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.241883178 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.23939487 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.240596026 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.238584429 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.238356111 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.269459048 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.390894666 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.331623673 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.239371472 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.241657008 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.267006684 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.237623212 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.333706166 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.240282103 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.971535848 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.291411503 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.366686777 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.736903154 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.236889886 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328573223 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.352817066 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.237091632 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.236264181 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.237498657 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.236934668 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.34426444 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.236181221 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.237827124 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.596808232 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.400553113 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.2514711 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.362685353 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.332418544 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.23722531 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.531741752 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.242032491 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.237429011 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905297471 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328227405 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.23830663 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.236473422 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.236841186 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.596548654 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.729250708 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.413150246 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.240797128 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.236378054 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.590554575 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.24136952 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.238869 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.611107023 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.719399192 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.236778125 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.835285281 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.241727455 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.346144762 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.398840983 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.251715283 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.238908817 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.340952608 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.243394698 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.294955266 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.236929677 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.633227756 seconds)
  done (took 368.764219963 seconds)
done (took 597.618169756 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.107606427 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.056163564 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.203066558 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.066555212 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.046538481 seconds)
  done (took 11.618842417 seconds)
done (took 12.759458353 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.411620703 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.41585726 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293634274 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.414628003 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.271478187 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.428189777 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403513483 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.263319699 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.35391917 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.315560183 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.346585281 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.291900888 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.26931594 seconds)
  done (took 18.618495379 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.495682591 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.251957643 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.313930364 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.496400711 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.289944975 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.505081393 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.530982057 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.251733637 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.387032138 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.261655743 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.258657036 seconds)
  done (took 18.18407536 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.529030203 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.250459862 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.306315119 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.508927919 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.284366715 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.50564923 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.546042031 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.252306214 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395064469 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.259298751 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.257274127 seconds)
  done (took 18.234886359 seconds)
done (took 56.179333684 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.271381261 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.326995122 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.268395623 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.257453928 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.253563825 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.255791001 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.258523303 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.254938344 seconds)
  done (took 11.2878454 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.255036525 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.256189583 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.252961651 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.254582483 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.254662643 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.252953585 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.25547394 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.254133553 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.253953519 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.254279484 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.25468465 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.255367042 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.254715543 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.25305191 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.254252232 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.254110062 seconds)
  done (took 21.212071384 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.257877283 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.254117849 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.255025609 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.254612637 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.255692145 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.254987829 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.255649578 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.254517162 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.257101046 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.253963005 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.255491294 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.254367951 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.254184728 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.256264177 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.255274171 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.25634159 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.255266814 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.25543347 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.259893102 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.255427308 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.256006892 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.254946028 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.256943027 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.257613337 seconds)
  done (took 31.280745236 seconds)
done (took 64.920936717 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.242060968 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.247537484 seconds)
  done (took 5.632511645 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.316195581 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.317354544 seconds)
  done (took 3.777118291 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.258039436 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.256942353 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.258650193 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.258058955 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.257493336 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.25645715 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.257533522 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.257052199 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.256600392 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.259192231 seconds)
  done (took 13.718956181 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.258721952 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.257090282 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.257768633 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.256248919 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.255911505 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.257762948 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.258033075 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.259288588 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.257636935 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.256616683 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.257339723 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.257965031 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.257924243 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.257799559 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.259656239 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.257373858 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.257601046 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.259270178 seconds)
  done (took 23.784828279 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.271103953 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.278600351 seconds)
  done (took 3.69617292 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.397781035 seconds)
    (2/7) benchmarking "second"...
    done (took 1.300941815 seconds)
    (3/7) benchmarking "month"...
    done (took 1.374666206 seconds)
    (4/7) benchmarking "year"...
    done (took 1.365477051 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.299864971 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.280953741 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.300239631 seconds)
  done (took 10.465090888 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.259429793 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.47653902 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.604102415 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.845843385 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.262461149 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.26317735 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.057751991 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.263081455 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.265114751 seconds)
  done (took 14.442645888 seconds)
done (took 76.66256026 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.242872101 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.304361201 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.273076498 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.284671626 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.59962199 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.271970213 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.250828827 seconds)
done (took 16.374357136 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.22999059 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.24004929 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.235089691 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.235124282 seconds)
  done (took 10.088899706 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.202567239 seconds)
    (2/2) benchmarking "read"...
    done (took 1.539793401 seconds)
  done (took 4.888391664 seconds)
done (took 16.125480201 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260627766 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.259054574 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.260354604 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.260828479 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.260713557 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.257843116 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.259323709 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.260963831 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.260992371 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.260657159 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.259856202 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.259493184 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.261778785 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261011537 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259793061 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261962436 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262498927 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.261417725 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261438201 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.261229087 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260259112 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260628174 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.261080781 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.262045848 seconds)
  done (took 31.403063646 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.262785194 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.261584659 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.262479655 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.262819695 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.260544396 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.262365397 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.262103085 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.259974979 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.262473164 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.26191948 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260966239 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.261426893 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.260859851 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.263468337 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263686715 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.262719603 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.261901723 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26247232 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262292488 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.261914478 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.262028591 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263476576 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.263101858 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261966661 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.264066081 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265572889 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.264243532 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.263536117 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262203317 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.262284087 seconds)
  done (took 39.019638926 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.26553071 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.265978932 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.26321079 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.264359413 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.263509219 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.262927297 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.264409274 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.262416292 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.261981038 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.262265628 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.263130727 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.263266806 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.264491263 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.264446021 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.2658736 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.263540956 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.264034211 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.264064383 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.262789192 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.262544837 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.264074564 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.263842159 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.265517001 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.264945503 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.26304059 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.263368369 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.264663677 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.263548154 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.265348751 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.263822941 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.264332365 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.264966787 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.26411647 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.263899379 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.264604305 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.264864413 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.267373354 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.269037413 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.264502401 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.263406291 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.265407482 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.265205761 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.263938502 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.264332424 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.264519072 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.26627849 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.2649619 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.266332033 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.265853801 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.265554701 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.265956467 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.265572873 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.264825199 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.266257789 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.265713651 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.267261497 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.265815915 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.265332152 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.266585442 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.266408158 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.264507107 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.266776048 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.265009562 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.266633215 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.266081024 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.267943003 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.265125535 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.266946776 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.266525809 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.268004379 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.267162898 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.266530344 seconds)
  done (took 92.229058357 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.268151756 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.26800776 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.267171152 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.26666593 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268717531 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.268677311 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.26808535 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267529823 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268567592 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.268819233 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268337291 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.26949906 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266527041 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26763295 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268575823 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.26815738 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.269912211 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268228373 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.268868127 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27073261 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269492648 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.269423552 seconds)
  done (took 29.059503359 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.269518069 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269454768 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.267227334 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.269448321 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.27213627 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.269174894 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.267691361 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.269970412 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27057559 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268663746 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269260358 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268978099 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.270271421 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267511382 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269357057 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.272210734 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269738888 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.270502141 seconds)
  done (took 24.005795259 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.271952359 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.269501301 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.269340754 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.2694592 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.269144582 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.270315103 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269517198 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.270330637 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.270214613 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.270104727 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.270039293 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269264349 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.270909696 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271868209 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270919967 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.27169192 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.271135994 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271200685 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270956696 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.269283745 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.271514159 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272226847 seconds)
  done (took 29.106850966 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271749663 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272114031 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.272559478 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.271205994 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.272161054 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.272089226 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.271924709 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.271534487 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.273283735 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.271428537 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271014422 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.273025753 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.274251443 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273202369 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.271442652 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274242427 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.27140437 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.271890797 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273476087 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.271795102 seconds)
  done (took 26.602482237 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273796354 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272461421 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273459623 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273682024 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27377928 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.272715821 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273669112 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.273454864 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.271042971 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274123714 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272808697 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273740786 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273879752 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274361751 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275039362 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27398589 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274879368 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274315534 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27504396 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273615528 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275230811 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.275160705 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273910579 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274119353 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272341348 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273881038 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274848573 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27292779 seconds)
  done (took 36.823367884 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275257363 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.273808455 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.275023562 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.274556698 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.275455122 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.274871927 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.274657622 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.276758826 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.275245388 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.274822076 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.274849843 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.275451633 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.275448178 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.276457837 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.274609394 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.276109396 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275548169 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.274539433 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275694799 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275124282 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.276049646 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274831757 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.276461101 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.275611095 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276116012 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.276536915 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.275545962 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.274581201 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277351047 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.275579332 seconds)
  done (took 39.42230217 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.297565276 seconds)
    (2/2) benchmarking "in"...
    done (took 1.297324543 seconds)
  done (took 3.755899366 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.276176979 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.277679823 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.276822492 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.277170236 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.276306192 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.274968489 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.277116203 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275525808 seconds)
  done (took 11.372741093 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.269440096 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.276815166 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.278128294 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.277942624 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.275667992 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.268497056 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.278186834 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.280995108 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.273342307 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.27057255 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.27582745 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.273943843 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.273323672 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272630731 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.272197106 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2737143 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.282093325 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.276600975 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.276883648 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.278003486 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276814073 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274355084 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276079734 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.282525591 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.264392157 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.272822389 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.26987352 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.274154332 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262883122 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.267358125 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.265535194 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.270991995 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.257807682 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.260031212 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.258656135 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.259679224 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261725496 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257668952 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.260517365 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264022394 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252468671 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.250345273 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.246431673 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.247210984 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24751384 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.25291477 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.252058799 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.250407912 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.237825492 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.2411065 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.248759657 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236353064 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.244593646 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240976681 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.242773464 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247547499 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.247449047 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.238417379 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.241027562 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.244514209 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.250204821 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.247434654 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240607109 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.246630952 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246197689 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.251682856 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246511224 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.249601892 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.244449752 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.244610035 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.24311229 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25242955 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.249075299 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.247471564 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243704854 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.244664427 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239361884 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246398166 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246151455 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.246296966 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.245505678 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244195164 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246321975 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25051335 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.238246996 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.245883745 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.244749905 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.244376156 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.239986444 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24751414 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.250139492 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.245394605 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.23784775 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.239689461 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.240838253 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.247051681 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.23869887 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239944943 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.248713883 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.246946201 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246362048 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.240854317 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.245120847 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248382432 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248773907 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.245861028 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.249001197 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239703214 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.246976951 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.250793336 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246519581 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.240630093 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.243457321 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.247390213 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242407218 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.24542297 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.248604059 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.242663854 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.249418982 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.248198231 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248931813 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.25797423 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.248496075 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.247422829 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.244200229 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.252503183 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247037187 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.244186796 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.251006129 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.249061932 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.247825984 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.243175439 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.251384154 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.240620768 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248776803 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24350823 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.249573977 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.248143752 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.24732286 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.243638911 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243019394 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.243232085 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.244162709 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.246864121 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.24892304 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.24435003 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.251111743 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.244971623 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.244580471 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.245829394 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.25180981 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251087104 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.243037431 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.251194045 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.242682043 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250237388 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.242973363 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.250673569 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250977197 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.249204985 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250793502 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.242923296 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243996777 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.250052458 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.24767413 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.245411943 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.250976973 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.252105953 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.251661671 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.243504673 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.251062331 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.242424065 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.245916281 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.253309095 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.250460429 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.249305034 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.246096668 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25234725 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250832413 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250297673 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.245160305 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.249291813 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.252238556 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.251212134 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.254622389 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251488456 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.253200914 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.244806282 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.244535907 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25277962 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247162665 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.257263837 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255787812 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2540505 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.247272504 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.253698558 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.245610367 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.25247768 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.249055783 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.254332506 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.253943374 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252677104 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244367762 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253222101 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.247244767 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.252532979 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.244727468 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.252079234 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.253487404 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.253533831 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252801555 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.246118295 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248031097 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.252451532 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252780332 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252876217 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.245866784 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.25444231 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.24415621 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.246165605 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.254196866 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.253291347 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.252203477 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.256251369 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247800442 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250010406 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.248516248 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.246213466 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.254346525 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249366305 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.248600158 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254575586 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.249905435 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.24831145 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255955933 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.252048469 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.248990854 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.252897459 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.255997438 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.254386394 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.24936849 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.259341701 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.25547675 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.255130806 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.254320643 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246805245 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255555988 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.253626315 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.257634259 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.248301465 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.257895604 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.249169169 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.255625876 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.249760814 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.251660105 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.250721943 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252201136 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259971641 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.255271257 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250014094 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.25684475 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.255420816 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.255926301 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250242208 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.260480946 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.254277219 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.252656506 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.252742774 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.251226088 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.260950853 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.250183424 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.255754306 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.249333486 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261698876 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.26718642 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257126377 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.254184409 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.257266765 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256074361 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.253518676 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.252197154 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251679964 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252071319 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.251430981 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.250704823 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.260664007 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249678751 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.259375682 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252475245 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.254527925 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.259105908 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.258969131 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.251582951 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.256907031 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.257721381 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.256068107 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.250017467 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.258669375 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.252113575 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254635658 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.252285377 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.252492675 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258076077 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25594067 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.252528089 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.25200511 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.253129178 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.251889783 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.254694336 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.260308605 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.254290754 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.262312943 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.253673422 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.258246874 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.253061293 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260497825 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.261877343 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.254094793 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.264180195 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.260322668 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.251279753 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.252580051 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.25959888 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260375691 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.263188711 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.254902384 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.259340729 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259163526 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.25985318 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.260732879 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.259791897 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259523018 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.259980911 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262462811 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.257143394 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.25391563 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255248283 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.261340188 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.260495117 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.261510514 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.251867633 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257237799 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.263172203 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.25440043 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.254635118 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.254549769 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.26072041 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.261634726 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.26164027 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.262371061 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.263223645 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263316942 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.260186852 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263965842 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.260722026 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.262588944 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264221117 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261529839 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.26466217 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.256723205 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.262149451 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.262285638 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.256816246 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.255335615 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.255617466 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.262302662 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.255960407 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.264372817 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.260578738 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.25819649 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.257619387 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.263987649 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.256366758 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264552972 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276406621 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.256719512 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263952754 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.262078203 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.256153087 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.264012969 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.262293147 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.255260628 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.258106932 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260265972 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267390561 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.256534812 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.264663645 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257553486 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264063361 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.262965503 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.263272074 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.262042351 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.26549821 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.25696651 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.263667832 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258962849 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.266408834 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.258997134 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259241367 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.256984068 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.265346051 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.266312723 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.258015419 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264560995 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.264851788 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.258126351 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.258891805 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.267038667 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257612799 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266205898 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.25779678 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262450938 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.260791123 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.262859798 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.260025677 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.265668879 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.259013973 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.259344313 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264249228 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.266213933 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265621756 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.259790894 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.266314061 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.258911993 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.258123615 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.266665291 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.25944433 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268794077 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26138468 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.263156857 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259883568 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.268069618 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.26639851 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266294764 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.256888263 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.260735177 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.266537266 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264735616 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.264554853 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.264015394 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.267877414 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.259885245 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263245907 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.262997317 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.258733478 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.261583553 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.267425768 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.260301563 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.259026862 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.261909376 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266632955 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.266706612 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.263151741 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.260450753 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26920721 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.265172223 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268994564 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.261069173 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.262991294 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.261147423 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.269201907 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.267974587 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.260778968 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26937648 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.264259553 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267907695 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26301723 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.261922313 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.260298872 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268537758 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268353398 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.261850377 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.269007535 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.262083025 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268544571 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269198894 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.2689615 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.26100217 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.262585956 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.263728433 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.264018906 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.269128282 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264436315 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.266106644 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.264063935 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270894536 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269804933 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.269115781 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.268882965 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.262417796 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269315888 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.263220054 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.267115193 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.265249628 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.265193833 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.273187713 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267723835 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266192703 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.269340736 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.272690389 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.269617232 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.261441306 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.265411549 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.268122769 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271892298 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.271911521 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.264960009 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.264913501 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.271889652 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272012557 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.27178203 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.266134142 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275915243 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.275181266 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263655435 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.264870703 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267920863 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.274028247 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.271482502 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.271472134 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.266853687 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.268927277 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.27538473 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.270852871 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272026705 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269428475 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.265577456 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.27523816 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.266604518 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.268984387 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.26885007 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273521759 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.272207517 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.26736395 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.275988761 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273930555 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271188882 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285527001 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.270438417 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.267431093 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.27313018 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266183693 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.272307869 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.267444305 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.273144289 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.271487338 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272740221 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273103789 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.266400558 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270228965 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.269315085 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.275527573 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.272963001 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.26492205 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.268206179 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.274995955 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.272628221 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.270280642 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.26988874 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.268366013 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.268613662 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.262698238 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273782752 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.274470574 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.27337003 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.268777271 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.268944384 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.264448275 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.264357595 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267126054 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.273455438 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.270236402 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.267853034 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.263306076 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271678715 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.269404526 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.262551033 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.263756113 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262228081 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.269724172 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.273718575 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.2781754 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.267489463 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.266078302 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27079112 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.270263368 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263452158 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269568706 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269316768 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.259785094 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.260283616 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267827206 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.266765109 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.266990998 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.259873932 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.270392237 seconds)
  done (took 751.095849466 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262587276 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261511959 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.261942548 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262597484 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262339678 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262116722 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26321231 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262700399 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.259717656 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.260674525 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.259501133 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260689268 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.259714953 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.262077403 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260831684 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258199597 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258075664 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258635867 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.258643812 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258232612 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.259913021 seconds)
  done (took 27.628435089 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.258995295 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.260385932 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.25785641 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.260876557 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260377978 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.257645688 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.259251648 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25875638 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259856966 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259190373 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.258804291 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258914151 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.259892266 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.26024705 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259511908 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259375366 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.259946916 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259085162 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.258672046 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.25937918 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25911453 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.259586044 seconds)
  done (took 28.853889518 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.258966954 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.260669963 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.251679562 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.261561167 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.260856118 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.261662442 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.260141087 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.260040224 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.259416065 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.252802835 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.25468845 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.2538048 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.258111417 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.265354017 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.25636827 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.262613212 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.260077383 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.260228687 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.260446079 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.26113907 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.259885551 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.26437075 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.260517086 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.252595967 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.26190278 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.262583115 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.261593463 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.260809711 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.253780475 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.26317247 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.259993342 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.255125725 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.258121485 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.256465321 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.2559426 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.263998417 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.261638626 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.261702997 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.262984697 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.263710686 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.276522486 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.261478462 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.260790277 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.266411514 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.263185566 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.255973753 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.265684438 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.262186137 seconds)
  done (took 61.643619443 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.264776609 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.262584349 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.262092515 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.263657484 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.26409126 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.262217048 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.262850263 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.262578786 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.261466001 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.263382339 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.262545151 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.262607404 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262195578 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.26286835 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.263317806 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.262490576 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.263955304 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.263502592 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.262230346 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.263530489 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.262640071 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.263670384 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.264616206 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.264141992 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26441602 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.264028405 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.263458879 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.262132677 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.264336937 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.264579536 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.264924423 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.264126312 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.264570614 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.263448936 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.264868944 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.263974205 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.264113724 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.264382297 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267872619 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.263553793 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.264501932 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.265819204 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.265325772 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.264591771 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.264576077 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.264476814 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.26566817 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.265025676 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.265039838 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.266322116 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.26521489 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.266876934 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.265869921 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.266009616 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.265657138 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.266642213 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.267296649 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.26785032 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.266109625 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.267079906 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.266561926 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.26546002 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.267606179 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.267647294 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.26674875 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.267425864 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.268321249 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.26716147 seconds)
  done (took 87.148805616 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267000585 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.265373213 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266810249 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267765466 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268212201 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.267883497 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.265945803 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.266684778 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.266228059 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266132248 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269332435 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.269116473 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.26671143 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.268218637 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.266963724 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26809924 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267829133 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26695313 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267742983 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267958734 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.268559145 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.268540732 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.268283805 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.267418624 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269805099 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.268288565 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269676986 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.268412296 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268624577 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.269412528 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.267887198 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.268624207 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.268793443 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.268463088 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.268889024 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.270089344 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270619186 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269812801 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.271139696 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.270865792 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269125888 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270553467 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270653651 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.2694419 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270162072 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.269596888 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.26932684 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.272081216 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.269599974 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.268351106 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.270311461 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269185098 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271662733 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.271500343 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270764155 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.270978273 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270630165 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26947415 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270364238 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.265322141 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266455958 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.266609443 seconds)
  done (took 79.818676732 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.269027021 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.267901051 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.265785287 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.266220241 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.26351018 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.263889221 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.264753808 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.263682816 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.262288254 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.263972329 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263602506 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264571955 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261509066 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260642357 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.260656885 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261576507 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259715 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.259702634 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260231479 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265286425 seconds)
  done (took 26.424163887 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.258356261 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.257430447 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.259077968 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.258268264 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.258864915 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.258388002 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.26030378 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258957831 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257280477 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260697639 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.258362585 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.259294305 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258453244 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.259998278 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.260566829 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.259053224 seconds)
  done (took 21.292677651 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.259904658 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.258291046 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.257816138 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.26191889 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.261052491 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.263543371 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.259353649 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.26007352 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.25992985 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.259182737 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.257875644 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.263719724 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.261620857 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.25821447 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.257285619 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.262163849 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.262246754 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.260192464 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.262896126 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.262086818 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.264918187 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.262006353 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.266429259 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.26292422 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.261608806 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.265732131 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.261665757 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.264087736 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.263725032 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.262837106 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.263854501 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.264009249 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.261980673 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.264688207 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.260555559 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.263503315 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.264881794 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.264091167 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.263634415 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.263543122 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.266206695 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.263328361 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.265648651 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.26462134 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.264450439 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.263961994 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.263936411 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.265999935 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.261444321 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.264730999 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.264987559 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.262478846 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.266064561 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.266317733 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.266915855 seconds)
  done (took 70.599074584 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263462658 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.265717783 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.266707631 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.263443754 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.266229348 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.265944361 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.26527881 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266272551 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265762672 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.263257285 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.264747196 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.267820163 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268205909 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26417458 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266258847 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266198438 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.265312189 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.265230869 seconds)
  done (took 23.934304291 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.266409283 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.264506966 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.268043354 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.267701052 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.266507302 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.265649742 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269633078 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.267435033 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268847215 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.266523396 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267944191 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.2644408 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266124851 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.267970453 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268795537 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26845857 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.270790962 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266894768 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.266987541 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265238761 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269379994 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268203073 seconds)
  done (took 29.03839527 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.26039143 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.255078241 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.259931184 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.274235516 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.267658844 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.260956051 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.257468327 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.260595912 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.276537347 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.297036179 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.29328964 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.272887202 seconds)
  done (took 16.392870225 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265110597 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270458041 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270367507 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269375083 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267612786 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270733865 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265791407 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271049409 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269591908 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272348801 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270701308 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266614258 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270205565 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26967016 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26709507 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270267909 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270186281 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269866804 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26842079 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271382318 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268128477 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270514561 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272027865 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267082554 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267911905 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270706669 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268157577 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269297766 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270367146 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268282325 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269682374 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26889175 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271783253 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271224237 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269552438 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268222813 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271563067 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273866028 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27191083 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271716226 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27276446 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272829198 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271831135 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271867092 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271028368 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270749547 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272054957 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270876937 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272303051 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271273666 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271688474 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27391396 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272859667 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273847406 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268372046 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271242938 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268103451 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270231453 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272702935 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273820444 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270678624 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269044735 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272341826 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271584615 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272487637 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2718503 seconds)
  done (took 85.009599216 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269776958 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273302433 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269156114 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270539802 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269658829 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2728838 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270217065 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271392795 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270891382 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269449036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272397709 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270287727 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27150152 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270424055 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272210527 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269934374 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271106767 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273076678 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272490713 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271252512 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270089765 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271656418 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272328895 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272104454 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27226658 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271730945 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270047172 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27092865 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271853984 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273460454 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274953286 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272361254 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270960292 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.272323212 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271090619 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27205566 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272054144 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273159747 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274790259 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273182546 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271093471 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273084491 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272697132 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272560733 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272917165 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272808762 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272674464 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273428849 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273176719 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271952433 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273856576 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273986 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273190352 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276090872 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276157792 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27516556 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274977528 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274117787 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276625973 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275623766 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271918291 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276400241 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276946437 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274582275 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276934493 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275336454 seconds)
  done (took 85.152370964 seconds)
done (took 1757.981539975 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.431794661 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.389183202 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.265228261 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.274196356 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.268347625 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.263718542 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.279179031 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.264535021 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.263419958 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.263466299 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.265450928 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.456776418 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.29919124 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.266687113 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.266246298 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.362791153 seconds)
  done (took 26.041726344 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.29296188 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.276175102 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.37923857 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.276418627 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.301303515 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.456977758 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.328218601 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.279284158 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.432911565 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.292627955 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.27044272 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.299186295 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.278128327 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.273079088 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.29574279 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.455386946 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.506344285 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.274583008 seconds)
  done (took 28.132872832 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.685925135 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.277625224 seconds)
  done (took 5.133316287 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.300845938 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.283025901 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.281848214 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.27681132 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.271069257 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.271785433 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.275777601 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.273616448 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.273979002 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.390394437 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.282600046 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.294121749 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.279132777 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.277867319 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.28873958 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.324652571 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.469321951 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.282828103 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.288523245 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.28661643 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.278309969 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.365176085 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.316294069 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.285875227 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.397208887 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.275611658 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.286751174 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.28567076 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.407282576 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.286435008 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.279818501 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.281949045 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.280981534 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.275228077 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.728488977 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.270501971 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.30095889 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.287261874 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.290675146 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.432623463 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.283997789 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.28422974 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.274730282 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.709677071 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.411210612 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.394606494 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.271053684 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.296841755 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.282577788 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.345370171 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.282014267 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.283247184 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.33703577 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.093763628 seconds)
  done (took 82.308870011 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.334064926 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.27778012 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.4581073 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.289014159 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.271741196 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.274407715 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.272817501 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.542922107 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.280829193 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.29086593 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.559449036 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.818278657 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.284866035 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.369436289 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.224856412 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.392622856 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.28062059 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.274403016 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.282655391 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.278238944 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817798666 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.278800956 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.27801895 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.384620415 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.310550673 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.797464115 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.2812219 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.276369569 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.280380991 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.278219574 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.780448496 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.282456527 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.353253535 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.274214987 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.541056452 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.651587046 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.612236518 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.279292786 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.297973251 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.282760936 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.296189295 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791499433 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.636889861 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.281073542 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.279336289 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.7863381 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.28304581 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.277921518 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.281090513 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531124429 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.282162337 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.283956752 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.272053445 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.29905573 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.275471583 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.304703296 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.349007893 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796534194 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.281327177 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.274813921 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.300426787 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.278938282 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.28217695 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.283653915 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.297999452 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.637257329 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.465196639 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.284711294 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.627822764 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.765337592 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.282698007 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.839531373 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.280953132 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.290294356 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.288500136 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.28101282 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.293228326 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.795297184 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.308462124 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.277272518 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.615737076 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.281977678 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.560539789 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.297270746 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.280918759 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852756111 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.285187178 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.366806732 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.280558807 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.283038061 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.278430607 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.276567235 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.550374794 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.301059998 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.282449875 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.279386993 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.305397593 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.276419372 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.291495582 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.290105284 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.838347482 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.286859698 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.281146198 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.284321094 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282941604 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.283435007 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.283406345 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.28283243 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.550787196 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.284351841 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.304489287 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.285281076 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.277888959 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.291555078 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.373880691 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.287762835 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.578884143 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.289145215 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282637314 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.288540801 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.281940244 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.293629446 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.276826288 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.285299921 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.130988445 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.583935409 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.299751408 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.283660321 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.286864545 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.284510322 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.283023945 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.297964188 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.327764752 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.28523815 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0507153 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.319346869 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.309781666 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.281209005 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.28869093 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.282926159 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.288047699 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.288258312 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.578014464 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.549559587 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.476538307 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.28103142 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.28999801 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.040471932 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.342614007 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464059576 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.304796064 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.280457108 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.566960316 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.501793013 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.284745992 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.278791681 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.28530893 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.542661955 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.287698942 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.592876021 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.812774176 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.290114248 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.28511309 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.068626441 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.999691647 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.283612976 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.289362855 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.561701472 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.307686969 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.288193107 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.28187192 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.288811535 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.28590319 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.292913719 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.289316126 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.286316745 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.285328898 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.343284458 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.480613929 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.304368611 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.287127306 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.80235204 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.33955429 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.287343794 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.292347505 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.282990745 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.284020778 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.330045778 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.286694336 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.28984869 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.287209406 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.293303813 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828860369 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.283318994 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.287044558 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479770739 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.96956543 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.289746479 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.289422735 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.286630029 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.290595813 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.827699453 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.349470013 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.575759126 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.291784127 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.322949642 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.291183249 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.383138192 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.827376566 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.296688505 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.287444283 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.941805201 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.28951121 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.798114398 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.287568821 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.291931346 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.860006442 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.286299567 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.290530837 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.296968429 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.291247672 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.59835932 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.290045591 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.341753043 seconds)
  done (took 485.725275575 seconds)
done (took 628.502184149 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.28765655 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.291279115 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.275625075 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.291343352 seconds)
  done (took 10.327155386 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.309041588 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.299378292 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.309234719 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.300598162 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.307088429 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.297382606 seconds)
  done (took 9.010560541 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.290055453 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.291941143 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.292516453 seconds)
  done (took 8.061581407 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.502353243 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.311943167 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.637462801 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.302873809 seconds)
  done (took 8.942777595 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.307005023 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.306897825 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.310006201 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.311024863 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.312002347 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.311496549 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.30971151 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.307768128 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.304755978 seconds)
  done (took 12.967507156 seconds)
done (took 50.489126963 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.291105299 seconds)
    (2/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.364322002 seconds)
    (3/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.330741306 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.361829446 seconds)
    (5/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.277264405 seconds)
    (6/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.415023316 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.39790197 seconds)
    (8/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.438647789 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.328428848 seconds)
    (10/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.399191329 seconds)
    (11/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.334450539 seconds)
    (12/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.298105089 seconds)
    (13/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.279008001 seconds)
    (14/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.406463748 seconds)
    (15/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.292192371 seconds)
    (16/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.294983709 seconds)
    (17/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.132584513 seconds)
    (18/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.997831133 seconds)
    (19/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.101511537 seconds)
    (20/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.284632669 seconds)
    (21/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.284203336 seconds)
    (22/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.99677402 seconds)
    (23/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.107427985 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.371045902 seconds)
    (25/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.277120211 seconds)
    (26/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.27658858 seconds)
    (27/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.004672146 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.393826728 seconds)
    (29/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.376261836 seconds)
    (30/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.362095853 seconds)
    (31/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.461017726 seconds)
    (32/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.277469102 seconds)
    (33/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.337122207 seconds)
    (34/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.326785157 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.389922499 seconds)
    (36/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.505027499 seconds)
    (37/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.962102435 seconds)
    (38/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.441447691 seconds)
    (39/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.542182144 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.45541678 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.366150128 seconds)
    (42/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.53876741 seconds)
    (43/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.005233054 seconds)
    (44/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.331426924 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.546593682 seconds)
    (46/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.244692246 seconds)
    (47/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.25690513 seconds)
    (48/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.95983794 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.408471417 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.300594172 seconds)
    (51/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.46222004 seconds)
    (52/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.28181585 seconds)
    (53/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.422091898 seconds)
    (54/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.398461829 seconds)
    (55/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.358700967 seconds)
    (56/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.144480593 seconds)
    (57/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.279886806 seconds)
    (58/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.28357542 seconds)
    (59/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.28202101 seconds)
    (60/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.373964157 seconds)
    (61/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.441751255 seconds)
    (62/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.467592679 seconds)
    (63/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.294922956 seconds)
    (64/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.276274771 seconds)
    (65/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.278996116 seconds)
    (66/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.34879264 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.404201151 seconds)
    (68/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.416415592 seconds)
    (69/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.277161917 seconds)
    (70/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.27692921 seconds)
    (71/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.410447922 seconds)
    (72/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.089705568 seconds)
    (73/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.382133808 seconds)
    (74/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.277247425 seconds)
    (75/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.033649924 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.38733295 seconds)
    (77/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.366470499 seconds)
    (78/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.057804206 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.406447509 seconds)
    (80/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.278740142 seconds)
    (81/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.382715873 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.412310653 seconds)
    (83/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.370407944 seconds)
    (84/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.040612771 seconds)
    (85/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.419957953 seconds)
    (86/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.33174309 seconds)
    (87/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.335354889 seconds)
    (88/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.510577574 seconds)
    (89/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.580063906 seconds)
    (90/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.51598489 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.451958811 seconds)
    (92/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.279840297 seconds)
    (93/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.324625986 seconds)
    (94/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.512481391 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.412620101 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.33259548 seconds)
    (97/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.329862163 seconds)
    (98/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.329980824 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.409061518 seconds)
    (100/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.431681548 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.372120537 seconds)
    (102/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.492384481 seconds)
    (103/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.383122377 seconds)
    (104/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.41129828 seconds)
    (105/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.281424399 seconds)
    (106/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.333039162 seconds)
    (107/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.407163584 seconds)
    (108/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.399951788 seconds)
    (109/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.622349485 seconds)
    (110/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.417272071 seconds)
    (111/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.437802966 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.277296634 seconds)
    (113/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.440090609 seconds)
    (114/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.277257884 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.447715281 seconds)
    (116/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.282472547 seconds)
    (117/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.117195552 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.342009289 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.437426765 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.410304146 seconds)
    (121/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.33167353 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.426297628 seconds)
    (123/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.280495311 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.553342608 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.455678244 seconds)
    (126/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.313337265 seconds)
    (127/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.379219725 seconds)
    (128/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.306235796 seconds)
    (129/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.48563816 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.300849234 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.456687978 seconds)
    (132/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.104023963 seconds)
    (133/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.366245322 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.436190252 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.395866524 seconds)
    (136/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.375307887 seconds)
    (137/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.283324837 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.316848179 seconds)
    (139/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.564040133 seconds)
    (140/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.064849845 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.364272141 seconds)
    (142/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.397953887 seconds)
    (143/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.304622249 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.393776228 seconds)
    (145/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.180090597 seconds)
    (146/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.284604699 seconds)
    (147/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.283138363 seconds)
    (148/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.286633071 seconds)
    (149/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.486141375 seconds)
    (150/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.194007796 seconds)
    (151/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.280312834 seconds)
    (152/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.480522351 seconds)
    (153/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.404207848 seconds)
    (154/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.383271078 seconds)
    (155/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.339206423 seconds)
    (156/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.462918918 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.362885905 seconds)
    (158/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.304602712 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.428774925 seconds)
    (160/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.286447999 seconds)
    (161/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.455686441 seconds)
    (162/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.516130392 seconds)
    (163/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.283457282 seconds)
    (164/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.438760908 seconds)
    (165/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.295166992 seconds)
    (166/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.339047821 seconds)
    (167/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.282975565 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.346511034 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.424336055 seconds)
    (170/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.283162086 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.431455931 seconds)
    (172/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.486267543 seconds)
    (173/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.374594324 seconds)
    (174/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.335728426 seconds)
    (175/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.370598231 seconds)
    (176/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.301651722 seconds)
    (177/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.291439241 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.56305956 seconds)
    (179/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.415252962 seconds)
    (180/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.145866447 seconds)
    (181/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.387652242 seconds)
    (182/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.44724965 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.495590246 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.405248373 seconds)
    (185/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.516475785 seconds)
    (186/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.496786558 seconds)
    (187/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.382193126 seconds)
    (188/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.139331259 seconds)
    (189/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.128006615 seconds)
    (190/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.287956033 seconds)
    (191/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.48725312 seconds)
    (192/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.346389861 seconds)
  done (took 333.103355694 seconds)
done (took 334.291235158 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.325899332 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.386400717 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.306927027 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.30824739 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.309323032 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.308227136 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.334029285 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.309078804 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.322268066 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.32481264 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.310657777 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.322091301 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.32144067 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.318124521 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.343198793 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.308268393 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.309408738 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.323194324 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.327310206 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.32605026 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.31578517 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.314872718 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.334591714 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.31027515 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.318615522 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.319834199 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.317178073 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.3128923 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.323222944 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.325267788 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.305443942 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.318227105 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.330135545 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.320725119 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.315193562 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.320959379 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31077714 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.389199504 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.328924582 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.321647237 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.319858036 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.32878563 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.316677327 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.317280085 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.32101139 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.334992358 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323187022 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.328545101 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.300049263 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.307548133 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.329649838 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.325372115 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.321137529 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.303309996 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.307529776 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.330347668 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.323207745 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.329884785 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.321723622 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.313849379 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.351081598 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.328230931 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.323648619 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.325102392 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.319883831 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.32762713 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.320916416 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.330217293 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.321510355 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.316345642 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.313274662 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.323319906 seconds)
done (took 104.401536958 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.431432602 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.313322982 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.457137301 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.322926356 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.475278539 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.444607695 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.323722743 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.322387586 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.322054574 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.108213075 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.32540027 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.318160127 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.308787363 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.326220857 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.444531307 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.323722881 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.325758165 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.017801435 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.323994966 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.459669092 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.314740518 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.321081051 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.325090766 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.112177707 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.314055855 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.316120468 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.458063963 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.325585395 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.016858222 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.310180466 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.314044292 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.012112629 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.460378198 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.344989588 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.333375265 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.334575921 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.476586593 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.326729504 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.434895906 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.438840508 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.456066343 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.361923617 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.311868959 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.315395098 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.328685404 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.324804826 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.326797634 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.356390196 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.317289234 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.323471478 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.014325456 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.336173943 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.328988706 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.325080938 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.327437272 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.353519402 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.324273714 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.329844852 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.462336224 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.329237083 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.446207248 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.126189714 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.121618845 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.326685449 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.316065707 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.326535459 seconds)
  done (took 107.40059632 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.386402713 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.391590164 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.429081987 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.318841462 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.372142098 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.426146967 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.320402968 seconds)
  done (took 10.842756032 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.328267929 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.326271666 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.370258917 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.368349732 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.328752458 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.473986266 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.324757825 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.331433104 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.325147143 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.372698502 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.323513521 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.325477249 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.33784633 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.322400488 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.370585706 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.332413345 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.433137565 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.319719811 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.324904604 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.477150074 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.330514201 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.338383775 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.37221981 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.329176232 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.329226868 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.3248498 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.096676633 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.327674947 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.330671811 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.330322659 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328605451 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.373848125 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.325828306 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.31856306 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.329070787 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.436922593 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.330391886 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.329753028 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.331372199 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.321738603 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.330513309 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.32646916 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.331527666 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.328570248 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.329186123 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.343415376 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.328012638 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.329999626 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.330033353 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.328969277 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.372715811 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.327598785 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.330252683 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.329501095 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.376090077 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.340497636 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.32884083 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.332871444 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.331009415 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.33131566 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.475423249 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.370437331 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.329585667 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.371285574 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.330972636 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.333229086 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.331796385 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.32649201 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.417729431 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.330770157 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.373854861 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.33040775 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.507801765 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.346864868 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.33179868 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.32451013 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.324256857 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.329796921 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.319639694 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.328100479 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.333322885 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.326425662 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.328098215 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.331369406 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.334557062 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.484202279 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.431822931 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.334473024 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.338564278 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.328472017 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.333199559 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.376521513 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.330883649 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.329614673 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37712389 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.437515045 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.378221047 seconds)
  done (took 136.832896268 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.340445089 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.337566658 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.327433297 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.351869978 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.322165381 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.324171829 seconds)
  done (took 9.208797836 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.326560067 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.332169028 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.333335013 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.331086778 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.332167125 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.333216284 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.331894228 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.327430417 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.334298739 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.332008129 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.335137186 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.333450557 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.334295885 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.333104627 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.332037812 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.333373082 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.332989429 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.33399901 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.334390549 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335405506 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.323560674 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.335473937 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.337359674 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.327089155 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.336453581 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.332289041 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.346047988 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.329651348 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.330348668 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.336482087 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.338418621 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.336207457 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.326656472 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.331815988 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.33729174 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.332020261 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338850296 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.338109966 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.333554084 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.334271875 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.33750125 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335433156 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.332955721 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.336934222 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.327076433 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.332214645 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.338225233 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.347828192 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.33824886 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.33860427 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.339312005 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.333154162 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.335885689 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.337155279 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.33039663 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335363882 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.341343419 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.337105221 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.337869331 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.332825276 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.337818353 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.338670439 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.333648449 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.342053738 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.338068311 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.337057225 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.331640103 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.342113994 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.340000363 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.333031174 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.339272789 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.337657854 seconds)
  done (took 98.318830031 seconds)
done (took 363.804782202 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.60425441 seconds)
  done (took 3.812207521 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.324455814 seconds)
  done (took 3.534762471 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.280237191 seconds)
  done (took 22.49783562 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.339846136 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.391696675 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.328398546 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.332166794 seconds)
  done (took 10.604342698 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.580211158 seconds)
  done (took 3.795181749 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.341650615 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.333551676 seconds)
  done (took 5.891904323 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.501007962 seconds)
  done (took 3.714133723 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.554111812 seconds)
  done (took 3.763193194 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.352596115 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.341233537 seconds)
  done (took 5.912422451 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.307759052 seconds)
  done (took 3.522886286 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.892712837 seconds)
  done (took 21.105797835 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.335811104 seconds)
  done (took 3.55375235 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.379825712 seconds)
  done (took 3.59469954 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.801866638 seconds)
  done (took 6.018986735 seconds)
done (took 102.535965952 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.323800413 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.329807983 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.326943142 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.322438983 seconds)
  done (took 10.516007542 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.392005777 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.392789319 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.398088521 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.391939965 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.39035495 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.391677798 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.365358432 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.365432044 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.389120516 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.391886507 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.399345084 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.392110453 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.395185774 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.365809483 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.395149556 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.395933142 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.391719237 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.398568983 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.364892819 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.391067197 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.34014561 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.390465861 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.391752146 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.340545677 seconds)
  done (took 34.4389506 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.84854181 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.402176048 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.485418893 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.382273821 seconds)
  done (took 7.337791354 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.415042071 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.422435962 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.437311731 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.477144084 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.505650334 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.437205244 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.363289796 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.361175402 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.349806275 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.424882299 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.477238366 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.411257009 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.506740231 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.338471586 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.627175566 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.343158087 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.342474754 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.423175411 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.473442679 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.48902589 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.340030448 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.420452661 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.425644838 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.410695304 seconds)
  done (took 35.440217961 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.349123204 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.366014064 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.342410779 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.354993652 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.343162922 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.34354055 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.345306914 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.34821519 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.341388292 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.342477067 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.341800096 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.353501394 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.342010305 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.344736254 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.350541164 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.345000917 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.346104828 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.348835198 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.353622013 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.347053966 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.342519059 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.352274308 seconds)
  done (took 30.863447287 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.327100884 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.330153518 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.679326631 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.583092592 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.330960177 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.334460503 seconds)
  done (took 13.801273746 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.398230503 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.542797101 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.3402891 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.673823857 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.756443568 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.336690475 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.336209998 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.574701788 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.865144848 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.850118895 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.395330233 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.411211467 seconds)
  done (took 19.695606143 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.3402485 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.334383433 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.345928404 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.347233863 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.457947656 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.39830591 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.396855168 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.330948943 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.393604061 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.390064156 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.400743875 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.393302732 seconds)
  done (took 21.748079518 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428472014 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337505789 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338855485 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351191355 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343536259 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180590865 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.354155967 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.027097935 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.344810446 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615750763 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342177168 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432715985 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594540009 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341894473 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347671041 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.322154331 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570615762 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809811997 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343934301 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349957226 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38044229 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34706716 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352750988 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.544105679 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192259313 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342856703 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.605360794 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342390407 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614893981 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596127525 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.594093297 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348066505 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616496355 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975517064 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44417762 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541084949 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340524415 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.345028242 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.32679412 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.366896117 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351505428 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349177751 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591468426 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349879389 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.344134492 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348794101 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053058971 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.354286396 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.345208168 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346654077 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593283713 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447647664 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.350823903 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346029721 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407993442 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349977899 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.35166402 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467400157 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908007736 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344509327 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355304558 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.350916458 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342977988 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350192958 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98827748 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.357344588 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.350261725 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349484023 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348966173 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347445953 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393419823 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34631428 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.36713492 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346181471 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087375712 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359701694 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35285288 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874689132 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354978211 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.352313337 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577541716 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346833236 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347860958 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.347130153 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347768291 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054945266 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35443805 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.321275208 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407549634 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.054895478 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.549429435 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37009237 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378816155 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.570354039 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.320500992 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34931724 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.348335913 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355954078 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370064823 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.036702922 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348902005 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.355330936 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605421318 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.556784963 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348589986 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.348065805 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803470731 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35331283 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.378532817 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352534259 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.552634354 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.955809994 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610685647 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361606797 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386707484 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350835953 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113618521 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357786826 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.359894942 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.354287318 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623831136 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.14950692 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349866952 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419568873 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354933035 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35233515 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350455147 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356378597 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350346942 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.529488015 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369666943 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604023964 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.357647919 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351420965 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.36384559 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365351605 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.358342399 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.572771518 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359651035 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632585586 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351539689 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351668134 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35298701 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.573546045 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.356175788 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.362086199 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613752074 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351027068 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373786554 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606889271 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386080603 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462234603 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382885352 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.353471534 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.610877782 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.358606316 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.359505004 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351713418 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358885897 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358512238 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.3614698 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367921273 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961609631 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335476471 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355062225 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.353801671 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.369249467 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422231725 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361345951 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.553382233 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.364106909 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363863818 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.359883236 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.353212299 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595642733 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603235859 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.360897316 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437381843 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.81756854 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.959792157 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376450804 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.356358603 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.354138646 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.355192892 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354136555 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358373042 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356637878 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553303409 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616172181 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363772795 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95722743 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364341611 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371451822 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.364600515 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607642171 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.369701069 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358131315 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.356983495 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365213066 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364671508 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.611267239 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495565653 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.371718323 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355291467 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.876963507 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363004325 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355896314 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35746701 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389015854 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357603162 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202101437 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618955961 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355876582 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623451804 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378236048 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.379266146 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.358593509 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359080216 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364037544 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.382502092 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385988526 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.558013266 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366616051 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367049353 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918692149 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114683918 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910105666 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367374439 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.355163873 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379528938 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.060045636 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358126653 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360909004 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589966068 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.055729797 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359078781 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811684653 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.373145056 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.095236444 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61465028 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594842571 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365159316 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.371001607 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615189071 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576922204 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392941181 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372971906 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363511355 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.334818923 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892018844 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374045792 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444136125 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058687067 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3729306 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368739325 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.401487068 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.37660888 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.743950508 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364267468 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361742819 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374331973 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365567959 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191135619 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36068373 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362966837 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988609851 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378053132 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.829365346 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364847156 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.561809278 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.619424936 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.59355268 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.367810269 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.369673218 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.617657574 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612858828 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370681908 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373380811 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914210104 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.236239541 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.370890917 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36740041 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131847234 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365016092 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646424797 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.374297423 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.376139748 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37366525 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364633856 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362717776 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.361336125 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37371141 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34127316 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838922094 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.362792239 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3562415 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378307971 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367219686 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.620394787 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.382537198 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.969528593 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593911742 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376487593 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395385422 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.367743931 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367285091 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.343812586 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365996093 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366894619 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42089758 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.585939293 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363109418 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.338916849 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397670681 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574190438 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367741731 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367221509 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581486582 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.373836262 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.369561561 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142163271 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402270024 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366029253 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371307763 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359107071 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406833082 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431625887 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563444903 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.619577899 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.622534797 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756144649 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37002858 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375241309 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.382638501 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463346783 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364374049 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.387337909 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.166977845 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979420565 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134600112 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.983028606 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626714755 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372119343 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372934045 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368150502 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501657018 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368135464 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644145572 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368814103 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.357992226 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389649334 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369285883 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387532725 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58083523 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640841816 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369360787 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378622303 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370216337 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.371479083 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627572858 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.586205336 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844291185 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909165293 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369007549 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377948049 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.085091898 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644105987 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367924677 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369562745 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370530808 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.376978705 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.39363542 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.374327583 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368073753 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508664869 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6202806 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01748449 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.623868074 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.414716013 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.889046309 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368609341 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.62440725 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136871174 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.567274631 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988856279 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.08919939 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6371197 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436846363 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.568798337 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.369050994 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506476824 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.383591206 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37564562 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369182202 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372000797 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.370132634 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.617429293 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99105591 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642741165 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.375855215 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.384207438 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403958936 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.573549723 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594413255 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088951933 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592684978 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627691509 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377651523 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.369237829 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991307547 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63326036 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379089463 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.376836831 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584960076 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37735791 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399266172 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.89264044 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.373066405 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905334112 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.261751444 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392992059 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384425592 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.092110612 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991979186 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.380510993 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869140385 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374170514 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384620107 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651333196 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.382653322 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371934597 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657241057 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.380301862 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382858019 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580996834 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.992076015 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.127162284 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.38198068 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398226542 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.380749083 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370115061 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442203603 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377523522 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380518612 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.768038043 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379187614 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373921775 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385804066 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.378524992 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378403034 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.379823055 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373139368 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.381213675 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.3749168 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.372257608 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395456276 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498998146 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913079199 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381705695 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.076953261 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.700366841 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.6282128 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385442395 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.354940671 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.380255379 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374786297 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376059027 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375499907 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368279698 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917910944 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.376056629 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.632960864 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388678945 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.584544824 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586528951 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377514676 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581613989 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394818196 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404624806 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.349023396 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377323385 seconds)
  done (took 972.519384039 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.385483241 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.371651789 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.400185126 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.427953395 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.394174419 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.370818401 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.378019832 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.392865296 seconds)
  done (took 20.377332328 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.381448166 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.381937749 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.380702918 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.38095848 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.377400361 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.843591251 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.379528413 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.378290878 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.393147418 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.380986784 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.380402851 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.044083011 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.403184228 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.382543091 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.367379911 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.383951097 seconds)
  done (took 32.494848567 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.449746231 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.548985144 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.282824704 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.414157923 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.400267348 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.371487122 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.604808377 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.393564221 seconds)
  done (took 26.724395742 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.384793682 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.387225362 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.38562973 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.384843746 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.3833941 seconds)
  done (took 8.181435897 seconds)
done (took 1235.349634438 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.384646595 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.387722997 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.383954863 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.385112524 seconds)
  done (took 6.795418245 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.356162798 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.354287105 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.35622545 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.37091811 seconds)
  done (took 9.691674373 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.061049385 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.990720052 seconds)
  done (took 5.308180438 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.867837703 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.872828377 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.865885701 seconds)
  done (took 6.866956681 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.667269186 seconds)
  done (took 2.927170563 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.283589206 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.37595467 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.04612963 seconds)
  done (took 7.963906419 seconds)
done (took 40.809447303 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.382432399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.616927383 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.52765284 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.383933929 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.532364449 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.52751422 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.113623362 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.37160919 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.380789667 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.386968681 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.385919998 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.531769002 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.091628198 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.616830793 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.091376918 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.617458495 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.535982653 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.372723468 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.374231829 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.373489024 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.113332983 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.376273745 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.381832756 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.372585515 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.54089709 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.514690756 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.379770761 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.618242912 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.384406337 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.373083214 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.521245608 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.381370005 seconds)
  done (took 82.431539078 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.387554437 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.379605135 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.384132351 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.379227975 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.374612463 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.389386487 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.375093691 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.374733109 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.373546819 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.375771095 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.380710748 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.376276784 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.391702954 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.373889561 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.392075066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.374226072 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.392120756 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.377123202 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.39028309 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.37538834 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.376499458 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.373788638 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.375924188 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.380259892 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.39435265 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.376762868 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.390265555 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.37480346 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.375324887 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.375138105 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.378262758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.399712066 seconds)
  done (took 77.450519626 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.383091591 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.390604131 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.381691154 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.39155386 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.375993845 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.382046206 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.381447818 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.382554227 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.394296738 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.38747091 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.376167564 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.392100405 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.380579525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.374712309 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.394896914 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.377138114 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.376534473 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.410809268 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.381165525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.381365237 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.384954385 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.375651624 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.394701823 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.381125775 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.382334046 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.384337291 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.382834236 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.377893749 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.396871811 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.39251858 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.382944845 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.382391803 seconds)
  done (took 77.576895809 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.614023498 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.391543635 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.393835719 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.385694859 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.394587302 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.389741488 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.387293244 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.624248643 seconds)
  done (took 14.843718417 seconds)
done (took 253.561219093 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.384946448 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.883388977 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.415432317 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.383288345 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.403455125 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.411220423 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.606661777 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.415851759 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.606487568 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.407909802 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.405761294 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.390390402 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.174949567 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.541033223 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.240057689 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.361707391 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.258598899 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.383859554 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.957937468 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.673895407 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.416590404 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.379197321 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.231250864 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.264998138 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.368785638 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.471383997 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.488586864 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.618411975 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.549304466 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.469779292 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.894684579 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.389406098 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.397290474 seconds)
  done (took 64.510316042 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.385613706 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.394159412 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.395439855 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.394161664 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.395392651 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.394799577 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.38733763 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.394994608 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.394847194 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.395969325 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.396012964 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.395977427 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.395495167 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.396522662 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.396140169 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.373830479 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.387961176 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.393811702 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.386244581 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.372892393 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.395403443 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.393445053 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.395952582 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.396236927 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.395361131 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.396800964 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.396615324 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.396676387 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.396345921 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.396868664 seconds)
  done (took 43.054296875 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.397410541 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.963307611 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.114805784 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.400815584 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.388034072 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.391157619 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.672458106 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.397291445 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.392796944 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.391211701 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.867231449 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.4025704 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.420096888 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.112373266 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.396762314 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.396358917 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.397561565 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.39084223 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.96934052 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.398980703 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.670614205 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.396947483 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.672231947 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.398006106 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.393608332 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.390663502 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.395781292 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.189180627 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.414814682 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.865773979 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.16405668 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.671798539 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.131387739 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.16481446 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.170187112 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.405650653 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.397198224 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.872562359 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.398910437 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.393819475 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.67209515 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.397394882 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.112572145 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.068802684 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.409533276 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.400318053 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.22080967 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.872148636 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.636685154 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.403046491 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.157543537 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.402919461 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.40166672 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.392362853 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.628763551 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.401101733 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.392211901 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.254374251 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.401592904 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.673523879 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.404860112 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.393137614 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.969817066 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.39700176 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.9704611 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.400377272 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.401855042 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.394121104 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.126074288 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.401538458 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.082763832 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.411364377 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.401419524 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.869938034 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.977518061 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.277911036 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.400859706 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.979096721 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.165830555 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.695696643 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.404196488 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.196438745 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.699359624 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.402759276 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.403644183 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.404767112 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.402369871 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.471154584 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.673468156 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.013432256 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.081865823 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.267349224 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.682136236 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.408627991 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.395545867 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.257584577 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.407144413 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.403275596 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.121556188 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.090466103 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.417420768 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.402635553 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.076256047 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.420470228 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.677262793 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.405536343 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.171941288 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.402116003 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.469210766 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.40386781 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.403156634 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.400288083 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.678875674 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.405905043 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.403726533 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.070869807 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.909766286 seconds)
  done (took 194.817500088 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.390097094 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.407738274 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.392082194 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.408022824 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.39088332 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.399085361 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.392187307 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.391363986 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.39780435 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.390058958 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.391313117 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.399982061 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.397967188 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.392108807 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.392166983 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.39317688 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.390598997 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.417014252 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.392395114 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.392217278 seconds)
  done (took 45.193512672 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.405025168 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.953641326 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.919227436 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.412027386 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.407600411 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.398494513 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.454202629 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.409074429 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.405288551 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.694366426 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.573734394 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.414360183 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.406115531 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.407488605 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.915161588 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.390117717 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.696168108 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.956791977 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.412327656 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.952337787 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.390319884 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.404897705 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.394987854 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.953223257 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.710995612 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.683569092 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.462254178 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.958802804 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.412962382 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.407350309 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.953533148 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.415073277 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.400639671 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.943330884 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.413844175 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.420453515 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.408832352 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.457143927 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.456823291 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.700035892 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.963847699 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.696556829 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.425564889 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.577028684 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.410413596 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.384531699 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.964500654 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.414244682 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.385451686 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.410305858 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.412159085 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.931590464 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.407369742 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.93101355 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.416128965 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.408534963 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.956316448 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.936736787 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.92793841 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.575536054 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.406970676 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.682413293 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.416689315 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.967970454 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.416515417 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.411691467 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.410489149 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.571635816 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.963998183 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.688409439 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.705563875 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.706569283 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.417430094 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.47016403 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.416927279 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.702358072 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.472447518 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.826119794 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.703922136 seconds)
  done (took 127.106677086 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.668167345 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.522498959 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.771003542 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.984858187 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.903423997 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.535937717 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.515204791 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.644977489 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.419910157 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.496568745 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.040441696 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.502998131 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.12207145 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.475389351 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.516966843 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.540949164 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.800226821 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.402086493 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.061030896 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.008504134 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.418633633 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.503975593 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.921505241 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.591425365 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.416719788 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.942202092 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.326922511 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.919645426 seconds)
  done (took 53.255308481 seconds)
done (took 529.200228219 seconds)
SAVING RESULT...
DONE!
