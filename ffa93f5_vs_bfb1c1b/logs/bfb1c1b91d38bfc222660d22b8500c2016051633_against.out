cset: moving following pidspec: 13761
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.48200924 seconds)
loading group "string"... done (took 0.507864513 seconds)
loading group "linalg"... done (took 8.871956425 seconds)
loading group "parallel"... done (took 0.175328512 seconds)
loading group "find"... done (took 1.276488838 seconds)
loading group "tuple"... done (took 1.887621902 seconds)
loading group "dates"... done (took 1.350764797 seconds)
loading group "micro"... done (took 0.192593182 seconds)
loading group "io"... done (took 0.503528045 seconds)
loading group "scalar"... done (took 50.751377753 seconds)
loading group "sparse"... done (took 14.038815157 seconds)
loading group "broadcast"... done (took 1.328371868 seconds)
loading group "union"... done (took 10.215249767 seconds)
loading group "simd"... done (took 3.05454464 seconds)
loading group "random"... done (took 11.555081255 seconds)
loading group "problem"... done (took 2.224203121 seconds)
loading group "array"... done (took 24.368769957 seconds)
loading group "misc"... done (took 1.138276862 seconds)
loading group "sort"... done (took 3.796649708 seconds)
loading group "collection"... done (took 19.295053924 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.618776516 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127172313 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.266311354 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.287000903 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.238263132 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.162503524 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142474507 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.264452466 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.672826412 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210813761 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.134115013 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.495867588 seconds)
done (took 6.444030955 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25404925 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.179373505 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168639185 seconds)
  done (took 1.123002238 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074183142 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.155190403 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.105374815 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.091887499 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090887526 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108124486 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.090753087 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10726454 seconds)
  done (took 1.531578318 seconds)
done (took 3.765253815 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.516786172 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.884898505 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.529925213 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.14538045 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.317892373 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.300396041 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.313971717 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.204792091 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.105150302 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090250261 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174553495 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.452605347 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.429458424 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.017632969 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09013776 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.096480133 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.132568082 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.837693512 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078211926 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.124782176 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.486623128 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.19224655 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.096821439 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.127455634 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184303657 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132224954 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.16445223 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102246049 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.670064182 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.130705594 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185852383 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097056848 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162955149 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.194319206 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.207809588 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.090494814 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687821336 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199528431 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.090065242 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09737924 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673340044 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120852431 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.187349313 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10273138 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090889815 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182611764 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.094507564 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076255657 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.114579269 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083351662 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.167561475 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.475621769 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105697649 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.172608705 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091495731 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.720155445 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098480375 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275023624 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122426329 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.09084705 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089680761 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.085901931 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160556478 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092108575 seconds)
  done (took 20.439318289 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147676662 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.162779607 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075998554 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.1566018 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121757754 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078476359 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099881771 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077522134 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124818191 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.221357394 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136784847 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152496089 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090742466 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089848621 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126872874 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247609461 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103039167 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120222565 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088342525 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088422482 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140573836 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094174503 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105539941 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093227674 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168094615 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203140883 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109079396 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121110175 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.088510325 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095259491 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140520591 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144846847 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090596953 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088122565 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.186066664 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105158148 seconds)
  done (took 5.286147869 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199847801 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123433009 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.212069374 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161873594 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142418015 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166373635 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.149873183 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.279856654 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.214135198 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16134145 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128679616 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104387621 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07690401 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096102079 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077528655 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.462245215 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179543895 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128496491 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.155005295 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103041889 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081222091 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.740033292 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09968404 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079088819 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101110835 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067784105 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.196005925 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.118075997 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103143463 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.070836722 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.104359728 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087627255 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131357971 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198669439 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114896213 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137546691 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08431683 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.0784867 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.215769927 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11000617 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077006621 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10615075 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133782917 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111790567 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100586018 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109569596 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219646218 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082638357 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102727586 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.074276349 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195177465 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.123341487 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078234357 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285985029 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116629939 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085482721 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080275773 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.267396931 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.111769365 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079725499 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09680004 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085501574 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075769295 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.430800698 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106934063 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.067565026 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080703377 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158619216 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083651025 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105440134 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085654734 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083369344 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116997953 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.136037869 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096769594 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078537091 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077926836 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09529571 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083464481 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.09329071 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101996874 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077853273 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145827284 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.11362476 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098907866 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123429068 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085266996 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077415662 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126434653 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081753822 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081948758 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.165586951 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085273368 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110275555 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084961909 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143940064 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080360477 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100642374 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082133511 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.211330041 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080364217 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105738049 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102505866 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127136424 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100288816 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077264073 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101032056 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077939126 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078208901 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159355257 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080896582 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080584945 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081049059 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110437708 seconds)
  done (took 23.489161446 seconds)
done (took 49.990336681 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.459863042 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086886352 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085395846 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106083294 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085941025 seconds)
  done (took 1.680823034 seconds)
done (took 2.51123634 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.328696237 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.194385334 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098234223 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189352119 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083860703 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196507355 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182744303 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09074406 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208433292 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082667738 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.189273844 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081897914 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10246881 seconds)
  done (took 2.893209589 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104430721 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112510393 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.123459115 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102301073 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08440508 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099705397 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118460349 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111028321 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100218662 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112211251 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084293702 seconds)
  done (took 1.98731148 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10278569 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107770323 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098908726 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118200472 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083665258 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097734549 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117158299 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109295178 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09884938 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114385743 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085550381 seconds)
  done (took 1.97252377 seconds)
done (took 7.684472677 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.111842499 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.863916191 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.146086848 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.210370155 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.350883432 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.241304949 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.589135921 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.151220339 seconds)
  done (took 14.663413735 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.173236214 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.109763583 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090703005 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090156407 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089317313 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.111495317 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093750931 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.093209374 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.108857573 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088593511 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.092918362 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.109325096 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094349288 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094413887 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093052705 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.111694987 seconds)
  done (took 2.545524815 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.153436137 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122360891 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.114248189 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097466774 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092191956 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.116163698 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098844436 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.11540979 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092806519 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.092740979 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099661239 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.11350807 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095076791 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.090314671 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.113434169 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.121779638 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091483525 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.113162655 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.120246418 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112786722 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.098988043 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.093624257 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112750174 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097368511 seconds)
  done (took 3.489258026 seconds)
done (took 21.534895037 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.152071533 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100033071 seconds)
  done (took 1.09239355 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.146347582 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.162545418 seconds)
  done (took 1.151850878 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114681922 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089585799 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135928811 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101965051 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08839424 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107033487 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116097876 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.10614909 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090487439 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.088210773 seconds)
  done (took 1.8852343 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096278499 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094333009 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121336686 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.13867604 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114396839 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093219498 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0933096 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091108921 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113247602 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.088848735 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093432336 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125633247 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.092799631 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126450284 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095535821 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094454923 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115674234 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093450037 seconds)
  done (took 2.732156644 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092540894 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.089438424 seconds)
  done (took 1.032879988 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094391471 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089146037 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089159573 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107849542 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089962082 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.087423175 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10593125 seconds)
  done (took 1.513911073 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.506266801 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.26625784 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.371847779 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.106706753 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.146618004 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.350975936 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.145887621 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103538294 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101207373 seconds)
  done (took 2.983606939 seconds)
done (took 13.237465333 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092824498 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.218551162 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.635348386 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111553597 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.208507733 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.163098761 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.29002534 seconds)
done (took 2.573108967 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355999024 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.150751584 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084849202 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090598274 seconds)
  done (took 1.533577608 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082675731 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09726511 seconds)
  done (took 1.037881184 seconds)
done (took 3.427011424 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089350631 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.086440584 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.085438515 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.103751608 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.119286741 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.086415695 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.106931153 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087306559 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085434919 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.086044234 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.10746679 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086369881 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087137275 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105234026 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086917007 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085201425 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.086255847 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.104389214 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087050543 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084834713 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.103905915 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087243199 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086141796 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.08560342 seconds)
  done (took 3.112012252 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.114949544 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.089849373 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107779733 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09133166 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.091190756 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108943627 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092650828 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.088515438 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108339451 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089015717 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091548621 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.091250841 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.107163665 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092009438 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08772213 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.109512756 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091520425 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086992975 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106461348 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.092286692 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.089377533 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10683005 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.091937266 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089753233 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109730538 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092296518 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088407195 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106545219 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091451734 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092273155 seconds)
  done (took 3.75685737 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098482356 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.084875036 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087459294 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113262906 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084888269 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088155263 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.101980778 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08686569 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089105501 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.085018884 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108165649 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088746526 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.08541605 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106656624 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090427743 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090965968 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094554509 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.103672902 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084692129 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.087169515 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108954884 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084798247 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087548693 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.086105235 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106295108 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085289973 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087121688 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.10473914 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089265036 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087718841 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.089081164 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.109003233 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088426072 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097067365 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109337942 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.08882898 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09166219 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.10220763 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.089817529 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08495174 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082466183 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.105411526 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.084521096 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093182233 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.105578984 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089679317 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084975279 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088114846 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.106957808 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.090264224 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083981859 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.102545983 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091901345 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088245132 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.088638794 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.102126944 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089554536 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08435454 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.107735649 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.087336513 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.08422207 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08280514 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.109955368 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089885001 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102646462 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.11261398 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085424366 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090065103 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.106679961 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094695686 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090871199 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115982985 seconds)
  done (took 7.624805838 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.105217326 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096783477 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088325324 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.107666997 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088448813 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087106704 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110523429 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088240411 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088465873 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112693641 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088886601 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08935229 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087637773 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107093763 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088246232 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088031726 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112912374 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088009208 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087303579 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106987174 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08876786 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092161383 seconds)
  done (took 2.962856567 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.236121916 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098940404 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137191339 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119382239 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106551796 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119313415 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092458102 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093060655 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108921089 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097639758 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095788197 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110833663 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10681806 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096929635 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116561359 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098155409 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109338184 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101415512 seconds)
  done (took 2.91526782 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105870245 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094049023 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.133459778 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092486221 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090162865 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089820258 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113621341 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110932413 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.106930768 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091737423 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097650542 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089239876 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10936232 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090855872 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088999966 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111620096 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091957716 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090412905 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115029785 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09531335 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096223897 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114294721 seconds)
  done (took 3.091390866 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107420367 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089940186 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127309707 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094343316 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.088874088 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.087552912 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.114460711 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.089138687 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094275665 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.109014513 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090420488 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088357236 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.122285723 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08996007 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095143932 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109721068 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090260495 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090087252 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108005461 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.089513713 seconds)
  done (took 2.846551561 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.178436025 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126685557 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108044116 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112911586 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123523801 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107221905 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113394639 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125563925 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106618441 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136278031 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105926899 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104798448 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132388926 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112132967 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106067115 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132205551 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112432596 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132905076 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106801058 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105775323 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135912267 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105404603 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132922997 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107106377 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105328501 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124677941 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106057597 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128269109 seconds)
  done (took 4.207429897 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094300774 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092942399 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091469897 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110876938 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092100143 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.087145639 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087569776 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.106976149 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090784288 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087314846 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.105659075 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08976457 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088950808 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.087671657 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106542678 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090179066 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089530093 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106494496 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089292141 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088332643 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088065247 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106958241 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08908481 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087764726 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086819222 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.107362712 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088628816 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087446596 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107180256 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087934822 seconds)
  done (took 3.69394726 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103985075 seconds)
    (2/2) benchmarking "in"...
    done (took 0.097347261 seconds)
  done (took 1.078726622 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.101018228 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104803313 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08808721 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107484362 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094799173 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088910523 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115438795 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095201814 seconds)
  done (took 1.674091955 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.149642595 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.164303226 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094622318 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.100845423 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.165357832 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.156433402 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134028025 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.094416184 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108441699 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083679626 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.157629014 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082513698 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091498015 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106122528 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092645006 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096429562 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.109576969 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101290334 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.095815139 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.092435952 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115771698 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096262878 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1112062 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101078055 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085176699 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091346135 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113523023 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102549166 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086550379 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112948931 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089664988 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089728238 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.114227744 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094986584 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.090737979 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.165910737 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099183889 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107277578 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092455609 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095153433 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.144638383 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092451784 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091111037 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107896994 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096363371 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.094294501 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.11487513 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091606159 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083433946 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08529544 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.110054071 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086140009 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.088147311 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112765036 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091081929 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097301317 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.111358622 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087683151 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085552686 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104892159 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090702752 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085630587 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111754439 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094211609 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091098699 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.110253708 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090550131 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.089952858 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.110675823 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092029716 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090317094 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12442539 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09400971 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.094317646 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11264263 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092780642 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088137823 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094829663 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109404413 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09157237 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.093872996 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.136984381 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092785807 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085285791 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105928844 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09781647 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.091597694 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.112630144 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084169561 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099800442 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.112518238 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.091919488 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083210164 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107336609 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088085197 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09301832 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082953775 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111968931 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089355552 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.094647035 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112861421 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09014733 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091850731 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115541067 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096876721 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089551709 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.159179544 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08720193 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105687123 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09511612 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094393221 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083824859 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.1110567 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.088704058 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08752784 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.105364797 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096943153 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090588708 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.11081951 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.09686163 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09312563 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111261697 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094512456 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.089407331 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087235865 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.114219614 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099532043 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092756339 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.112308573 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.091431709 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091038494 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.110164944 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.094895124 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088701361 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114714154 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088972972 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090095414 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.110140994 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097274948 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091586877 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085962468 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.109570162 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09095578 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.089798338 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.113458831 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091935065 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086095017 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102539232 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092476764 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086189037 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.110810079 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09885559 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086605462 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.113815431 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089708408 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098795284 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107070116 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096671223 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093590775 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.114454282 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097073436 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083528329 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087867428 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.113301229 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093931616 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086881612 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.109526622 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.089981696 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09762386 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103487221 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096939915 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082912936 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106943891 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.097724675 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.092041785 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.093315655 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107001457 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.13130692 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102054089 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116243156 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091253819 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091791188 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.113969326 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.090328389 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094149973 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115753417 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098382304 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090790673 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108799605 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098287991 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087875957 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.110090941 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090705044 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092363816 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08259189 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.112062393 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08445277 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095501244 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113459485 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.095749993 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097266471 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112422929 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09214337 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098541506 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106784038 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096638312 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084523203 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095343822 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.121236541 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.097590091 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095913057 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113552173 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089453604 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.091357173 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11928313 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093656452 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091146268 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.110672062 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085120235 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08462139 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.115306896 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09454089 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086953351 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090054281 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113832221 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094486458 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08844868 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104422321 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096019544 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09591991 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.106654425 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092888164 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087952194 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109129335 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100360031 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083827627 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107638595 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094466087 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.095350226 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.110464921 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092225033 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.093403875 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09534662 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.113972916 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.093271306 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088961563 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119058894 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090405672 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.089255062 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.107845522 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095975845 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084161143 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.110910901 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094117191 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088638949 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087394519 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115927434 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098189194 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.095811794 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109832969 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.095334005 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.095948677 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.117206731 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090665303 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.096511403 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107047104 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086313937 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087828387 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103263734 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.093839544 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086894912 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.094703614 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.11010946 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09071903 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.095011846 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113896652 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090690553 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.096858033 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122659456 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0854001 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083756683 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110800291 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091629388 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08770159 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.108686153 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.092339922 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093164315 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.116487686 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096057478 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08794424 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.11115291 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.098018031 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088194852 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.11720115 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098514704 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098740173 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086480415 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.126163525 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089812536 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096088213 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.106341081 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091297193 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098969326 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112008495 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089895137 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09040719 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107919097 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085985478 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087876598 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.117848396 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092397504 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.096163633 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.11006152 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091941298 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.088306089 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086943523 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.117902845 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09105493 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.097206326 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.113289063 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086172159 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08492361 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.116793133 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094601435 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097289318 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10593324 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096995919 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098006384 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.094884997 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.113021586 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102212507 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100088154 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.117161025 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098517918 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084445957 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109900007 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098341394 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.090687484 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.114223307 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096082302 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086530267 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114060031 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099012955 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094144618 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.089360683 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105806096 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.092916695 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09765215 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.115121294 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096991531 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.092587966 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112828261 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.0889552 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096394031 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.096822132 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.11301967 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098195948 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092654666 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.116585472 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089451001 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.096630892 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.113151682 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087026264 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085710649 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.109751444 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.099908817 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086548709 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.0961348 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.117952452 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089529624 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089675545 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.116781155 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089576127 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094331311 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117537879 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090255234 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101332527 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.111465876 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091630677 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.096727557 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.115517517 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087651212 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090869171 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091239 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119236589 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092044675 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.097234955 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114248348 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098299481 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.093943954 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.118108948 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.098610233 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.096748674 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.105341186 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100816783 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095695894 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.093341061 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.110456513 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091396919 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086468322 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111700431 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099364608 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088982829 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120807028 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100563047 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090161238 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110262415 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.099155256 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091325257 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117926292 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091146923 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093995397 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084841767 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116264572 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09192776 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.098237246 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.110481878 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087344732 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097706826 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.11756422 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097979324 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094492659 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.120120475 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087660349 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086173809 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.114353991 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092154803 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102386606 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095353433 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.112157308 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092173547 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.093891095 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.114196079 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10007205 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086595838 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.109585353 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094597515 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094098595 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.110444214 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089590332 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.096865402 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110750185 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095374171 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092854837 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.106791598 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.09410541 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.099288931 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090037501 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.109955452 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090246792 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099006307 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112681196 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089821625 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086963867 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11995846 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095798261 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098346315 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.111190131 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094567204 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.089637228 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.115359443 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10160975 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090833579 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113054139 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092444148 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098411131 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117773713 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088375629 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089858569 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101939076 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119549166 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097793411 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.094296051 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.111747037 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101653405 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099229023 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.114553015 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088258411 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087164569 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.11108787 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088681136 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09528317 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097735756 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113300193 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090673753 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096765235 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119096096 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096561079 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.094919373 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107580257 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101461203 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089938972 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116039798 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088088749 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086798546 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.094834316 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11921745 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092464519 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092493591 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.115211984 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096309973 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088247595 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110276411 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097633962 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097975162 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.118216053 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09383439 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091213811 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.095254631 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124304936 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094234875 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092246693 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122275762 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.100935901 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093643502 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114480749 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098746959 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.098605567 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.115256983 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102074688 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090267278 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.11227888 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101771803 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.099854834 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123746235 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093143106 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086809646 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.117847579 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093348982 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088334887 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09715444 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.1221524 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.100529846 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09267909 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.111212162 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102976782 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098590882 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114273691 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09170197 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.09022323 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.119330602 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091292909 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097856581 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.110371594 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102747649 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100261264 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119535291 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104252824 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087592905 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098961684 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117736612 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103513988 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.093492881 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.109818079 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08923865 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.095129536 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.119838006 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101500053 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.097980849 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.096504011 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.121109249 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095174526 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092860802 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.1124085 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102003554 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.098553182 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.11601656 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096931835 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09247557 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114823779 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097389296 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.09947736 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100050887 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117348451 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104779694 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099023894 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.112968772 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091341613 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094633199 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.117540537 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095762001 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098022513 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.110462669 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089606635 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100443607 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.121478521 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095407625 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101510868 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120850083 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094612152 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096196844 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100054076 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.120141636 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096363573 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09457086 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.117893727 seconds)
  done (took 60.686904036 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150879981 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101554367 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116205895 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097174456 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11414466 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119322276 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096814953 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096324835 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117430067 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107207782 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096035356 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116486567 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113707648 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116507135 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135051283 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106521894 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116406517 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096833234 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096358904 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118244732 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113277985 seconds)
  done (took 3.269809095 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11817291 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109495625 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128860786 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109961179 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102249673 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128334391 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107281285 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128177383 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111720579 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103580409 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131324025 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107410134 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.123942592 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105897323 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104241424 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126047911 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110578438 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102593227 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.129480805 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107048645 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126059492 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109245854 seconds)
  done (took 3.459139199 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.108195143 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099769904 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09807861 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117453058 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100456981 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.095651418 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124403559 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097790982 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103042229 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115119815 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091347727 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094189057 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.0990138 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117595196 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.090946715 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.095929079 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125320815 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100554052 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.100763773 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.116359614 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108298708 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.095611566 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.116919983 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.091221331 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107536753 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.12174035 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.097948082 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.099669559 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08876513 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.120976011 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.097792872 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093309993 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.116436602 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091390295 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089282234 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.119306658 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100834707 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.095191576 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.095560533 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.116582587 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.09818895 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.100963478 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.120320634 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097369728 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.096536662 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.114419072 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101583333 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.096166249 seconds)
  done (took 5.910964657 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128135615 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164150094 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100453826 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135038599 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133152539 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106855891 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.098928294 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136660783 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098180243 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.122196538 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112983898 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110622138 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124402118 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104180391 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101595504 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123231859 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101108606 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099400508 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126687527 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099857065 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104171438 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126948557 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110191946 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131119877 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104509414 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100503491 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121686244 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.104878627 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.108730831 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126277974 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.104661997 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103955327 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.374113398 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103214076 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12109669 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103702291 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111863816 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.122380291 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103004729 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.09811781 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.120825059 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105290426 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102650478 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133705164 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102853036 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.100873988 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122727275 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099810869 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.109256126 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123391323 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109280399 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.109862591 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124660987 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.100893966 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102972066 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.131920495 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101356536 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.118320693 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.102196198 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.108997807 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.118662222 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104511187 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.110250256 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122403835 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107499291 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.110737905 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.123639253 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104154314 seconds)
  done (took 9.013470226 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135524501 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104849102 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133566986 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11374389 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10217326 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12622939 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105995717 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.1031307 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125753733 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109655871 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123345021 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.20342068 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122467365 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109665063 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103074965 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126614833 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103792332 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104169207 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126604471 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103440036 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.1029185 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134246328 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10464862 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132395175 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116790077 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099782344 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124745267 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104340098 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111681384 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124936014 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115310109 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125061073 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104850641 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111631112 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13661748 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104157387 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098559192 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126591657 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104202442 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103670729 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.12264548 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112111402 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125579582 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102656593 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103739404 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125101337 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114306685 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114717492 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.130742194 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109164285 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.125383908 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113878958 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103694387 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.125415773 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114224566 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140783623 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114029105 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111490356 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126150459 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113158647 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134471892 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122024055 seconds)
  done (took 8.220436815 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097965377 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098242576 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096333121 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.11910027 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099050652 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098212048 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096570523 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119474781 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09803518 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097243892 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12043761 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099497458 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0978214 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096399373 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11858039 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098768521 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096660102 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117820962 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098198694 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096982209 seconds)
  done (took 3.004894632 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.10769203 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114619892 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120734546 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107478482 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100051737 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.124428095 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101086056 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100068215 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098760731 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122298944 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109247828 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128735546 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100620647 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105053606 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127742275 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105962744 seconds)
  done (took 2.718571002 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119894201 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116738753 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.192010746 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.101273398 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122924116 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108002195 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10016367 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.123708098 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100882409 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106250004 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103025223 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126564729 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101149592 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100366765 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12254898 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104299918 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098369639 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126641301 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102518176 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.18824465 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104235899 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.101851837 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.122418765 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105442389 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102388386 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.124451791 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.1075854 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100765289 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102822062 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.124076236 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10438891 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.107067359 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.122368074 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104883258 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101533571 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.12381005 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101611394 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101382638 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.12285033 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102438411 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103396129 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.12358291 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10251139 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101899726 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099016998 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.123522373 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.09946423 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106198486 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125331863 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103213854 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099318422 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130477415 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106998119 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107868821 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129543394 seconds)
  done (took 7.16316763 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11300762 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10196094 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134053714 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101290291 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101108674 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.101706105 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.122988917 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102034514 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100865458 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120920529 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102756663 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101585338 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.122309948 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102964734 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101633906 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122055499 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10084208 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103078196 seconds)
  done (took 2.903672097 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10562525 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100374496 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104561816 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122790145 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100832124 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100816064 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122263691 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100204188 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099321515 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100724438 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124208799 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101122251 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098231496 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12223769 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100941975 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100259941 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121721999 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100356789 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100061525 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09909225 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122613233 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100116363 seconds)
  done (took 3.300842921 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111259955 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.183860232 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108117055 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.192555188 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099349058 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095838857 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128871485 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098679486 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112454646 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118286774 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096938039 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096075447 seconds)
  done (took 2.395589984 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13003535 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137882526 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12327351 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103290756 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110223487 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127001082 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105995686 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104823727 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135721901 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11782372 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126803365 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114349699 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112011421 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135299305 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110150249 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130728873 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106834423 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105041099 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121845011 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121503755 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104599177 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1343475 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106168139 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104682029 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127521405 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113771929 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134058741 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118563691 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105898367 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13467472 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111198208 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125835646 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11566317 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117030681 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124037682 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113568339 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104250361 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142755507 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109698576 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135801018 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102603415 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108447046 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134676355 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110563867 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134222397 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107048136 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110377901 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126050427 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107006617 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145649102 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112018205 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112761572 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132041611 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113707891 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112732142 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149736316 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116011567 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135807055 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109581796 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139490129 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113651569 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129648855 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11485816 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116452075 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130846827 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114649471 seconds)
  done (took 8.862821666 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143071163 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101111134 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127013926 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117634225 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134137656 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107495744 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105352126 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126164361 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106727109 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102546211 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171520016 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106261107 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136442323 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115087488 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106272833 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127220735 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107067542 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113764699 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124357364 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127083846 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127264736 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116024871 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113700219 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136628603 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116907254 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132327468 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106424664 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105926634 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127516484 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108042763 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110038811 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128121017 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115381189 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102334155 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137526917 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105960411 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1266936 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112694377 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106388192 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13219934 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11566331 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141938107 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107673358 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106648338 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138896958 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107220355 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106126582 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126375089 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107452677 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103614532 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140038265 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117938145 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138882738 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114469547 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106351287 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128267569 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106260343 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105729221 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128606771 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110785718 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13604546 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106579876 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126365714 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129459331 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106626982 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135104628 seconds)
  done (took 8.836995113 seconds)
done (took 167.56844189 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.150259508 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.190415509 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144330465 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.180021083 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093900843 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128904454 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.149182574 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147753954 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.090881332 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115873534 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093313334 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096182704 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.185168809 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094125886 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092103027 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118379613 seconds)
  done (took 3.026859388 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.191504249 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.306012291 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10984127 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119007251 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103040749 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100017892 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120061962 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100409546 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097442053 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126825528 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101793509 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095213894 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127631248 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09685062 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096931885 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122473766 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105609069 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09915937 seconds)
  done (took 3.183198438 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118473696 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143394805 seconds)
  done (took 1.229432671 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130115489 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.196341893 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.271149493 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169706199 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121870725 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137992611 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150143246 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132399498 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.178950573 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132925227 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112100714 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097556049 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146976088 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104080774 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113168697 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121346827 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125744684 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134531771 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113008113 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100313691 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.1406215 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103125256 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103463476 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133050786 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.169333907 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132200694 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101735478 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.099663414 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121987907 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112770468 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.1043297 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.1373675 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110326586 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174541297 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102598511 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.171211013 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10649373 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.12103443 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112725642 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098180951 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124560689 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10300724 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133904464 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100039489 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.100846426 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.12664875 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102946569 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.100287072 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.128049198 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.10893081 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105022871 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127173252 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.166575169 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10961385 seconds)
  done (took 7.850766305 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.845767521 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.142246668 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097666004 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.997653311 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149189986 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11269078 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.837384186 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145195816 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252302621 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.86534335 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1146053 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.133677846 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23945089 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.251090199 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.192928142 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.351788568 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.701698156 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113819284 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.125861155 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165716825 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106439095 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146660258 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118254322 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431390636 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098663147 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118869154 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107258479 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11094846 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176921314 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.097842894 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12949478 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196494902 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.259919684 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207874508 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122214928 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.096861113 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09674147 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185348542 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272148011 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218886023 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.186677326 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09565653 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096381578 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129831677 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117041216 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116473153 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157981827 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189933539 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190960265 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101150018 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.134353389 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108285932 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127982987 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.155207796 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.1181917 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.355606138 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361254167 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097453923 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128801464 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113851294 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267600417 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121537055 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235679628 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124009445 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215142275 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120452434 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803462002 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161840992 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120446025 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106290558 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104617224 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127627978 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105959858 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182284458 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.381264766 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133633393 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101869254 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096307227 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227833401 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.121168027 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098843338 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182850547 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098872638 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127548411 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113453574 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110899029 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188859787 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.266400983 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.109992997 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130212854 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104049 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131015949 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100324191 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.228784191 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228717595 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.15228652 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233481084 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12911477 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.158865708 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.183847623 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127450134 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.165278549 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129999107 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114996531 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128597577 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226038915 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133112898 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122579619 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105225978 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106161163 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.16013527 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10144467 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129898689 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164733609 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.46846045 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184717603 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.094772708 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125913533 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109032602 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180812085 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106039842 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261646081 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129449741 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163739397 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129086022 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096947086 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106311559 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181872897 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131003637 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109099273 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106366913 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133228271 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.248775447 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.243210232 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113329741 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244457433 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.199978828 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106858016 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195293571 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10662409 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188186819 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107895417 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129456957 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100683489 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795884052 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134030701 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107413712 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103359924 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.208448317 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09751796 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100497754 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12294567 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096123933 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797132755 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102520331 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120684648 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10138703 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105183839 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130782765 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106667949 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12492992 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158552903 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26567767 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113857209 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105257661 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.121148332 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.155646273 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123490252 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099327411 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.09861205 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.122303243 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109712933 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.101756177 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124892728 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168050681 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175865687 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228863303 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.556975773 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122722384 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100403517 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240708167 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120214101 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319194125 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107483343 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233352304 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185783238 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.095797593 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357626379 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187181719 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.213028453 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102831445 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190260919 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095782427 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130354007 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.156067497 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122591854 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107696985 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177309864 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11426522 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134650531 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.204380064 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098940235 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249815262 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096079935 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190061189 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09949183 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130453068 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320555256 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098974822 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139446569 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.157507728 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127149943 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100654759 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.704787593 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.09975951 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132440797 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108182974 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233881699 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184991018 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106260418 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131356669 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113281571 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181638256 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233724301 seconds)
  done (took 45.903310869 seconds)
done (took 62.153310482 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.296753041 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.256021825 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.304231383 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.210180867 seconds)
  done (took 2.130552689 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.26440187 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161566918 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.235365648 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098027518 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.246539937 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097084945 seconds)
  done (took 2.101363637 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.490109017 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.374353294 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.307301966 seconds)
  done (took 2.174344745 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.254132884 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.244867971 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.347088068 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.409100404 seconds)
  done (took 2.36997422 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.303351789 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130475576 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125686879 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.212874207 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.256576621 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.231427534 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14825263 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.196037703 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.153512463 seconds)
  done (took 2.803441352 seconds)
done (took 12.57067782 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.284038054 seconds)
    (2/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.380901684 seconds)
    (3/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.313624761 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.20158637 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.17394817 seconds)
    (6/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.211815958 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.138230315 seconds)
    (8/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.168157599 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.222520469 seconds)
    (10/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.330816621 seconds)
    (11/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.197922793 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.155029596 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103545755 seconds)
    (14/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.104062113 seconds)
    (15/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.364802307 seconds)
    (16/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.12872486 seconds)
    (17/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.324718956 seconds)
    (18/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.305401936 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.154068777 seconds)
    (20/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.210332967 seconds)
    (21/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.212112979 seconds)
    (22/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.212954897 seconds)
    (23/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102749518 seconds)
    (24/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.222273652 seconds)
    (25/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.227397727 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.164148553 seconds)
    (27/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.208125493 seconds)
    (28/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.283432397 seconds)
    (29/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.081541736 seconds)
    (30/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.140986412 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.126499228 seconds)
    (32/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.159847069 seconds)
    (33/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.135370179 seconds)
    (34/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.202899878 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.10920864 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.162594962 seconds)
    (37/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081156131 seconds)
    (38/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.170831311 seconds)
    (39/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.107768577 seconds)
    (40/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.316992055 seconds)
    (41/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.213646518 seconds)
    (42/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.214048733 seconds)
    (43/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.14985539 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10330095 seconds)
    (45/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.210889031 seconds)
    (46/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.277454248 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.129123132 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.102947381 seconds)
    (49/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.092236876 seconds)
    (50/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.125998094 seconds)
    (51/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.200262492 seconds)
    (52/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.081667693 seconds)
    (53/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.0823349 seconds)
    (54/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.105740653 seconds)
    (55/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.114790349 seconds)
    (56/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.10827395 seconds)
    (57/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.080751498 seconds)
    (58/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.085347653 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.156683233 seconds)
    (60/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.210947564 seconds)
    (61/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.152964389 seconds)
    (62/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.083598404 seconds)
    (63/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082038534 seconds)
    (64/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081210767 seconds)
    (65/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.175755139 seconds)
    (66/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.181794632 seconds)
    (67/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108703898 seconds)
    (68/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.167582521 seconds)
    (69/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.18619645 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.126589752 seconds)
    (71/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110609958 seconds)
    (72/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.214081223 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.125601375 seconds)
    (74/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081225214 seconds)
    (75/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.082443365 seconds)
    (76/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.205745779 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098712213 seconds)
    (78/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.082163943 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.231769626 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.134968762 seconds)
    (81/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.214076695 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124339151 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.103468895 seconds)
    (84/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.134751462 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.126718634 seconds)
    (86/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.083586043 seconds)
    (87/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.081991296 seconds)
    (88/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.123169789 seconds)
    (89/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083658075 seconds)
    (90/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104436782 seconds)
    (91/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.081617704 seconds)
    (92/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.157806977 seconds)
    (93/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.187504829 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09835074 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.134545175 seconds)
    (96/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.108754781 seconds)
    (97/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.081942076 seconds)
    (98/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.229532181 seconds)
    (99/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.082268912 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.102962131 seconds)
    (101/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.086262542 seconds)
    (102/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.1352978 seconds)
    (103/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084090073 seconds)
    (104/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.249395757 seconds)
    (105/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105731092 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126140971 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.15986727 seconds)
    (108/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.099492792 seconds)
    (109/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109472386 seconds)
    (110/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.124942094 seconds)
    (111/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.08239625 seconds)
    (112/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.082376847 seconds)
    (113/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.081573719 seconds)
    (114/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.211295686 seconds)
    (115/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.185771908 seconds)
    (116/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.20723468 seconds)
    (117/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.178951717 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103715679 seconds)
    (119/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.085973372 seconds)
    (120/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.130504662 seconds)
    (121/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.115169037 seconds)
    (122/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.0835182 seconds)
    (123/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.10791085 seconds)
    (124/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.110612801 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.103294616 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.107437377 seconds)
    (127/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.107364564 seconds)
    (128/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.143188407 seconds)
    (129/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.083253954 seconds)
    (130/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082346923 seconds)
    (131/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.110988232 seconds)
    (132/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.083539447 seconds)
    (133/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.173273575 seconds)
    (134/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082297384 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.128108483 seconds)
    (136/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.083204045 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.124964816 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102784659 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.151747399 seconds)
    (140/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087902729 seconds)
    (141/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.087435889 seconds)
    (142/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.210046248 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111006409 seconds)
    (144/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.093286979 seconds)
    (145/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091139531 seconds)
    (146/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.166678988 seconds)
    (147/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102636896 seconds)
    (148/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.082545781 seconds)
    (149/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.110294 seconds)
    (150/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.113913263 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.105843406 seconds)
    (152/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110987237 seconds)
    (153/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.109544438 seconds)
    (154/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10100033 seconds)
    (155/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.083903821 seconds)
    (156/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.083025986 seconds)
    (157/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.08191812 seconds)
    (158/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.127684639 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.103834998 seconds)
    (160/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.086958667 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.124278139 seconds)
    (162/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.083882128 seconds)
    (163/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.147555208 seconds)
    (164/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.15045981 seconds)
    (165/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.108313469 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.110894538 seconds)
    (167/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.08376284 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125830241 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.130391831 seconds)
    (170/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.083405344 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.082722668 seconds)
    (172/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109759298 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.129815352 seconds)
    (174/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083362665 seconds)
    (175/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.088275675 seconds)
    (176/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.081730369 seconds)
    (177/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.108358171 seconds)
    (178/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084387989 seconds)
    (179/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11099951 seconds)
    (180/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.110585779 seconds)
    (181/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.125239798 seconds)
    (182/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.188428281 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.147217271 seconds)
    (184/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.082143356 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103922215 seconds)
    (186/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.10728059 seconds)
    (187/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.107133755 seconds)
    (188/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083933094 seconds)
    (189/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.088178664 seconds)
    (190/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.108645978 seconds)
    (191/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.081120302 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.129189879 seconds)
  done (took 27.639725348 seconds)
done (took 28.643155354 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.21434538 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128208904 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108168033 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.106637886 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.205779117 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.114176805 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.145199852 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111273115 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117008583 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133640222 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100010525 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.118443463 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106797628 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.203942018 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109790361 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127182381 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100891364 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115866016 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.145727585 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121347727 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.207384258 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103877394 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.11576222 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125760791 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.180891226 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127630236 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.107541268 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10665942 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.14322688 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111245413 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107318554 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.125997434 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.121819124 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.118911022 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124061985 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111163351 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100190857 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088659945 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.135504789 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111401162 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.117875993 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.135618607 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11040363 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.1008654 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.136271175 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111586783 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099661235 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.136161277 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100053292 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.107694087 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10230141 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.147898299 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109869314 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098807545 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.125003449 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10202745 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11651815 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.125834846 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12034853 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100555829 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.125948525 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102446958 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110729194 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09969285 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.136613083 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099905445 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109728526 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.136849699 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109647394 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102772243 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.125320757 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109991105 seconds)
done (took 9.824019697 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.105961673 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146608805 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.201380414 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.215282119 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.12832368 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113611189 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.140139565 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124253903 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138222244 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121635777 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137181689 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157288105 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.18394141 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.141030621 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11615997 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.111829319 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.138030296 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109855275 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.211458103 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124460697 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151623444 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118720304 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126725715 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143363162 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.104829325 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134557303 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132588028 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113707018 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103800771 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.13842095 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.125038234 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103587618 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.132703565 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125541018 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119924076 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.139763604 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116274782 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111245066 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.131784708 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105159723 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.112072265 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.147773537 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10547702 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.140760112 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114285053 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119881436 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.13667017 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120120336 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106400901 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111230689 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131706793 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133029075 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.139824931 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123917934 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116814974 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.142452481 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120413139 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118091709 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.131500402 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.11996154 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.104877965 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.10397251 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132272631 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126259247 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.131351226 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12026673 seconds)
  done (took 9.600551722 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125745625 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135276169 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140056349 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116633707 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110165019 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12372032 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098945783 seconds)
  done (took 1.909729464 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102139386 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188334797 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209919255 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209268485 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.207907055 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.192950896 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148727229 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101603462 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133595034 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136118507 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188177808 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.243675499 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109254856 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141371781 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184849694 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.125954093 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.212723845 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102223677 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114528844 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.21265562 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116635455 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.156208626 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.114586261 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100565835 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.209909427 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102103267 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.263032687 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118288257 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136397739 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11503909 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113676828 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203703316 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.212514181 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.114615016 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107403304 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.209987426 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.208887201 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114581546 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.223851523 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.104452678 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.210407456 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114631303 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114874801 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.14284358 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.115271411 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.196537124 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12021002 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115592182 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.139455119 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.193171849 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.135975439 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.186581188 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.138124623 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116005466 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.110313897 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141733412 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123312179 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114566769 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.219036034 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116848626 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.210810647 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.21030696 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.184380029 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.211834107 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124756383 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.216379176 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.205909318 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.113929031 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107927711 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.14329632 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185709299 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.139827887 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112596059 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.201126982 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118376671 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.213064602 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.18488498 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139386788 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.113666757 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.103555333 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.139294439 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102240764 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.201457684 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116372281 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112708934 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144732264 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115095285 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113985975 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.131894311 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.123501678 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113511475 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.138067421 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119952673 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11512502 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143828122 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.214325251 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112187362 seconds)
  done (took 15.740081175 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107350348 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102634017 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10628841 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129636107 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103517318 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10255573 seconds)
  done (took 1.72769038 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141767592 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115611279 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150424138 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117938762 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166484279 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.220768741 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.224085283 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109200496 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158320073 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126858175 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.219935207 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.195968553 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.22223109 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118593583 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.224509449 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.116792156 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.225279869 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114366039 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.153899539 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113407435 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140991001 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120065974 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11404382 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.21189269 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116752646 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.144281939 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111481211 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124558364 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.151371529 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111694738 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118759372 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143570131 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.109559338 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109900715 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.22543737 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.107276202 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139775765 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119644189 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118042914 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.144499971 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.225135129 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116611921 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122091688 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.145027547 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113145391 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.108960258 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.146610794 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110753132 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.225721884 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120148572 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11819819 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.143974869 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118714839 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118378166 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.136806958 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109949674 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119167818 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.227690137 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.144562375 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110718467 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116081948 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.143253437 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112578402 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120330967 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144780333 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12157437 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108241223 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.143609838 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115466297 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117490112 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146250259 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119451061 seconds)
  done (took 11.290029963 seconds)
done (took 41.320594481 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.533946857 seconds)
  done (took 2.606432585 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.905780702 seconds)
  done (took 1.980240751 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.749629635 seconds)
  done (took 19.857608233 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.533597304 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.607697914 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.014383094 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176785325 seconds)
  done (took 3.407729143 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.035827814 seconds)
  done (took 2.121348561 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296196975 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.269025005 seconds)
  done (took 1.646189893 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.750957522 seconds)
  done (took 1.844000284 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.529138449 seconds)
  done (took 2.611459173 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.350542225 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175704453 seconds)
  done (took 1.621796789 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.61685282 seconds)
  done (took 1.714708073 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.962234768 seconds)
  done (took 21.061451695 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238183657 seconds)
  done (took 1.341212347 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286139397 seconds)
  done (took 1.389323847 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.823422873 seconds)
  done (took 4.925411667 seconds)
done (took 69.213132277 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114416196 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115518756 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114769264 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139696041 seconds)
  done (took 1.576561189 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122791939 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116875944 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.119203401 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.142354747 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122707431 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116299417 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143295543 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118101749 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115023188 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14557459 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117591434 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114638694 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145561199 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116599459 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113465366 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145556841 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120340927 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116863737 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144402876 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.117861511 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117002082 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144097984 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12003601 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119124355 seconds)
  done (took 4.119836572 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114364113 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10676378 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107141764 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131529787 seconds)
  done (took 1.568544996 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126729617 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128219702 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153109096 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125586249 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127866714 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154444858 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115582899 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.1132825 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140740608 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125384861 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132195955 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157104589 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128136135 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117097584 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154137167 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111445972 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117576485 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155330801 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123502222 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.123576228 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143998706 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123038474 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.120115028 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152502312 seconds)
  done (took 4.273916558 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189242541 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.125633763 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.165777373 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159930079 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.169713591 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.113425787 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.136945901 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148150785 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122413106 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.117044802 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145674393 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159243602 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.146997006 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118958579 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116006662 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.147325121 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129438019 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120263085 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.185073412 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121180308 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.147643303 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.127799364 seconds)
  done (took 4.220498253 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119180062 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.10683186 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102684406 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.134908112 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119167859 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.10890388 seconds)
  done (took 1.804959497 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10668214 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101169464 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101304236 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128327913 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105639732 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101483342 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099931392 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.129493212 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101266621 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100983801 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128572795 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101178585 seconds)
  done (took 2.4193852 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.334566175 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106690493 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134080078 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110295867 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112066664 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.10387923 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.144058241 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105592609 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.271381536 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102000887 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.142148915 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.193609575 seconds)
  done (took 2.974650687 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204728577 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144004644 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.299633305 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363588237 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162569837 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187812251 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267018416 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191545277 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206034628 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134726492 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244040105 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152077443 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176959642 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1728942 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162622959 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.156410247 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196219821 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186303213 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173713099 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224079808 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154230448 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191967583 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178470419 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174985783 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131849077 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187526947 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11682334 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124400299 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193837915 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190090608 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167424802 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172062863 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138716229 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218760962 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258049737 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168652472 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.312854994 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131397963 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.196511761 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.183175262 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256677073 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163422024 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185298377 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179698095 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127230449 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204438832 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148991393 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.200363785 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128712812 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167350995 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176097586 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198198002 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.202748782 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134811492 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313618885 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161096377 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168774466 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167864907 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207696014 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214998576 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164062573 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.146787892 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178917743 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206843668 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202627954 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141039819 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.190675265 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123136218 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190400137 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191586053 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205719584 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154085511 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223862787 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156625255 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154840953 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197784091 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175490517 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202286369 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154458608 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.144548895 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148107527 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158011763 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125479414 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191574386 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14576068 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195354463 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156813069 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.336419063 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182012425 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182342039 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155156448 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184236507 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182179022 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14324193 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.103767657 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170315429 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160577037 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180865225 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129347571 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181378928 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135853968 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124123984 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177156889 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119341329 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183488869 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.127134783 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189381142 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15621828 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.157065871 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162183418 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173386467 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150438839 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193342811 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179990213 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15812103 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129703938 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213789386 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154186471 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.156106019 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174823389 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211312951 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.140846394 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161513731 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160993325 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213753403 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136098751 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214000451 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132308887 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160956323 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.139671973 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186424732 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154824318 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.177847648 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124506431 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.175226104 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194768961 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153016155 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135294637 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192507078 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130277806 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121153191 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165115119 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132496185 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.164381092 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142294325 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.130843007 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17910472 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153216319 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182141434 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177667097 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132356195 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201335834 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13000511 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.15522204 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172102842 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.115281047 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.199737092 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180625315 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15644286 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223874111 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160532006 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215723723 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183838242 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129613161 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17324776 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153009465 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.116594989 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187017241 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153614603 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187165376 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.177115334 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214898 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.192586519 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148081855 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173830141 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162692581 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.201237639 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176401049 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142471349 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154266761 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190442081 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.115984612 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.149559569 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125741705 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134347975 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157344761 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132729092 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200683737 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158957678 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208906397 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184619218 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135906493 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20916387 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123640893 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186753051 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.162471945 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165492734 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179197744 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205947654 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162092129 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168339319 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183259863 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119882295 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123236349 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.158308174 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162205279 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131132047 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161788734 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137060391 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207855571 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196757818 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145072263 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222319882 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192249024 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190780102 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.144556139 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.164472182 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19444866 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155297597 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181588973 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160994622 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.154741511 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204367531 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136120597 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213249669 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181081684 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159543141 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214995364 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152779959 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156148871 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146204891 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184300105 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135409384 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187978092 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143602109 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125181057 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176851191 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134578802 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151163531 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179953566 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168735674 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166933672 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.186960691 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193119665 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123945236 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137453488 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18795046 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141421555 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.134395348 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168729828 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210233303 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142324583 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181035647 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172350929 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156054836 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.314810731 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217497796 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201926705 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133018424 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136546342 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18807438 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158493535 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187856389 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204935242 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139672894 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202731437 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158751748 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.16737265 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12850656 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144714699 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176583382 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.138841267 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.158287004 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.155320801 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.166418297 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183187172 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16436088 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15611165 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186174282 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146492349 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.17043082 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137592915 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220644738 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153638867 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199018828 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151216056 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.192727543 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186729429 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149443041 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123811573 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.155839221 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1786067 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12581016 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18729681 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.199988791 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216332957 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160033705 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188115403 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136587655 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123017122 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184893572 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142400278 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217179221 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161322919 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134986489 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218885625 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128244886 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156442506 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158992322 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303468871 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142076184 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201531208 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.113144091 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.296509061 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126728661 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157444203 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161932442 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194452712 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.130866767 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181766767 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186596688 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137739186 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189784794 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133076546 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21069112 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217808377 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162786624 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199922903 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.138479277 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186136844 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18585453 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17538223 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166617239 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142515806 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157070832 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208221551 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.20909729 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129546005 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182138174 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15619815 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180628453 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17026913 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162006784 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188684038 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152332137 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161158056 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161952576 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123695792 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15445253 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.204500495 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156272454 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176336255 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185782792 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130800991 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124579685 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171769876 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153221252 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166582982 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126715128 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208345432 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124831603 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188837938 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176543545 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15641292 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155500837 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140775962 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15752849 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137480036 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16750308 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128979172 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16876013 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208112081 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127523936 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205063964 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187007989 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163143131 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182541243 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13921084 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.696333972 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126541102 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177322626 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175151206 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213559375 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147956801 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186045678 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156983576 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144058961 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192238048 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172054657 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234895165 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187380536 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156090968 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127883732 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168532497 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136321612 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.15899937 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151000632 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182952069 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139147472 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.1317225 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.184782374 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138466081 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.172060571 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136950151 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209877409 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146589317 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211244424 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206283189 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135942057 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157848802 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199735574 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127049188 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.190330848 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199177678 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139186689 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174232812 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133194897 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133451047 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208624606 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.120914855 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183946296 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160281814 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183521051 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157177113 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131673611 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188049803 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136868984 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18798179 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124398676 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.180269558 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156958094 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15915618 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126976006 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154885328 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185587872 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151104329 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152847381 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.169802593 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208544019 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121882039 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129649797 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302179201 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184731051 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187264966 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.167441656 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132022352 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140563832 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181939106 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152252163 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187817807 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127974452 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154459477 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.129131939 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.165356941 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.175044638 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15734359 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203322338 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156702838 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219403253 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132138545 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.311249998 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136095896 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185271253 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118771217 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.15495306 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139818712 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130551436 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167654417 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211780564 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178010158 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.181119199 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.144228698 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131594724 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.153105873 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128329149 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191456672 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15067439 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186067041 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143422252 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104954905 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169804936 seconds)
  done (took 83.25222476 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166651043 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151668766 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167374599 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221526783 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195343538 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289039795 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228356464 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254843434 seconds)
  done (took 2.86910693 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119929754 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15862993 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139813557 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145370457 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.117029345 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.446788237 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.156669353 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118293107 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164603786 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.158630282 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.142307044 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.624305585 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116463794 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.1446122 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.127677277 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.118299274 seconds)
  done (took 4.188547675 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.536062278 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.602231487 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.326019351 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.28424948 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.235197551 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.182194441 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.824127448 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.704910878 seconds)
  done (took 13.89785463 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.146236795 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135120947 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.317946748 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.260875764 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.149212452 seconds)
  done (took 2.21651196 seconds)
done (took 130.474624544 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122291819 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122291235 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121063115 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153427476 seconds)
  done (took 1.712915542 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.182698894 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093646985 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095686292 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121579936 seconds)
  done (took 1.698623921 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.447903568 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093323324 seconds)
  done (took 1.773408536 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.148309868 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143541595 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.16496362 seconds)
  done (took 1.674647971 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.141564121 seconds)
  done (took 1.349652754 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.128219994 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.120470983 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.240710667 seconds)
  done (took 1.702260104 seconds)
done (took 11.122536255 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119172489 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.413015818 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432358795 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133479798 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.707349749 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425875803 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.028175923 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173403298 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172377411 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13687374 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132094728 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.68847991 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.08191119 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.358258214 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.036277115 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.388033828 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692398674 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109480638 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145747006 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111158324 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.009220264 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136885719 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110382007 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109194447 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718371435 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420193169 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107175559 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.403843566 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10812252 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111144298 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.426291282 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10901069 seconds)
  done (took 17.448981605 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116957239 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170178565 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145613986 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111226996 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111165281 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138668103 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12084236 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12099629 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203796627 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1082539 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161038877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108649965 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113060277 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.137815148 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136010706 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107307018 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.14043716 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112260398 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11624243 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.138685535 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132994084 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107333583 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137912761 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112929868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108401206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158210749 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110226208 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120506266 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137323629 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114297429 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112619323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.136385979 seconds)
  done (took 5.323230385 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156924481 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178232819 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14740593 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146121753 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186679153 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111122174 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.220545986 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14751161 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202020421 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109782154 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130913409 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137151691 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149113265 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109216826 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165827802 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108961431 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111547197 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141653942 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117469435 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109491361 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16260173 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108131496 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109513853 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140998789 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109494662 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13180781 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138842395 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121329869 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107441322 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142369116 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114101252 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107780498 seconds)
  done (took 5.589584127 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.1237873 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123799067 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131870318 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162760705 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119597382 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122671782 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153841106 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119415093 seconds)
  done (took 2.276918485 seconds)
done (took 31.842836712 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136985201 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130982107 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131058873 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.156114608 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.192457404 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.148954062 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.128916252 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116861645 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.155551757 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133271243 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107987183 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.148284099 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132281706 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121910841 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.225859817 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126122549 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.230011174 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.194285669 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.15041713 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125881169 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117997698 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.231106541 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.122746791 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.149141867 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.202689534 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.141207904 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.186677912 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121209441 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.15163922 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.110059745 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.226044922 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121964824 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117508947 seconds)
  done (took 6.198712269 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.210691615 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118295172 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149816734 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118661544 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118447943 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147253867 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.213223168 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.146936665 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118252507 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117233169 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116310289 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.227293591 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.121768085 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.144432442 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121112518 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.113287026 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.245721122 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119350641 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108266948 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.12489997 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114220034 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.115612103 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.257385709 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.112261166 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116060359 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.148915886 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120878554 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.120939336 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.149234739 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120375394 seconds)
  done (took 5.509781047 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126072695 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130555611 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134789859 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.213164974 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.144879428 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160952579 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.14098456 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.130573408 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.17147969 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111710856 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126094229 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178913409 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128186246 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120184545 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146003907 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130831228 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133186898 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143434666 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.118989617 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128376449 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162066367 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129861773 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137784662 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150575861 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.11111847 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118874831 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.151597119 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127216546 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.118325938 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.155563161 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.113937778 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115341228 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.141562751 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.147717172 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.112402166 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154637047 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138631588 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122801887 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.154894768 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.141987254 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114526771 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.143758546 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138779793 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166226125 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.143492482 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125628284 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122932589 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.155747688 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.110477318 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128598967 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.183719528 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.112457015 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.131534928 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.141684637 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111245928 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119273648 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111430506 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.145707503 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.125877864 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11418098 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.16674586 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119928713 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121451729 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.145083407 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.12361905 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.11162254 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.140531165 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116836635 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.13825925 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.148835444 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150721217 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111283879 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123764529 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.15570649 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122262639 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121245988 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.141804075 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122281832 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120455356 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.147591362 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125099854 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.113279032 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.144821044 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.12918521 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.131379644 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.155978481 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125364077 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124229389 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.14406717 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114571162 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128172851 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.111445744 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.148028469 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.124924507 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.110973503 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.146515805 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125084186 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122362817 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.140513965 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137780515 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.114984586 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.14057798 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137699919 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116867114 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.146970651 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122992443 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.153922573 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.140659467 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124552158 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124102131 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110369029 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.152773072 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116172061 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110656899 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.161395651 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.12724301 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.117942229 seconds)
  done (took 16.886580621 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.326798333 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.310715001 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.180003247 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.313310261 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.156626146 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.208541926 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.307540863 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.309419265 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110833589 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.18053199 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.1630669 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.281074548 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.146196153 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.139019262 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.312781774 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.363754377 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.172598669 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149056487 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180932561 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125320586 seconds)
  done (took 5.680011277 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133433382 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146809061 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167034461 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141476086 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12070081 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157424834 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111994471 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132861522 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.15598813 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123306203 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114354951 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160175842 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124017001 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127750595 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158176735 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.152588616 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119773511 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148947785 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135056035 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115762786 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135252864 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139311757 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120223524 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16675459 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.13055796 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12288943 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141932161 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118988175 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118661994 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.149883052 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117807574 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130287772 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.14889819 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109374333 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123515746 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127294898 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.149253326 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115705664 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116631523 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146127281 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127978486 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124540708 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.150290525 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.1023983 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.130503587 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.113898227 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.154550946 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127105418 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.109301479 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130184603 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.157265534 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127812881 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118558178 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.165253041 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.12072315 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128422854 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.155701922 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127497396 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.11765195 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.14241681 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111760692 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116160868 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.150777975 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128068024 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124471208 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.163216384 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130492333 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113161849 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.146075294 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118395353 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.115929661 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.125971067 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.166311577 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.120682625 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.118513041 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.156086966 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12091398 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.097040488 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.150772474 seconds)
  done (took 11.737304107 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140164653 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123636206 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130886327 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.181755534 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126747434 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117879959 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.155176813 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132453347 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127087167 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163935275 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128088069 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126493056 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166290272 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.122358483 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122660023 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161385967 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127509684 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.15006348 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163185337 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140358551 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.157284971 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119940868 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124766768 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12355166 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173104538 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124973363 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170020573 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.12839418 seconds)
  done (took 5.178430294 seconds)
done (took 52.409015832 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.363703485 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.577123527 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.34149747 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.342162303 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.338734168 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.374717518 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.343076596 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.343785497 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.879837609 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.31528688 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.342509037 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.340356668 seconds)
done (took 30.147679744 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.362347006 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.865112488 seconds)
    (2/2) benchmarking "String"...
    done (took 1.648238032 seconds)
  done (took 4.755529315 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.332810958 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.334342462 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.557085442 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.334058015 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.33403325 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.352186611 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.340428456 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.347845989 seconds)
  done (took 16.836426561 seconds)
done (took 27.526882384 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.417515603 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.555797923 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.593288445 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.343837578 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.337977301 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.335807336 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.356707965 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.36122159 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.336366937 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.354207143 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.762950719 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.609626592 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.352389232 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.732373314 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.351514971 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.344640811 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.352355214 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.603458488 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.337593608 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.374467442 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.316016825 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.328646675 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.359483524 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.340483951 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.347072176 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.348098688 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.357911805 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.33673043 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.555340222 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.355059336 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.373147514 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.336716934 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.351073039 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.352270372 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.343131203 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.338345309 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.542306996 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.34685308 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.318625338 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.345551053 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.554826264 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.340094837 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.337289333 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.363691518 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.348248904 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.424566979 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.322643936 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.454728111 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.368808241 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.348718968 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.363719688 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.719953109 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.352044062 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.340983198 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.34736379 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.571921258 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.364303619 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.398746832 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.359782188 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.342767096 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.340923797 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.356282645 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.399343497 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.346732755 seconds)
  done (took 152.815428886 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.33883302 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.343069425 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.344283756 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.351189389 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.343210767 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.343026972 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.338956164 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.337790631 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.343380844 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.374342445 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.339775405 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.340299792 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.343536934 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.302553767 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.348405117 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.362340473 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.343966862 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.371103641 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.34503734 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.340452812 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.345762738 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.34389464 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.36261287 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.344457217 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.386106386 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.440223719 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.347859226 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.340530014 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.349183698 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.340624151 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.346960161 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.352299181 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.013251602 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.209570256 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.353160264 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.369260612 seconds)
  done (took 85.384165229 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.343158982 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.340641814 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.341920722 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.37750253 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.341345093 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.951512561 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.95145002 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.052506638 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.84403678 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.844356039 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.637651725 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.342502202 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.438371541 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.355236508 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.342123065 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.357632714 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.369681927 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.343229762 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.344041621 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.954400205 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.356398951 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.550279758 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.529825325 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.358581006 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.378132782 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.740599298 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.342139925 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.343086255 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37743038 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.683416983 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.39661505 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.342062799 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.746434804 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.151791298 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.461250125 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.346071573 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.380228456 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.343067793 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.627501391 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.344231112 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.343680666 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.347566018 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.053586009 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.343770037 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.959659022 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.342030237 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.340280365 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.344345879 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.342921839 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.520115758 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.135922398 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.344277137 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.343192854 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.346338567 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.343955745 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.34276107 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.379989845 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.520434027 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.684114869 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.345521778 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.349376618 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.380398155 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.345363692 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.49047239 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.350050881 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.603943506 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.406320799 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.465762828 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.971224784 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.350202647 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.444819367 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.467432851 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.346403635 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.344585092 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.344482347 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.345639099 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.344583517 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.459591478 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.347157678 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.793948386 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.531813646 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.365052186 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.822099566 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.44535574 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.345898783 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.768900132 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.346429519 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.346469774 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.147966017 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.445504013 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.347413817 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.348228704 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.347819151 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.792467162 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.973245256 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.736376443 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.351709924 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.345678517 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.346380642 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.698711355 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.35003342 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.806413338 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.972253762 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.076749541 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.349105753 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.464279254 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.531869412 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.366971409 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.347395412 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.865656625 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.347440149 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.407150084 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.347382142 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.753388023 seconds)
  done (took 385.435027512 seconds)
done (took 624.87105986 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.226063355 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.174628597 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.330721382 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.189405671 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.168412161 seconds)
  done (took 12.337903467 seconds)
done (took 13.585830928 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.55472383 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.558973959 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.420353128 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.55768369 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.387787957 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.571094111 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.54399623 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.375768415 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.471616557 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.43632178 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.468077117 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.409651029 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.385136928 seconds)
  done (took 20.390282989 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.666923319 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.35767134 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.418372378 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.625516383 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.397074875 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.638952528 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.681694426 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.357435102 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.508749857 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.371699989 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.369369087 seconds)
  done (took 19.645733112 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.640632597 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.359151067 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.412528697 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.621673186 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.394575094 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.661829106 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.682125489 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.359893305 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.499782007 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.37126362 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.370687886 seconds)
  done (took 19.623951206 seconds)
done (took 60.908516521 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.390013845 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.451947534 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.387639192 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.367394972 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.365846202 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.367770502 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.371085087 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.36650533 seconds)
  done (took 12.319042333 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.366923447 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.366055862 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.366456625 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.366538733 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.365810411 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.366380652 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.366947889 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.367987876 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.366089214 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.366783796 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.368119206 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.366365261 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.366690685 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.366576016 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.367469316 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.365877928 seconds)
  done (took 23.118993076 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.368864574 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.366554922 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.366702381 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.367604561 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.36728248 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.367372247 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.369161898 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.367253301 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.366773709 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.366945377 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.367347322 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.366966418 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.367627397 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.36759009 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.367165118 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.368606016 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.367721521 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.366972487 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.373002805 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.368215423 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.368605749 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.366293794 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.368568901 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.369931633 seconds)
  done (took 34.081319213 seconds)
done (took 70.770971841 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.352667889 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.373714499 seconds)
  done (took 5.980488825 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.42895622 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.430230541 seconds)
  done (took 4.112544861 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.369835804 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.369190523 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.367530602 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.368402373 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.367719552 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.370112347 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.368901342 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.368906641 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.368796724 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.370714288 seconds)
  done (took 14.94370548 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.36757369 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.369738997 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.368643015 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.369240212 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.369222335 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.369866701 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.369082925 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.3695844 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.370813237 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.369163186 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.369729013 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.370618115 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.371374237 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.370999766 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.369514087 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.370960393 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.371177791 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.369953838 seconds)
  done (took 25.911984201 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.384381905 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.392092364 seconds)
  done (took 4.031295431 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.510937863 seconds)
    (2/7) benchmarking "second"...
    done (took 1.412976865 seconds)
    (3/7) benchmarking "month"...
    done (took 1.486507084 seconds)
    (4/7) benchmarking "year"...
    done (took 1.478204293 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.41344525 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.392648895 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.412743363 seconds)
  done (took 11.363546897 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.370653888 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.584146536 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.714661801 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.965087582 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.373123338 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.375893925 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.153741577 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.37586674 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.378157287 seconds)
  done (took 15.546804484 seconds)
done (took 83.141565131 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.358072099 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.439594389 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.378231816 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.387580363 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.6672387 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.394422206 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.358818453 seconds)
done (took 17.240142038 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.344611716 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.351663029 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.355135824 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.365604036 seconds)
  done (took 10.673214629 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.373716313 seconds)
    (2/2) benchmarking "read"...
    done (took 1.653294108 seconds)
  done (took 5.285014936 seconds)
done (took 17.214332393 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.373744184 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.371160159 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.372609707 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.371247881 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.373000964 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.372822241 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.374767276 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.371959585 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.372995134 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.373292571 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.373411171 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.374279502 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.371572928 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.374262723 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.37428994 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.374913398 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.372358601 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.37337982 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373887001 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.374345423 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.372716067 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.373853919 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.37284435 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.373308441 seconds)
  done (took 34.215110977 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.373902683 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.373675803 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.373062476 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.372924551 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.374463041 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.374517911 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.374476834 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.37379825 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.374373621 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.374534659 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.375085554 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.374901001 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.375765781 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.376658844 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.375480354 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.373065018 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.374341379 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372722356 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.374377704 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.374459621 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.377353966 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.375652221 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.375141322 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.376074823 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.375965294 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.374839849 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.374642919 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.375477293 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.375713586 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.374573604 seconds)
  done (took 42.501176384 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.379387644 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.379618462 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.376107339 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.374987415 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.374397247 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.375961655 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.375744574 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.374788482 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.376876365 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.376017392 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.377218611 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.376887172 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.374449587 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.375084425 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.37591597 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.376615921 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.377190252 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.376195219 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.37716377 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.379282715 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.377287793 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.376539488 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.377191708 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.377330806 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.378640946 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.376631735 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.377694445 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.375268467 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.378832505 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.37620321 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.37669197 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.377409373 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.377721846 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.37686885 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.377783112 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.376384333 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.380746236 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.382403446 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.376358579 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.378528946 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.378797542 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.378292343 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.377744453 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.377717421 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.377534524 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.378273237 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.378756611 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.377807931 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.376900298 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.379464741 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.378470877 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.377575865 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.379670086 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.37870076 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.378946203 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.37959814 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.379532808 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.378960794 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.380116127 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.379963215 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.379466724 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.37863038 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.379315568 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.379829339 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.378258562 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.378693955 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.378809163 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.381229553 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.379789452 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.378168682 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.38060503 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.380464078 seconds)
  done (took 100.470863675 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.379796042 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.378738484 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.378861014 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.379317804 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.379699631 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.381004926 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.379888407 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.380563169 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.380755533 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.379988641 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.380044744 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.381085778 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.380522503 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.37916577 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.379674413 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.380159255 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.379893776 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.380445756 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.381328985 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.381226329 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.379275462 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.380645147 seconds)
  done (took 31.626666479 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.381614494 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.381973001 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.381565676 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.382389342 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.384985594 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.382765185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.380123048 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.383398911 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.382007042 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.380370923 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.383184254 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.381127286 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.383788322 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.382959959 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.38201423 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.383312464 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.382200592 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.382740955 seconds)
  done (took 26.148095755 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.383553815 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.380152806 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.382036379 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.382169245 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.384775286 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.383690283 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.381329106 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.383958496 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.384028379 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.382989247 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.381765121 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.384224031 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.381708773 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.383029584 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.383844427 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.383335913 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.381983311 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.380375328 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.382616456 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.383127902 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.382897736 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.385055518 seconds)
  done (took 31.689225155 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.385398515 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.384655616 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.385622637 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.384570689 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.383664871 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.382683625 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.386440018 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.383659134 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.384794082 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.383570051 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.385939933 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.385070778 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.386694283 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.385163593 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.383289395 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.384832912 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.385440548 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.385129878 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.385493608 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.384640235 seconds)
  done (took 28.963251468 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.387217772 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.383467678 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.384136815 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.385205447 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.385599295 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.38456191 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.384910281 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.386277606 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.385051525 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.386093237 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.386412977 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.386760204 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.386491061 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.386899778 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.386116877 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.393211564 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.387329702 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.385093813 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.386173089 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.386408437 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.386899673 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.387218053 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.387045693 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.385560922 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.387879127 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.38686523 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.386707082 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.387047533 seconds)
  done (took 40.087785271 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.386820092 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.386370185 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.385175878 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.385835592 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.387044462 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.387493993 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.388001122 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.385719731 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.386154966 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.385416879 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.387972244 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.387705858 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.387298452 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.388189369 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.387809282 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.386841351 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.38828285 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.388747005 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.388108095 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.3883787 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.389582398 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.388685669 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.387865457 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.387351095 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.387877678 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.38911108 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.386944424 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.389615351 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.38767933 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.388253983 seconds)
  done (took 42.897905817 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.407764211 seconds)
    (2/2) benchmarking "in"...
    done (took 1.408758494 seconds)
  done (took 4.086568267 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.388385168 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.388037756 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.387991307 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.389818351 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.390249135 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.390368681 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.389077872 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.389447692 seconds)
  done (took 12.383853498 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.382681985 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.39230547 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.390732005 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.3909801 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.388946728 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.3832103 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.392407993 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.394679093 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.384490382 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.384013724 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.389381251 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.388038864 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.386741434 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.385927995 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.383956082 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.387095293 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.395461266 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.392712774 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.389933594 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.391893542 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.389343638 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.385978708 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.389292897 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.394727547 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.385047985 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.393973714 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.391842498 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.395291659 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.385213868 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.389418246 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.386806444 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.392821577 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.390963256 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.392031224 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.392278831 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.392106338 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.394266322 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.390857542 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.392998842 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.395611624 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.393657943 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.392621256 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.386921181 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.388252027 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.389524834 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.395604452 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.393910652 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.394710733 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.386770662 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.389603613 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.398952236 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.38522505 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.395714367 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.391964016 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.38958085 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.394187988 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.396999643 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.38933925 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.391643972 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.395634152 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.401596939 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.397709296 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.390945129 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.395761449 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.396076209 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.403050639 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.397139917 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.3990361 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.395299668 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.394652818 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.395032632 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.401957954 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.401282504 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.39502088 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.395155477 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.396146335 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.38855034 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.394575851 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.395583835 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.395280835 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.397523554 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.396801471 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.397047408 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.401867028 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.389616561 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.396491047 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.395513684 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.395719207 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.389297618 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.397859569 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.399328842 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.397466294 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.387186383 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.388737936 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.389536463 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.397361829 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.388120873 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.389896964 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.396102506 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.396140266 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.396988159 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.392263997 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.39629901 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.397991392 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.397057433 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.395558634 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.400288969 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.391256674 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.396261023 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.401498411 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.397774172 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.391020311 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.394294388 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.397110933 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.392574553 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.395550672 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.398028152 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.391676414 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.399788201 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.398773413 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.398713262 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.409642099 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.400319703 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.399274738 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.395379875 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.403237821 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.399416522 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.393514044 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.400886087 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.399255508 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.39928962 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.394018465 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.400900384 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.392537358 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.400826993 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.392372219 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.401138498 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.399141963 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.398465951 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.393459247 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.394317738 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.393386142 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.394241771 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.396358713 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.400003552 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.394013003 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.401735101 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.395340691 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.395143567 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.396765938 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.401596309 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.40121207 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.395101465 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.401790982 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.394717039 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.40074287 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.393600607 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.401071159 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.401009851 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.400993855 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.401509316 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.394274462 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.395673639 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.402142164 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.396997604 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.394792655 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.402082402 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.401999626 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.402305494 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.3942303 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.402245918 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.393604658 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.397950073 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.405254151 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.402366743 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.401093831 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.396774395 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.401977209 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.401624828 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.401918462 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.397010333 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.39999826 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.403321911 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.402369456 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.405864899 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.401219778 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.403086816 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.396775252 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.396967791 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.402880227 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.399175156 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.409093907 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.406007458 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.407638392 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.397339653 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.406344754 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.397290886 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.406343684 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.399967185 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.403746777 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.405168014 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.404512996 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.397181054 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.402211437 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.397514123 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.403674051 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.39569736 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.405134532 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.404545749 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.404277969 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.403755869 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.396626442 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.398277786 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.404075128 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.405716032 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.404124832 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.396449867 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.403336677 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.396608639 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.397020132 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.405535649 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.404362359 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.402389935 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.407014586 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.399545015 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.400355436 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.400372645 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.397595371 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.406330433 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.401798496 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.400148896 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.406209816 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.40317816 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.400485835 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.407540549 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.403039174 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.400041263 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.403219474 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.408947214 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.406600802 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.40091834 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.410902943 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.407082687 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.406533143 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.406392017 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.398522551 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.407733431 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.406157062 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.409854297 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.399623236 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.407474214 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.400567174 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.40839072 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.400528512 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.401715099 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.402381775 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.403880086 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.409437051 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.406828294 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.402860448 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.40772057 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.405978541 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.407305817 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.402441926 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.411339363 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.406478793 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.4031954 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.403389249 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.402113925 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.410776238 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.402878852 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.408577146 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.400854896 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.413675696 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.417891255 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.408242118 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.405989878 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.40976467 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.407511139 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.404654427 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.40452488 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.401942111 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.403351994 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.40209704 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.40170601 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.409626963 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.402418167 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.409894842 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.404517859 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.404786813 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.412817125 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.409232012 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.401661844 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.411503125 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.41020382 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.408535232 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.403302747 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.408869733 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.403502009 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.404547101 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.403160591 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.404378957 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.410882655 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.4080394 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.405196835 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.40427504 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.404079027 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.402014168 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.405313939 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.411242556 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.406689965 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.414720744 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.405321399 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.409756848 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.40557973 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.413229992 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.411470029 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.407479787 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.414629746 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.410328359 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.402906597 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.40426075 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.411161762 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.412633806 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.415147217 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.404657069 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.41395967 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.40966183 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.410271924 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.4120785 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.41133609 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.412915387 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.410692272 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.413833408 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.409821741 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.408051676 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.408554316 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.414198779 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.41246767 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.412404641 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.404659683 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.409071809 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.415585337 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.406302802 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.406510369 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.407172937 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.413992943 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.411964051 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.413313064 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.412253124 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.411676838 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.41345926 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.410753596 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.41444208 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.412558152 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.412397453 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.414839267 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.412626774 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.416064504 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.406390974 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.413397855 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.413754484 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.406282351 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.407036038 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.407402835 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.41337721 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.407756463 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.417093507 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.413847799 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.407808839 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.409556576 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.413660366 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.407402946 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.416391996 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.430028673 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.408026751 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.417422667 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.415077524 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.409487729 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.417446596 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.413985701 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.406820005 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.408883921 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.415230574 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.418816311 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.409104937 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.416632378 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.409481308 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.415362116 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.415322187 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.416453496 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.414194696 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.416604144 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.408428979 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.41658413 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.412803083 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.417629537 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.410621073 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.411915507 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.410363768 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.418485398 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.420127811 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.410834213 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.4174463 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.4164774 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.409868326 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.412877516 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.417463669 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.409288566 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.417327097 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.410626205 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.414708231 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.414047346 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.41292484 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.411532712 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.41786451 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.411541112 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.411623537 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.415934772 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.417070068 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.415783435 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.412713696 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.418221087 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.410839214 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.410609942 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.41745946 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.41146775 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.42009996 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.413928523 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.414187687 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.411023656 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.418174669 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.417430805 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.417961248 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.41000393 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.41196625 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.419174171 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.417296403 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.418374867 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.416356515 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.420940688 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.410619957 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.414405721 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.417230693 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.410244479 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.411873761 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.418977095 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.413474925 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.414095725 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.414969161 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.419345585 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.419362688 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.416005642 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.412339899 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.421606001 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.418871479 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.421334112 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.414545035 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.415647418 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.414171216 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.422583086 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.420095178 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.412411683 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.420867187 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.418816793 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.421716516 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.416097516 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.415747292 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.415950246 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.422746537 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.420758541 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.415380057 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.423377165 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.414221353 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.421988048 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.4217428 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.421065452 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.413567172 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.413630963 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.416167731 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.417555904 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.420845926 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.418100834 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.416741522 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.415841348 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.423398923 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.422296185 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.422451641 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.420256279 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.414413533 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.421958588 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.414688844 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.418324064 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.416323186 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.416587681 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.425343655 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.421563872 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.416731695 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.421337013 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.428035274 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.42239997 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.416003293 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.417885445 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.419907587 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.42407462 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.422374771 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.417552625 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.41799171 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.424862948 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.422629322 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.423280798 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.418500104 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.429006129 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.428894812 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.41639894 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.416788099 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.420080268 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.425189465 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.423726637 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.422846752 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.419527343 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.420210746 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.428760192 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.423884427 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.42402665 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.421429617 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.418414188 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.428152592 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.419431553 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.421361975 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.421246062 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.426029928 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.423711317 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.421731895 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.432148841 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.428444653 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.426736923 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.439911074 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.423447462 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.421399537 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.425905552 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.417884187 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.425043287 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.420741243 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.426652109 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.425971804 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.42873706 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.425006588 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.419082216 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.422521807 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.422528877 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.429192279 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.427546738 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.418334357 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.420107661 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.42698218 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.42659078 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.428834785 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.424765415 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.424988509 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.427233936 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.419744065 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.432246079 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.43345393 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.428016696 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.427407635 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.427459985 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.423583183 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.423822689 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.427356317 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.431150269 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.425975669 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.426939231 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.422616036 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.427421743 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.428505531 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.419388767 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.420755196 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.423214101 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.429332286 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.433382823 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.43597922 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.428882348 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.422724199 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.428618261 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.429562821 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.423028773 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.428387596 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.427086506 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.422315523 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.422435902 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.430881902 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.428969141 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.428840986 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.424082146 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.433632252 seconds)
  done (took 840.445542712 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.428466129 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.428100867 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.428743039 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.429734796 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.428387733 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.429458511 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.42874328 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.4309477 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.430458711 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.42829283 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.429712133 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.428670091 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.428201984 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.428585638 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.430409881 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.430973993 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.429251414 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.428021149 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.428994568 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.429873082 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.427592612 seconds)
  done (took 31.316656548 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.428885019 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.430263206 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.430209539 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.431932422 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.430086829 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.432057636 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.431163799 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.429957818 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.431374755 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.431060285 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.431251487 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.431406691 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.429756321 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.43067215 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.432574963 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.431275984 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.431594691 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.430825954 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.430649392 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.432038348 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.430569936 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.432096839 seconds)
  done (took 32.788843518 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.430178256 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.431144682 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.424481161 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.433927941 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.431839757 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.43207373 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.431637806 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.431256671 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.433203932 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.426633204 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.425034014 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.425601577 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.430486847 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.437488155 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.426736649 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.433573771 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.432233088 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.432623536 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.433254963 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.432636994 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.430305571 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.437266068 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.433231839 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.427169532 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.432494254 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.43372914 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.431599261 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.43069915 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.425907102 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.437227906 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.433621993 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.42677485 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.429163509 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.426479036 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.42781411 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.438717304 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.432000144 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.434001236 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.435881616 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.436306142 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.450290011 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.433641888 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.433650111 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.437765812 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.435545868 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.433152743 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.441429301 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.433420551 seconds)
  done (took 70.065052449 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.435907733 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.435128023 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.434977192 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.43697341 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.435387662 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.435262141 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.43716279 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.436504905 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.435010738 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.434229834 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.43462022 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.434981265 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.435878756 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.43586526 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.436885378 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.437910954 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.435383194 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.435360568 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.434366079 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.436667254 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.436265494 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.436995876 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.436747628 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.43795262 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.435012599 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.436223696 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.43504303 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.436787512 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.437772584 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.43556128 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.436395803 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.435797962 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.437612904 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.437475983 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.437158895 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.43826572 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.43662335 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.436307103 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.437125864 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.436442181 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.435273103 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.437495817 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.439648149 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.436502901 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.439010305 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.438198972 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.437132433 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.437184102 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.437775577 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.438073563 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.437060737 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.438420742 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.43748022 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.439095782 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.438660611 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.439128944 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.438874841 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.4383178 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.440419688 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.439360908 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.439276056 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.436350611 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.43928153 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.439019221 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.440246492 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.43922907 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.440246191 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.439699539 seconds)
  done (took 99.037111333 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.438950824 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.439851455 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.439365724 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.43920943 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.439635333 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.439477944 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.439517916 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.439624027 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.440124218 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.439826899 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.440524175 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.440599125 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.439979523 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.439699582 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.44016481 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.441003786 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.44204722 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.440993782 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.441114061 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.440407618 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.439809057 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.439618015 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.440949339 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.441476956 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.440646137 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.439879383 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.439895924 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.441341796 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.439915852 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.440754811 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.441487651 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.441697906 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.442008656 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.441124046 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.441850729 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.440305646 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.440998287 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.440530978 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.442091904 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.440537842 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.441346583 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.44255704 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.440963767 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.442193095 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.442099393 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.442677558 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.442393847 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.440791004 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.442240568 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.441205353 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.444110072 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.443158737 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.443172203 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.442192831 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.443449853 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.442935264 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.443916947 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.444711597 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.442661932 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.444883551 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.44304306 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.443031699 seconds)
  done (took 90.676210807 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.444571331 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.444102585 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.444104512 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.443228947 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.447012639 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.444645643 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.445242251 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.445672551 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.445255769 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.444448552 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.447241895 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.446383499 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.447268287 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.446293944 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.443291186 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.44694334 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.445182822 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.445123137 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.444912865 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.444859354 seconds)
  done (took 30.22526871 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.445724849 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.444519003 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.443973005 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.446374814 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.445776374 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.44525213 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.445249562 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.4451842 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.444421266 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.445151437 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.445957332 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.445887233 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.445904068 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.446478632 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.446212677 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.445644959 seconds)
  done (took 24.446814046 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.447210067 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.445521332 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.445619268 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.446522344 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.44610361 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.446406056 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.444588464 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.445951768 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.446331407 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.44596139 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.445477808 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.447015028 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.447004295 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.446202415 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.44683553 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.448336139 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.445687754 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.445477528 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.447224626 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.445603105 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.445587739 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.447103944 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.447857815 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.447649627 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.444871296 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.447299206 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.447750415 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.447117383 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.447484017 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.449653641 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.447302853 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.448557792 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.448484257 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.447182656 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.446882336 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.44653744 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.448064804 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.447201517 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.448153994 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.449199264 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.448457381 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.448988005 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.449401091 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.447243954 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.449054887 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.450918264 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.451107822 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.448786378 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.447718762 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.447991513 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.448616344 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.448103691 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.448943965 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.448698139 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.447787216 seconds)
  done (took 80.929148495 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.44988643 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.449250932 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.449880798 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.450788537 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.449378955 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.44914005 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.449806185 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.450537145 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.449953369 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.450339314 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.451047084 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.451174563 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.449771674 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.448432499 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.448009274 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.449459658 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.449998596 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.449959944 seconds)
  done (took 27.421177893 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.452071726 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.452632167 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.450794265 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.45002984 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.451063978 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.451064097 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.450501946 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.450881547 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.450553579 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.450446882 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.449369243 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.451071186 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.451394964 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.452458134 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.452115804 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.450880339 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.45129809 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.451030197 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.450365178 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.451917406 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.451501051 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.452317266 seconds)
  done (took 33.249637535 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.445449553 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.444164782 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.443218217 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.459773084 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.458334986 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.444500556 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.444846881 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.444291211 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.467616232 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.487029191 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.483633767 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.457482584 seconds)
  done (took 18.805257039 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.452667258 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.453766153 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.452766907 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.454158705 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.455407044 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.454140039 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.452001243 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.454240668 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.455324008 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.45374431 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.453523405 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.454031984 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.453889767 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.452869919 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.453158468 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.452946188 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.454458454 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455073115 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455030564 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.454090648 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.454580587 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.454728466 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.454548171 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455854468 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455268107 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.453967758 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.456993963 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.454177445 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.454280594 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.455025104 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.454501949 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.455160782 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.455315709 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.454324343 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.455172465 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.456004495 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455872096 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.454242653 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.454558079 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.454238454 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.454922103 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.455517617 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.455386364 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.454712281 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.456165323 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.456915625 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455097757 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.455026089 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.455047226 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.456202818 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.456029531 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455726348 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.457194527 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.456565038 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.456129718 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.455259963 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.458071579 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.456135625 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.45652472 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.456833718 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.456835991 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.456451397 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.456337832 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.456096559 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.45636093 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455041216 seconds)
  done (took 97.360521228 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.458532878 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.457464077 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.456993232 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4585328 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.457422944 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.458113207 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.457813454 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.457107361 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.459175689 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.457917209 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.458083048 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.457637418 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.457490985 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.457605059 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.457694132 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.458568751 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.45866581 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.457496149 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.458856367 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.459296675 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.458171733 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.458593626 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4592783 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459218271 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459631381 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.458000068 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.45950762 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.459409773 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.459751308 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.459915866 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459132225 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.458098181 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.459450088 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.458603221 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459659143 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.458895109 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.458519568 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.458427861 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.460352988 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.459813972 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.460284398 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.459410821 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.460774098 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459620646 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.460634981 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.458901508 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.460898885 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.460406751 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.462079197 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.460895687 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.461043382 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.460421331 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.45989049 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.46058057 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.459967139 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.461364383 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.461230297 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.462050629 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.459408511 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.459723184 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.46240847 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.46165403 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.460942143 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4620088 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.460682528 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.462127391 seconds)
  done (took 97.65343913 seconds)
done (took 1970.748230609 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.619562174 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.575803233 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.451645731 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.470062496 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.453236785 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.454342115 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.466202985 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.453908818 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.453684896 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.452883961 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.454253246 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.66362982 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.484643579 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.453412569 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.452350511 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.553917257 seconds)
  done (took 29.246842792 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.485576199 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.460931664 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.590685816 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.459268947 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.485585229 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.666707243 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.520782635 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.458487332 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.657752588 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.479575375 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.457070672 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.481608545 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.457915014 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.451614114 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.480192212 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.672818929 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.741771859 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.460133834 seconds)
  done (took 31.802070624 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.979014856 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.474361982 seconds)
  done (took 5.789507459 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.479168367 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.459734634 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.459259045 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.456413668 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.450166416 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.451976162 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.458454972 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.45075294 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.455497536 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.606174405 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.461503414 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.470579874 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.457311959 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.458981515 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.467016824 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.505359101 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.656071656 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.466363277 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.466347083 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.465121744 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.457090645 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.565530564 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.507306123 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.467598146 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.604250877 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.454782207 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.466943299 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.465642537 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.591036553 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.468519068 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.458669465 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.459591061 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.461375126 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.453375677 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.935600253 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.462616491 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.486428348 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.469764711 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.46781815 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.618921709 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.461370998 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.466219735 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.453209811 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.9338848 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.60408823 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.594378964 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.454372869 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.461992416 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.462083902 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.532622792 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.462481624 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.461139703 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.521103996 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.33627796 seconds)
  done (took 92.473926148 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.504044058 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.452882998 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.63930964 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.473523036 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.453622225 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.453649804 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.454972406 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.787728147 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.499158247 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.456185113 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.787439997 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.070783858 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.458619319 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.468388505 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.435017315 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.566476841 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.456240907 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.454634253 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.456912653 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.459540649 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.047728632 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.456465001 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.457226269 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.579149602 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.496838979 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.0389853 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.4630782 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.459405114 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.458160485 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.4538391 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.029057274 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.459107106 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.528754238 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.456969386 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.755152184 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.900666973 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.858662176 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.463647356 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.501286739 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.462109119 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.476396965 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034917876 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.877194414 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.459376668 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.457205222 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.033122784 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.459400922 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.467347273 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.458778869 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.718374858 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.457919153 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.459002027 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.469400206 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.458669799 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.469303619 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.481070697 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.523746508 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.042606295 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.458729113 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.473319212 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.485921802 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.460697886 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.468883721 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.458338192 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.478628026 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.886291925 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.640250968 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.466585427 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.879709977 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.017267163 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.458709897 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.1086838 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.459387804 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.467960937 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.461508932 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.471200008 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.458333666 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041233287 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.487254028 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.457607436 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.858513008 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.46317319 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.772241642 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.477942099 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.460066884 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.078017901 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.458649578 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.466633696 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.458636156 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.476772132 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.457949572 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.46251467 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.757985158 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.518395256 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.459634926 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.460613322 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.485618941 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.458941353 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.461049285 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.467311977 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.085447462 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.468038332 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.459790626 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.461626678 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.46045683 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.463936695 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.460527916 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.461113439 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.741387713 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.46085789 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.482909765 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.460038886 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.459917115 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.464947045 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.551016863 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.467868162 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.820458918 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.461944823 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.460912202 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.462602345 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.460654228 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.477948709 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.461115318 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.461854073 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.360645034 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.76337497 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.482960571 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.461966693 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.46380575 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.460529833 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.462889254 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.466387319 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.539849804 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.463035656 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.301885957 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.476928086 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.487321764 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.460900915 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.465556491 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.46176836 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.470714875 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.463059434 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.773810676 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.760259669 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.638367473 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.46436614 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.476629249 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.285566414 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.472799302 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.649860637 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.48268046 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.463400907 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.747487994 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.659494018 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.463305417 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.463319275 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.465681821 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.730384631 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.464434865 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.805893048 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.058844943 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.463316762 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.470287815 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.307954781 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.20069219 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.463955285 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.463298965 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.772731058 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.486178418 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.463883887 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.463005082 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.465171236 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.463675628 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.465816286 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.470093501 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.464422962 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.465339485 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.523617843 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.663563799 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.483267192 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.467015287 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047263561 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.516932679 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.464876262 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.465925101 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.467307548 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.464674358 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.51035177 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.471231886 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.479451009 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.464853835 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.472328129 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.074856189 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.471776179 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.465970334 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.661905386 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.217886531 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.464830378 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.466101153 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.466541999 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.428096989 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.077742705 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.529043138 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.825173772 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.469681854 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.508085894 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.466114212 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.540480211 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.07757985 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.483316829 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.466041775 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.188121423 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.46768433 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.98102147 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.466188228 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.467094866 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.103525646 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.46867014 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.472618113 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.468087768 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.468889134 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.775716344 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.469283958 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.52052188 seconds)
  done (took 529.382889508 seconds)
done (took 690.027793755 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.467110002 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.473903782 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.455854324 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.474466082 seconds)
  done (took 11.220766314 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.487100129 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.475985862 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.483779235 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.47546278 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.485074374 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.475440487 seconds)
  done (took 10.234021633 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.471174753 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.476218525 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.478041651 seconds)
  done (took 8.778539818 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.724098325 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.503384765 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.889366408 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.477915349 seconds)
  done (took 9.947300743 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.48476118 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.48403668 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.484128947 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.484459434 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.48661822 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.487976492 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.485644715 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.485196899 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.48587854 seconds)
  done (took 14.719093561 seconds)
done (took 56.249408724 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.628774144 seconds)
    (2/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.217112513 seconds)
    (3/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.583882463 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.542519537 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.580766803 seconds)
    (6/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.587148433 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.506423271 seconds)
    (8/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.594709351 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.643344693 seconds)
    (10/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.452288377 seconds)
    (11/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.566378477 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.581404502 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.631799325 seconds)
    (14/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.1293107 seconds)
    (15/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.245771615 seconds)
    (16/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.604767421 seconds)
    (17/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.464911144 seconds)
    (18/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.463524524 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.542775152 seconds)
    (20/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.288031451 seconds)
    (21/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.172783314 seconds)
    (22/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.629056371 seconds)
    (23/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.54390635 seconds)
    (24/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.546743103 seconds)
    (25/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.761172972 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.757772624 seconds)
    (27/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.662994992 seconds)
    (28/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.506348921 seconds)
    (29/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.310098872 seconds)
    (30/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.496922352 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.561529271 seconds)
    (32/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.705101699 seconds)
    (33/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.519509051 seconds)
    (34/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.468647199 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.538843027 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.609068855 seconds)
    (37/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.463322514 seconds)
    (38/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.455712812 seconds)
    (39/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.607613674 seconds)
    (40/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.781319087 seconds)
    (41/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.617605072 seconds)
    (42/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.587276804 seconds)
    (43/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.746263899 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.750773935 seconds)
    (45/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.60350891 seconds)
    (46/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.457276082 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.560293615 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.607696763 seconds)
    (49/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.456053601 seconds)
    (50/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.551503651 seconds)
    (51/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.455051877 seconds)
    (52/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.292289533 seconds)
    (53/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.458170724 seconds)
    (54/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.582372373 seconds)
    (55/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.75330688 seconds)
    (56/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.513535796 seconds)
    (57/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.619938754 seconds)
    (58/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.598212794 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.645154701 seconds)
    (60/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.396212584 seconds)
    (61/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.552397608 seconds)
    (62/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.456462702 seconds)
    (63/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.181778594 seconds)
    (64/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.138977841 seconds)
    (65/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.566149905 seconds)
    (66/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.457859829 seconds)
    (67/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.526435451 seconds)
    (68/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.547321556 seconds)
    (69/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.61070917 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.637610556 seconds)
    (71/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.515118267 seconds)
    (72/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.541035153 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.565005868 seconds)
    (74/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.625538988 seconds)
    (75/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.457250986 seconds)
    (76/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.475186945 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.540319723 seconds)
    (78/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.220114511 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.458968251 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.504077101 seconds)
    (81/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.529657748 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.57944375 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.600184745 seconds)
    (84/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.510427574 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.56027714 seconds)
    (86/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.458635162 seconds)
    (87/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.185290857 seconds)
    (88/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.574064496 seconds)
    (89/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.364031035 seconds)
    (90/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.677636932 seconds)
    (91/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.26805218 seconds)
    (92/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.675651046 seconds)
    (93/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.669328272 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.609645102 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.509408315 seconds)
    (96/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.505819516 seconds)
    (97/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.720131721 seconds)
    (98/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.673448577 seconds)
    (99/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.673225035 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.582022969 seconds)
    (101/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.670032766 seconds)
    (102/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.51738291 seconds)
    (103/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.480903877 seconds)
    (104/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.513706327 seconds)
    (105/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.601588177 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.549602248 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.476789 seconds)
    (108/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.623706062 seconds)
    (109/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.511749764 seconds)
    (110/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.670343107 seconds)
    (111/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.509165293 seconds)
    (112/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.471848831 seconds)
    (113/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.58900811 seconds)
    (114/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.182222776 seconds)
    (115/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.316954495 seconds)
    (116/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.469298225 seconds)
    (117/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.460061918 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.509956721 seconds)
    (119/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.665098258 seconds)
    (120/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.479723783 seconds)
    (121/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.546291218 seconds)
    (122/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.478955993 seconds)
    (123/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.463024844 seconds)
    (124/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.518414488 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.651320087 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.517950788 seconds)
    (127/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.331882514 seconds)
    (128/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.569892931 seconds)
    (129/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.462223973 seconds)
    (130/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.505036975 seconds)
    (131/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.741302799 seconds)
    (132/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.462755411 seconds)
    (133/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.650283182 seconds)
    (134/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.475616543 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.591008288 seconds)
    (136/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.462598217 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.594112842 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.58192633 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.617144265 seconds)
    (140/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.863668209 seconds)
    (141/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.721062112 seconds)
    (142/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.482082 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.541255302 seconds)
    (144/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.477571851 seconds)
    (145/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.472381475 seconds)
    (146/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.514621144 seconds)
    (147/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.483088125 seconds)
    (148/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.655781296 seconds)
    (149/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.566210154 seconds)
    (150/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.608137309 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.765185705 seconds)
    (152/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.549926311 seconds)
    (153/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.462390935 seconds)
    (154/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.628708793 seconds)
    (155/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.360986207 seconds)
    (156/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.464300267 seconds)
    (157/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.396590252 seconds)
    (158/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.488591285 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.713064233 seconds)
    (160/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.474898352 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.546402873 seconds)
    (162/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.63852078 seconds)
    (163/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.724745373 seconds)
    (164/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.463988666 seconds)
    (165/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.511333527 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.519472695 seconds)
    (167/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.360693841 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.605456464 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.496275382 seconds)
    (170/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.463350944 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.354977987 seconds)
    (172/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.512355361 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.510238721 seconds)
    (174/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.466010117 seconds)
    (175/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.752451809 seconds)
    (176/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.594104958 seconds)
    (177/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.469471788 seconds)
    (178/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.484584258 seconds)
    (179/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.557672597 seconds)
    (180/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.672898543 seconds)
    (181/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.601380404 seconds)
    (182/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.644719858 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.682760886 seconds)
    (184/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.573750764 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.593833993 seconds)
    (186/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.513195254 seconds)
    (187/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.480671762 seconds)
    (188/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.330501351 seconds)
    (189/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.607894717 seconds)
    (190/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.518946636 seconds)
    (191/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.469781332 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.618894331 seconds)
  done (took 369.600083613 seconds)
done (took 370.95076306 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.508038252 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.569819258 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.491784653 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.491006288 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.492860442 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.487708103 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.51161532 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.492132179 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.505583331 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.504502926 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.489378169 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.499304095 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.505286358 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.500949064 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.527743711 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.493168175 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.491461829 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.502258105 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.507751328 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.509063359 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.494401362 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.494716034 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.515732303 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.493594112 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.501206343 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.501789793 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.498361881 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.487325623 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.500187059 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.508191423 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.49795251 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.500201223 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.50906373 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.504952024 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.496422325 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.503900554 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.494333891 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.57326489 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.513537975 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.503235766 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.501900255 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.510921447 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.497402009 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.49982454 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.505986328 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.516306711 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.504486288 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.509691044 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.499266309 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.487659901 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.512849004 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.506094629 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.50271769 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.487330929 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.493568094 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.510738892 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.503750979 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.511666131 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.503019095 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.496552535 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.529446409 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.511578419 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.508140649 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.504346989 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.502543767 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.509539448 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.505010645 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.511710271 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.501648804 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.497113006 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.498445032 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.502026148 seconds)
done (took 117.682494704 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.617317289 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.495534644 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.634480142 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.504222534 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.657396532 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.624913412 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.501879802 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.504427252 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.502278726 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.293706557 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.5031685 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.504981159 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.496318432 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.503462351 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.622826144 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.50437656 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.504023259 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.22076802 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.504946666 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.634118245 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.495951336 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.502828727 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.505348337 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.296123572 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.496874068 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.493603197 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.63550581 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.503852813 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.218152601 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.49288106 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.497161385 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.195418658 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.637402466 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.526359498 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.517265081 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.514996622 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.661390339 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.508672889 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.617368087 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.615969358 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.637949027 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.542896754 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.494897584 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.499415553 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.508783812 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.507430912 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.507245039 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.5336679 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.497933027 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.507941954 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.195626265 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.51445799 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.515775644 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.506814463 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.505012308 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.524236213 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.50671093 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.507898609 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.638247024 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.506768704 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.620294914 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.325256439 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.330132927 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.507778119 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.496981004 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.506644362 seconds)
  done (took 119.583613423 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.565854298 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.575503791 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.619183316 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.498896103 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.550774488 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.61970335 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.498889925 seconds)
  done (took 12.298616848 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.506796852 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.508598929 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.548284247 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.548345283 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.508278316 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.656641182 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.50827925 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.511553763 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.507567859 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.552448822 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.508375883 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.510722482 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.518431279 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.501597431 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.550215321 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.512138342 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.616406792 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.501324779 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.508118332 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.655357163 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.510218391 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.517362885 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.553575733 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.512776589 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.512935788 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.507831647 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.275862529 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.507820857 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.51008583 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.509084971 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.510435867 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.556614499 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.510961012 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.501186074 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.510625473 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.619462338 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.511239549 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.51097453 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.510493524 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.504108223 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.510888026 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.511153816 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.511127305 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.510989984 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.508858823 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.527645777 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.511966683 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.51069241 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.511302849 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.512400181 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.554091839 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.512385829 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.512312785 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.509479364 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.558902731 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.521398066 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.510279639 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.512011588 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.512829981 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.512489014 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.657738608 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.551918106 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.511501759 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.551937844 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.511287791 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.513598013 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.511515157 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.513643645 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.596027719 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.513421128 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.552533761 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.512557919 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.686725446 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.528713452 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.515185657 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.508336236 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.507497096 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.510668766 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.503091205 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.512083289 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.513699661 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.507662806 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.512589346 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.513539443 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.514229844 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.66866937 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.615389129 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.514080596 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.520154477 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.512790794 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.513927708 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.558902307 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.513741914 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.515855404 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.557827884 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.621409759 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.560215445 seconds)
  done (took 154.626278613 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.51879874 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.518406807 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.509587232 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.533074415 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.507633303 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.507002796 seconds)
  done (took 10.472316994 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.509816546 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.518592323 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.516384309 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.513616663 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.516706102 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.514716533 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.516376284 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.510590447 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.517771462 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.51558108 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.517207559 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.517744965 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.51683613 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.515749618 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.514817562 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.515474478 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.515941962 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.516591498 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.517848563 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.517196874 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.507199004 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.518335579 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.518936769 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.509971587 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.520265192 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.517763481 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.532485185 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.516987286 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.517087336 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.517143955 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.520482108 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.517141565 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.511950448 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.514541458 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.52033927 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.510594515 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.520045856 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.51916726 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.516005025 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.517299851 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.520076676 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.518447208 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.517001505 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.51940957 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.510371139 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.514913618 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.52406931 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.534258233 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.517972366 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.520722495 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.519978859 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.518321699 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.516969631 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.520574108 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.511197261 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.515515082 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.525518899 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.520465127 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.522592456 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.51405715 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.523252621 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.519072343 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.513950329 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.521483062 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.5186935 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.522882414 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.513208022 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.525231606 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.520126115 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.520411398 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.522430314 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.519668812 seconds)
  done (took 111.662257644 seconds)
done (took 410.009852442 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.844541511 seconds)
  done (took 4.225291917 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.619960804 seconds)
  done (took 4.001741222 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.874807019 seconds)
  done (took 26.262603024 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.527698883 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.529545775 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.510079511 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.506029017 seconds)
  done (took 11.454808782 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.964470568 seconds)
  done (took 4.347521906 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.52998041 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.530127756 seconds)
  done (took 6.442623598 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.843253819 seconds)
  done (took 4.226384018 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.897455796 seconds)
  done (took 4.286149743 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.515010722 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.529190119 seconds)
  done (took 6.434784554 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.489721915 seconds)
  done (took 3.871680094 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.203727613 seconds)
  done (took 22.590154459 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.538559057 seconds)
  done (took 3.925500006 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.555608873 seconds)
  done (took 3.942661543 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.646687973 seconds)
  done (took 7.032571429 seconds)
done (took 114.426409374 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.510667932 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.517675887 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.516486496 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.516821763 seconds)
  done (took 11.447500326 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.578822943 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.576812295 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.581899336 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.577320322 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.576258191 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.577087397 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.551619458 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.551688699 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.577397548 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.577000613 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.584614785 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.57650049 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.578401229 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.553071474 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.578955956 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.581376556 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.578569146 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.584670928 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.550658013 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.578013379 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.52639531 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.580274845 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.577403782 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.526908715 seconds)
  done (took 39.069554261 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.034593327 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.58847426 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.673186621 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.571738942 seconds)
  done (took 8.255957 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.604192929 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.608740024 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.626354531 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.66312332 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.693256293 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.624620232 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.55320879 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.548359946 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.535024135 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.610392796 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.660306916 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.592797491 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.696312572 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.526904307 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.746946842 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.526824298 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.527354048 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.608985663 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.658965395 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.677570831 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.528667801 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.606599897 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.61288751 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.593443523 seconds)
  done (took 40.020630008 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.535828674 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.549053282 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.530548439 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.544285186 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.529577857 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.52987535 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.530402609 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.537302517 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.528679128 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.527615087 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.530166707 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.542557985 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.528746473 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.530548885 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.536250635 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.530671961 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.530466196 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.535754833 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.538602737 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.529040661 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.530194676 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.536117387 seconds)
  done (took 35.132838072 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.51476942 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.516463019 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.865250635 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.771452027 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.516887176 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.52061916 seconds)
  done (took 15.09663366 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.606674654 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.764778225 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.522744075 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.942816063 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.041451588 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.526888008 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.523136686 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.80389396 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.168715559 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.184190369 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.595866714 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.604392756 seconds)
  done (took 22.677274088 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.515718771 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.522024665 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.53363891 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.537153754 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.587701015 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.526446486 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.53005521 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.516250484 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.592447582 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.590519409 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.527781294 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.590055849 seconds)
  done (took 23.962486574 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616155731 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.527651942 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.542028553 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.585026386 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526702198 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376472666 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.611218291 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.299805113 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.52987899 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.802020272 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543740741 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618574745 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.783510771 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538672117 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.531947321 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.509821327 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.75942326 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110979701 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529633795 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542560503 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.562123322 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.528645261 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.545943482 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.784203529 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382402166 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.52809259 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.791084251 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.528363798 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881239146 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858532262 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855305027 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.536530833 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.804596647 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232484754 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625967382 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78321057 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526085618 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.529558242 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.509497707 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.541165021 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.532072064 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.533655589 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853303578 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536773949 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.530080812 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531438278 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31156125 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.53564647 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.528757086 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.531019315 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858176933 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633123107 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.536459411 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.531337418 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554282793 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530576524 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.5373824 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.659836541 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097372083 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544089989 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533941188 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.533430175 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.537558115 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532192151 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297090532 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.543448198 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.538199022 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537528821 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531870725 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.544736415 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556367261 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533159927 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.554831466 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533137335 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426924776 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.542153176 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53574025 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176187795 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546449838 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.534438596 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764236915 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533260796 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534547307 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.530862156 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.532854427 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384767336 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53910198 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.506601893 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574519976 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.30553153 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.786015331 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55521237 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.563619811 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.756756802 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.507449656 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533855342 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.546052368 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536230358 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554206592 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309602526 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533856571 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.538180139 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7926263 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.745625018 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54847167 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.514486999 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078723028 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547163442 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.559269212 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.533989108 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.789613701 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.298479104 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871185447 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541383889 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.572198002 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.534339271 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.446892392 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54159132 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.544802053 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.549724497 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.843132268 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.480689356 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536480608 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605231378 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.541141947 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.536443727 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.535850271 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536827529 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.536453682 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.773367405 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.557113547 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.863554046 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.54314153 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536758995 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.536428711 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.557968313 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.539060884 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.760919227 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.550858908 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.815188255 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537007639 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537061501 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537895542 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.759284259 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.55556398 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.548044343 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.800246946 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551619899 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.538713017 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864456482 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573319305 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647010805 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567784126 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.537008033 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.799309237 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.545389805 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.542999877 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.536711236 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.539135321 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54627683 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.545983167 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536425317 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299449207 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51426302 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.540150819 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.540682083 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.555018101 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606280438 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547312474 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.79710599 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.544977757 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546605286 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.546184963 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.536781673 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.764224542 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86777895 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.546962269 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622712596 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.084833954 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.299238566 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.558404132 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.540756454 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.540298367 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.540848929 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541914413 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54099187 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.541731639 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795106855 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877038651 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.566938451 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.30151992 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547502979 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.560060327 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.549403391 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866718826 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.554674525 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542343207 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.54478039 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542088629 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.561050955 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.869919552 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683145641 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.557307637 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.544135114 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.059988969 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549576688 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.542843345 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.542935804 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573867173 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.541503148 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485217207 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805585361 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.541282499 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894480636 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.547822574 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.561304172 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.542003552 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542445441 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.580885949 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.562053496 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55573943 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.798786965 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.555131928 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550927804 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101170904 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537884162 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.241119399 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549634867 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.577642233 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.543329423 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321785346 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541999383 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.544777557 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.814243585 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.319910111 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544297644 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089449824 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.543017088 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.432636712 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872407888 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782365412 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.544368528 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.563465209 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874956874 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.761741954 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.576369069 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.55889556 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546824659 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.520567191 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17120639 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.555372731 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624913404 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330695064 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544492079 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.547272381 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.581466493 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.54624802 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013184511 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.548739002 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545483821 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.544801324 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.551469723 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468420218 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.546070336 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.545333761 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317311161 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.555126811 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.098078014 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545032996 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.801789419 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.878052454 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.862225705 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.569564412 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.546995612 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.80307223 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875025054 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552689314 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.545975444 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.263502281 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.420403579 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.554374508 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54812606 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.465684882 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56385685 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907807961 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.553165067 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.552571064 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.557341486 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.5484766 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549192131 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.548157653 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.552167298 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518508237 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133049203 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.543041903 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54132001 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.553548951 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55610409 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.805007824 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.564669222 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.310114863 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.783308317 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.54686243 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602176542 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.55552499 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548650825 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.52387558 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.548290829 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.550204093 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566091095 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.771570234 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.547757807 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.528541739 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.544275445 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.76187562 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.549347878 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.550228075 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843904425 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.554455624 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.573901283 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458209325 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58137871 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.563335581 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552495733 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.56189345 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591521153 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61656551 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806764895 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.883992874 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.886195972 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022943172 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553825927 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.551796056 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.565530016 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644991849 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551110826 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.553696529 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.326744085 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315693114 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470912907 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320528532 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888593153 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.55844001 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55636829 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552243977 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689092826 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.552390344 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82722576 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551715309 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.55354046 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573482086 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560594008 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.568177744 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768940915 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.829466574 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.552753085 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.569907593 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.555858805 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.552808518 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888007211 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.767993172 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145670433 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201581143 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553790412 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.558347748 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339335398 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.825860325 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554145094 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.55625196 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552501121 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.580382942 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.576781448 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.564799202 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.564987595 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689858993 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885154088 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270693102 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.883261688 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.597850814 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.07395967 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552668546 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.810534681 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323411039 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.810081341 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327999079 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.458017383 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82564624 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625507265 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813703146 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.560188342 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691206611 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.570482997 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.555442143 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.554484051 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556265835 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.55515 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.885722192 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32803352 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827087751 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.559917415 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.553797785 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585710509 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.811781667 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.785221797 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.418599643 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.778996827 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889938126 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.567679796 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.555745987 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325749345 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895354959 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561579133 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.561658729 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827600343 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.561376344 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584116797 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.075976206 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.554891764 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200124819 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.450892217 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577895763 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.573617702 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.462022285 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330851297 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.563766884 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145873478 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.55711011 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561984644 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836499594 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.563305318 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.55895251 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841554511 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.562887786 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.55874233 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822175909 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.331350373 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.455898068 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.585356281 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.565072334 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.560854063 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.559112555 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555397082 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557458839 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.566194024 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.038606786 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.563282762 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.56097808 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570986409 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.559652832 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.560698359 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.564457963 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560499543 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.5682513 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.551490303 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.534523364 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.561029331 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.694106836 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186838471 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.566356355 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.237459443 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.882832457 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.814583287 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.575491233 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.538935054 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.564652616 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.561365731 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.561645614 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.560075712 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.552496251 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230520698 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.576753969 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.897881663 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572143917 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.772976784 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771738079 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.561761215 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822098755 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.567197953 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590345126 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.535981132 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562931787 seconds)
  done (took 1071.947287239 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.590005704 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.584103198 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.591534036 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.650893332 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.604793515 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.699773411 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.573038285 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.62026018 seconds)
  done (took 22.338224653 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.561916985 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.568092062 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.562503651 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.567515602 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.563842744 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.102281904 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.562540342 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.567714068 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.577082522 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.564128006 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.561975407 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.354760631 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.592145888 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.569890501 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.546021021 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.563791608 seconds)
  done (took 35.815487003 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.064227319 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.91810969 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.416852824 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.59713031 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.564327586 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.564078343 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.018312022 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.577429527 seconds)
  done (took 30.146555832 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.568408725 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.568638895 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.5699685 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.57005458 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.57159171 seconds)
  done (took 9.273260568 seconds)
done (took 1366.57133248 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.569089428 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.571630358 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.571415983 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.569346184 seconds)
  done (took 7.705942661 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.538290629 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.538323342 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.538197038 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.553391529 seconds)
  done (took 10.593360896 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.419857727 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.294891431 seconds)
  done (took 6.140187827 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.087675839 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.094167445 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.088265485 seconds)
  done (took 7.694251678 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.863578659 seconds)
  done (took 3.287920925 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.524976173 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.562045545 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.2611769 seconds)
  done (took 8.773154171 seconds)
done (took 45.621264481 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.554670122 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.811140306 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.712866687 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.557338238 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.717684203 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.713085452 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.31815835 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.572526412 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.568002953 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.565215602 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.558604205 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.719889911 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.373856767 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.811451243 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.374159477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.810167338 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.721077591 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.56912092 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.558872601 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.579249071 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.322897211 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.559561567 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.570295006 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.558138311 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.721381582 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.703581673 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.557813788 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.837059435 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.572232806 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.558409094 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.707399077 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.561028611 seconds)
  done (took 88.823463187 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.575176436 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.559773936 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.580226916 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.580018306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.558192401 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.559759789 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.590165028 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.559658659 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.558429439 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.55928602 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.55983386 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.559829299 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.561788382 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.580436819 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.560100114 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.58059069 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.575287352 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.560693309 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.58156924 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.560489836 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.574261515 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.570794335 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.571795695 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.573648672 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.566335853 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.562878482 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.580727012 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.572104447 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.561181456 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.562527234 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.562921984 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.569963818 seconds)
  done (took 83.618398678 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.57662067 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.561234678 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.570987226 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.560098241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.562875573 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.589623834 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.563461333 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.568014123 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.561056257 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.562948937 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.562801299 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.577548783 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.56221399 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.562872366 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.561250517 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.561660118 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.56094017 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.561607573 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.580483625 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.561139141 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.584429804 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.575196488 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.575579408 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.577375879 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.563618511 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.565384684 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.584227593 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.577906794 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.577230071 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.562881285 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.564766451 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.582163747 seconds)
  done (took 83.651091664 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.80436246 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.579230833 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.580556114 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.571548657 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.580096368 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.578517975 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.570242954 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.811306631 seconds)
  done (took 16.506344337 seconds)
done (took 274.024038454 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.571038221 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.166913149 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.604131877 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.571564806 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.610050986 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.597459008 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.817954441 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.596939997 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.824047056 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.610758959 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.587811352 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.590990262 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.5140588 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.732001872 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.514570485 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.578711736 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.581837169 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.565650678 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.237334245 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.888125269 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.602435372 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.579821703 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.504356825 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.590860794 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.548811583 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.664982088 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.687243932 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.815889383 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.752594453 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.662444323 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.175238929 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.576876728 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.574324456 seconds)
  done (took 71.93100177 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.572519016 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.581241889 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.582320215 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.579498023 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.580614497 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.581081474 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.57395252 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.583339219 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.583139671 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.579485076 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.583198101 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.58096984 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.581387264 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.582490593 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.582941563 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.56031361 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.573172696 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.581550324 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.572699565 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.559649348 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.581542715 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.581660129 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.581107653 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.582342538 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.582373159 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.58331994 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.582494065 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.582435659 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.58266114 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.58245607 seconds)
  done (took 48.813702447 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.584238991 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.259016837 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.439578265 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.588129929 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.57686426 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.583307147 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.926934831 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.58481955 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.579750952 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.581144216 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.13994633 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.585215528 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.613456081 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.444830776 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.583679286 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.585364326 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.583833265 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.575532508 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.26594759 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.591196785 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.922989105 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.586099924 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.924278276 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.585257854 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.581033622 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.579348181 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.58309971 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.464329385 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.602167283 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.14781684 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.555742202 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.932340023 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.411594657 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.505024208 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.559860203 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.592864996 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.584403518 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.165325325 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.585175764 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.58054093 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.931423126 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.581519881 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.444887255 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.297788429 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.605838027 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.589803598 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.4977791 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.15700787 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.879855883 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.584839703 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.485842497 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.586253729 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.588374598 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.580664978 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.879214671 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.583595093 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.57876682 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.58171474 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.5899921 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.936793954 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.594417863 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.581483804 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.267377841 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.586240738 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.263671136 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.586764971 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.586217574 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.583553214 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.456366837 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.588468195 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.314371434 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.609517702 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.590550412 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.140111241 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.269182251 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.546812199 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.584762233 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.256527663 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.412719407 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.945805708 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.586458288 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.448750098 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.949386793 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.586326902 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.593570242 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.593559216 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.59035846 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.656042418 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.923596545 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.2529609 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.306699051 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.549309667 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.930924347 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.590032698 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.584627598 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.548031831 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.590379066 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.591233392 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.452707748 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.31668549 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.609488838 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.590571322 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.299860628 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.610776129 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.931077349 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.58741084 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.504645184 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.590460046 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.656737707 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.591178773 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.59062219 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.587284276 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.932235268 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.587806965 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.59291885 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.286247683 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.176314328 seconds)
  done (took 221.658681826 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.575631336 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.577186061 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.588410357 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.576805772 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.580236951 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.587805427 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.582459702 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.576538721 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.584516756 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.579426154 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.583352022 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.588762445 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.585513025 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.577124895 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.581778463 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.581167661 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.581122379 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.602840514 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.578366422 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.58122615 seconds)
  done (took 49.093663637 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.591326583 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.251852093 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.237695591 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.597037949 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.592106673 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.585131373 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.656522368 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.600177036 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.59377832 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.957740932 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.803018297 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.599513952 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.594707977 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.595183369 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.239204304 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.571744482 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.963009199 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.288342707 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.597038758 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.280462381 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.576186711 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.594223983 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.58457875 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.287424922 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.97543105 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.944020232 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.663478333 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.292700585 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.601761047 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.593850286 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.284261106 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.601566302 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.587061244 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.27858063 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.598808059 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.607893592 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.592538301 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.659260773 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.666199816 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.952218283 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.2964742 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.958236988 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.611623247 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.765905081 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.595928609 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.569709088 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.274035803 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.592540985 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.572016647 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.597545985 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.601901135 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.253846884 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.596452112 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.255716955 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.601563984 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.596909814 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.273083463 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.258914437 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.25188985 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.805021742 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.58985605 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.945444134 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.600843365 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.270320871 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.600152517 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.597292291 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.597504877 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.807134453 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.294952773 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.950301725 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.971690596 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.971629083 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.601598214 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.671432086 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.602434914 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.967599438 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.675973542 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.01940155 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.967242632 seconds)
  done (took 145.616998976 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.890848072 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.72691531 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.045278898 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.247661462 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.161706878 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.741590887 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.72678552 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.863550987 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.590491275 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.68767063 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.345758073 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.70536935 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.410943982 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.670348645 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.721250985 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.736877281 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.047466234 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.592332499 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.299384206 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.321704242 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.589967621 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.707037268 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.134595971 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.817474134 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.592367312 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.183718085 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.60783642 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.174427496 seconds)
  done (took 59.788261552 seconds)
done (took 598.332655701 seconds)
SAVING RESULT...
DONE!
