cset: moving following pidspec: 8720
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.391605099 seconds)
loading group "string"... done (took 0.503200186 seconds)
loading group "linalg"... done (took 8.377527063 seconds)
loading group "parallel"... done (took 0.173978928 seconds)
loading group "find"... done (took 3.04037511 seconds)
loading group "tuple"... done (took 1.943518467 seconds)
loading group "dates"... done (took 1.47769592 seconds)
loading group "micro"... done (took 0.195270327 seconds)
loading group "io"... done (took 0.529119269 seconds)
loading group "scalar"... done (took 49.178646808 seconds)
loading group "sparse"... done (took 13.348810012 seconds)
loading group "broadcast"... done (took 1.256250992 seconds)
loading group "union"... done (took 9.052519208 seconds)
loading group "simd"... done (took 2.978913611 seconds)
loading group "random"... done (took 11.149375297 seconds)
loading group "problem"... done (took 2.176868998 seconds)
loading group "array"... done (took 24.624089529 seconds)
loading group "misc"... done (took 1.092116499 seconds)
loading group "sort"... done (took 3.675867877 seconds)
loading group "collection"... done (took 18.946764598 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.595237171 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126650826 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.199579121 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.277140617 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.226923518 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164273503 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143344926 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.237966804 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.571378035 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.199881267 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137104707 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41890067 seconds)
done (took 6.024192517 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.249687704 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.239467265 seconds)
    (2/2) benchmarking "String"...
    done (took 0.163040949 seconds)
  done (took 1.072104331 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075322207 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.155177466 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.106041142 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092898811 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091425375 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107088667 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092158047 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10748589 seconds)
  done (took 1.423676121 seconds)
done (took 3.494228611 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.494391458 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.862267519 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.497540193 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.140779175 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.306595279 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.290686346 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.26712713 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.194598611 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090413028 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086916983 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170445476 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.406935828 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.377132405 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.955729289 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.087089664 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092651082 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.127062212 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.749195568 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077345435 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108662209 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.50145006 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.187513807 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098210745 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.119557258 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184626035 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132587373 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.158047626 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100346528 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.665137017 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.129899243 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.177422006 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096247777 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.155913441 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.184121084 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.189097705 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10848818 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680972639 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198073362 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098585777 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098641887 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677477465 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.114801869 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.178452734 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.101129659 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.086434719 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.178681092 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.09888445 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.091279536 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093222661 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083738598 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.157746096 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.440402101 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103717293 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.165848779 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093294394 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.680077872 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095086408 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.268074255 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.130293675 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093939077 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089362563 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.08675887 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.151684557 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093537149 seconds)
  done (took 19.710173146 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.143716297 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.161834201 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076164033 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154637783 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121159798 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079015503 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099061073 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07694462 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107326894 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.193008399 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135449077 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.148361163 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090014551 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089968102 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126847676 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246768681 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.111730277 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121344239 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090331222 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090084843 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137026944 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094351485 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087801248 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10594886 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168043587 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202345541 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110852053 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123768632 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091069848 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095500548 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140534687 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144960384 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090155632 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088010979 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169678143 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123797363 seconds)
  done (took 5.126715643 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199072633 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120049544 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.220246621 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.192909994 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130386179 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.179182115 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148913445 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.267960117 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.19947438 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178087379 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113310382 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111986363 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078505563 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.115019044 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097244495 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077534304 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.43786966 seconds)
    (18/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.173993008 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.163018869 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146579329 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.158159578 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111100196 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081455766 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082651766 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097743141 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093615902 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.118174211 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.320032231 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.196982914 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091151297 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.129405095 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08191572 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117206865 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112188903 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209625259 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122707846 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136828784 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092120252 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.09916633 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.205497321 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11594064 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080720511 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096457238 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078258898 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.113969142 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130662651 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.1138429 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.105795021 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.121518318 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.217905784 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086285348 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.106605336 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.053571363 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193999251 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.120792262 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.081451884 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285888336 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.124476321 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096642768 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.106184656 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.795472931 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128747536 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080011375 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079803222 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108599226 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077063098 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.427602414 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118445025 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.720865235 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079964906 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155033192 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092961632 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.114506727 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084450279 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083586357 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.123080752 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083742543 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094494708 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084019791 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078145834 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102480422 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112091325 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083641245 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094623015 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144250228 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09490966 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120673765 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107431594 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101953368 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083794882 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124859118 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080928571 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086007802 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.160627627 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.094643737 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.130208853 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109075945 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126977621 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099342515 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.248882022 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081579687 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121299223 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099375072 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124372368 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098439327 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079003326 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098910468 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077661663 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078205463 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157410121 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083824011 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077637587 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101970392 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092797423 seconds)
  done (took 28.536240784 seconds)
done (took 54.042730964 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.428617531 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079982196 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079365709 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.096944906 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079880153 seconds)
  done (took 1.508933804 seconds)
done (took 2.229722706 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.314755667 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.185197727 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101301643 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.183486324 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088079531 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.187918568 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.176008606 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093177495 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199976912 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082631588 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.18086015 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08269129 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100068241 seconds)
  done (took 2.72084393 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100438429 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108343159 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100183191 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117252598 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083463253 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100628591 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115990583 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109863737 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099367413 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110182272 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084123317 seconds)
  done (took 1.851225217 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097509799 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10380979 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098977215 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11341797 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083500623 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095588916 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113952343 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107431844 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097586306 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110986739 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0842794 seconds)
  done (took 1.831644515 seconds)
done (took 7.122357898 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.065606989 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.114835972 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.163747065 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.204080708 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343904532 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.231360248 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.549022152 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.150820527 seconds)
  done (took 13.692173502 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.163216771 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.108378538 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089672267 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089031973 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089295268 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.110054492 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.091995584 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088923741 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.107394503 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090437759 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.092730487 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.106691966 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095520462 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09326203 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088837807 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.105753455 seconds)
  done (took 2.396093195 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141596923 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.137118144 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095382864 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097136279 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.111003015 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.097141081 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099258076 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.112036616 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092314713 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093210628 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.114566665 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.096486948 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095038631 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091226333 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.111752178 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.115774039 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092937829 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.112199413 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.112635325 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111134824 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.097379023 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.093874935 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.110829717 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097451741 seconds)
  done (took 3.335550939 seconds)
done (took 20.150013357 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.145502033 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097837944 seconds)
  done (took 0.971952883 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.138237494 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.152974439 seconds)
  done (took 1.024697371 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109264494 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.087262032 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133145535 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101127233 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.088553454 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10355824 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114697587 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.104218579 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.089586289 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090393181 seconds)
  done (took 1.757274545 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092433823 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093084797 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119508553 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.133001679 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.097076322 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.108109752 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093711531 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091792964 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110434027 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.088328245 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093236855 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.12303404 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093242797 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121262466 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094799284 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094639726 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113609534 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093256 seconds)
  done (took 2.58972457 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089690477 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090388334 seconds)
  done (took 0.916963206 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091950389 seconds)
    (2/7) benchmarking "second"...
    done (took 0.088684174 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090781147 seconds)
    (4/7) benchmarking "year"...
    done (took 0.106561605 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089645392 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.086992907 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103377999 seconds)
  done (took 1.394994499 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.59977103 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.259182124 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.353877932 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107337572 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.140089952 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.343795939 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.142586166 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10270416 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101200471 seconds)
  done (took 2.919946633 seconds)
done (took 12.309915897 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088890124 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.221511051 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.597018138 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.110150364 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.087505633 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.154522156 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.278836304 seconds)
done (took 2.281406155 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337260395 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.140744973 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080527323 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090092981 seconds)
  done (took 1.385752679 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080934106 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097522704 seconds)
  done (took 0.923013059 seconds)
done (took 3.053333989 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087509342 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.118564055 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.103195378 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086630609 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.085538056 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085151728 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.103210731 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.086187551 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086094433 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.084809286 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.103847738 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.087284863 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085744896 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.102891379 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086238367 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086965218 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08611392 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.103032405 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085986922 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086172212 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.102367011 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087247583 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08618755 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.085804668 seconds)
  done (took 2.979724663 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106085524 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.088913804 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.1061053 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091608253 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.090750345 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108039472 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092257284 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.088085351 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.107719164 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.088985182 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091161265 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.090327512 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.104578152 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091105931 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087747581 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.106712783 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090577068 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088374409 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104782499 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091932757 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092322776 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10541782 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.091303038 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092774528 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.106375176 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092148859 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088633407 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.104091669 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09126629 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092435571 seconds)
  done (took 3.618796933 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09564061 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.084413981 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08627043 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111570343 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.083800967 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087120923 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.099673637 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085838449 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.088056593 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087751084 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.104701456 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087072053 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.084920406 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.105188233 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089204471 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090051435 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095617449 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.101559234 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085255171 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08872089 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.107305193 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084684884 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086742581 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.086967508 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.103530355 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084218027 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087239528 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.102911616 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089349199 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088505005 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.088687614 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.106959973 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087823316 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096024858 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.106723388 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.087451407 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092497488 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.100542727 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.088914408 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084006577 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083286283 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.103542914 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085547164 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093600634 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.104334717 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089476561 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08498523 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088193296 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.105162695 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.090376748 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083562444 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.100457487 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091960529 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089358057 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.090244885 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.101105162 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088959253 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084107235 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.10338456 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08709492 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085215477 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.0840086 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.108282605 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089699491 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101383606 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.109706727 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08564854 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090504031 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.104179006 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094258349 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090042464 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112305112 seconds)
  done (took 7.457852796 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099761756 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096712794 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087654532 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105636366 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088394189 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087946574 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108841679 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088297492 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089049364 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.109728675 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089164143 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089201379 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08943981 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105697329 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089470273 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088486231 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110057207 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088993005 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.088075398 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105056138 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089560456 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093360652 seconds)
  done (took 2.839420697 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.233037986 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095085662 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136385873 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118822263 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106498132 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117796058 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093005482 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094155917 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109024772 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101601561 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096834243 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108693767 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107046619 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095561877 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113427334 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09861251 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092166605 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.116754208 seconds)
  done (took 2.788913486 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10243061 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.089669774 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125638314 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090653668 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.089962001 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093013759 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111755006 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108463769 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.090424475 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.107372149 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096151196 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090108291 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.107192563 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091525194 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090188981 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106631504 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.090786501 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089822522 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112438934 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095662401 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093718974 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112738098 seconds)
  done (took 2.942967533 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10334745 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089432785 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123052832 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093588651 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090098167 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089366065 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.111689495 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.089768776 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.095824795 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.107814414 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091065943 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088013329 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.120847712 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090507204 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.094417368 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106956326 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091780964 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090239798 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105391284 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08982146 seconds)
  done (took 2.720577028 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.166987771 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120844563 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105692964 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111986436 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121931532 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104716138 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112269742 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122535174 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106855146 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132515782 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106141424 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106182512 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130916675 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11029829 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105504847 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130468801 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114035092 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129866966 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.1063852 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10589205 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134407356 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105844389 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129759474 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10691241 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104673464 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122618934 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105608773 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110564265 seconds)
  done (took 4.032401785 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090046789 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089741394 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088108379 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.104705492 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089963206 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.087766121 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087538274 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.10623924 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089381264 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087665584 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.105786611 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088869709 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088604307 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.087412157 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105778372 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089121821 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089003827 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.104279073 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089392442 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088610293 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088654219 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104970311 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.088651104 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08785246 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088384339 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.105395209 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088848878 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088052886 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105309876 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089348361 seconds)
  done (took 3.557128891 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.101194522 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099243619 seconds)
  done (took 0.963664461 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.09816875 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102063491 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088080625 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107155693 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096616362 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088315531 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114851879 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09548847 seconds)
  done (took 1.554698387 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.138646242 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.157151718 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094091225 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.100675163 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.158500873 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.148116706 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131418547 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093096738 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104819141 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082465926 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.132002541 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.100327994 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090731722 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08738282 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109053833 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096712781 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.091543403 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.116836195 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.096915614 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.091065211 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112547649 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096719971 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091597575 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.119587222 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085137446 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091579602 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112124388 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100930166 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085909124 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109864049 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088355342 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08991975 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.110264553 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094448385 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091038082 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.157720405 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097164579 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08526127 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108206565 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095410764 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121619853 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.107894118 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091131914 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.086493839 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110626251 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.094189885 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.093255468 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.109222533 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083860665 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085631358 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.107906379 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085982524 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.088967421 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107142654 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091241865 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095837691 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.108473391 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087479073 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086856194 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085189355 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.10634916 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087137941 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092289217 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.110530763 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09091519 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090606171 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107538865 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.09019789 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09100133 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.108118166 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090133392 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104276677 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109314195 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09510108 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094793766 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.108395513 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088609465 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094965466 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106063659 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091669679 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.095222019 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.135968341 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093037388 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085599053 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102775899 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097741275 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09248608 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.092635565 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100651379 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099031297 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.092523322 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.109531531 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085001848 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088982087 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103553544 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.095034612 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083658836 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10682299 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090885271 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.09472351 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093451068 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106322879 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092323656 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094499463 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112711204 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.08966429 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.151149956 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088711571 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085362201 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.110342852 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094709829 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084711441 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089554513 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.107653674 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088860269 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085838494 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.113486612 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090446403 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.091237297 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.111210332 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092756464 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091962061 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.110082338 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090324275 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08677929 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.093188875 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116435569 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091630256 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.091178258 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.108984467 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091582408 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089599718 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.111799374 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088631417 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094577816 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105438146 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090670566 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.091521329 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.11174709 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092626572 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086083323 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107344652 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093532407 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090286532 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.092408009 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110477727 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086047612 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083249802 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109910826 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087021427 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.090207311 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116586079 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.0865748 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.092108542 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104724802 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099202884 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087435428 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.112718829 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093487693 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096809039 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113419667 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083874764 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087607414 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09163414 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111579429 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088410079 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.092101048 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.110253816 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098577246 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085241924 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.111927959 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084963392 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087666847 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.111245266 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093413676 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094540121 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086443443 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.148991398 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101925481 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095291692 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108037395 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090609683 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.093444792 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.109098075 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094356883 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095525692 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.112724642 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088445742 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089074561 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113271771 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088365246 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.092589534 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106348905 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093515395 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083815419 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.091671837 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102137896 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095903014 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091967174 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.112893645 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096038237 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092821349 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107169873 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100834705 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087185583 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.111844334 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085289357 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09514274 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100922172 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.115651381 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095556183 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092111261 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107584277 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092505353 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097419346 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111013411 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092257514 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.091158342 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102723122 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085503572 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.096259111 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.092440535 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104335941 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.101447117 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093055821 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111865721 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089104988 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083065816 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.113102711 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095139378 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086672879 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110856145 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088958367 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089782966 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115944971 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084527766 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088856432 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11005289 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.09621596 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.091048353 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107643061 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094479973 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097075649 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.094299709 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.11129201 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089994503 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098985153 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106686087 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092697579 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088186311 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.119896668 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08618412 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.092284579 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091090116 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106384423 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087513809 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094912482 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114667896 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.096993129 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08994633 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.113046522 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.097339308 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.097286754 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107144192 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097471758 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086834145 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101771635 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088867259 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083898346 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.092754615 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105695791 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.09596244 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08957036 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107102977 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.095236414 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093436446 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107250429 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.09686946 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101857737 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104177286 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08449651 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089902619 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110424975 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.089464556 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087643376 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.110044025 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0946832 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.095421476 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110722082 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08943483 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.092856776 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.097951339 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107866359 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.097706752 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.096821979 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.115673417 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08811309 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.094693544 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106581812 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095906524 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085590969 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.107133168 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091705569 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091141456 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106626421 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092207168 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088673985 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083801075 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108135094 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.097880549 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.0904243 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.114304866 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091703169 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089974891 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.107513164 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088593453 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.096477675 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.108624707 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098687877 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.092182968 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10284487 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086911304 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.096593883 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090676895 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.116522592 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088284803 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.094693439 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116563928 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097586636 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093352494 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.118539452 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102282067 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.097917487 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115872374 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087407483 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089769389 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115134839 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092424838 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.094972624 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.093765149 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.106100611 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096235604 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098442689 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111623385 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.091332572 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084993026 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.110803867 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.099580984 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.095170256 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094959113 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.112464868 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093932281 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087530618 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113892563 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.098802113 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092716175 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117027771 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092738731 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.095123042 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.108029214 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099043792 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.093519343 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08600293 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.105265979 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090492843 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.096977059 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.105324304 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098031012 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.097289022 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10748021 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092455815 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.096599024 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088109528 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115448219 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097102898 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089768276 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119917563 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094367435 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089797714 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.11441709 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.097783316 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086082383 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109504736 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093219843 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097783607 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.10888301 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099666921 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093155421 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096229511 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.114065891 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.097189069 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.097169475 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.116017627 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087167273 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.097937277 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.1147877 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.095939795 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089650051 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109553288 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08957861 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091108401 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.098138331 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108971786 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100684892 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.09776395 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.110020838 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091199268 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.097185318 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109923118 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100133009 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089070179 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112684888 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086948114 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095098904 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.109273165 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.099601732 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08892223 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103984304 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098712098 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.09695371 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095488375 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114217946 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.099351772 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087028759 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.105853071 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097082693 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090469546 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121152535 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097680966 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089773207 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109485586 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095920541 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093648653 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097520586 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.105879068 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090119552 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092891397 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112926387 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091109053 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087515743 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.115877699 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091949669 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093326935 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111613788 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08887548 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092010878 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.116816628 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093016494 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08821951 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.089079033 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117476184 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092503634 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089753329 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.10652289 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0993587 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094417124 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118671902 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090691481 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.091987808 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.109979789 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095415682 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101798591 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.109396217 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094307169 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091252715 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116274538 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099877403 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086013855 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089647086 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121611176 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097192323 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.093931174 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.115199844 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092822597 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098785086 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118791697 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096191973 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087736944 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.106639646 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094562883 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087203964 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.093803677 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118443674 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092111672 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.09015837 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117343407 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098216036 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.095284533 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.113903536 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089018503 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098894765 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.108642705 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09653631 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087698284 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086825126 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.115961743 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099239368 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092252072 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.112752325 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095748975 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095316685 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.107140735 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091892071 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097322098 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115153512 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099369058 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092858256 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090866436 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.114610325 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103457335 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094475177 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.1105951 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102242682 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.098526484 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113077944 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092480719 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096014266 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.119524153 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096782476 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.098583349 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110312979 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094109062 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.099736149 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.118675499 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103584885 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092823275 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105235267 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099236341 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090354459 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087396258 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117176517 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100852132 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.099774545 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.112866172 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091415928 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101589831 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117681386 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094090846 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090874445 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.110363646 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.098393476 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090766929 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.115322851 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091916294 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.100130305 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.09901825 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119401068 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.101591472 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086807987 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119526495 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096083778 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.100387026 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.114979803 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089648274 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087614257 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.1150639 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101277053 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100082098 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.09656808 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.117136316 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.098500084 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095037593 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113533125 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092283795 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.100006302 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.118126015 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097097214 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.095649661 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.111754412 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096391864 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096546998 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.099959685 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.119668181 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094961018 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101957777 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.119791081 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09260704 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090228944 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114477695 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097545306 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093881741 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117354136 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092677543 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088451469 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099267716 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.120519547 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093310292 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099708663 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120623615 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.093589862 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097238732 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12072887 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100231615 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.094698758 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113748835 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098014457 seconds)
  done (took 60.079695501 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142054609 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102411298 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115635148 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097126033 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112871974 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118634721 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096516176 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096703265 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117207549 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106986758 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09589556 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114659415 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112085288 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115944712 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132626891 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105944413 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115208408 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098537486 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095981413 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096345902 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130008634 seconds)
  done (took 3.13826268 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113516871 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109721776 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128161706 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110605986 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102017477 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127168965 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.106961146 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128412736 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110861991 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10371853 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130623484 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107006121 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.1239362 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105926421 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104447398 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124979133 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110378236 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102450165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128884203 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106767703 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12459634 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109416266 seconds)
  done (took 3.335682955 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.128012879 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.098915657 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093943975 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.116004885 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099576846 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096131856 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118533934 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097994401 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.104679997 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090397913 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107964996 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.092150768 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.093747603 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115482878 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091826469 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.095767874 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.123182493 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.099951144 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.100458983 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09590171 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10784383 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097156674 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097131259 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.106975872 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.102007463 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.100929967 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.095578467 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.119778059 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.087799396 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.09892936 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.115728028 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091844454 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087925717 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.08655453 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.108139086 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100147681 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099284452 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.116612687 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.097928365 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087238936 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096643113 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.119865054 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088361108 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097006922 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.116003466 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091689896 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.098833392 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095608882 seconds)
  done (took 5.690793823 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126589292 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160479217 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099589951 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.134044245 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131957419 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.10623464 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099396519 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.134576745 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099574221 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.12062835 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112456544 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110101678 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.360705825 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.103531851 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102079479 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125296478 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102645817 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098109961 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126004587 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100855844 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104650581 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.123966278 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.109322403 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12901132 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105095665 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099629271 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121137562 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106109391 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.10889751 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125592287 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.103430541 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103621244 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131656528 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.099487629 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099521843 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.121786976 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113575581 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.12124757 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103038942 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.09867956 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.100059716 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123122148 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.101559489 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13115909 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101950881 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.101930039 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121034413 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.098968932 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.108550746 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121533597 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.106875296 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.108964622 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123282817 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.101166887 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102592113 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.130966374 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104099841 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.099159566 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.122713593 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.108771175 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.117972139 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103824745 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.110157201 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.119942965 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107796223 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.109135688 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.121893522 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103392416 seconds)
  done (took 8.854503019 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130124605 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102733652 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132001973 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112102451 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10259383 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124357315 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103467914 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.102700848 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124965107 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109497559 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123185526 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.195312538 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.121188402 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109758172 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102514494 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125230917 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105071398 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10370919 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125449392 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104741202 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104329142 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133470848 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105282142 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131567307 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115908384 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100609773 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124899026 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105252833 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112166053 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124363022 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11432426 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.12522908 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106076525 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11252552 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137092395 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104776156 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098453463 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125370637 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104803572 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104529079 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.122844149 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11183574 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124893209 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102937687 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104178619 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12467666 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115521996 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.11513229 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128441883 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110300274 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.104286069 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.133595552 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104371164 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123355446 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113931396 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.118104709 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133901411 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111813626 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124041803 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11303939 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111863421 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138975134 seconds)
  done (took 8.075261872 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098740077 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0972815 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096797134 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118093206 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098859657 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097114347 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09785529 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.117759536 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098108874 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096923268 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116741925 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098970649 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097256908 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097088511 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118320353 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098805019 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097454348 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117411573 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100324115 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097817642 seconds)
  done (took 2.889938038 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108379741 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114573509 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.119829156 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106985476 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.099727389 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126479674 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.100842312 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100407336 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099399685 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121581268 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108971745 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127836741 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101142295 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106411785 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127379088 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106133513 seconds)
  done (took 2.611791336 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118745672 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116218289 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.184317976 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102050359 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121986955 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108572764 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100143773 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10156086 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.121447376 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.10640641 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103686478 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.124463144 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100828893 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10201935 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123106031 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105371858 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098165168 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.124478535 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103288388 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.161210458 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.125784281 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10176289 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.100584144 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.124236532 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.100376815 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.103873707 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.128672022 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100437293 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100304346 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.121806184 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.101694151 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.106032132 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.120202822 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105052183 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100216332 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.121086568 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101941023 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10022378 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.122914107 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101741006 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102601691 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.100541627 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.12106393 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102591458 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.098875278 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.121529809 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101015233 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105831739 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.121364927 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103584064 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099875656 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.127214115 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106181558 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107547311 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.127505306 seconds)
  done (took 7.002408579 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111200681 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100960641 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.131755251 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100205933 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100818024 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.100895872 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.122577304 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103556823 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101314653 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.119486021 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101776586 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102382815 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.122694982 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102627085 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100995279 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122820001 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099591416 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.100999638 seconds)
  done (took 2.784165722 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106902401 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09942686 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.10370562 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121435143 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101006284 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10003979 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119965457 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100232961 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098702898 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100408988 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123076206 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101501436 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099426786 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122479238 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102466993 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099622959 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121126474 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100992853 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101018513 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098356512 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12259664 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100618207 seconds)
  done (took 3.188780619 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112756145 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.181050313 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106265409 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.188649207 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.096702647 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095231972 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127352107 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097772611 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112487424 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.116634312 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.095771137 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.094511652 seconds)
  done (took 2.27067605 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126332057 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136404238 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121115128 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100594719 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108569167 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124906788 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106346574 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103717421 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134149334 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116350697 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125884227 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113829174 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111550882 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132710794 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10911874 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12959754 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106636421 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104555304 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121431076 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120484134 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105442051 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132536514 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105150008 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104257149 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126010916 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113186579 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132469123 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116894332 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104510992 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134488298 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10833883 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103978319 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135201622 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116121005 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122941186 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112792069 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104109733 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140688991 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108493129 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13390467 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101577184 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108447932 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134341793 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112298484 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132692074 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106980141 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109887845 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126115176 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106621783 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125448383 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131679469 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113613054 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131228125 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113668458 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112418802 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148122454 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116908993 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135111652 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109152588 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137769768 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113584657 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109153304 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135824917 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11717167 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130421018 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113917443 seconds)
  done (took 8.69906079 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142489476 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102673735 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126374395 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118717353 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13484557 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106509744 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106421833 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126144264 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106840177 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103750752 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167945352 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105745612 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113732761 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135229685 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106241494 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126045789 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107595243 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112933303 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123083352 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127684557 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125529838 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116267917 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112701805 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134913112 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11757483 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130355515 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106693241 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106546514 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12629543 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107687492 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110329642 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128158698 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114412807 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102591912 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134903419 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107531532 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106003922 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133336027 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106772238 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131432442 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115345682 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120688594 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127017794 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107018821 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137525854 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107441028 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106102044 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124130344 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108194774 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102334017 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139117127 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116580285 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139565985 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115746009 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105251449 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127632958 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107076551 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10486834 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128412618 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110429029 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113644715 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128434838 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126168819 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128201797 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107292839 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113822422 seconds)
  done (took 8.682933906 seconds)
done (took 163.504687291 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.145634601 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.182257636 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.142499865 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176267042 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092675121 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127028719 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.14502233 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.144035885 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091309458 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.11466231 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092282571 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094227464 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.18168734 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094224086 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09152325 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.093088078 seconds)
  done (took 2.855655627 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.189344077 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.300990728 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106344524 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117155317 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098937301 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096191274 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.116489305 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099357776 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096966974 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.123910806 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.097356784 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092075911 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122079918 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094101409 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096094119 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096750617 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.124898724 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096640141 seconds)
  done (took 3.025755301 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118324949 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139566416 seconds)
  done (took 1.118074975 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.127364959 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.207924693 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276043785 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.164616087 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117516622 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.135865906 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.145223614 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131110644 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.185562454 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130583696 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.109674773 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094219085 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143587466 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102808037 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111152463 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118046428 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125868265 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.131191069 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112098593 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098796824 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140791582 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10195336 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102437584 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.132446234 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.176762134 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.130352869 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10214532 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.099628774 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.119674803 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111434873 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10232027 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136656647 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110101061 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175542184 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100195734 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.172667955 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103675876 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119787866 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112562674 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09817449 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123320891 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101961253 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129724396 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096501343 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102248768 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.103089848 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.123506492 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.100266198 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.125213879 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.105674548 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.104668934 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.125061578 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.149040951 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126546945 seconds)
  done (took 7.692578042 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.85192416 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.138734467 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097900871 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.993467711 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146551289 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11220465 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.845816792 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142972487 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249194712 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.875149842 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114520924 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110095876 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.254089864 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.253844955 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.26132651 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.37376386 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.690309619 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133164816 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.125957878 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161025589 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105751014 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144851378 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119930923 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.51326334 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099059402 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096851373 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128001069 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110768345 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174395363 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098103423 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122227083 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173240781 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.288374068 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204377546 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118787701 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09850884 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098889096 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.181029479 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263694302 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213932577 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.191866641 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096742551 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097787601 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127878841 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118529538 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095352915 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177313938 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189449091 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.186896501 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103833604 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110770937 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13171156 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107589637 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.173776081 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095232781 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.354129911 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.378622575 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098714219 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10520661 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.13601878 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263102866 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099124063 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228643071 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147258776 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.20926984 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097364781 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820607887 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.181003317 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097961732 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12615385 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105591314 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103421021 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12824641 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165862563 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.494252321 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110406108 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124795733 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099040913 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229941414 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098761424 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119225921 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.154831185 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122523194 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106955735 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134035626 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11230853 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187009102 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.244711746 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133625824 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108185895 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125143948 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113280579 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099454148 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.228303817 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222054078 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.172069849 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228846035 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107505362 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.17799098 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.181169473 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105922023 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186565244 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106687798 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136521979 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107378533 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217844091 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154347488 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103608326 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103168794 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129852592 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.134234071 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124677293 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108712727 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184609678 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.548450062 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.15931326 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.11811885 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103234536 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107097693 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.175847209 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127243458 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256656031 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109136631 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.182234018 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106693899 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095506708 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130743321 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.175558531 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109473663 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105997571 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129440163 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107859195 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.277153541 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217659184 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110839871 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245009697 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19786943 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105984363 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189368162 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127389782 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162930445 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130843171 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107558124 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099413173 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813214054 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135372865 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10630541 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125096335 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182307808 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09772172 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123983164 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098256033 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095537345 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804887354 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123737354 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098283392 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100554706 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12872801 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108116139 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106901517 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127419271 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175293078 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240714781 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111201331 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126389586 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100445457 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.174998776 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101377454 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099154437 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.120887483 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10139165 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107489612 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.124703771 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102748815 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188443919 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.150346458 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.245416275 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.647859311 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100438854 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098968263 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237025012 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121504527 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319856471 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107264682 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228768581 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182304662 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096574224 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.376822424 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.160298463 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205470216 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.101273324 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.187720966 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096557559 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131412505 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.152258294 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121265636 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106551582 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175131934 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11364769 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135067452 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.272418991 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098500733 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247897408 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09691965 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.185573235 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099238815 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131021188 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320224625 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098751712 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140220577 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.153945695 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126668774 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101030551 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.628179184 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099468139 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132426897 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10729174 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228897785 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.180528868 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10732054 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131231582 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111745617 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.177677841 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.226881937 seconds)
  done (took 47.028583797 seconds)
done (took 62.57603492 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260171814 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172058419 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.277651532 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172574209 seconds)
  done (took 1.83644807 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.235436042 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.153292848 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.196110608 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.117937935 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.200950606 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.117309767 seconds)
  done (took 1.907583637 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.170784582 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.16463263 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.140778308 seconds)
  done (took 1.361487468 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.196797612 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211039126 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.319887292 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.228257009 seconds)
  done (took 1.927773594 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.262319282 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113612814 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.122174118 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.201359786 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.214954659 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.196883735 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.120271804 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.165856325 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127286105 seconds)
  done (took 2.455189959 seconds)
done (took 10.372929299 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.281392232 seconds)
    (2/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.331343791 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.28046468 seconds)
    (4/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.345664041 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.196819341 seconds)
    (6/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.195221663 seconds)
    (7/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.189284943 seconds)
    (8/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.178707876 seconds)
    (9/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110644391 seconds)
    (10/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.35771806 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.105705193 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.213619304 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.098582684 seconds)
    (14/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.130879755 seconds)
    (15/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.328589817 seconds)
    (16/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.2927063 seconds)
    (17/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.118803868 seconds)
    (18/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.19411943 seconds)
    (19/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.209536001 seconds)
    (20/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.089177709 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126756901 seconds)
    (22/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.219467143 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.177886092 seconds)
    (24/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.169601036 seconds)
    (25/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.103939208 seconds)
    (26/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.186718648 seconds)
    (27/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.184354301 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.098567521 seconds)
    (29/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.146793351 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.121203224 seconds)
    (31/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107929629 seconds)
    (32/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.129003655 seconds)
    (33/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.106162389 seconds)
    (34/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.163754939 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.139181218 seconds)
    (36/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.101867915 seconds)
    (37/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.076445988 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108233262 seconds)
    (39/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.166706265 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.120298174 seconds)
    (41/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.096386022 seconds)
    (42/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.129167974 seconds)
    (43/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.267376518 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.105393279 seconds)
    (45/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.340326229 seconds)
    (46/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.085238831 seconds)
    (47/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.139104979 seconds)
    (48/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.205369656 seconds)
    (49/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.150350326 seconds)
    (50/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.078131621 seconds)
    (51/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.081159652 seconds)
    (52/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.21473389 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.115062866 seconds)
    (54/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.346769816 seconds)
    (55/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.137568107 seconds)
    (56/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.2323006 seconds)
    (57/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.127233329 seconds)
    (58/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.124818313 seconds)
    (59/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.100811439 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.139165792 seconds)
    (61/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.222815403 seconds)
    (62/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.230590153 seconds)
    (63/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.107678465 seconds)
    (64/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.105370443 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.144523032 seconds)
    (66/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.142546721 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.098820669 seconds)
    (68/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.075452334 seconds)
    (69/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.189346261 seconds)
    (70/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.123380464 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.081548791 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.14279609 seconds)
    (73/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079888569 seconds)
    (74/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.206311226 seconds)
    (75/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083159836 seconds)
    (76/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076578682 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.103348513 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.122866111 seconds)
    (79/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.129372855 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.082417153 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123447678 seconds)
    (82/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.153363156 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098896612 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.103511443 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.144605106 seconds)
    (86/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.080689185 seconds)
    (87/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079876038 seconds)
    (88/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.082981485 seconds)
    (89/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.204661239 seconds)
    (90/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.14773217 seconds)
    (91/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.206091249 seconds)
    (92/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075823847 seconds)
    (93/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.162563827 seconds)
    (94/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.150302544 seconds)
    (95/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.079141304 seconds)
    (96/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.085610492 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.096199546 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.132405236 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.105525271 seconds)
    (100/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.133202721 seconds)
    (101/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.075579999 seconds)
    (102/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.149799853 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124712373 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.106503362 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.123646869 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101574573 seconds)
    (107/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.213778927 seconds)
    (108/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.133707555 seconds)
    (109/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.07942383 seconds)
    (110/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.079217674 seconds)
    (111/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.078443681 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.125669742 seconds)
    (113/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.107934355 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.099191633 seconds)
    (115/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.102239203 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.10276445 seconds)
    (117/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.159196523 seconds)
    (118/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.102625639 seconds)
    (119/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.10829987 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.100507983 seconds)
    (121/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.134830398 seconds)
    (122/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.078881501 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.107976883 seconds)
    (124/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.107510697 seconds)
    (125/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.081961164 seconds)
    (126/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.123781464 seconds)
    (127/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.082431789 seconds)
    (128/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.085112244 seconds)
    (129/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.129823473 seconds)
    (130/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.102826934 seconds)
    (131/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.110239811 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.099589684 seconds)
    (133/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.10314533 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.101258388 seconds)
    (135/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076798446 seconds)
    (136/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.077098231 seconds)
    (137/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.159500918 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102472766 seconds)
    (139/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101292678 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120047731 seconds)
    (141/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.149496022 seconds)
    (142/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.099177881 seconds)
    (143/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.106905604 seconds)
    (144/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.125510916 seconds)
    (145/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.127817011 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.098903929 seconds)
    (147/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.13314095 seconds)
    (148/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.112034513 seconds)
    (149/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.079835671 seconds)
    (150/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.083213315 seconds)
    (151/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.133854396 seconds)
    (152/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084941525 seconds)
    (153/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.077658267 seconds)
    (154/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.076141013 seconds)
    (155/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.184658185 seconds)
    (156/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084013233 seconds)
    (157/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084681969 seconds)
    (158/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.083497232 seconds)
    (159/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.100145375 seconds)
    (160/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.127586714 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.100870428 seconds)
    (162/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.096158121 seconds)
    (163/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.131354222 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.09827493 seconds)
    (165/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.121708371 seconds)
    (166/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.124065792 seconds)
    (167/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.076943722 seconds)
    (168/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.135059569 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.1302954 seconds)
    (170/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.078433842 seconds)
    (171/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.140129637 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121136759 seconds)
    (173/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.106525455 seconds)
    (174/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.080666124 seconds)
    (175/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.077661685 seconds)
    (176/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.078832393 seconds)
    (177/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076280293 seconds)
    (178/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.120436522 seconds)
    (179/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.078467844 seconds)
    (180/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080093807 seconds)
    (181/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.082794687 seconds)
    (182/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.107485185 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.144055444 seconds)
    (184/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077593373 seconds)
    (185/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.075858947 seconds)
    (186/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07649111 seconds)
    (187/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.104913706 seconds)
    (188/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.083841532 seconds)
    (189/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.083247579 seconds)
    (190/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.083901006 seconds)
    (191/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.083544579 seconds)
    (192/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.106072526 seconds)
  done (took 26.016348523 seconds)
done (took 26.908772082 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.20106652 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126270467 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10982 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10795792 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.196123433 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11571115 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.122941675 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.136411273 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118503547 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.107145906 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.122140277 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122146422 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106234524 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.198045657 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11019703 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.125046818 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.10063707 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117146618 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.14678477 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125163004 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.19654001 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101455182 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.116914046 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122167632 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.17341298 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100071998 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.132563847 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109215725 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119408039 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.132662475 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108400201 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098812475 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.147517373 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.123451902 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099204416 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.132298307 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100121442 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084806738 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108384637 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.13505023 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121027954 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.108415434 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.133775129 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.100764386 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.108383572 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.133330516 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100004912 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111766471 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.12214078 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110892553 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10202172 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.147370511 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109340941 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09777142 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.12158769 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102747372 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118855383 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098398319 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.145715787 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100273244 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.100249139 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124225541 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11218543 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100087424 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.131732487 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.10121788 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.108152958 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.137099433 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109956205 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102682714 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099308413 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.132745184 seconds)
done (took 9.632299224 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.105273416 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14515184 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.196591428 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.206091623 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128065868 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112643496 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.138933358 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.122863621 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.110584419 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143342086 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137359609 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.155087294 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.179563406 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.139828937 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115798761 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.111964573 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.134543502 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109030962 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.201946438 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124767397 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12350346 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.141351516 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126916564 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139313741 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.104973509 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134646484 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.131375654 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.112128297 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103908429 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.134643844 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.125164361 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103162766 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.130787579 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123421845 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119807064 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.137989442 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115173982 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112186727 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.128378971 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105326944 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11076685 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.144488729 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105563144 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.113848893 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.138147442 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119214172 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.110330977 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142206033 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107568505 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11135064 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129320033 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131194692 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.115465193 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.146005279 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117262447 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115359803 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.143074529 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117044722 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.107908133 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.141380544 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.10681993 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.103467073 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130543255 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126872029 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.106653633 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.142417726 seconds)
  done (took 9.379182627 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124247979 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.132882229 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139346865 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116519703 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108729965 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123815256 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099153549 seconds)
  done (took 1.779499069 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102046828 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.182903421 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.204691222 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.204858604 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.177937161 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.214692375 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14630898 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100781388 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13453909 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.133773487 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.18123624 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.234322618 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109726578 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.140133782 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.185279769 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.123647046 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.185640394 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.125006364 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114551029 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207688972 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117073764 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.129762674 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.138292038 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.099998137 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.203318481 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101802263 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.26121292 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11811474 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.133497571 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114721645 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114393205 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204262976 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.176614562 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.139927498 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107685706 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.206394732 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.175240821 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13842754 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.216316591 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105380706 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.176291921 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.140289839 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114813208 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.114676593 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.140563678 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.166805932 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.144831777 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115399832 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.113119404 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.21416556 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.10970907 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.205957006 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.111673979 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.139693411 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.1116985 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116153063 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.147143806 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115832152 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.213244492 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118532066 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.204719217 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.180376372 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.204268117 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.207365248 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122889908 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.207559141 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.174338075 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.138996897 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109028183 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.115813434 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.208185735 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113387241 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.13792572 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.17039136 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142558926 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.18291137 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.207664989 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110765825 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.13930967 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104493019 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112277548 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.125532867 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.174178507 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.138541614 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113858479 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118469885 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13816866 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115777588 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.104587987 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.149044409 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115906473 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.111903415 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.144504318 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114554205 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.114641785 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.21067421 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.110360077 seconds)
  done (took 15.382187007 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104492319 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102194213 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.105894834 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128358069 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102769145 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.101866033 seconds)
  done (took 1.601651904 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.13874425 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115402609 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.148673136 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117187263 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158868777 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.2124646 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.214738713 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108970623 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.155594551 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.124603101 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.210854407 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.190661403 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.213744762 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11780748 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.217917274 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.116226254 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.2183697 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113772259 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.148720913 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114450228 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115032924 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.145241927 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113169742 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.205358377 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116467086 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.116715796 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.135219513 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124514708 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.121715391 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.136389405 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118146089 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.135112721 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.13415313 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110306117 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.217766475 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.107439044 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135801668 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11916494 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.116725892 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.140129633 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.190675428 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.137664476 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122474938 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.117815801 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.136473039 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.108832121 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.118008722 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.134153842 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.191872515 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.144201464 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.117530436 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.116532139 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.144139811 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118607953 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.131844684 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112146613 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.118751244 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.21873491 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.117583263 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.133898282 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117216312 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.116624199 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.135705799 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120694174 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.117929842 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.143959358 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108286902 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117290216 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139038962 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.116223185 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.11802818 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.141311592 seconds)
  done (took 11.002654044 seconds)
done (took 40.072222747 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.516280422 seconds)
  done (took 2.46790055 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.87549389 seconds)
  done (took 1.829426448 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.540928508 seconds)
  done (took 18.523009631 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.419520066 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.459459099 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.115425925 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.144743518 seconds)
  done (took 3.092046729 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.815503001 seconds)
  done (took 1.790143684 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.278461578 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258422707 seconds)
  done (took 1.496417751 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.70093953 seconds)
  done (took 1.666261901 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.495600462 seconds)
  done (took 2.451264511 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.279841467 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.236115588 seconds)
  done (took 1.491508164 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.600523223 seconds)
  done (took 1.573910271 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.439534006 seconds)
  done (took 20.415506342 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.251778045 seconds)
  done (took 1.227560352 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.282838997 seconds)
  done (took 1.257579388 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.482590195 seconds)
  done (took 4.459572978 seconds)
done (took 64.702105177 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113048826 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.114966496 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114862317 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138208994 seconds)
  done (took 1.448265808 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.120912521 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116088481 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.118538864 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.141251767 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.120350302 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.114144903 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.140426962 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.116893906 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.113607938 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143054968 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.115752428 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115103585 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.143040367 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115274354 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.112787353 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.143056022 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.119517377 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115308861 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141200732 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.116969203 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117712411 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.141752742 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.119543877 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117778136 seconds)
  done (took 3.957363425 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112647474 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10548783 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108301768 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.130223158 seconds)
  done (took 1.438333232 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125341038 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.126580356 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.149599793 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.122908598 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.126666459 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.150381692 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114423979 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.112214872 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.138948893 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.123421877 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.129431449 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15283876 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.126398989 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116879175 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.151571094 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.109222682 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115448063 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.152326471 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.121633952 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124245094 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.142066458 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12105913 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119342169 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.149829287 seconds)
  done (took 4.100609876 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.188075509 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.126921915 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.171742975 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158813844 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.174912024 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114789843 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.142355458 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.146609666 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.121551445 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116414652 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.144097563 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159451672 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.145400815 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11902311 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115243654 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146780357 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.126920251 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120449091 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.186812955 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.119634128 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.147214727 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129665537 seconds)
  done (took 4.103745409 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.118623232 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106390436 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.101866571 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.13293528 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118414444 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.107969115 seconds)
  done (took 1.672235925 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10685922 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.100709183 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.100791075 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.125619381 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105857966 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100278131 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099095758 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.126943724 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.100970992 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10064896 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.125437644 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101105617 seconds)
  done (took 2.281627895 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.327384072 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107120212 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.13246653 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108382418 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.11067087 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103426005 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.142542781 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105846912 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.261487565 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.10150521 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.129532804 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.190255194 seconds)
  done (took 2.807728313 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197517698 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143538384 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250639459 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363498831 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182031798 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156458924 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.290385596 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18579143 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.172825262 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16002639 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179307534 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183904436 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150376069 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20757184 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135444348 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.181701687 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158515442 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229628961 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163716536 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208374258 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178913063 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170162155 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210687802 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16985118 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136499198 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153768818 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.141270951 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123913365 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187594977 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159153385 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191595866 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145067909 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162683839 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212826816 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221180285 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193374849 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267126749 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153641537 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167518303 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.210500035 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251854208 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138104221 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208917256 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147971334 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152044122 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179006553 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175101728 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178744607 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.157659754 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141132069 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2016121 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172272618 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.195957045 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157237004 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281644541 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155798117 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.138392713 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187945467 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181771708 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222199581 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200794195 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119436697 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198652039 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210672222 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206875414 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.164326365 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159225364 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148634247 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161468454 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226020271 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20242651 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155432602 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223576061 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127248883 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193786937 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189955491 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151781226 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223941253 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164210311 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.142764723 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14691105 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155401836 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12412956 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.183485997 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145212011 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23654054 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128238077 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342232015 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176505802 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181524066 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181068151 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156087497 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185652721 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143425951 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.098908466 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165282452 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156098952 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178125481 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124857556 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176305805 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136255239 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.121817514 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174121548 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119326236 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191932307 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131317484 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185098454 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163150691 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.154502324 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173815697 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170427643 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15861392 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187669095 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185522132 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153517257 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128772553 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236160564 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189756331 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133466256 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192439569 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191289254 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.173025588 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131149015 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185621259 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188178254 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166769142 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191600442 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162049117 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130250437 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.161834001 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166569999 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181148832 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15011331 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150294529 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.160697812 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211000501 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.122438477 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162335403 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176414859 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156190754 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121548042 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132813888 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15879927 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138603433 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.17140471 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136100912 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173826143 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163056883 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186308267 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152415968 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156167037 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166531362 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152019736 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.16570575 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169889567 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11761348 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169739209 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219026904 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124251056 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204857824 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.185688055 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181783553 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196392329 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124809692 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207469448 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123683994 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.145836706 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156076007 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19497795 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158099498 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210210384 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203020986 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.1606363 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184124785 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14331899 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189571305 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.204771717 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152329223 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.167298857 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167114761 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190417224 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117999048 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119562149 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.151420157 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132912389 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151813637 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134078036 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19535194 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160822487 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202788564 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188700553 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135636244 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211041761 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122865102 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152758492 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.198381133 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134568821 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.21063796 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212892071 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173669183 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164386412 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15602892 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.144876983 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123467398 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.128452219 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185125136 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133803258 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158242645 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136718856 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213618059 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166910362 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173175545 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213700156 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159467958 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223672885 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.117987773 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.185844764 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163615729 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191034151 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18015121 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155484019 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.157456601 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.214280932 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138485305 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213487971 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163381167 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202072695 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216981977 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.160907546 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15367373 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145275087 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183196519 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135403596 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158104018 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170059173 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126146555 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174630823 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132992568 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161727606 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177977636 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167318181 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171547935 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.18072454 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18998601 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123347079 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135819325 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200037438 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140456457 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.102792964 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192114629 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216426212 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144785843 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178451024 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167882119 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154580519 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308404884 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209646821 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196558279 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133565898 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134101911 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194917624 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155957192 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185965808 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207417678 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13757658 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228803136 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164492432 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.166441585 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126723098 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142806006 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174167096 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133492005 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.173882622 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.181380441 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.1421275 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204459274 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134202524 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19041773 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17114525 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.168663089 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147427831 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134245018 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243938089 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190970384 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168743709 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.187629044 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.160660386 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206321109 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120754002 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149575066 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.129962494 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180520849 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155891172 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170359962 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194070638 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211560252 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197759436 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159876438 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163031605 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.125980982 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162264981 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173162519 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209524691 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133526979 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.163232859 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185951405 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.151702536 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128640095 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156413037 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298159562 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170447896 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167802893 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104378507 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.293720576 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127216492 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155566967 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157459445 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192553123 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.12817772 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.203804974 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169907608 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163140775 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159345031 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130619761 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205291874 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210721975 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159305048 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193714713 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.16800104 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1578534 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182455261 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169321542 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170185297 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143113162 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181496475 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189639582 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.202530544 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.128105448 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192937632 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16461938 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193623808 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167375823 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163713889 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178428948 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153032267 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160130274 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160607282 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121754411 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15654193 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193910154 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154000731 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171004819 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194273693 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127777106 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124147744 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169642396 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160359063 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163250889 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.125678875 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206478433 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127096711 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205276055 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227169902 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128398145 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161298591 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171017537 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128029815 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161718772 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141009872 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127267973 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.196008478 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175204446 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.15581946 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17185901 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186901806 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158239811 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181309049 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139501005 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.359828136 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.125006526 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216457929 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146892803 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220825515 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14552151 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199570617 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164469557 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174544763 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157401045 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17188521 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.216948115 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186836 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.162324947 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155362582 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138367126 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162260929 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.131160172 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147762905 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192652935 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13613164 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.161626825 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.162232685 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169868699 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.142299649 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164032471 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195608038 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175730148 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178902623 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212676154 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133679773 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199473472 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196800025 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126126464 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.186215514 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167587657 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1680757 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147781891 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.129815875 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.16330434 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205399635 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.151085856 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155949874 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198494827 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163768995 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197241831 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131616411 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202512191 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137516395 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200505742 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12512091 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.176873354 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165969728 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159692966 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126050324 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16782769 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182244646 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.161085213 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166954142 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.172709317 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218298527 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.120950679 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129562755 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296594252 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184874573 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18962311 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.163291107 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132608669 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141531555 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182040526 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.18696419 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167496091 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127539684 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154097801 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.143653096 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.179662265 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139063878 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192240111 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168646465 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183598067 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181379845 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.159028091 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252386659 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166330256 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168231001 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113393748 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.154342911 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137101227 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130278473 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166807611 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207030339 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209617784 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.188929774 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14219039 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160671106 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.123943235 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126303943 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189309253 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146002126 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192376727 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142042888 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.130495841 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137540205 seconds)
  done (took 83.956536754 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159537786 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149181104 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166064761 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220504517 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191037088 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287726793 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226742325 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243296368 seconds)
  done (took 2.719835335 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117238013 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155055856 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.13951233 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.140917352 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.107044264 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.437377882 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.127819271 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.144022616 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159295587 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.146752456 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.131714992 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.497398479 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.145980214 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.115924068 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.142766455 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.106046779 seconds)
  done (took 3.879306031 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.5822977 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536679321 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.40472474 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.287372684 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.254512888 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.197371326 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.735444537 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.193452563 seconds)
  done (took 12.267234338 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.150938428 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.144171029 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.407915254 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.246091277 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.200193153 seconds)
  done (took 2.227771854 seconds)
done (took 127.828175231 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.119786169 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120770659 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119052302 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.149270534 seconds)
  done (took 1.575403607 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.171887116 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.088861399 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.090760834 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115873316 seconds)
  done (took 1.542382197 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.419168013 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088716497 seconds)
  done (took 1.611410369 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.143995263 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132966514 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.160885141 seconds)
  done (took 1.525936967 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.136059896 seconds)
  done (took 1.215720413 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.119034842 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.113269264 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.231361277 seconds)
  done (took 1.546963806 seconds)
done (took 10.09776434 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116950964 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.917665609 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.428681761 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12984799 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.706699254 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.422083253 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.417189233 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171693628 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170121669 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.133048181 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.127442317 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.68445835 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.42876052 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.868872873 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.386283632 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.898825512 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.691144224 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109491579 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.140731992 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109072525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.396853457 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.132573814 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109194612 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.107390494 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.713864934 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.416287045 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.105848346 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.910336178 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106526905 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10974841 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.42338151 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107911757 seconds)
  done (took 20.769261424 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115459482 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.162316135 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141997405 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109146432 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110256444 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.134959957 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119822961 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119872845 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200251305 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107438585 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.155794929 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108084632 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112485481 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.133509325 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.132862609 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10675845 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.136123751 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111222015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115905061 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.135206559 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.130089541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107166174 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.13559809 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11050206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107290951 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.15506906 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108501003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118309659 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.133837654 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112474422 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112072356 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107652359 seconds)
  done (took 5.097889717 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154519019 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171070483 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144730086 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144243708 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182809664 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110081804 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217033829 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146789522 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.19961052 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107861192 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130765154 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.133407646 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.147468134 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.107069042 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.160201454 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107770322 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.109999072 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.136976378 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115062276 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109161094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.156552342 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108004944 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108397213 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.13724074 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109073069 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129851336 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.135651085 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119866962 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107925615 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.138765961 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113899452 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108598648 seconds)
  done (took 5.404751661 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12305545 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.122015522 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.129197497 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.159318155 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.116726686 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121084084 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.149837743 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118367577 seconds)
  done (took 2.136236538 seconds)
done (took 34.487593604 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13387403 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127955313 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.127103341 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150366522 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.184010554 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.143120265 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125304187 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114879336 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.148931987 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13004348 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108247078 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115096526 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156417984 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120437921 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.213837907 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123198996 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.218248737 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.18820552 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.144230077 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123873662 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116700949 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.220312828 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120564372 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.114787757 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.217880172 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.110157373 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.209500245 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.11830363 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.117935287 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.139673313 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.185320584 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.148697997 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11617986 seconds)
  done (took 5.915950563 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.203123061 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.117264706 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.146418659 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116206022 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118691486 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.143868364 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.205882887 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.144179282 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.116204072 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.114682691 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.115006985 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.216664233 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.121898024 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.14099038 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120678309 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107652846 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.234729889 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.11891974 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.107885525 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.118926967 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.112821206 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.115812157 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.247735952 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.112543484 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.11566697 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.142953764 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.119963408 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121714503 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.117011079 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.146688632 seconds)
  done (took 5.282979477 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123313192 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.129161818 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134122372 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.211039071 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145108823 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.15608272 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137544403 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131021796 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.167628737 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11083661 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124947167 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.174474446 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125891888 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120365416 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143472983 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.129510564 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130808049 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.138610797 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12000772 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12777524 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160556797 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.1279273 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.133929667 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.146577611 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111590767 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117329562 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.147521314 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125573932 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119459067 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.124038744 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.142369315 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.113752632 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.111647972 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.174047177 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.112995076 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.122760768 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.164551692 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122995538 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.122341793 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.171111134 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.113896348 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.110470077 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.165025878 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164763748 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.110977475 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.152997915 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122855034 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.12384322 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.137609334 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129631398 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152890002 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.142496306 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.131708977 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.108732365 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.137908538 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120586552 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111140248 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.14142756 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126798844 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.112624585 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.162011025 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120036636 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.120198356 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.111071043 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.150422131 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110382775 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.109447335 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.143706658 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.137760876 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117936844 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.175843645 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111783636 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122615573 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.150850283 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12289288 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12159061 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.109071353 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.150688937 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122005645 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.115460722 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.151854077 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.113902574 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.113513517 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.156113151 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132229659 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125385758 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.151783961 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125162562 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.113466483 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.140011029 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128624929 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112376453 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.142920919 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.12632104 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.110949409 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.113460106 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.152781252 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.121691071 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.107328577 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.165063725 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115624294 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.109895849 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.163359042 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115930845 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.115560952 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.148029356 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.153270755 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113656817 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.149129931 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124849438 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110459901 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.117652241 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.143087673 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110564292 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.127123018 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.155905393 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118030891 seconds)
  done (took 16.561199695 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.311472743 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.269699592 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207890501 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.303853505 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.123632326 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.234075008 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.296995741 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.299072715 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110701849 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178300642 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.161980696 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.267420286 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.141846552 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140602672 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.300126269 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.352722526 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.169278949 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149955778 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.175402359 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126402223 seconds)
  done (took 5.439266625 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132014122 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.145239275 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163221825 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14063038 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.120725255 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.15774083 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112705955 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133321867 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.151959525 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.121799005 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.113404079 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.155768141 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125024642 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.126116445 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.156010664 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.143887439 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.117961286 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.145868734 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133246662 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115743449 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.12964177 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138101359 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119490254 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161815104 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130802961 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.121727548 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.13901398 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.117838343 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117784616 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.14829637 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117673865 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130095015 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.145275344 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103573026 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125743735 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125251534 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.147253401 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.114264879 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.115234996 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.143361202 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128119035 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124394734 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.147825742 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097708486 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.129974923 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108289117 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.153358581 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.12475827 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104895212 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130466895 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.152858501 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126162232 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118313891 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.161485377 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119162082 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128493373 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.151210115 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12647706 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.11587685 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.138025856 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.110868052 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.115537295 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.119609154 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.156044871 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123704326 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.158852917 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128454534 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.111103942 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.143254302 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117111563 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.115539676 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.124890407 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.16231402 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.121813279 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.119198708 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.152714319 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12132617 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093711791 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.148032581 seconds)
  done (took 11.460387444 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.136946648 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122298988 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.129394104 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.176761112 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.124995249 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.116990347 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151002368 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.131226259 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126207277 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.16111054 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126128035 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.124548506 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16171426 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.122363638 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.120694983 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.156269743 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125337003 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.148138858 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.159362704 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138838027 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125716412 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.146450424 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124305222 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.122322752 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.170661126 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.123746637 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138201541 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.155127957 seconds)
  done (took 4.985651443 seconds)
done (took 50.740660921 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.265387899 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.4445188 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.21974483 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.220794354 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.238021468 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.253782809 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.219265852 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.234475884 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.636312829 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.194441792 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.220874887 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.233023982 seconds)
done (took 28.497117151 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.281001761 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.785072832 seconds)
    (2/2) benchmarking "String"...
    done (took 1.521282723 seconds)
  done (took 4.419049749 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.211095158 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.210335684 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.457518646 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.208410922 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.228702426 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.209749484 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.210532128 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.219895473 seconds)
  done (took 15.858857561 seconds)
done (took 25.883629537 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.261007653 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.402828431 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.459590962 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.215821461 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.216251222 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.21772661 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.213544907 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.226762968 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.223558353 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.212012534 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.620412603 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.494942903 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.221990748 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.606050421 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.218175056 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.23891718 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.21270916 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.453780165 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.213402134 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.241705605 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.190041066 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.191557968 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.232327995 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.21365273 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.217331735 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.227179448 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.257329208 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.212089929 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.380826064 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.233183634 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.245719111 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.216316876 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.256126675 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.216530172 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.2136284 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.216752704 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.398071869 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.217479678 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.198292582 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.231798156 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.4007 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.229760476 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.219658851 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.213370868 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.21828995 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.249046372 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.19812258 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.343408249 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.234082412 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.214143198 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.293337419 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.58135355 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.21759351 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.224524231 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.226595795 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.418425471 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.228648042 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.259691511 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.237782566 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.224118523 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.221206242 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.213844455 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.240621753 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.227626969 seconds)
  done (took 144.388346175 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.214306427 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.218098989 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.217600066 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.279105787 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.219132235 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.218363946 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.216024096 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.214710232 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.219557477 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.249162954 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.219966396 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.213962772 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.219758087 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.193506114 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.225654698 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.235379336 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.221537441 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.218600211 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.243979926 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.217086984 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.219370233 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.220343034 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.218715324 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.220113181 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.255557243 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.294323339 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.240939328 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.243366338 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.227858077 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.215134235 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.255497675 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.219898056 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.820868338 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.089466732 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.222588827 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.230518684 seconds)
  done (took 80.788119616 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.216165771 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.217731951 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.216658928 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.249419901 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.217411583 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.781460869 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78640815 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.195750876 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.2731962 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.53524804 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.42903965 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.217143715 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30876978 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.216603759 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.23048948 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.21919881 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.23396985 seconds)
    (18/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.218842011 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217087567 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.247121507 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.217664238 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.784151336 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.234840953 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.392269323 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.233584215 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249951937 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.610343657 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.292460475 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.220615385 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249953277 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.548501545 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.267890207 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21936991 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.563882038 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.252983356 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.329959353 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.221124867 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.251844711 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.221407039 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.500629922 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.2180954 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.220517821 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.218667774 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.220585073 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.222077203 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.838292553 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.220062647 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.785470546 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.224469074 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.156777781 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.220937785 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.220905638 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.237815681 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.839093278 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.218706192 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.218446415 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.221917508 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.219448329 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.220230792 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.252217601 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.267738509 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.316342134 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.221943996 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.22390138 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252978355 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.222373231 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.386083428 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.22179033 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.944587679 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.278898351 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.319642721 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787516333 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.22550112 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315781856 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339528102 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.223333955 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.221014783 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.221453917 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.220334908 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.331624862 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.220522488 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.901568043 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.396604307 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.238831249 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.555997953 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.321266999 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.221350599 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.546074198 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.225890729 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.220137257 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.916553382 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316361259 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.221957626 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.223206589 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.223873447 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.906648272 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.790220274 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.45572042 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.227303589 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.974432373 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.226908766 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.078314987 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.775733718 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.834399065 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.223534816 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.333492132 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.399707086 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.240964173 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.222515018 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.560884816 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.229764306 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.282718602 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.229557336 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.624943509 seconds)
  done (took 375.320765887 seconds)
done (took 601.610607591 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.102388805 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.053627139 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.20665839 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.062764683 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.04696378 seconds)
  done (took 11.597159579 seconds)
done (took 12.721185113 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.414260708 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.415953956 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283730009 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.418390194 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.256676179 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.432108633 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.395876661 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.240989941 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.331621799 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.303678782 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.334615861 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.276511401 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.257960822 seconds)
  done (took 18.487164815 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.524669426 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.23729147 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.291003623 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.497388426 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.268434603 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.505560116 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.536302302 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.237483566 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.371942262 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.270550943 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.246407196 seconds)
  done (took 18.113042051 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.511799599 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.237112432 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.292638628 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.491542959 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.272348574 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.512291862 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.536355023 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.237330223 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.381742552 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249598611 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.247374186 seconds)
  done (took 18.095421408 seconds)
done (took 55.821505082 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.264670481 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.324788248 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.261980087 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.248240931 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.244173927 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.243161021 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.248432607 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.24418363 seconds)
  done (took 11.206442574 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.242335382 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.242742312 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.242500111 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.241863017 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.245408508 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.243653535 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.242222975 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.243074881 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.241560192 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.243386705 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.243735669 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.244577891 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.242712664 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.242738112 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.243036039 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.242975787 seconds)
  done (took 21.018257952 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.247688549 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.244573285 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.243784036 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.244570752 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.243480494 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.245352186 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.244491398 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.243967554 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.245033746 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.245644391 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.244505194 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.244284167 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.244030341 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.243699423 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.243128313 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.246416155 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.244085991 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.243602315 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.248809673 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.245251117 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.244686128 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.24384562 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.243557705 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.244130851 seconds)
  done (took 31.001694984 seconds)
done (took 64.352146942 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.235174809 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.23384415 seconds)
  done (took 5.596887836 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.301977849 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.303330232 seconds)
  done (took 3.735253972 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.247023993 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.245899415 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.245142512 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.245783013 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.24584707 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.245302689 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.245095477 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.246541863 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.245390129 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.245742745 seconds)
  done (took 13.587116345 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.246471952 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.245905469 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.246627784 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.246199895 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.244188865 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.246453914 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.245824479 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.246640766 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.246142929 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.246127529 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.248271799 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.244983309 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.247387391 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.246250665 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.245906647 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.247194247 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.246622664 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.247006154 seconds)
  done (took 23.565656006 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.259596539 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.264332446 seconds)
  done (took 3.653805125 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.374424389 seconds)
    (2/7) benchmarking "second"...
    done (took 1.290755319 seconds)
    (3/7) benchmarking "month"...
    done (took 1.350634759 seconds)
    (4/7) benchmarking "year"...
    done (took 1.34442152 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.288978384 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.267906531 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.290628059 seconds)
  done (took 10.339537197 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.248306371 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.449081905 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.574224733 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.814753813 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.248865899 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.252976621 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.149924084 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.251401253 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.253795536 seconds)
  done (took 14.374086359 seconds)
done (took 75.981355504 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.233390679 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.262376717 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.259485275 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.254114077 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.543458858 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.247384986 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.239671259 seconds)
done (took 16.171186196 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.216524074 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.219160465 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.221035619 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.254316807 seconds)
  done (took 10.043665897 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.239911755 seconds)
    (2/2) benchmarking "read"...
    done (took 1.560353872 seconds)
  done (took 4.933151283 seconds)
done (took 16.109910169 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251661403 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.24908446 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.250118507 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.248583743 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.251682678 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.252126889 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.251228977 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.249347975 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.250060958 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.249175399 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.249307504 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.251105199 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249168814 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.251454143 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248960478 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249739467 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250328793 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.249904263 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249847137 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250480381 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.250253575 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250816729 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.250584041 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.249550792 seconds)
  done (took 31.138171918 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.252381693 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.25130928 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.250232904 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.250488638 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.250035157 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.250664758 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.250492763 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.251044283 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.249973932 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.251647379 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250655237 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.250297325 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.251485916 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.250846231 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250828397 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.251668928 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.251126292 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249845888 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251479765 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.25173506 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.253095791 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251860475 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.251207084 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251242122 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.252000637 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24964771 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.251012164 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.250136679 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.251182293 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.252569696 seconds)
  done (took 38.667473148 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.253483743 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.253286648 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.252089841 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.254001745 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.252626401 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.25275429 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.253680996 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.25330314 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.254728038 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.251832629 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.251970284 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.253323171 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.252594797 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.25236616 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.253484165 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.252355387 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.253506209 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.253765528 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.253656167 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.254839864 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.253178341 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.253611512 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.253501666 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.253565942 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.253833319 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.252932286 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.252416444 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.254233081 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.251955713 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.254578958 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.255888431 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.25382181 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.253273068 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.253709335 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.253352845 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.253877367 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.256268433 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.253605774 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.254648638 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.255110775 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.253171328 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.254569271 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.255039581 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.253288025 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.256067202 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.254821389 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.253876784 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.255344309 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.255101074 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.25467151 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.254957966 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.257813203 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.256684583 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.254123609 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.256032688 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.255686794 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.25497032 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.254514357 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.255677715 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.255986839 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.257136466 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.254293108 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.255905058 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.255603426 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.255049922 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.254985033 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.255197882 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.255453127 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.255724778 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.256642128 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.255992343 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.257084223 seconds)
  done (took 91.450020785 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.256813131 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.257250161 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.256191861 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.255501334 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.256825123 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.257023671 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.256545164 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256627049 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256128104 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.255782779 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257564371 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.257409436 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256409378 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.257994851 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25674457 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.257500747 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.25744096 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.256293485 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.259555931 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.258923517 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.257427166 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.258574966 seconds)
  done (took 28.796858587 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258393871 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.260009912 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.258277223 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.26028298 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.260435542 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259969392 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.258060379 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.259674868 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25746815 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258473719 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258453431 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257202081 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.260573695 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259395962 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258535577 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.261721978 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258741006 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.262116928 seconds)
  done (took 23.8095344 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.260260575 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.256956172 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.259972677 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.257544385 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.258687656 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.258335786 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259563019 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.258574119 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.259155895 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.259914129 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.259239057 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259752202 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.259409836 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258236579 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26010142 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.259594281 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.259328952 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260356382 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259892256 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259159288 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.259514024 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259944598 seconds)
  done (took 28.845796074 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261046703 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.258255634 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.259679042 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.259666536 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.260190247 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.260550706 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.260816139 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.259862738 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.263090219 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.260595235 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260599602 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.260479755 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.263273739 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.259807057 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.260772021 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260269214 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.262000396 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.261936404 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.259681006 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.260831632 seconds)
  done (took 26.35632877 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260767073 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261448429 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.260534492 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263489477 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261747912 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.262838725 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268592293 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.261649801 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.262744424 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263501977 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261960756 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262980268 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261883184 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262178494 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261809296 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26229254 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26012155 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261609644 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.261552215 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262616944 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.261141525 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261852582 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2622895 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26253053 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.261369341 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26227961 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261217334 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.261055318 seconds)
  done (took 36.485248782 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262117976 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.261455655 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.261112866 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.259659905 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.261819622 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.260428921 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.260268968 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.260042567 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.260730284 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.260327802 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.259216054 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.259071392 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.258283414 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.257637737 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.259459 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.258909459 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259670512 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.258523541 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258767092 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257819311 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.258204736 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25796428 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.258710807 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.258110058 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25819825 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.257646512 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257698076 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.258401723 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258400439 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.258645323 seconds)
  done (took 38.923627921 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.277244622 seconds)
    (2/2) benchmarking "in"...
    done (took 1.277856163 seconds)
  done (took 3.696129332 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.257930815 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258500344 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.258803924 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.258908685 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.260269113 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.258327189 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.257956166 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258612799 seconds)
  done (took 11.211063038 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.250607532 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.258951927 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.258666283 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.258366059 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.260861111 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.251808192 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258354717 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.262082372 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.252867504 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.251250327 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.251703736 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.250890652 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.254049993 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25406106 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.25415106 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255795019 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.260870412 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.260163496 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.259968701 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.259728523 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259268119 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253856545 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257061857 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.262926171 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.251272487 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.259613748 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.258785824 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.264960458 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252795064 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.258551889 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.2542658 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.263720478 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.260506007 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.260697695 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.258755072 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.260694142 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258820618 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259083675 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.260272696 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263021143 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260839484 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.259603703 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.254042283 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.255969908 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257081125 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.264412408 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.259970717 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.258076843 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.250149727 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.255668484 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.262367116 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25270437 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.262092069 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256020159 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.258197273 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26290653 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.266494771 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.253655861 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.254229059 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.259969853 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.268763137 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.261360892 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260242224 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.265690423 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257913288 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.25940714 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263962649 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.267541302 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.262371427 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.261080993 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.262504845 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268319179 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.266732922 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.266925336 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26197636 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.2633026 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255395645 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263343498 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261907545 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.265160374 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.269527566 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26155888 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259448914 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259750411 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.257080307 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.265854837 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.263820493 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.262558422 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.253452997 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264115752 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.270909695 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.263913791 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.252893193 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.258333505 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.260492157 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.264026769 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.253629834 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259324136 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.266214101 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.264387109 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262206847 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256319099 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.262007014 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270002043 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264843184 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.262238551 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.270455722 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256346871 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.267135198 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.270774063 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263898004 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.256402081 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.260746458 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.266521205 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25702874 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.261166328 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.268933921 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.26009016 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.269089501 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.265211711 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261213479 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.268147624 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.270078414 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.263323612 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.258582624 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.268361356 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265934216 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.262201784 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.271094368 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.264763825 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.26396238 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.261498895 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.271779792 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.259657632 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268693206 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258753367 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.267377822 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.26434421 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.267954767 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.260401123 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.265323851 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.262863855 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.263672314 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.267542778 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.271117433 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.262774211 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.27142755 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.265751846 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.264961987 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.265320262 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.269985134 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26734766 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.26034831 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.269228552 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.258873207 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26755446 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.259592067 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.270303219 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266296291 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.267350266 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267194337 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.258733468 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263991479 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.271056123 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.265825757 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.265970834 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.271438347 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.267439148 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.268465531 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.259832656 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.268950755 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.258688253 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.263152825 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.270720726 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.266466317 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.268236734 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.265284307 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273782178 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268448493 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268721316 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.262059232 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.266874688 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.272838197 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.2706144 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.275317934 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269040331 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.268505772 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.262038598 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.265705158 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.269443627 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.261487819 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.272596637 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273387754 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276592291 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.263548091 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.270846099 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.261042197 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.271059532 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.266970499 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.275853881 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.267707149 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269869035 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264031736 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272974879 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.264440171 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.271307566 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.263035855 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.272439001 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.27020566 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.269573351 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269817408 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.26333244 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266005252 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.273243115 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269290603 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269119628 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.262325084 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.273159571 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.261970591 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.26486253 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.274317808 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.271049996 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.272233797 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.277113936 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267365998 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274295917 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.271123355 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.267589917 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.272129504 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267086763 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.271067217 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274548426 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.273380572 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.265742049 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27660009 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.273673412 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.264469226 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.269667392 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.278359215 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.269923353 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.262134249 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.274344704 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.272218572 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.27118016 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.270519134 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262729421 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27402127 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.271709546 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.278826521 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.262610688 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.273158555 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.265117452 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.27411977 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.267043344 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.271185376 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.270135188 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273912752 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278671766 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.27090889 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266106281 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.27392851 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.271137271 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.270687856 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261843946 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.274024805 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.270172206 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.272051858 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.270661233 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.268590843 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.272904996 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.264133337 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.272463464 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.265520373 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281073133 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.286902007 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273099239 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.275371796 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.27533617 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273134625 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.272334708 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.264830085 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265940801 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269081182 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.266652205 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.266689703 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.273975723 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266076362 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.275297496 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27142509 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.272403383 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.272338643 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.274140622 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.264370708 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.274167004 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.272020985 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.27277043 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.26519233 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.274112839 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.267124429 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273341003 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.273394589 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.26759103 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276474233 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277666468 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.26948679 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.270428192 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.268617435 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.265045509 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.267888336 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.276149206 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.265540237 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.274958567 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.26655292 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.26960837 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.268588099 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.276285948 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.280937109 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.265631578 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.276120484 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.273459486 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.265991116 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.26666474 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.277052205 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274375733 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.284372124 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.26684953 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.275230412 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274128818 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.273776887 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.273455973 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.273122624 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273049341 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.272235871 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277429925 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.276280401 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.268814627 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275781189 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.283831782 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.273566702 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.27201389 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.264927688 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273557062 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.282232934 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.269054252 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.271384133 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.270076374 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.275007865 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.274847944 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.274468815 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.274203022 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.273074601 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277232828 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.278986367 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275910711 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.272946293 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.277508887 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.282620763 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277254169 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.285750255 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.269002704 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.278952491 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.274820616 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.26711148 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.268937322 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.269295901 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.276723325 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.265670837 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.278036242 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.27439477 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.269011519 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.273993143 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.280199509 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.265086073 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271600986 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282505217 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.26616581 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276339562 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.275001377 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.265935265 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.274973944 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.274523027 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.26696785 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.269164933 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271637839 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.277112043 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.268740933 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.277868148 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270017914 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279090907 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.274310242 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.27539677 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.275120563 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.276635395 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.26922563 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.276981919 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274862813 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.285592475 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.269117914 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274816187 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.270916418 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.280581254 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.287198361 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.270847941 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280425459 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.27853532 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.269151419 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.274944699 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.281074377 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271784684 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279450778 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.268201543 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271413434 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.270562406 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.278122058 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.279782012 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.28074261 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.270420904 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.271436041 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279432765 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.277501305 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278027413 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.27334753 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.283402086 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.27037522 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.272183413 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.278969906 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.272316874 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283842676 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269312665 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.274889456 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27392645 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.28285253 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.277257968 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276969677 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.269394867 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.272745712 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.282522578 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282764745 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.273370638 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.272781268 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.279870982 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.2717801 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275011006 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.275244823 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.271457789 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.27330415 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.282509514 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.274067615 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.272247552 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.273748608 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280026338 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.28237567 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.281726309 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.271349202 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.28396587 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.286565761 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285548426 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.270426523 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.275460716 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.274480957 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.280926286 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.280310073 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.272771773 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285953201 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.284524279 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281448262 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278321808 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.281506296 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.273860108 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.281780396 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28051945 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.274910634 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.287731866 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.276763073 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285615383 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279452194 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.281084589 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.27116586 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.273724719 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.276548732 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.275837038 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.281210367 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279951205 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.284772286 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.280099914 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287356883 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281564955 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.280531114 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.280538849 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.27334101 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283034912 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.274095786 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.281925659 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.282411707 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.275897069 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.281951823 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280310983 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274960673 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277709151 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.284325623 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.281396752 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.275645547 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.27974923 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.285046797 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.292335648 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.281720433 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275741991 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.279297506 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.284436719 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28328628 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.28298276 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.275911664 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29028502 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.294513325 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276460769 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.277718723 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285816661 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.293511856 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.282293759 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.280633938 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.27771501 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.279501768 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.28591436 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.283261106 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286408826 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289077429 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.278555882 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.286304476 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.277471163 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.279683694 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.282301685 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.294132011 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.283755709 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.278017715 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.290971411 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.292625633 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280063109 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.294184033 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.288206878 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.282416779 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.288715984 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275803558 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.284779744 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.277816821 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.288381322 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.28236494 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283384575 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.28433255 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.277253562 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285570044 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.289063176 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.293947899 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.283303121 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.276409641 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.278399577 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.285878941 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.284372372 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.285659833 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.284095256 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.283417319 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.283918144 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.275724317 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.292516298 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.298405007 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.291424899 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.285648233 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.285903535 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.284761287 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.287980708 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.2805451 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.287764582 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.283542727 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.285779532 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.282213209 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293536396 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.28630227 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.27773643 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.280539209 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279204983 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.286064558 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.293560303 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302606673 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.287220154 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.288784531 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286182317 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.28703642 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278164708 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.289818448 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284254083 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.280383204 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.28216335 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286462349 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.289469066 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.285194177 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.278509309 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.29000721 seconds)
  done (took 759.210474624 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.283444983 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285144806 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285619147 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.284534212 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285550153 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284512395 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286906036 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284765983 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.284914657 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.283532267 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.286134209 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285817276 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284666269 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.285613391 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287044487 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284229879 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28646488 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285178956 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286631409 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284949155 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28476072 seconds)
  done (took 28.152518633 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.286411212 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.284798541 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286215607 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285299857 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286081585 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.285916127 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.286101291 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286805114 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.291412507 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286825518 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.288830484 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287084385 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.287881892 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.287940932 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286407231 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2874796 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.285955795 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288100561 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.286877243 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286042648 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2868297 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.2875939 seconds)
  done (took 29.47579104 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.288372332 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.286742388 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.279339531 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.289855252 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.286001617 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.287136743 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.286123096 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.287381107 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.288476357 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.280583664 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.280445764 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.282559649 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.283358803 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.289372084 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.282085305 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.291600547 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.28756478 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.288001618 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286353546 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.285640308 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.290026059 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.297552291 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.288744661 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.279964397 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.288820843 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.287350038 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.286969064 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.288974719 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.280319999 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.288311134 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.286935882 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.281024415 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.289627804 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.289756289 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.281402404 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.288728997 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.287436677 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.286893587 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.288325478 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.284144802 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.294320768 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.286855426 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.290165203 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.300081567 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.288256639 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.281031788 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.290644095 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.289786236 seconds)
  done (took 62.943621342 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.289856422 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.287900641 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.28814961 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.288767881 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.288377666 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.287854697 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.288586047 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.287800613 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.288031949 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.28815568 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.288143007 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.289628306 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287229967 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.289751483 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.28862487 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288308502 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287785572 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.288146689 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.28784073 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.288273409 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.288376855 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.289653334 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.288162418 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.287922834 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287910977 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.28977799 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288773429 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.288753566 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.288565812 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.289721135 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.289556811 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287975608 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.288784392 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.290504853 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.28773372 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.289234576 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.289537857 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.289280054 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.287448418 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.289438388 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.290193857 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.288869618 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.289262974 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.290980381 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.289911052 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.289669074 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287873319 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.290208617 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.2891731 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.2901979 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.289977625 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.288938456 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290068782 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.290630518 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.288220693 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.29059902 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.290542437 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.289791827 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.289829925 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.289939642 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.291741038 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.289920238 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.29096768 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.29086942 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.29034029 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.290762234 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.289898147 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.289529924 seconds)
  done (took 88.828972869 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290442361 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.29008042 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290499171 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290988355 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2907654 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.290142426 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291495908 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.293301256 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289753657 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291221337 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291418719 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290448281 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.290858953 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.290766063 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292176256 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.29134219 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291367518 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291037408 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290935274 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290104785 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.290523361 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29126656 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.291795916 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.293032731 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.29310642 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292142682 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291276586 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.290842764 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291857086 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.290284579 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.291552266 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.291003983 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291135611 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.29078878 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.291249112 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.292278505 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291547188 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29257701 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.293294764 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.291593215 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293162886 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291090796 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291186569 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.292566219 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291768627 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292668186 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292506928 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.292563588 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.29140501 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291794127 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.291626184 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294252491 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293113436 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.29366519 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.292861987 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.292055183 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292113635 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29213233 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292833004 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293301787 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292800348 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.294054753 seconds)
  done (took 81.255381587 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29396068 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.292930386 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.291085617 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.29231754 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.292123199 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.292815397 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.292638835 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.292103074 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.292649729 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.292699298 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294470083 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291864957 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29353896 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295717283 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.292851289 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294634767 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293349905 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.291086412 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293659099 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.295286545 seconds)
  done (took 27.028913538 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.293710748 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.292130326 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.294061 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.292793054 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.293643615 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.29293627 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.293073257 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291592069 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294604601 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294162892 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293719529 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292609424 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29420648 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293859581 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294262057 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293567113 seconds)
  done (took 21.862116456 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.291670721 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.293336432 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.295152471 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.294864232 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.293835571 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.294754239 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.294772177 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.293513839 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.293196716 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.295088005 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.294596532 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.294148993 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.294677783 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.295325584 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.295878541 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.295277059 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.294352992 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.294303057 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.293883965 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.29544953 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.294946708 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.293940156 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.295596277 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.293254383 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.295542846 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.295541854 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.29405012 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.294081806 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.294616171 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.294810399 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.294015303 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.295009315 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.295068854 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.294211864 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.296185339 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.29605728 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.29590707 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.29597594 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.294267137 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.295847184 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.296065254 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.295878456 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.295864369 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.295432482 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.295713354 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.295534342 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.295011508 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.296611006 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.295351754 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.296338724 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.296375793 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.297655359 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.296687307 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.296325445 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.297916657 seconds)
  done (took 72.40006888 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297575727 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297143617 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.295697057 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.296711538 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294955625 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.295448024 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.295392276 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.298599607 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297386792 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.296718342 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297248556 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29847796 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296805074 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296233125 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297196057 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297303813 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.296742508 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.298025405 seconds)
  done (took 24.513312633 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.299431524 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.297332835 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.298005602 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.298008198 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.298391353 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297201583 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298580566 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.296808142 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298062706 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29752321 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298010014 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.298561051 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298015198 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.298322834 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.297008998 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298741041 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.29866079 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298660106 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.298855088 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.30025656 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298831794 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299717431 seconds)
  done (took 29.733877458 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.288572453 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.288739344 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.288535108 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.300662623 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.298169423 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.290468902 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.289931873 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.290604368 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.306586056 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.312185787 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.30861028 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.297086501 seconds)
  done (took 16.730574385 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298985251 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298980138 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300916369 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301908295 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300196113 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298436693 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300757782 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297353024 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299565003 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299398015 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299396562 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300037903 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300479823 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299982414 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3010396 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300384526 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298746774 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300851456 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29958647 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299962843 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300729094 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300615325 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300359927 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300625526 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299074388 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302332494 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300696085 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300344988 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300759972 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300822547 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300579491 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300830472 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301562313 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301969647 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300911148 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302815627 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301217413 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301750318 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300308178 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303552299 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302326853 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3020438 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302493297 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302891813 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301384941 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30175814 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30272114 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30226027 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30272869 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302097018 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302612948 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302970407 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302086039 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301697872 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302921708 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302701818 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30248047 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303256956 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303582692 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302185417 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303973348 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303196008 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303896376 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303425181 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303915973 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303291636 seconds)
  done (took 87.065017532 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302971648 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30428531 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3039461 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303315775 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303170148 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303254563 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304321863 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303748032 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305502735 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304141878 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304295311 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303008958 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305460325 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304234118 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303580658 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303547989 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304380811 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303572483 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303684125 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304898011 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305154807 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305816075 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305416134 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30538782 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304589687 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304182665 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305855078 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304802296 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304447806 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305528867 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304980388 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304666125 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304616848 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305285826 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305341245 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305588221 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30522946 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305866142 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30503446 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305516379 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307047711 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305905027 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305223343 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305464156 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306874932 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306543517 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306143136 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306340934 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306405234 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30631748 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305817283 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308933159 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307244777 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307277543 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306119875 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305807596 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305979909 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306378075 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305714998 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307277219 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30982862 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306574636 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309066816 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307631046 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307171634 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308489542 seconds)
  done (took 87.337207934 seconds)
done (took 1777.050711199 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.463007182 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.420384724 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.296664894 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.303237591 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.297766488 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.300813304 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.310106466 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.299123055 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.300111883 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.297467745 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.297564895 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.490321214 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.333188825 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.297668537 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.298196482 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.394945823 seconds)
  done (took 26.580988126 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.326583576 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.308286643 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.406780112 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.302355019 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.32490299 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.476498374 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.355724342 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.303653856 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.454595224 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.322027167 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.298293379 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.322559421 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.302836858 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.300713663 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.319996295 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.473641803 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.535605416 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.296568281 seconds)
  done (took 28.612367534 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.691950146 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.308856016 seconds)
  done (took 5.181488608 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.322092683 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.304250127 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.305621781 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.302069621 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.295001905 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.29457412 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.303204153 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.300704385 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.306060334 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.413514586 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.310029678 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.317821616 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.302924224 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.305288963 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.310865382 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.346648467 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.46534467 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.31276274 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.310396004 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.309944211 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.3031459 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.393878855 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.341568381 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.311699402 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.414824777 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.296979971 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.306171871 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.312525188 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.418622858 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.312924199 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.304779097 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.3031424 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.305463535 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.235706129 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.828674996 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.2977276 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.328329282 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.313055283 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.312393937 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.450767285 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.306899443 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.310863642 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.298190785 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.821117175 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.412179402 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.415395608 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.308178168 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.31189786 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.307133718 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.366273699 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.306729123 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.30685624 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.363068955 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.078110215 seconds)
  done (took 83.629726351 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.351140877 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.299708392 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479802955 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.323977087 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.300917102 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.303099948 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.307012876 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.555150048 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.308921124 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.313097178 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.586111195 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.889854414 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.299689999 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.363871129 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.340288765 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.354219198 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.300243651 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.3003023 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.300427797 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.30086958 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849358362 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.300518583 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.301394264 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.387561437 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.340530834 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.808167926 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.301182493 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.30657812 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.3013993 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.300614609 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.860059431 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.315119791 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.355792891 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.301347444 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.57506794 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.661805645 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.62707941 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.308474542 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.322889738 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.306297969 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.326162395 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.804124838 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.651486344 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.30696144 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.303122381 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.809229943 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.306991058 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.303429729 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.301478596 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.570863766 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.30787721 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.303321073 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.302702005 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.308466645 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.30250557 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.365433956 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.356921297 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.813428129 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.303944576 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.302569666 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.345973852 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.302795249 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.309094926 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.308460922 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.309338887 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.647402465 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.533028634 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.306272347 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.644839507 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.854815126 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.316872671 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.929576735 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.30367952 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.317043904 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.340168171 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.307382787 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.303406831 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.808997655 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.32874735 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.303551877 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.624784589 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.30839095 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.594909913 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.319831275 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.307442932 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871257129 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.307774031 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.34901514 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.303364391 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.30828468 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.309515228 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.30950072 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.584080695 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.365086177 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.306030273 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.305687271 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.332994064 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.304572264 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.32124405 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.313834678 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.931115065 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.307720763 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.318897677 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.306735146 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305202758 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.312081597 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.310105309 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.308721681 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.586542665 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.307281229 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.322884521 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.306095293 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.307408856 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.308535529 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.386996941 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.310172375 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.582168739 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.305543721 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.291527895 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.292145257 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.291151411 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.300395177 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.291177949 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.304923641 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.270947176 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.573744487 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.299898182 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.293173255 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.280227455 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.28177126 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.278907937 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.279189402 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.331078168 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.281618936 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050644382 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.316686832 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.269820247 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.269766499 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.282459614 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.28015384 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.271067627 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.268356455 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.56016493 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.546551329 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.495424247 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.274268579 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.270656082 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.058575665 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.309734829 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.451346357 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.283062045 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.269129306 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546649827 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.483621233 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.272794376 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.268374891 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.273225806 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.544790285 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.270039425 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.578458535 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.848737684 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.269242136 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.280416411 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.043072536 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.074148216 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.264931167 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.264617562 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.549882226 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.279971949 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.264489158 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.260455693 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.260770717 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.260047006 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.266311336 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.261470625 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.256743135 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.259222906 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.599557592 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.450197525 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.272075781 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.262122322 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.765928037 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.278675441 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.258938043 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.267420979 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.261273456 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.257702673 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.309889338 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.258470304 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.293869224 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.257863311 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.258929117 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.785930679 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.25480896 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.255067728 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.446424185 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.9726332 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.251656557 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.251094886 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.251977111 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.306844498 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.789503338 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.274768818 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.532820564 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.252143679 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.288692763 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.250990368 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.270645911 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.786302308 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.249159899 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.247787475 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.967398579 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.246940831 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.70299603 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.248035199 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.251068938 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.878898186 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.248447974 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.252525113 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.249189554 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.2494826 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.568318372 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.249833367 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.297603077 seconds)
  done (took 487.203948581 seconds)
done (took 632.3874892 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.248895288 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.249562211 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.254442703 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.255498882 seconds)
  done (took 10.153828755 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.265840426 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.255863395 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.264699147 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.255403806 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.265513866 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.255903475 seconds)
  done (took 8.709027602 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.249298688 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.249897501 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.256245889 seconds)
  done (took 7.900813496 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.449815549 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.272919286 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.586622978 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.256494193 seconds)
  done (took 8.712661187 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.269000999 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.265823199 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.265791612 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.266275553 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.268287668 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.268061915 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.26784195 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.267192342 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.267742237 seconds)
  done (took 12.552140132 seconds)
done (took 49.173615033 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.404617666 seconds)
    (2/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.335658103 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.359729925 seconds)
    (4/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.232680425 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.325812439 seconds)
    (6/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.285010089 seconds)
    (7/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.233191805 seconds)
    (8/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.413867735 seconds)
    (9/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.290225253 seconds)
    (10/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.541966473 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.291632958 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.350374505 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.359055354 seconds)
    (14/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.289478209 seconds)
    (15/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.492295053 seconds)
    (16/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.233140813 seconds)
    (17/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.237218897 seconds)
    (18/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.238268366 seconds)
    (19/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.474480997 seconds)
    (20/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.234860868 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.339219501 seconds)
    (22/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.460318157 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.403058741 seconds)
    (24/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.500651855 seconds)
    (25/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.316193209 seconds)
    (26/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.428823649 seconds)
    (27/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.473786011 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.362300539 seconds)
    (29/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.364349412 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.344713573 seconds)
    (31/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.292537306 seconds)
    (32/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.294039742 seconds)
    (33/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.358925981 seconds)
    (34/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.467053997 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.362971246 seconds)
    (36/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.376082216 seconds)
    (37/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.333035218 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.331101139 seconds)
    (39/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.460443183 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.258045407 seconds)
    (41/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.378599791 seconds)
    (42/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.296740227 seconds)
    (43/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.236426804 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.551735751 seconds)
    (45/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.244475276 seconds)
    (46/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.236295707 seconds)
    (47/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.321819858 seconds)
    (48/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.400293034 seconds)
    (49/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.333909917 seconds)
    (50/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.415658329 seconds)
    (51/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.477164256 seconds)
    (52/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.259861451 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.492383632 seconds)
    (54/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.325635295 seconds)
    (55/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.292749955 seconds)
    (56/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.417849645 seconds)
    (57/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.373552033 seconds)
    (58/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.341556388 seconds)
    (59/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.662720047 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.383626032 seconds)
    (61/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.493609862 seconds)
    (62/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.414369001 seconds)
    (63/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.292863902 seconds)
    (64/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.290975532 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.347981761 seconds)
    (66/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.25579119 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.358297948 seconds)
    (68/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.349756232 seconds)
    (69/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.257879477 seconds)
    (70/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.491262389 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.433848976 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.255495134 seconds)
    (73/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.248649361 seconds)
    (74/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.56859152 seconds)
    (75/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.479438305 seconds)
    (76/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.235213215 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.335007393 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.370804176 seconds)
    (79/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.260998935 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.65386023 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.336777616 seconds)
    (82/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.48482846 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.319097479 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.3567384 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.338746407 seconds)
    (86/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.228739601 seconds)
    (87/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.536849328 seconds)
    (88/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.415404399 seconds)
    (89/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.316545904 seconds)
    (90/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.366829054 seconds)
    (91/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.590259862 seconds)
    (92/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.230154573 seconds)
    (93/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.228956215 seconds)
    (94/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.345803162 seconds)
    (95/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.408180537 seconds)
    (96/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.228328247 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.363474402 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.282051196 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.355253581 seconds)
    (100/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.315300054 seconds)
    (101/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.344376096 seconds)
    (102/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.46649523 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.320813285 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.395675053 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.355609445 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.379746484 seconds)
    (107/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.228603437 seconds)
    (108/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.28193189 seconds)
    (109/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.48333374 seconds)
    (110/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.591866024 seconds)
    (111/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.484031626 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.250038704 seconds)
    (113/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.298294318 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.387861396 seconds)
    (115/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.345185899 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.492602473 seconds)
    (117/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.502527592 seconds)
    (118/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.407718971 seconds)
    (119/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.285560871 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.484740451 seconds)
    (121/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.283882893 seconds)
    (122/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.382081149 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.291360128 seconds)
    (124/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.283687613 seconds)
    (125/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.405719362 seconds)
    (126/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.361605151 seconds)
    (127/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.456304758 seconds)
    (128/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.230772141 seconds)
    (129/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.405632765 seconds)
    (130/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.313528943 seconds)
    (131/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.326835058 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.251552656 seconds)
    (133/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.394307213 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.402420385 seconds)
    (135/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.231080076 seconds)
    (136/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.232499067 seconds)
    (137/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.369974518 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.394785065 seconds)
    (139/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.261602712 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.382712725 seconds)
    (141/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.34450704 seconds)
    (142/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.365200748 seconds)
    (143/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.295189929 seconds)
    (144/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.258141412 seconds)
    (145/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.334071471 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.400071973 seconds)
    (147/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.325457072 seconds)
    (148/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.39729372 seconds)
    (149/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.376580387 seconds)
    (150/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.26055515 seconds)
    (151/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.315179967 seconds)
    (152/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.236231994 seconds)
    (153/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.331814751 seconds)
    (154/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.231436849 seconds)
    (155/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.261690314 seconds)
    (156/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.550936466 seconds)
    (157/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.234175231 seconds)
    (158/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.241752986 seconds)
    (159/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.282604206 seconds)
    (160/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.332682113 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.253871588 seconds)
    (162/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.444407182 seconds)
    (163/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.284733212 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.312744992 seconds)
    (165/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.488357614 seconds)
    (166/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.294802096 seconds)
    (167/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.234860649 seconds)
    (168/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.240564537 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.294316318 seconds)
    (170/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.279554659 seconds)
    (171/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.468445054 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.367174695 seconds)
    (173/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.431721122 seconds)
    (174/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.239766217 seconds)
    (175/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.334372253 seconds)
    (176/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.412267598 seconds)
    (177/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.235048656 seconds)
    (178/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.341006965 seconds)
    (179/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.239494574 seconds)
    (180/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.413917076 seconds)
    (181/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.372029772 seconds)
    (182/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.325701832 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.458748487 seconds)
    (184/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.429569814 seconds)
    (185/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.233150233 seconds)
    (186/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.239803052 seconds)
    (187/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.427599178 seconds)
    (188/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.380579244 seconds)
    (189/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.421314198 seconds)
    (190/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.252535106 seconds)
    (191/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.233042563 seconds)
    (192/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.586776242 seconds)
  done (took 308.99207043 seconds)
done (took 310.139085764 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.28430759 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.362294835 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.264036557 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.262782368 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.266187495 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.240469054 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.286816106 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.264280727 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.278808583 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.279750366 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.239967854 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.275613357 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.280426479 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.275825787 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.298259845 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.265774385 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.264693306 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.274399714 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.279761791 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.282711418 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.267415673 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.266337116 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.290691039 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.264445831 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.27379763 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.273613284 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.270866381 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.257698172 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.274728637 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.280932097 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.257416196 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.286485394 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.281537569 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.278253116 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.267685942 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.277065398 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.267390935 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.362808499 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.287602132 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.276069751 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.274539665 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.283556858 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.27125797 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.270559395 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.279225705 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.293887538 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.27459375 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.281780992 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.258040562 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.251625583 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.287148722 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.279112418 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.275416798 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.237943983 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.266661802 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.281937437 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.277307214 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.287164038 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.273331629 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.269764413 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.300931463 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.285256082 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.279408315 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.274965262 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.274656506 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.282496832 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.279089763 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.284408413 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.274516218 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.269314181 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.270134822 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.276136419 seconds)
done (took 101.0679638 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.391104914 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.266281389 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.428264212 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.276213546 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.432781639 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.390867923 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.275825098 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.275893087 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.27614446 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.06505611 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.276211877 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.275670672 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.266314555 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.276586105 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.390115049 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.277839692 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.276195673 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.962868619 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.278031101 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.408862281 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.269531498 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.277759257 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.279451685 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.071719451 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.266777227 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.263800023 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.41013695 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.276774844 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.972878655 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.262599495 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.266543584 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.971234424 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.409575094 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.298236879 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.287605284 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.287041652 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.433657999 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.281481068 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.394100256 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.393831115 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.429843679 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.313269861 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.264032409 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.268801396 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.279672836 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.280069917 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.278706583 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.306826512 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.267222654 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.279515037 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.965800835 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.288095983 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.277435031 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.279449886 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.278588894 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.309585729 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.280259922 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.278884291 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.410855932 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.280004578 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.396444943 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.074219937 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.066647856 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.279955793 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.266312846 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.279549467 seconds)
  done (took 104.277857918 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.340646369 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.348919095 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.37953979 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.270839935 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.321409916 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.381793193 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.272138297 seconds)
  done (took 10.472772552 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.277068833 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.27983261 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.320351872 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.319988928 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.279803614 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.442877846 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.279185789 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.283889484 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.279877531 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.323232848 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.282491981 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.281560278 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.290833028 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.27084469 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.320178858 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.283649522 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.389192159 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.27509694 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.280487143 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.424674323 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.281356772 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.290621181 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.32308791 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.283298681 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.283776078 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.278378661 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.055666388 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.281598351 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.28161549 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.281519261 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.281696267 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.339555578 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.282171635 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.273061416 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.282907033 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.38629984 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.282314022 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.281457493 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.283010961 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.273640671 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.283318698 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.282515467 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.283114743 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.2816498 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.282487537 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.297677182 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.283231903 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.28254578 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.28223733 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.282786595 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.322978818 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.283907679 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.284004184 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.283083154 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.327587617 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.292898713 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.283153696 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.283400917 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.283034902 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.283398815 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.426850526 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.321593477 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.283016332 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.320513744 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.282888018 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.284583537 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.284060056 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.283417194 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.364657602 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.283807409 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.322495705 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.284989359 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.456301797 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.299735894 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.287647364 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.278854587 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.278856667 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.285931343 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.273416383 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.283678549 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.28426627 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.278019472 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.282353167 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.285878129 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.284571196 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.433017266 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.383837085 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.285222055 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.291494154 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.284063616 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.284809758 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.327919211 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.285472921 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.285420939 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.326589699 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.395004705 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.327828007 seconds)
  done (took 132.235934007 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.290583526 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.288784819 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.279797807 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.303579766 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.27813976 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.277037334 seconds)
  done (took 8.881636535 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.279857925 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.289810099 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.286888269 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.286732381 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.286007099 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.288854002 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.287185036 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.279798347 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.29118103 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.28766677 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.289403454 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.289754148 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.287513793 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.288658962 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.287064243 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.288039194 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.288167371 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.286571835 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.287265789 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.287176182 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.277437513 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.288382903 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.290553695 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.280480973 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.293426895 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.287347806 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.304844084 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.28855507 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.288046377 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.287218429 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.290593941 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.29087288 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.28140616 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.283765092 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.291399108 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.281340403 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.291526799 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.291473388 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.289299911 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.292031813 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.291493356 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.289947052 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.288006911 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.291412326 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.280950727 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.283837993 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.294912806 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.304123059 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.289207447 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.293685329 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.292389691 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.291171948 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.293382572 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.29280138 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.284196531 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.285878194 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.295794184 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.291400849 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.291909593 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.283253852 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.293523484 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.294090038 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.284780798 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.294989315 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.291886699 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.294826392 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.284332893 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.293840794 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.291892459 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.291326173 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.29432661 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.291568789 seconds)
  done (took 94.991418006 seconds)
done (took 352.013532526 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.541893573 seconds)
  done (took 3.708873918 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.540757331 seconds)
  done (took 3.709447724 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.48223944 seconds)
  done (took 21.895150716 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.35437064 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.359509537 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.294140939 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.281557538 seconds)
  done (took 10.457802245 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.538506375 seconds)
  done (took 3.706184689 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.295937372 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.286441632 seconds)
  done (took 5.753849278 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.42383881 seconds)
  done (took 3.593100172 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.482572025 seconds)
  done (took 3.653111845 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.315649758 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.307122914 seconds)
  done (took 5.800455806 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.272430768 seconds)
  done (took 3.442271781 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.062168847 seconds)
  done (took 20.233663902 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.300250879 seconds)
  done (took 3.472163328 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.313928125 seconds)
  done (took 3.483336859 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.667516635 seconds)
  done (took 5.837076619 seconds)
done (took 99.91503441 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.278117568 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.280927243 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.280511902 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.280536582 seconds)
  done (took 10.289962133 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.357139909 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.35818151 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.363582573 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.351356286 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.352737824 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.363149962 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.320877136 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.320706334 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.349813355 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.34643546 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.363998329 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.353107323 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.360300737 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.319727856 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.347501514 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.363377273 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.350697831 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.367685675 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.320569177 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.353998696 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.296873109 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.35055692 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.346330951 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.296674073 seconds)
  done (took 33.446309066 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.7816601 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.357736102 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.439155697 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.336337267 seconds)
  done (took 7.086562327 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.400212665 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.402654624 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.417554769 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.462374721 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.493587341 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.414725848 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.321947052 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.316939928 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.303755922 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.40107354 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.480260899 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.40094178 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.615966985 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.296002604 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.614227354 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.296230155 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.297427342 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.400932432 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.44989532 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.479835366 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.297902685 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.400489886 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.405139351 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.401575849 seconds)
  done (took 34.944621135 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.306277246 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.314611177 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.297972536 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.313418996 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.299799486 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.298979266 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.29950644 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.306151629 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.299398733 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.299128346 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.299711406 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.313174333 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.299997816 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.299843224 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.305958435 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.301470998 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.300346163 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.307092309 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.308550423 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.30048785 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.300648259 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.307256125 seconds)
  done (took 29.853083249 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.283690385 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.282341597 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.63616725 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.539224381 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.285931394 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.285177764 seconds)
  done (took 13.486646813 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.356046911 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.487273115 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.291647198 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.616881575 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.70032873 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.291861258 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.291837366 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.52354881 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.799855642 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.792839721 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.343968769 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.3582729 seconds)
  done (took 19.029376041 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.284606893 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.285606366 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.30163739 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.305187757 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.342394023 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.296259646 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.299012001 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.285222441 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.347289338 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.346450455 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.295263949 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.342779555 seconds)
  done (took 20.907891063 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375361478 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.294760338 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297300202 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297537927 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30003298 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.295499352 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373328225 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.96579038 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.301372733 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571688087 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296194165 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378368668 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.541915681 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30236552 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.299708126 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.216983056 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.527986544 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753317442 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299020156 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298089849 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333790283 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.297913248 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.301237687 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.510924303 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302718759 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29576895 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.559458269 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.297432066 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559182403 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540289469 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535111217 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30533789 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57435593 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923722494 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403183298 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489583272 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302642801 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319342412 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.272447816 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.299234513 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335380755 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.300593318 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53066162 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305209705 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.298415097 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301819035 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983237362 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.305956557 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.300081363 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.300202696 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532597352 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388788481 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.305557689 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.299544752 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348206934 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303444813 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.305160572 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419527439 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939702303 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305607405 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307403453 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.305278168 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.290493352 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318285901 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921749828 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.313346109 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.306113864 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.306928251 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299076065 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308053652 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.328636025 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301480164 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.321363471 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301132529 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024126496 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.312991291 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30875553 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.807036185 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309677196 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.304880057 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.525691183 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301113942 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300774663 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.301540218 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.301710992 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987095302 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315097301 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.284588351 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346397227 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.971412634 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.492026955 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328605003 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331724953 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.522656127 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.272127908 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30385306 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.302645258 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303405647 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323502686 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.978602325 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302717135 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.308239595 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549478334 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.513056767 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311401126 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.234886408 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.752193779 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305680383 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.335418963 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307408613 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.499678041 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.896340097 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543210494 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311328818 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342783224 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.304920387 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055632578 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311780547 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.313937565 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.315857401 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57606798 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.064673077 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311121903 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378087863 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31498325 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.305569916 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310562873 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3111441 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304965222 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.474207061 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309499737 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.546320115 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.313087995 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304799361 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.308565513 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320749008 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.308318226 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.526373491 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311450453 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584503293 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305635098 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305934457 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30704263 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.524197637 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.308174079 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.318538269 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64466081 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319195642 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.319232031 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.545354374 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343931832 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418432559 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337412612 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.309312792 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.558423826 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.312612456 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.312111536 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310836027 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.312006861 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307600183 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.315798406 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307891503 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896904584 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295458737 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313270107 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307743777 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.324310156 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381484042 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.314363093 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.499219055 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.310991736 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305280337 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.320273989 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.310527813 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534233502 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542995615 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.315274831 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488320139 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.753413533 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.890315572 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.329679662 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.308657045 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.307187789 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.307613866 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308646031 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30858715 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309852832 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50169313 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552630847 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314773726 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.905718843 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318009118 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309589881 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.321505292 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543079038 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.32401377 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312045883 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.312324095 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313816068 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317370785 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.550564595 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536344074 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.326456773 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.309959996 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.828515607 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.318373108 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310795118 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310508007 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337181282 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31082595 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122850994 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652419123 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309929151 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552246678 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319220639 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.334640346 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.310882148 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316279469 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328685459 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.322333445 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325909122 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.505576333 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.318100342 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318561991 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949092439 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0505093 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851512836 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326313312 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.320069442 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.317387246 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.991879095 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312638645 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311852892 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550390193 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.995676927 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311414454 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.758182825 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.313363514 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.040312314 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549683248 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544218232 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313900321 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.318299456 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553925441 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530641986 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336961801 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324893514 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318631096 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.282059254 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833572859 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322622767 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495893929 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994663101 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311317263 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314042409 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.375669164 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.334126804 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.685396307 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.316944575 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312487141 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3136456 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.317995234 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133018111 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.318587589 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314622794 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932597379 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321832866 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.769088104 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312857054 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.508079738 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.556714449 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.533455096 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.321983413 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.320674691 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.558570674 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550696833 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323145305 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315091361 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8549772 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.177851322 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.323093445 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317008563 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062668165 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330927144 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58256132 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.327098607 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.322746476 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323738423 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.316161868 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315414037 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.317804697 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.323615125 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293057635 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781284046 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.319925989 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322067894 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345814248 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320560228 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.562881585 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.333705744 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.905823079 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550002416 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310448721 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353608709 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.321131947 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31617596 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.293302677 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.316293822 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317571005 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33908772 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.541989403 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.330726499 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.291419625 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39163998 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.533591769 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.318304712 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.317213105 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528698746 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.322982065 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.331843558 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070403464 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35512879 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327980756 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32512353 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.309741026 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359773624 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39154151 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513375405 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.562262333 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.563565064 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697006713 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331761878 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325426962 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.334258819 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40003983 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318139097 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.325403642 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.325243036 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908162333 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065753926 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.921202499 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564295524 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326987992 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328634812 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317517266 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560302366 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31867905 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595312038 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319347245 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.321751234 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34709402 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325796816 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330728387 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534473058 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592729096 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318500807 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327074012 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326191576 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.319013131 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564106774 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.536472137 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783059813 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844019213 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327015905 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323772622 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.012159698 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596556939 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321619553 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321586824 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321314681 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.322546375 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.343886386 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.327325578 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320500267 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565212674 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558540751 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95672766 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.557222631 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.568851607 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.321115888 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321932189 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.572016231 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163466986 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.515501821 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92547997 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.016708131 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.578288777 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395227781 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.516953702 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.327643013 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559518614 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.329821409 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327764493 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323644213 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324253739 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.321316165 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.561263204 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926289761 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580062513 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.327630959 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.329466518 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358339154 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.51714669 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.550139398 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019030265 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.547893536 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564365025 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336898 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.324352 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925239326 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569826831 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33029042 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.330301213 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528679487 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330836675 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359211386 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.186449717 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.324732367 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845443854 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.542113969 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346142512 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325912827 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.022086732 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930944808 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.33742502 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789373913 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332717413 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328798853 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60684625 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.33196879 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325844328 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609476628 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.33156204 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328215945 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52739426 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.923975319 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062272298 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.335238487 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362693828 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.333618747 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32694162 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401783492 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332396135 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335189057 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.701538186 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.331838051 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327451252 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340036346 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.338743489 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331888431 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.333242742 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327235684 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.335737115 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.325277682 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.302947419 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.347806436 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449505684 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855427454 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328870292 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.942350163 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.662540013 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.574271117 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340171373 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.303620411 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.33450753 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329036091 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328739192 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329259787 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322690019 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860992162 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.335566106 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.572955864 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.340798116 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.541485529 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539027333 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329706524 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53199205 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341967971 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357038268 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.299270794 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33017715 seconds)
  done (took 950.011126066 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.353773775 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.33462497 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.326850096 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.37368027 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.361195926 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.440390336 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.321102558 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.374134928 seconds)
  done (took 20.092628599 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.330722465 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.335012902 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.329225809 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.33453537 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.320824876 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.851436574 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.327287626 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.329496999 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.342374658 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.335308726 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.331127468 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.97965126 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.334604297 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.327475947 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.341609941 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.336038205 seconds)
  done (took 31.693740124 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.995420041 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.327032949 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.778717974 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.333314441 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.332847208 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.334800846 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.436544822 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.327448989 seconds)
  done (took 25.074268995 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.33643421 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.335382773 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.336909108 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.335223462 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.337982074 seconds)
  done (took 7.891154711 seconds)
done (took 1204.979191603 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.338721192 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.338623711 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.337665567 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.340171031 seconds)
  done (took 6.563905688 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.30332513 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.302449814 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.305153472 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.316267386 seconds)
  done (took 9.434386073 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.982658074 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.829154918 seconds)
  done (took 5.020921081 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.873064388 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.876237451 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.872773227 seconds)
  done (took 6.832197234 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.621394434 seconds)
  done (took 2.831738662 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.318006883 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.34115246 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.054411207 seconds)
  done (took 7.923634687 seconds)
done (took 39.815089509 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.323851299 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.083183721 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.479594257 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.324352745 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.483177721 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.479067598 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.568203227 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.324197522 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.333596503 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.341826194 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.325447274 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.484041915 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.556237048 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.085558224 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.556641072 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.086596596 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.486159809 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.330060751 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.330986549 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.329912732 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.574572723 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.324261468 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.326197121 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.342572609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.486248851 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.46848362 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.325376221 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.103710182 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.326363766 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.330215495 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.474457953 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.325193658 seconds)
  done (took 80.930559531 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.329520931 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.325302008 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.334526584 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.332774002 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.325818188 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.339737039 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.326725486 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.32591685 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.336256078 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.330460351 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.334943043 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.326136593 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.32640842 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.33390607 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.32760543 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.335305045 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.327766976 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.332118843 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.326365467 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.342990527 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.329360669 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.331375611 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.326126574 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.326173066 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.325911358 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.328971678 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.345931164 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.328176246 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.328405121 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.328116883 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.328982173 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.347151672 seconds)
  done (took 75.808094071 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.340483484 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.340150222 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.329694291 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.3276687 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.327507619 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.345450371 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.331128453 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.328600193 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.328471324 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.327740617 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.32767675 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.327804278 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.327281866 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.343494891 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.345878142 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.344628574 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.342593482 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.329202365 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.329308637 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.344281776 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.330795893 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.337082037 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.329774452 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.35467212 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.332258258 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.330007633 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.34001712 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.328608114 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.329552976 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.342943025 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.330417365 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.333311147 seconds)
  done (took 75.92248219 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.568509203 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.343780833 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.347908812 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.338658832 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.348343698 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.345763564 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.339734442 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.575398212 seconds)
  done (took 14.423292527 seconds)
done (took 248.29578862 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.33955928 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.81447348 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.375682271 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.339408259 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.362140294 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.368888093 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.556100719 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.37506834 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.554010889 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.370479414 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.354261578 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.345580436 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.112568682 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.49595104 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.130504648 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.247896321 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.185884719 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.338426935 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.883463853 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.619183325 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.372386214 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.333731168 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.136294785 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.204874402 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.317156787 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.438018128 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.430582295 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.561144557 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.500868509 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.413717553 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.820748268 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.34712745 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.349260312 seconds)
  done (took 62.611233824 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.337305981 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.348421519 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.347371956 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.347184584 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.348529633 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.347942031 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.338279069 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.349062044 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.348150607 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.348350833 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.34948601 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.349987031 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.348229466 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.348079364 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.348505638 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.322292035 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.338530989 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.348954064 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.33852874 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.323229546 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.348316654 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.350301002 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.349208476 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.349128926 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.347970214 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.348261303 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.349142931 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.35001481 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.350988851 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.350582461 seconds)
  done (took 41.589335129 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.350694804 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.880840789 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.058148421 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.353194442 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.341957465 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.345810683 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.613620884 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.3548514 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.345851618 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.345574324 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.785664889 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.352778469 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.373303553 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.062703213 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.344398983 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.352338661 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.351934332 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.343581578 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.881707658 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.35668024 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.613584417 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.352441496 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.614451623 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.356916266 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.344741659 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.343072827 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.349071336 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.151393247 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.366822995 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.79470206 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.0689957 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.614517359 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.082463363 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.124880282 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.067933736 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.360504456 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.353633418 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.797894161 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.35210046 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.344526454 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.612612691 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.348201045 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.070598333 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.022698866 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.360741002 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.352467819 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.175135504 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.797182104 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.577974675 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.355444055 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.106279755 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.347341244 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.355310086 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.346587774 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.573740611 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.352957113 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.345508477 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.168704415 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.350932813 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.616196695 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.360315848 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.345966615 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.889010156 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.351747624 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.880365464 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.351706192 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.354094965 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.347921759 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.078042823 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.355428773 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.033278266 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.362718347 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.354903044 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.791977396 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.883114049 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.228754572 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.348696916 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.897781185 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.117726521 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.630261316 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.353712707 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.125225094 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.633783088 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.353547307 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.356761918 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.358362354 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.356427533 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.421861242 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.615196063 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.969258169 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.032964992 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.177228565 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.621887492 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.361916186 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.34741754 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.166680764 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.35610568 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.357075447 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.068478308 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.041492269 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.364200825 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.355668571 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.021378881 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.368361936 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.620211835 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.359997002 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.12034629 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.349050646 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.451748212 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.357106767 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.356124734 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.35280706 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.62039556 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.356366908 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.35867886 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.017459138 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.819651375 seconds)
  done (took 188.399258074 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.342840494 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.344012989 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.344686499 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.344016651 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.343831231 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.351511051 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.343297512 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.34505374 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.349018755 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.344012127 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.344236674 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.353530881 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.350945761 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.344447307 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.345532513 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.345672224 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.34382041 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.345154397 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.344617191 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.343799228 seconds)
  done (took 44.139900668 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.359973182 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.88199732 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.851910732 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.367010847 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.359839659 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.351312538 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.402895937 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.360887706 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.359767874 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.632223158 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.512902405 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.367612088 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.360138738 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.359483863 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.853405563 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.333322073 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.63290959 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.879285744 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.36262296 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.878953262 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.333842281 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.360091891 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.350838992 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.879046224 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.64514132 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.621412382 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.406804852 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.880310226 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.361983797 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.36100577 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.8802406 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.361028571 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.353768017 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.866192302 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.36261723 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.37520638 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.36164524 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.407713188 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.409528626 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.639326552 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.887171426 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.631398316 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.373865064 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.515998059 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.366629883 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.335023089 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.89212278 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.363946425 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.33486738 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.363773402 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.367504285 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.867168838 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.355269711 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.868307025 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.363062709 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.364081634 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.883738217 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.8679408 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.858699915 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.513776865 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.359082185 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.624633314 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.364504022 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.894411193 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.363746733 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.363453014 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.363978619 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.518932734 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.882546399 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.62548512 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.638124939 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.637630887 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.364792653 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.419868628 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.367754811 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.638445733 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.418847688 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.741488017 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.642938299 seconds)
  done (took 122.521302122 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.6246006 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.464697812 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.715227011 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.916554731 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.837497383 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.504350953 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.466390613 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.596723115 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.36840937 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.464139694 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.973771104 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.44309807 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.059308309 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.422745212 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.462837873 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.482312488 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.731926135 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.288581908 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.968031051 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.952591268 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.361281708 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.447460279 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.869393546 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.554576102 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.354554336 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.902857044 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.251929624 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.851513319 seconds)
  done (took 51.569846486 seconds)
done (took 512.046398074 seconds)
SAVING RESULT...
DONE!
